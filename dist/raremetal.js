(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["raremetal"] = factory();
	else
		root["raremetal"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 26);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var numeric = ( false)?(undefined):(exports);
if(typeof global !== "undefined") { global.numeric = numeric; }

numeric.version = "1.2.6";

// 1. Utility functions
numeric.bench = function bench (f,interval) {
    var t1,t2,n,i;
    if(typeof interval === "undefined") { interval = 15; }
    n = 0.5;
    t1 = new Date();
    while(1) {
        n*=2;
        for(i=n;i>3;i-=4) { f(); f(); f(); f(); }
        while(i>0) { f(); i--; }
        t2 = new Date();
        if(t2-t1 > interval) break;
    }
    for(i=n;i>3;i-=4) { f(); f(); f(); f(); }
    while(i>0) { f(); i--; }
    t2 = new Date();
    return 1000*(3*n-1)/(t2-t1);
}

numeric._myIndexOf = (function _myIndexOf(w) {
    var n = this.length,k;
    for(k=0;k<n;++k) if(this[k]===w) return k;
    return -1;
});
numeric.myIndexOf = (Array.prototype.indexOf)?Array.prototype.indexOf:numeric._myIndexOf;

numeric.Function = Function;
numeric.precision = 4;
numeric.largeArray = 50;

numeric.prettyPrint = function prettyPrint(x) {
    function fmtnum(x) {
        if(x === 0) { return '0'; }
        if(isNaN(x)) { return 'NaN'; }
        if(x<0) { return '-'+fmtnum(-x); }
        if(isFinite(x)) {
            var scale = Math.floor(Math.log(x) / Math.log(10));
            var normalized = x / Math.pow(10,scale);
            var basic = normalized.toPrecision(numeric.precision);
            if(parseFloat(basic) === 10) { scale++; normalized = 1; basic = normalized.toPrecision(numeric.precision); }
            return parseFloat(basic).toString()+'e'+scale.toString();
        }
        return 'Infinity';
    }
    var ret = [];
    function foo(x) {
        var k;
        if(typeof x === "undefined") { ret.push(Array(numeric.precision+8).join(' ')); return false; }
        if(typeof x === "string") { ret.push('"'+x+'"'); return false; }
        if(typeof x === "boolean") { ret.push(x.toString()); return false; }
        if(typeof x === "number") {
            var a = fmtnum(x);
            var b = x.toPrecision(numeric.precision);
            var c = parseFloat(x.toString()).toString();
            var d = [a,b,c,parseFloat(b).toString(),parseFloat(c).toString()];
            for(k=1;k<d.length;k++) { if(d[k].length < a.length) a = d[k]; }
            ret.push(Array(numeric.precision+8-a.length).join(' ')+a);
            return false;
        }
        if(x === null) { ret.push("null"); return false; }
        if(typeof x === "function") { 
            ret.push(x.toString());
            var flag = false;
            for(k in x) { if(x.hasOwnProperty(k)) { 
                if(flag) ret.push(',\n');
                else ret.push('\n{');
                flag = true; 
                ret.push(k); 
                ret.push(': \n'); 
                foo(x[k]); 
            } }
            if(flag) ret.push('}\n');
            return true;
        }
        if(x instanceof Array) {
            if(x.length > numeric.largeArray) { ret.push('...Large Array...'); return true; }
            var flag = false;
            ret.push('[');
            for(k=0;k<x.length;k++) { if(k>0) { ret.push(','); if(flag) ret.push('\n '); } flag = foo(x[k]); }
            ret.push(']');
            return true;
        }
        ret.push('{');
        var flag = false;
        for(k in x) { if(x.hasOwnProperty(k)) { if(flag) ret.push(',\n'); flag = true; ret.push(k); ret.push(': \n'); foo(x[k]); } }
        ret.push('}');
        return true;
    }
    foo(x);
    return ret.join('');
}

numeric.parseDate = function parseDate(d) {
    function foo(d) {
        if(typeof d === 'string') { return Date.parse(d.replace(/-/g,'/')); }
        if(!(d instanceof Array)) { throw new Error("parseDate: parameter must be arrays of strings"); }
        var ret = [],k;
        for(k=0;k<d.length;k++) { ret[k] = foo(d[k]); }
        return ret;
    }
    return foo(d);
}

numeric.parseFloat = function parseFloat_(d) {
    function foo(d) {
        if(typeof d === 'string') { return parseFloat(d); }
        if(!(d instanceof Array)) { throw new Error("parseFloat: parameter must be arrays of strings"); }
        var ret = [],k;
        for(k=0;k<d.length;k++) { ret[k] = foo(d[k]); }
        return ret;
    }
    return foo(d);
}

numeric.parseCSV = function parseCSV(t) {
    var foo = t.split('\n');
    var j,k;
    var ret = [];
    var pat = /(([^'",]*)|('[^']*')|("[^"]*")),/g;
    var patnum = /^\s*(([+-]?[0-9]+(\.[0-9]*)?(e[+-]?[0-9]+)?)|([+-]?[0-9]*(\.[0-9]+)?(e[+-]?[0-9]+)?))\s*$/;
    var stripper = function(n) { return n.substr(0,n.length-1); }
    var count = 0;
    for(k=0;k<foo.length;k++) {
      var bar = (foo[k]+",").match(pat),baz;
      if(bar.length>0) {
          ret[count] = [];
          for(j=0;j<bar.length;j++) {
              baz = stripper(bar[j]);
              if(patnum.test(baz)) { ret[count][j] = parseFloat(baz); }
              else ret[count][j] = baz;
          }
          count++;
      }
    }
    return ret;
}

numeric.toCSV = function toCSV(A) {
    var s = numeric.dim(A);
    var i,j,m,n,row,ret;
    m = s[0];
    n = s[1];
    ret = [];
    for(i=0;i<m;i++) {
        row = [];
        for(j=0;j<m;j++) { row[j] = A[i][j].toString(); }
        ret[i] = row.join(', ');
    }
    return ret.join('\n')+'\n';
}

numeric.getURL = function getURL(url) {
    var client = new XMLHttpRequest();
    client.open("GET",url,false);
    client.send();
    return client;
}

numeric.imageURL = function imageURL(img) {
    function base64(A) {
        var n = A.length, i,x,y,z,p,q,r,s;
        var key = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        var ret = "";
        for(i=0;i<n;i+=3) {
            x = A[i];
            y = A[i+1];
            z = A[i+2];
            p = x >> 2;
            q = ((x & 3) << 4) + (y >> 4);
            r = ((y & 15) << 2) + (z >> 6);
            s = z & 63;
            if(i+1>=n) { r = s = 64; }
            else if(i+2>=n) { s = 64; }
            ret += key.charAt(p) + key.charAt(q) + key.charAt(r) + key.charAt(s);
            }
        return ret;
    }
    function crc32Array (a,from,to) {
        if(typeof from === "undefined") { from = 0; }
        if(typeof to === "undefined") { to = a.length; }
        var table = [0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3,
                     0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91, 
                     0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE, 0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7,
                     0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5, 
                     0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B, 
                     0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940, 0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59, 
                     0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F,
                     0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924, 0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D,
                     0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433,
                     0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818, 0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01, 
                     0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E, 0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457, 
                     0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65, 
                     0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2, 0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB, 
                     0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9, 
                     0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F, 
                     0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD, 
                     0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A, 0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683, 
                     0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8, 0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1, 
                     0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7, 
                     0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5, 
                     0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B, 
                     0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79, 
                     0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236, 0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F, 
                     0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D, 
                     0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A, 0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713, 
                     0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38, 0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, 
                     0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777, 
                     0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C, 0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45, 
                     0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB, 
                     0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9, 
                     0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF, 
                     0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94, 0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D];
     
        var crc = -1, y = 0, n = a.length,i;

        for (i = from; i < to; i++) {
            y = (crc ^ a[i]) & 0xFF;
            crc = (crc >>> 8) ^ table[y];
        }
     
        return crc ^ (-1);
    }

    var h = img[0].length, w = img[0][0].length, s1, s2, next,k,length,a,b,i,j,adler32,crc32;
    var stream = [
                  137, 80, 78, 71, 13, 10, 26, 10,                           //  0: PNG signature
                  0,0,0,13,                                                  //  8: IHDR Chunk length
                  73, 72, 68, 82,                                            // 12: "IHDR" 
                  (w >> 24) & 255, (w >> 16) & 255, (w >> 8) & 255, w&255,   // 16: Width
                  (h >> 24) & 255, (h >> 16) & 255, (h >> 8) & 255, h&255,   // 20: Height
                  8,                                                         // 24: bit depth
                  2,                                                         // 25: RGB
                  0,                                                         // 26: deflate
                  0,                                                         // 27: no filter
                  0,                                                         // 28: no interlace
                  -1,-2,-3,-4,                                               // 29: CRC
                  -5,-6,-7,-8,                                               // 33: IDAT Chunk length
                  73, 68, 65, 84,                                            // 37: "IDAT"
                  // RFC 1950 header starts here
                  8,                                                         // 41: RFC1950 CMF
                  29                                                         // 42: RFC1950 FLG
                  ];
    crc32 = crc32Array(stream,12,29);
    stream[29] = (crc32>>24)&255;
    stream[30] = (crc32>>16)&255;
    stream[31] = (crc32>>8)&255;
    stream[32] = (crc32)&255;
    s1 = 1;
    s2 = 0;
    for(i=0;i<h;i++) {
        if(i<h-1) { stream.push(0); }
        else { stream.push(1); }
        a = (3*w+1+(i===0))&255; b = ((3*w+1+(i===0))>>8)&255;
        stream.push(a); stream.push(b);
        stream.push((~a)&255); stream.push((~b)&255);
        if(i===0) stream.push(0);
        for(j=0;j<w;j++) {
            for(k=0;k<3;k++) {
                a = img[k][i][j];
                if(a>255) a = 255;
                else if(a<0) a=0;
                else a = Math.round(a);
                s1 = (s1 + a )%65521;
                s2 = (s2 + s1)%65521;
                stream.push(a);
            }
        }
        stream.push(0);
    }
    adler32 = (s2<<16)+s1;
    stream.push((adler32>>24)&255);
    stream.push((adler32>>16)&255);
    stream.push((adler32>>8)&255);
    stream.push((adler32)&255);
    length = stream.length - 41;
    stream[33] = (length>>24)&255;
    stream[34] = (length>>16)&255;
    stream[35] = (length>>8)&255;
    stream[36] = (length)&255;
    crc32 = crc32Array(stream,37);
    stream.push((crc32>>24)&255);
    stream.push((crc32>>16)&255);
    stream.push((crc32>>8)&255);
    stream.push((crc32)&255);
    stream.push(0);
    stream.push(0);
    stream.push(0);
    stream.push(0);
//    a = stream.length;
    stream.push(73);  // I
    stream.push(69);  // E
    stream.push(78);  // N
    stream.push(68);  // D
    stream.push(174); // CRC1
    stream.push(66);  // CRC2
    stream.push(96);  // CRC3
    stream.push(130); // CRC4
    return 'data:image/png;base64,'+base64(stream);
}

// 2. Linear algebra with Arrays.
numeric._dim = function _dim(x) {
    var ret = [];
    while(typeof x === "object") { ret.push(x.length); x = x[0]; }
    return ret;
}

numeric.dim = function dim(x) {
    var y,z;
    if(typeof x === "object") {
        y = x[0];
        if(typeof y === "object") {
            z = y[0];
            if(typeof z === "object") {
                return numeric._dim(x);
            }
            return [x.length,y.length];
        }
        return [x.length];
    }
    return [];
}

numeric.mapreduce = function mapreduce(body,init) {
    return Function('x','accum','_s','_k',
            'if(typeof accum === "undefined") accum = '+init+';\n'+
            'if(typeof x === "number") { var xi = x; '+body+'; return accum; }\n'+
            'if(typeof _s === "undefined") _s = numeric.dim(x);\n'+
            'if(typeof _k === "undefined") _k = 0;\n'+
            'var _n = _s[_k];\n'+
            'var i,xi;\n'+
            'if(_k < _s.length-1) {\n'+
            '    for(i=_n-1;i>=0;i--) {\n'+
            '        accum = arguments.callee(x[i],accum,_s,_k+1);\n'+
            '    }'+
            '    return accum;\n'+
            '}\n'+
            'for(i=_n-1;i>=1;i-=2) { \n'+
            '    xi = x[i];\n'+
            '    '+body+';\n'+
            '    xi = x[i-1];\n'+
            '    '+body+';\n'+
            '}\n'+
            'if(i === 0) {\n'+
            '    xi = x[i];\n'+
            '    '+body+'\n'+
            '}\n'+
            'return accum;'
            );
}
numeric.mapreduce2 = function mapreduce2(body,setup) {
    return Function('x',
            'var n = x.length;\n'+
            'var i,xi;\n'+setup+';\n'+
            'for(i=n-1;i!==-1;--i) { \n'+
            '    xi = x[i];\n'+
            '    '+body+';\n'+
            '}\n'+
            'return accum;'
            );
}


numeric.same = function same(x,y) {
    var i,n;
    if(!(x instanceof Array) || !(y instanceof Array)) { return false; }
    n = x.length;
    if(n !== y.length) { return false; }
    for(i=0;i<n;i++) {
        if(x[i] === y[i]) { continue; }
        if(typeof x[i] === "object") { if(!same(x[i],y[i])) return false; }
        else { return false; }
    }
    return true;
}

numeric.rep = function rep(s,v,k) {
    if(typeof k === "undefined") { k=0; }
    var n = s[k], ret = Array(n), i;
    if(k === s.length-1) {
        for(i=n-2;i>=0;i-=2) { ret[i+1] = v; ret[i] = v; }
        if(i===-1) { ret[0] = v; }
        return ret;
    }
    for(i=n-1;i>=0;i--) { ret[i] = numeric.rep(s,v,k+1); }
    return ret;
}


numeric.dotMMsmall = function dotMMsmall(x,y) {
    var i,j,k,p,q,r,ret,foo,bar,woo,i0,k0,p0,r0;
    p = x.length; q = y.length; r = y[0].length;
    ret = Array(p);
    for(i=p-1;i>=0;i--) {
        foo = Array(r);
        bar = x[i];
        for(k=r-1;k>=0;k--) {
            woo = bar[q-1]*y[q-1][k];
            for(j=q-2;j>=1;j-=2) {
                i0 = j-1;
                woo += bar[j]*y[j][k] + bar[i0]*y[i0][k];
            }
            if(j===0) { woo += bar[0]*y[0][k]; }
            foo[k] = woo;
        }
        ret[i] = foo;
    }
    return ret;
}
numeric._getCol = function _getCol(A,j,x) {
    var n = A.length, i;
    for(i=n-1;i>0;--i) {
        x[i] = A[i][j];
        --i;
        x[i] = A[i][j];
    }
    if(i===0) x[0] = A[0][j];
}
numeric.dotMMbig = function dotMMbig(x,y){
    var gc = numeric._getCol, p = y.length, v = Array(p);
    var m = x.length, n = y[0].length, A = new Array(m), xj;
    var VV = numeric.dotVV;
    var i,j,k,z;
    --p;
    --m;
    for(i=m;i!==-1;--i) A[i] = Array(n);
    --n;
    for(i=n;i!==-1;--i) {
        gc(y,i,v);
        for(j=m;j!==-1;--j) {
            z=0;
            xj = x[j];
            A[j][i] = VV(xj,v);
        }
    }
    return A;
}

numeric.dotMV = function dotMV(x,y) {
    var p = x.length, q = y.length,i;
    var ret = Array(p), dotVV = numeric.dotVV;
    for(i=p-1;i>=0;i--) { ret[i] = dotVV(x[i],y); }
    return ret;
}

numeric.dotVM = function dotVM(x,y) {
    var i,j,k,p,q,r,ret,foo,bar,woo,i0,k0,p0,r0,s1,s2,s3,baz,accum;
    p = x.length; q = y[0].length;
    ret = Array(q);
    for(k=q-1;k>=0;k--) {
        woo = x[p-1]*y[p-1][k];
        for(j=p-2;j>=1;j-=2) {
            i0 = j-1;
            woo += x[j]*y[j][k] + x[i0]*y[i0][k];
        }
        if(j===0) { woo += x[0]*y[0][k]; }
        ret[k] = woo;
    }
    return ret;
}

numeric.dotVV = function dotVV(x,y) {
    var i,n=x.length,i1,ret = x[n-1]*y[n-1];
    for(i=n-2;i>=1;i-=2) {
        i1 = i-1;
        ret += x[i]*y[i] + x[i1]*y[i1];
    }
    if(i===0) { ret += x[0]*y[0]; }
    return ret;
}

numeric.dot = function dot(x,y) {
    var d = numeric.dim;
    switch(d(x).length*1000+d(y).length) {
    case 2002:
        if(y.length < 10) return numeric.dotMMsmall(x,y);
        else return numeric.dotMMbig(x,y);
    case 2001: return numeric.dotMV(x,y);
    case 1002: return numeric.dotVM(x,y);
    case 1001: return numeric.dotVV(x,y);
    case 1000: return numeric.mulVS(x,y);
    case 1: return numeric.mulSV(x,y);
    case 0: return x*y;
    default: throw new Error('numeric.dot only works on vectors and matrices');
    }
}

numeric.diag = function diag(d) {
    var i,i1,j,n = d.length, A = Array(n), Ai;
    for(i=n-1;i>=0;i--) {
        Ai = Array(n);
        i1 = i+2;
        for(j=n-1;j>=i1;j-=2) {
            Ai[j] = 0;
            Ai[j-1] = 0;
        }
        if(j>i) { Ai[j] = 0; }
        Ai[i] = d[i];
        for(j=i-1;j>=1;j-=2) {
            Ai[j] = 0;
            Ai[j-1] = 0;
        }
        if(j===0) { Ai[0] = 0; }
        A[i] = Ai;
    }
    return A;
}
numeric.getDiag = function(A) {
    var n = Math.min(A.length,A[0].length),i,ret = Array(n);
    for(i=n-1;i>=1;--i) {
        ret[i] = A[i][i];
        --i;
        ret[i] = A[i][i];
    }
    if(i===0) {
        ret[0] = A[0][0];
    }
    return ret;
}

numeric.identity = function identity(n) { return numeric.diag(numeric.rep([n],1)); }
numeric.pointwise = function pointwise(params,body,setup) {
    if(typeof setup === "undefined") { setup = ""; }
    var fun = [];
    var k;
    var avec = /\[i\]$/,p,thevec = '';
    var haveret = false;
    for(k=0;k<params.length;k++) {
        if(avec.test(params[k])) {
            p = params[k].substring(0,params[k].length-3);
            thevec = p;
        } else { p = params[k]; }
        if(p==='ret') haveret = true;
        fun.push(p);
    }
    fun[params.length] = '_s';
    fun[params.length+1] = '_k';
    fun[params.length+2] = (
            'if(typeof _s === "undefined") _s = numeric.dim('+thevec+');\n'+
            'if(typeof _k === "undefined") _k = 0;\n'+
            'var _n = _s[_k];\n'+
            'var i'+(haveret?'':', ret = Array(_n)')+';\n'+
            'if(_k < _s.length-1) {\n'+
            '    for(i=_n-1;i>=0;i--) ret[i] = arguments.callee('+params.join(',')+',_s,_k+1);\n'+
            '    return ret;\n'+
            '}\n'+
            setup+'\n'+
            'for(i=_n-1;i!==-1;--i) {\n'+
            '    '+body+'\n'+
            '}\n'+
            'return ret;'
            );
    return Function.apply(null,fun);
}
numeric.pointwise2 = function pointwise2(params,body,setup) {
    if(typeof setup === "undefined") { setup = ""; }
    var fun = [];
    var k;
    var avec = /\[i\]$/,p,thevec = '';
    var haveret = false;
    for(k=0;k<params.length;k++) {
        if(avec.test(params[k])) {
            p = params[k].substring(0,params[k].length-3);
            thevec = p;
        } else { p = params[k]; }
        if(p==='ret') haveret = true;
        fun.push(p);
    }
    fun[params.length] = (
            'var _n = '+thevec+'.length;\n'+
            'var i'+(haveret?'':', ret = Array(_n)')+';\n'+
            setup+'\n'+
            'for(i=_n-1;i!==-1;--i) {\n'+
            body+'\n'+
            '}\n'+
            'return ret;'
            );
    return Function.apply(null,fun);
}
numeric._biforeach = (function _biforeach(x,y,s,k,f) {
    if(k === s.length-1) { f(x,y); return; }
    var i,n=s[k];
    for(i=n-1;i>=0;i--) { _biforeach(typeof x==="object"?x[i]:x,typeof y==="object"?y[i]:y,s,k+1,f); }
});
numeric._biforeach2 = (function _biforeach2(x,y,s,k,f) {
    if(k === s.length-1) { return f(x,y); }
    var i,n=s[k],ret = Array(n);
    for(i=n-1;i>=0;--i) { ret[i] = _biforeach2(typeof x==="object"?x[i]:x,typeof y==="object"?y[i]:y,s,k+1,f); }
    return ret;
});
numeric._foreach = (function _foreach(x,s,k,f) {
    if(k === s.length-1) { f(x); return; }
    var i,n=s[k];
    for(i=n-1;i>=0;i--) { _foreach(x[i],s,k+1,f); }
});
numeric._foreach2 = (function _foreach2(x,s,k,f) {
    if(k === s.length-1) { return f(x); }
    var i,n=s[k], ret = Array(n);
    for(i=n-1;i>=0;i--) { ret[i] = _foreach2(x[i],s,k+1,f); }
    return ret;
});

/*numeric.anyV = numeric.mapreduce('if(xi) return true;','false');
numeric.allV = numeric.mapreduce('if(!xi) return false;','true');
numeric.any = function(x) { if(typeof x.length === "undefined") return x; return numeric.anyV(x); }
numeric.all = function(x) { if(typeof x.length === "undefined") return x; return numeric.allV(x); }*/

numeric.ops2 = {
        add: '+',
        sub: '-',
        mul: '*',
        div: '/',
        mod: '%',
        and: '&&',
        or:  '||',
        eq:  '===',
        neq: '!==',
        lt:  '<',
        gt:  '>',
        leq: '<=',
        geq: '>=',
        band: '&',
        bor: '|',
        bxor: '^',
        lshift: '<<',
        rshift: '>>',
        rrshift: '>>>'
};
numeric.opseq = {
        addeq: '+=',
        subeq: '-=',
        muleq: '*=',
        diveq: '/=',
        modeq: '%=',
        lshifteq: '<<=',
        rshifteq: '>>=',
        rrshifteq: '>>>=',
        bandeq: '&=',
        boreq: '|=',
        bxoreq: '^='
};
numeric.mathfuns = ['abs','acos','asin','atan','ceil','cos',
                    'exp','floor','log','round','sin','sqrt','tan',
                    'isNaN','isFinite'];
numeric.mathfuns2 = ['atan2','pow','max','min'];
numeric.ops1 = {
        neg: '-',
        not: '!',
        bnot: '~',
        clone: ''
};
numeric.mapreducers = {
        any: ['if(xi) return true;','var accum = false;'],
        all: ['if(!xi) return false;','var accum = true;'],
        sum: ['accum += xi;','var accum = 0;'],
        prod: ['accum *= xi;','var accum = 1;'],
        norm2Squared: ['accum += xi*xi;','var accum = 0;'],
        norminf: ['accum = max(accum,abs(xi));','var accum = 0, max = Math.max, abs = Math.abs;'],
        norm1: ['accum += abs(xi)','var accum = 0, abs = Math.abs;'],
        sup: ['accum = max(accum,xi);','var accum = -Infinity, max = Math.max;'],
        inf: ['accum = min(accum,xi);','var accum = Infinity, min = Math.min;']
};

(function () {
    var i,o;
    for(i=0;i<numeric.mathfuns2.length;++i) {
        o = numeric.mathfuns2[i];
        numeric.ops2[o] = o;
    }
    for(i in numeric.ops2) {
        if(numeric.ops2.hasOwnProperty(i)) {
            o = numeric.ops2[i];
            var code, codeeq, setup = '';
            if(numeric.myIndexOf.call(numeric.mathfuns2,i)!==-1) {
                setup = 'var '+o+' = Math.'+o+';\n';
                code = function(r,x,y) { return r+' = '+o+'('+x+','+y+')'; };
                codeeq = function(x,y) { return x+' = '+o+'('+x+','+y+')'; };
            } else {
                code = function(r,x,y) { return r+' = '+x+' '+o+' '+y; };
                if(numeric.opseq.hasOwnProperty(i+'eq')) {
                    codeeq = function(x,y) { return x+' '+o+'= '+y; };
                } else {
                    codeeq = function(x,y) { return x+' = '+x+' '+o+' '+y; };                    
                }
            }
            numeric[i+'VV'] = numeric.pointwise2(['x[i]','y[i]'],code('ret[i]','x[i]','y[i]'),setup);
            numeric[i+'SV'] = numeric.pointwise2(['x','y[i]'],code('ret[i]','x','y[i]'),setup);
            numeric[i+'VS'] = numeric.pointwise2(['x[i]','y'],code('ret[i]','x[i]','y'),setup);
            numeric[i] = Function(
                    'var n = arguments.length, i, x = arguments[0], y;\n'+
                    'var VV = numeric.'+i+'VV, VS = numeric.'+i+'VS, SV = numeric.'+i+'SV;\n'+
                    'var dim = numeric.dim;\n'+
                    'for(i=1;i!==n;++i) { \n'+
                    '  y = arguments[i];\n'+
                    '  if(typeof x === "object") {\n'+
                    '      if(typeof y === "object") x = numeric._biforeach2(x,y,dim(x),0,VV);\n'+
                    '      else x = numeric._biforeach2(x,y,dim(x),0,VS);\n'+
                    '  } else if(typeof y === "object") x = numeric._biforeach2(x,y,dim(y),0,SV);\n'+
                    '  else '+codeeq('x','y')+'\n'+
                    '}\nreturn x;\n');
            numeric[o] = numeric[i];
            numeric[i+'eqV'] = numeric.pointwise2(['ret[i]','x[i]'], codeeq('ret[i]','x[i]'),setup);
            numeric[i+'eqS'] = numeric.pointwise2(['ret[i]','x'], codeeq('ret[i]','x'),setup);
            numeric[i+'eq'] = Function(
                    'var n = arguments.length, i, x = arguments[0], y;\n'+
                    'var V = numeric.'+i+'eqV, S = numeric.'+i+'eqS\n'+
                    'var s = numeric.dim(x);\n'+
                    'for(i=1;i!==n;++i) { \n'+
                    '  y = arguments[i];\n'+
                    '  if(typeof y === "object") numeric._biforeach(x,y,s,0,V);\n'+
                    '  else numeric._biforeach(x,y,s,0,S);\n'+
                    '}\nreturn x;\n');
        }
    }
    for(i=0;i<numeric.mathfuns2.length;++i) {
        o = numeric.mathfuns2[i];
        delete numeric.ops2[o];
    }
    for(i=0;i<numeric.mathfuns.length;++i) {
        o = numeric.mathfuns[i];
        numeric.ops1[o] = o;
    }
    for(i in numeric.ops1) {
        if(numeric.ops1.hasOwnProperty(i)) {
            setup = '';
            o = numeric.ops1[i];
            if(numeric.myIndexOf.call(numeric.mathfuns,i)!==-1) {
                if(Math.hasOwnProperty(o)) setup = 'var '+o+' = Math.'+o+';\n';
            }
            numeric[i+'eqV'] = numeric.pointwise2(['ret[i]'],'ret[i] = '+o+'(ret[i]);',setup);
            numeric[i+'eq'] = Function('x',
                    'if(typeof x !== "object") return '+o+'x\n'+
                    'var i;\n'+
                    'var V = numeric.'+i+'eqV;\n'+
                    'var s = numeric.dim(x);\n'+
                    'numeric._foreach(x,s,0,V);\n'+
                    'return x;\n');
            numeric[i+'V'] = numeric.pointwise2(['x[i]'],'ret[i] = '+o+'(x[i]);',setup);
            numeric[i] = Function('x',
                    'if(typeof x !== "object") return '+o+'(x)\n'+
                    'var i;\n'+
                    'var V = numeric.'+i+'V;\n'+
                    'var s = numeric.dim(x);\n'+
                    'return numeric._foreach2(x,s,0,V);\n');
        }
    }
    for(i=0;i<numeric.mathfuns.length;++i) {
        o = numeric.mathfuns[i];
        delete numeric.ops1[o];
    }
    for(i in numeric.mapreducers) {
        if(numeric.mapreducers.hasOwnProperty(i)) {
            o = numeric.mapreducers[i];
            numeric[i+'V'] = numeric.mapreduce2(o[0],o[1]);
            numeric[i] = Function('x','s','k',
                    o[1]+
                    'if(typeof x !== "object") {'+
                    '    xi = x;\n'+
                    o[0]+';\n'+
                    '    return accum;\n'+
                    '}'+
                    'if(typeof s === "undefined") s = numeric.dim(x);\n'+
                    'if(typeof k === "undefined") k = 0;\n'+
                    'if(k === s.length-1) return numeric.'+i+'V(x);\n'+
                    'var xi;\n'+
                    'var n = x.length, i;\n'+
                    'for(i=n-1;i!==-1;--i) {\n'+
                    '   xi = arguments.callee(x[i]);\n'+
                    o[0]+';\n'+
                    '}\n'+
                    'return accum;\n');
        }
    }
}());

numeric.truncVV = numeric.pointwise(['x[i]','y[i]'],'ret[i] = round(x[i]/y[i])*y[i];','var round = Math.round;');
numeric.truncVS = numeric.pointwise(['x[i]','y'],'ret[i] = round(x[i]/y)*y;','var round = Math.round;');
numeric.truncSV = numeric.pointwise(['x','y[i]'],'ret[i] = round(x/y[i])*y[i];','var round = Math.round;');
numeric.trunc = function trunc(x,y) {
    if(typeof x === "object") {
        if(typeof y === "object") return numeric.truncVV(x,y);
        return numeric.truncVS(x,y);
    }
    if (typeof y === "object") return numeric.truncSV(x,y);
    return Math.round(x/y)*y;
}

numeric.inv = function inv(x) {
    var s = numeric.dim(x), abs = Math.abs, m = s[0], n = s[1];
    var A = numeric.clone(x), Ai, Aj;
    var I = numeric.identity(m), Ii, Ij;
    var i,j,k,x;
    for(j=0;j<n;++j) {
        var i0 = -1;
        var v0 = -1;
        for(i=j;i!==m;++i) { k = abs(A[i][j]); if(k>v0) { i0 = i; v0 = k; } }
        Aj = A[i0]; A[i0] = A[j]; A[j] = Aj;
        Ij = I[i0]; I[i0] = I[j]; I[j] = Ij;
        x = Aj[j];
        for(k=j;k!==n;++k)    Aj[k] /= x; 
        for(k=n-1;k!==-1;--k) Ij[k] /= x;
        for(i=m-1;i!==-1;--i) {
            if(i!==j) {
                Ai = A[i];
                Ii = I[i];
                x = Ai[j];
                for(k=j+1;k!==n;++k)  Ai[k] -= Aj[k]*x;
                for(k=n-1;k>0;--k) { Ii[k] -= Ij[k]*x; --k; Ii[k] -= Ij[k]*x; }
                if(k===0) Ii[0] -= Ij[0]*x;
            }
        }
    }
    return I;
}

numeric.det = function det(x) {
    var s = numeric.dim(x);
    if(s.length !== 2 || s[0] !== s[1]) { throw new Error('numeric: det() only works on square matrices'); }
    var n = s[0], ret = 1,i,j,k,A = numeric.clone(x),Aj,Ai,alpha,temp,k1,k2,k3;
    for(j=0;j<n-1;j++) {
        k=j;
        for(i=j+1;i<n;i++) { if(Math.abs(A[i][j]) > Math.abs(A[k][j])) { k = i; } }
        if(k !== j) {
            temp = A[k]; A[k] = A[j]; A[j] = temp;
            ret *= -1;
        }
        Aj = A[j];
        for(i=j+1;i<n;i++) {
            Ai = A[i];
            alpha = Ai[j]/Aj[j];
            for(k=j+1;k<n-1;k+=2) {
                k1 = k+1;
                Ai[k] -= Aj[k]*alpha;
                Ai[k1] -= Aj[k1]*alpha;
            }
            if(k!==n) { Ai[k] -= Aj[k]*alpha; }
        }
        if(Aj[j] === 0) { return 0; }
        ret *= Aj[j];
    }
    return ret*A[j][j];
}

numeric.transpose = function transpose(x) {
    var i,j,m = x.length,n = x[0].length, ret=Array(n),A0,A1,Bj;
    for(j=0;j<n;j++) ret[j] = Array(m);
    for(i=m-1;i>=1;i-=2) {
        A1 = x[i];
        A0 = x[i-1];
        for(j=n-1;j>=1;--j) {
            Bj = ret[j]; Bj[i] = A1[j]; Bj[i-1] = A0[j];
            --j;
            Bj = ret[j]; Bj[i] = A1[j]; Bj[i-1] = A0[j];
        }
        if(j===0) {
            Bj = ret[0]; Bj[i] = A1[0]; Bj[i-1] = A0[0];
        }
    }
    if(i===0) {
        A0 = x[0];
        for(j=n-1;j>=1;--j) {
            ret[j][0] = A0[j];
            --j;
            ret[j][0] = A0[j];
        }
        if(j===0) { ret[0][0] = A0[0]; }
    }
    return ret;
}
numeric.negtranspose = function negtranspose(x) {
    var i,j,m = x.length,n = x[0].length, ret=Array(n),A0,A1,Bj;
    for(j=0;j<n;j++) ret[j] = Array(m);
    for(i=m-1;i>=1;i-=2) {
        A1 = x[i];
        A0 = x[i-1];
        for(j=n-1;j>=1;--j) {
            Bj = ret[j]; Bj[i] = -A1[j]; Bj[i-1] = -A0[j];
            --j;
            Bj = ret[j]; Bj[i] = -A1[j]; Bj[i-1] = -A0[j];
        }
        if(j===0) {
            Bj = ret[0]; Bj[i] = -A1[0]; Bj[i-1] = -A0[0];
        }
    }
    if(i===0) {
        A0 = x[0];
        for(j=n-1;j>=1;--j) {
            ret[j][0] = -A0[j];
            --j;
            ret[j][0] = -A0[j];
        }
        if(j===0) { ret[0][0] = -A0[0]; }
    }
    return ret;
}

numeric._random = function _random(s,k) {
    var i,n=s[k],ret=Array(n), rnd;
    if(k === s.length-1) {
        rnd = Math.random;
        for(i=n-1;i>=1;i-=2) {
            ret[i] = rnd();
            ret[i-1] = rnd();
        }
        if(i===0) { ret[0] = rnd(); }
        return ret;
    }
    for(i=n-1;i>=0;i--) ret[i] = _random(s,k+1);
    return ret;
}
numeric.random = function random(s) { return numeric._random(s,0); }

numeric.norm2 = function norm2(x) { return Math.sqrt(numeric.norm2Squared(x)); }

numeric.linspace = function linspace(a,b,n) {
    if(typeof n === "undefined") n = Math.max(Math.round(b-a)+1,1);
    if(n<2) { return n===1?[a]:[]; }
    var i,ret = Array(n);
    n--;
    for(i=n;i>=0;i--) { ret[i] = (i*b+(n-i)*a)/n; }
    return ret;
}

numeric.getBlock = function getBlock(x,from,to) {
    var s = numeric.dim(x);
    function foo(x,k) {
        var i,a = from[k], n = to[k]-a, ret = Array(n);
        if(k === s.length-1) {
            for(i=n;i>=0;i--) { ret[i] = x[i+a]; }
            return ret;
        }
        for(i=n;i>=0;i--) { ret[i] = foo(x[i+a],k+1); }
        return ret;
    }
    return foo(x,0);
}

numeric.setBlock = function setBlock(x,from,to,B) {
    var s = numeric.dim(x);
    function foo(x,y,k) {
        var i,a = from[k], n = to[k]-a;
        if(k === s.length-1) { for(i=n;i>=0;i--) { x[i+a] = y[i]; } }
        for(i=n;i>=0;i--) { foo(x[i+a],y[i],k+1); }
    }
    foo(x,B,0);
    return x;
}

numeric.getRange = function getRange(A,I,J) {
    var m = I.length, n = J.length;
    var i,j;
    var B = Array(m), Bi, AI;
    for(i=m-1;i!==-1;--i) {
        B[i] = Array(n);
        Bi = B[i];
        AI = A[I[i]];
        for(j=n-1;j!==-1;--j) Bi[j] = AI[J[j]];
    }
    return B;
}

numeric.blockMatrix = function blockMatrix(X) {
    var s = numeric.dim(X);
    if(s.length<4) return numeric.blockMatrix([X]);
    var m=s[0],n=s[1],M,N,i,j,Xij;
    M = 0; N = 0;
    for(i=0;i<m;++i) M+=X[i][0].length;
    for(j=0;j<n;++j) N+=X[0][j][0].length;
    var Z = Array(M);
    for(i=0;i<M;++i) Z[i] = Array(N);
    var I=0,J,ZI,k,l,Xijk;
    for(i=0;i<m;++i) {
        J=N;
        for(j=n-1;j!==-1;--j) {
            Xij = X[i][j];
            J -= Xij[0].length;
            for(k=Xij.length-1;k!==-1;--k) {
                Xijk = Xij[k];
                ZI = Z[I+k];
                for(l = Xijk.length-1;l!==-1;--l) ZI[J+l] = Xijk[l];
            }
        }
        I += X[i][0].length;
    }
    return Z;
}

numeric.tensor = function tensor(x,y) {
    if(typeof x === "number" || typeof y === "number") return numeric.mul(x,y);
    var s1 = numeric.dim(x), s2 = numeric.dim(y);
    if(s1.length !== 1 || s2.length !== 1) {
        throw new Error('numeric: tensor product is only defined for vectors');
    }
    var m = s1[0], n = s2[0], A = Array(m), Ai, i,j,xi;
    for(i=m-1;i>=0;i--) {
        Ai = Array(n);
        xi = x[i];
        for(j=n-1;j>=3;--j) {
            Ai[j] = xi * y[j];
            --j;
            Ai[j] = xi * y[j];
            --j;
            Ai[j] = xi * y[j];
            --j;
            Ai[j] = xi * y[j];
        }
        while(j>=0) { Ai[j] = xi * y[j]; --j; }
        A[i] = Ai;
    }
    return A;
}

// 3. The Tensor type T
numeric.T = function T(x,y) { this.x = x; this.y = y; }
numeric.t = function t(x,y) { return new numeric.T(x,y); }

numeric.Tbinop = function Tbinop(rr,rc,cr,cc,setup) {
    var io = numeric.indexOf;
    if(typeof setup !== "string") {
        var k;
        setup = '';
        for(k in numeric) {
            if(numeric.hasOwnProperty(k) && (rr.indexOf(k)>=0 || rc.indexOf(k)>=0 || cr.indexOf(k)>=0 || cc.indexOf(k)>=0) && k.length>1) {
                setup += 'var '+k+' = numeric.'+k+';\n';
            }
        }
    }
    return Function(['y'],
            'var x = this;\n'+
            'if(!(y instanceof numeric.T)) { y = new numeric.T(y); }\n'+
            setup+'\n'+
            'if(x.y) {'+
            '  if(y.y) {'+
            '    return new numeric.T('+cc+');\n'+
            '  }\n'+
            '  return new numeric.T('+cr+');\n'+
            '}\n'+
            'if(y.y) {\n'+
            '  return new numeric.T('+rc+');\n'+
            '}\n'+
            'return new numeric.T('+rr+');\n'
    );
}

numeric.T.prototype.add = numeric.Tbinop(
        'add(x.x,y.x)',
        'add(x.x,y.x),y.y',
        'add(x.x,y.x),x.y',
        'add(x.x,y.x),add(x.y,y.y)');
numeric.T.prototype.sub = numeric.Tbinop(
        'sub(x.x,y.x)',
        'sub(x.x,y.x),neg(y.y)',
        'sub(x.x,y.x),x.y',
        'sub(x.x,y.x),sub(x.y,y.y)');
numeric.T.prototype.mul = numeric.Tbinop(
        'mul(x.x,y.x)',
        'mul(x.x,y.x),mul(x.x,y.y)',
        'mul(x.x,y.x),mul(x.y,y.x)',
        'sub(mul(x.x,y.x),mul(x.y,y.y)),add(mul(x.x,y.y),mul(x.y,y.x))');

numeric.T.prototype.reciprocal = function reciprocal() {
    var mul = numeric.mul, div = numeric.div;
    if(this.y) {
        var d = numeric.add(mul(this.x,this.x),mul(this.y,this.y));
        return new numeric.T(div(this.x,d),div(numeric.neg(this.y),d));
    }
    return new T(div(1,this.x));
}
numeric.T.prototype.div = function div(y) {
    if(!(y instanceof numeric.T)) y = new numeric.T(y);
    if(y.y) { return this.mul(y.reciprocal()); }
    var div = numeric.div;
    if(this.y) { return new numeric.T(div(this.x,y.x),div(this.y,y.x)); }
    return new numeric.T(div(this.x,y.x));
}
numeric.T.prototype.dot = numeric.Tbinop(
        'dot(x.x,y.x)',
        'dot(x.x,y.x),dot(x.x,y.y)',
        'dot(x.x,y.x),dot(x.y,y.x)',
        'sub(dot(x.x,y.x),dot(x.y,y.y)),add(dot(x.x,y.y),dot(x.y,y.x))'
        );
numeric.T.prototype.transpose = function transpose() {
    var t = numeric.transpose, x = this.x, y = this.y;
    if(y) { return new numeric.T(t(x),t(y)); }
    return new numeric.T(t(x));
}
numeric.T.prototype.transjugate = function transjugate() {
    var t = numeric.transpose, x = this.x, y = this.y;
    if(y) { return new numeric.T(t(x),numeric.negtranspose(y)); }
    return new numeric.T(t(x));
}
numeric.Tunop = function Tunop(r,c,s) {
    if(typeof s !== "string") { s = ''; }
    return Function(
            'var x = this;\n'+
            s+'\n'+
            'if(x.y) {'+
            '  '+c+';\n'+
            '}\n'+
            r+';\n'
    );
}

numeric.T.prototype.exp = numeric.Tunop(
        'return new numeric.T(ex)',
        'return new numeric.T(mul(cos(x.y),ex),mul(sin(x.y),ex))',
        'var ex = numeric.exp(x.x), cos = numeric.cos, sin = numeric.sin, mul = numeric.mul;');
numeric.T.prototype.conj = numeric.Tunop(
        'return new numeric.T(x.x);',
        'return new numeric.T(x.x,numeric.neg(x.y));');
numeric.T.prototype.neg = numeric.Tunop(
        'return new numeric.T(neg(x.x));',
        'return new numeric.T(neg(x.x),neg(x.y));',
        'var neg = numeric.neg;');
numeric.T.prototype.sin = numeric.Tunop(
        'return new numeric.T(numeric.sin(x.x))',
        'return x.exp().sub(x.neg().exp()).div(new numeric.T(0,2));');
numeric.T.prototype.cos = numeric.Tunop(
        'return new numeric.T(numeric.cos(x.x))',
        'return x.exp().add(x.neg().exp()).div(2);');
numeric.T.prototype.abs = numeric.Tunop(
        'return new numeric.T(numeric.abs(x.x));',
        'return new numeric.T(numeric.sqrt(numeric.add(mul(x.x,x.x),mul(x.y,x.y))));',
        'var mul = numeric.mul;');
numeric.T.prototype.log = numeric.Tunop(
        'return new numeric.T(numeric.log(x.x));',
        'var theta = new numeric.T(numeric.atan2(x.y,x.x)), r = x.abs();\n'+
        'return new numeric.T(numeric.log(r.x),theta.x);');
numeric.T.prototype.norm2 = numeric.Tunop(
        'return numeric.norm2(x.x);',
        'var f = numeric.norm2Squared;\n'+
        'return Math.sqrt(f(x.x)+f(x.y));');
numeric.T.prototype.inv = function inv() {
    var A = this;
    if(typeof A.y === "undefined") { return new numeric.T(numeric.inv(A.x)); }
    var n = A.x.length, i, j, k;
    var Rx = numeric.identity(n),Ry = numeric.rep([n,n],0);
    var Ax = numeric.clone(A.x), Ay = numeric.clone(A.y);
    var Aix, Aiy, Ajx, Ajy, Rix, Riy, Rjx, Rjy;
    var i,j,k,d,d1,ax,ay,bx,by,temp;
    for(i=0;i<n;i++) {
        ax = Ax[i][i]; ay = Ay[i][i];
        d = ax*ax+ay*ay;
        k = i;
        for(j=i+1;j<n;j++) {
            ax = Ax[j][i]; ay = Ay[j][i];
            d1 = ax*ax+ay*ay;
            if(d1 > d) { k=j; d = d1; }
        }
        if(k!==i) {
            temp = Ax[i]; Ax[i] = Ax[k]; Ax[k] = temp;
            temp = Ay[i]; Ay[i] = Ay[k]; Ay[k] = temp;
            temp = Rx[i]; Rx[i] = Rx[k]; Rx[k] = temp;
            temp = Ry[i]; Ry[i] = Ry[k]; Ry[k] = temp;
        }
        Aix = Ax[i]; Aiy = Ay[i];
        Rix = Rx[i]; Riy = Ry[i];
        ax = Aix[i]; ay = Aiy[i];
        for(j=i+1;j<n;j++) {
            bx = Aix[j]; by = Aiy[j];
            Aix[j] = (bx*ax+by*ay)/d;
            Aiy[j] = (by*ax-bx*ay)/d;
        }
        for(j=0;j<n;j++) {
            bx = Rix[j]; by = Riy[j];
            Rix[j] = (bx*ax+by*ay)/d;
            Riy[j] = (by*ax-bx*ay)/d;
        }
        for(j=i+1;j<n;j++) {
            Ajx = Ax[j]; Ajy = Ay[j];
            Rjx = Rx[j]; Rjy = Ry[j];
            ax = Ajx[i]; ay = Ajy[i];
            for(k=i+1;k<n;k++) {
                bx = Aix[k]; by = Aiy[k];
                Ajx[k] -= bx*ax-by*ay;
                Ajy[k] -= by*ax+bx*ay;
            }
            for(k=0;k<n;k++) {
                bx = Rix[k]; by = Riy[k];
                Rjx[k] -= bx*ax-by*ay;
                Rjy[k] -= by*ax+bx*ay;
            }
        }
    }
    for(i=n-1;i>0;i--) {
        Rix = Rx[i]; Riy = Ry[i];
        for(j=i-1;j>=0;j--) {
            Rjx = Rx[j]; Rjy = Ry[j];
            ax = Ax[j][i]; ay = Ay[j][i];
            for(k=n-1;k>=0;k--) {
                bx = Rix[k]; by = Riy[k];
                Rjx[k] -= ax*bx - ay*by;
                Rjy[k] -= ax*by + ay*bx;
            }
        }
    }
    return new numeric.T(Rx,Ry);
}
numeric.T.prototype.get = function get(i) {
    var x = this.x, y = this.y, k = 0, ik, n = i.length;
    if(y) {
        while(k<n) {
            ik = i[k];
            x = x[ik];
            y = y[ik];
            k++;
        }
        return new numeric.T(x,y);
    }
    while(k<n) {
        ik = i[k];
        x = x[ik];
        k++;
    }
    return new numeric.T(x);
}
numeric.T.prototype.set = function set(i,v) {
    var x = this.x, y = this.y, k = 0, ik, n = i.length, vx = v.x, vy = v.y;
    if(n===0) {
        if(vy) { this.y = vy; }
        else if(y) { this.y = undefined; }
        this.x = x;
        return this;
    }
    if(vy) {
        if(y) { /* ok */ }
        else {
            y = numeric.rep(numeric.dim(x),0);
            this.y = y;
        }
        while(k<n-1) {
            ik = i[k];
            x = x[ik];
            y = y[ik];
            k++;
        }
        ik = i[k];
        x[ik] = vx;
        y[ik] = vy;
        return this;
    }
    if(y) {
        while(k<n-1) {
            ik = i[k];
            x = x[ik];
            y = y[ik];
            k++;
        }
        ik = i[k];
        x[ik] = vx;
        if(vx instanceof Array) y[ik] = numeric.rep(numeric.dim(vx),0);
        else y[ik] = 0;
        return this;
    }
    while(k<n-1) {
        ik = i[k];
        x = x[ik];
        k++;
    }
    ik = i[k];
    x[ik] = vx;
    return this;
}
numeric.T.prototype.getRows = function getRows(i0,i1) {
    var n = i1-i0+1, j;
    var rx = Array(n), ry, x = this.x, y = this.y;
    for(j=i0;j<=i1;j++) { rx[j-i0] = x[j]; }
    if(y) {
        ry = Array(n);
        for(j=i0;j<=i1;j++) { ry[j-i0] = y[j]; }
        return new numeric.T(rx,ry);
    }
    return new numeric.T(rx);
}
numeric.T.prototype.setRows = function setRows(i0,i1,A) {
    var j;
    var rx = this.x, ry = this.y, x = A.x, y = A.y;
    for(j=i0;j<=i1;j++) { rx[j] = x[j-i0]; }
    if(y) {
        if(!ry) { ry = numeric.rep(numeric.dim(rx),0); this.y = ry; }
        for(j=i0;j<=i1;j++) { ry[j] = y[j-i0]; }
    } else if(ry) {
        for(j=i0;j<=i1;j++) { ry[j] = numeric.rep([x[j-i0].length],0); }
    }
    return this;
}
numeric.T.prototype.getRow = function getRow(k) {
    var x = this.x, y = this.y;
    if(y) { return new numeric.T(x[k],y[k]); }
    return new numeric.T(x[k]);
}
numeric.T.prototype.setRow = function setRow(i,v) {
    var rx = this.x, ry = this.y, x = v.x, y = v.y;
    rx[i] = x;
    if(y) {
        if(!ry) { ry = numeric.rep(numeric.dim(rx),0); this.y = ry; }
        ry[i] = y;
    } else if(ry) {
        ry = numeric.rep([x.length],0);
    }
    return this;
}

numeric.T.prototype.getBlock = function getBlock(from,to) {
    var x = this.x, y = this.y, b = numeric.getBlock;
    if(y) { return new numeric.T(b(x,from,to),b(y,from,to)); }
    return new numeric.T(b(x,from,to));
}
numeric.T.prototype.setBlock = function setBlock(from,to,A) {
    if(!(A instanceof numeric.T)) A = new numeric.T(A);
    var x = this.x, y = this.y, b = numeric.setBlock, Ax = A.x, Ay = A.y;
    if(Ay) {
        if(!y) { this.y = numeric.rep(numeric.dim(this),0); y = this.y; }
        b(x,from,to,Ax);
        b(y,from,to,Ay);
        return this;
    }
    b(x,from,to,Ax);
    if(y) b(y,from,to,numeric.rep(numeric.dim(Ax),0));
}
numeric.T.rep = function rep(s,v) {
    var T = numeric.T;
    if(!(v instanceof T)) v = new T(v);
    var x = v.x, y = v.y, r = numeric.rep;
    if(y) return new T(r(s,x),r(s,y));
    return new T(r(s,x));
}
numeric.T.diag = function diag(d) {
    if(!(d instanceof numeric.T)) d = new numeric.T(d);
    var x = d.x, y = d.y, diag = numeric.diag;
    if(y) return new numeric.T(diag(x),diag(y));
    return new numeric.T(diag(x));
}
numeric.T.eig = function eig() {
    if(this.y) { throw new Error('eig: not implemented for complex matrices.'); }
    return numeric.eig(this.x);
}
numeric.T.identity = function identity(n) { return new numeric.T(numeric.identity(n)); }
numeric.T.prototype.getDiag = function getDiag() {
    var n = numeric;
    var x = this.x, y = this.y;
    if(y) { return new n.T(n.getDiag(x),n.getDiag(y)); }
    return new n.T(n.getDiag(x));
}

// 4. Eigenvalues of real matrices

numeric.house = function house(x) {
    var v = numeric.clone(x);
    var s = x[0] >= 0 ? 1 : -1;
    var alpha = s*numeric.norm2(x);
    v[0] += alpha;
    var foo = numeric.norm2(v);
    if(foo === 0) { /* this should not happen */ throw new Error('eig: internal error'); }
    return numeric.div(v,foo);
}

numeric.toUpperHessenberg = function toUpperHessenberg(me) {
    var s = numeric.dim(me);
    if(s.length !== 2 || s[0] !== s[1]) { throw new Error('numeric: toUpperHessenberg() only works on square matrices'); }
    var m = s[0], i,j,k,x,v,A = numeric.clone(me),B,C,Ai,Ci,Q = numeric.identity(m),Qi;
    for(j=0;j<m-2;j++) {
        x = Array(m-j-1);
        for(i=j+1;i<m;i++) { x[i-j-1] = A[i][j]; }
        if(numeric.norm2(x)>0) {
            v = numeric.house(x);
            B = numeric.getBlock(A,[j+1,j],[m-1,m-1]);
            C = numeric.tensor(v,numeric.dot(v,B));
            for(i=j+1;i<m;i++) { Ai = A[i]; Ci = C[i-j-1]; for(k=j;k<m;k++) Ai[k] -= 2*Ci[k-j]; }
            B = numeric.getBlock(A,[0,j+1],[m-1,m-1]);
            C = numeric.tensor(numeric.dot(B,v),v);
            for(i=0;i<m;i++) { Ai = A[i]; Ci = C[i]; for(k=j+1;k<m;k++) Ai[k] -= 2*Ci[k-j-1]; }
            B = Array(m-j-1);
            for(i=j+1;i<m;i++) B[i-j-1] = Q[i];
            C = numeric.tensor(v,numeric.dot(v,B));
            for(i=j+1;i<m;i++) { Qi = Q[i]; Ci = C[i-j-1]; for(k=0;k<m;k++) Qi[k] -= 2*Ci[k]; }
        }
    }
    return {H:A, Q:Q};
}

numeric.epsilon = 2.220446049250313e-16;

numeric.QRFrancis = function(H,maxiter) {
    if(typeof maxiter === "undefined") { maxiter = 10000; }
    H = numeric.clone(H);
    var H0 = numeric.clone(H);
    var s = numeric.dim(H),m=s[0],x,v,a,b,c,d,det,tr, Hloc, Q = numeric.identity(m), Qi, Hi, B, C, Ci,i,j,k,iter;
    if(m<3) { return {Q:Q, B:[ [0,m-1] ]}; }
    var epsilon = numeric.epsilon;
    for(iter=0;iter<maxiter;iter++) {
        for(j=0;j<m-1;j++) {
            if(Math.abs(H[j+1][j]) < epsilon*(Math.abs(H[j][j])+Math.abs(H[j+1][j+1]))) {
                var QH1 = numeric.QRFrancis(numeric.getBlock(H,[0,0],[j,j]),maxiter);
                var QH2 = numeric.QRFrancis(numeric.getBlock(H,[j+1,j+1],[m-1,m-1]),maxiter);
                B = Array(j+1);
                for(i=0;i<=j;i++) { B[i] = Q[i]; }
                C = numeric.dot(QH1.Q,B);
                for(i=0;i<=j;i++) { Q[i] = C[i]; }
                B = Array(m-j-1);
                for(i=j+1;i<m;i++) { B[i-j-1] = Q[i]; }
                C = numeric.dot(QH2.Q,B);
                for(i=j+1;i<m;i++) { Q[i] = C[i-j-1]; }
                return {Q:Q,B:QH1.B.concat(numeric.add(QH2.B,j+1))};
            }
        }
        a = H[m-2][m-2]; b = H[m-2][m-1];
        c = H[m-1][m-2]; d = H[m-1][m-1];
        tr = a+d;
        det = (a*d-b*c);
        Hloc = numeric.getBlock(H, [0,0], [2,2]);
        if(tr*tr>=4*det) {
            var s1,s2;
            s1 = 0.5*(tr+Math.sqrt(tr*tr-4*det));
            s2 = 0.5*(tr-Math.sqrt(tr*tr-4*det));
            Hloc = numeric.add(numeric.sub(numeric.dot(Hloc,Hloc),
                                           numeric.mul(Hloc,s1+s2)),
                               numeric.diag(numeric.rep([3],s1*s2)));
        } else {
            Hloc = numeric.add(numeric.sub(numeric.dot(Hloc,Hloc),
                                           numeric.mul(Hloc,tr)),
                               numeric.diag(numeric.rep([3],det)));
        }
        x = [Hloc[0][0],Hloc[1][0],Hloc[2][0]];
        v = numeric.house(x);
        B = [H[0],H[1],H[2]];
        C = numeric.tensor(v,numeric.dot(v,B));
        for(i=0;i<3;i++) { Hi = H[i]; Ci = C[i]; for(k=0;k<m;k++) Hi[k] -= 2*Ci[k]; }
        B = numeric.getBlock(H, [0,0],[m-1,2]);
        C = numeric.tensor(numeric.dot(B,v),v);
        for(i=0;i<m;i++) { Hi = H[i]; Ci = C[i]; for(k=0;k<3;k++) Hi[k] -= 2*Ci[k]; }
        B = [Q[0],Q[1],Q[2]];
        C = numeric.tensor(v,numeric.dot(v,B));
        for(i=0;i<3;i++) { Qi = Q[i]; Ci = C[i]; for(k=0;k<m;k++) Qi[k] -= 2*Ci[k]; }
        var J;
        for(j=0;j<m-2;j++) {
            for(k=j;k<=j+1;k++) {
                if(Math.abs(H[k+1][k]) < epsilon*(Math.abs(H[k][k])+Math.abs(H[k+1][k+1]))) {
                    var QH1 = numeric.QRFrancis(numeric.getBlock(H,[0,0],[k,k]),maxiter);
                    var QH2 = numeric.QRFrancis(numeric.getBlock(H,[k+1,k+1],[m-1,m-1]),maxiter);
                    B = Array(k+1);
                    for(i=0;i<=k;i++) { B[i] = Q[i]; }
                    C = numeric.dot(QH1.Q,B);
                    for(i=0;i<=k;i++) { Q[i] = C[i]; }
                    B = Array(m-k-1);
                    for(i=k+1;i<m;i++) { B[i-k-1] = Q[i]; }
                    C = numeric.dot(QH2.Q,B);
                    for(i=k+1;i<m;i++) { Q[i] = C[i-k-1]; }
                    return {Q:Q,B:QH1.B.concat(numeric.add(QH2.B,k+1))};
                }
            }
            J = Math.min(m-1,j+3);
            x = Array(J-j);
            for(i=j+1;i<=J;i++) { x[i-j-1] = H[i][j]; }
            v = numeric.house(x);
            B = numeric.getBlock(H, [j+1,j],[J,m-1]);
            C = numeric.tensor(v,numeric.dot(v,B));
            for(i=j+1;i<=J;i++) { Hi = H[i]; Ci = C[i-j-1]; for(k=j;k<m;k++) Hi[k] -= 2*Ci[k-j]; }
            B = numeric.getBlock(H, [0,j+1],[m-1,J]);
            C = numeric.tensor(numeric.dot(B,v),v);
            for(i=0;i<m;i++) { Hi = H[i]; Ci = C[i]; for(k=j+1;k<=J;k++) Hi[k] -= 2*Ci[k-j-1]; }
            B = Array(J-j);
            for(i=j+1;i<=J;i++) B[i-j-1] = Q[i];
            C = numeric.tensor(v,numeric.dot(v,B));
            for(i=j+1;i<=J;i++) { Qi = Q[i]; Ci = C[i-j-1]; for(k=0;k<m;k++) Qi[k] -= 2*Ci[k]; }
        }
    }
    throw new Error('numeric: eigenvalue iteration does not converge -- increase maxiter?');
}

numeric.eig = function eig(A,maxiter) {
    var QH = numeric.toUpperHessenberg(A);
    var QB = numeric.QRFrancis(QH.H,maxiter);
    var T = numeric.T;
    var n = A.length,i,k,flag = false,B = QB.B,H = numeric.dot(QB.Q,numeric.dot(QH.H,numeric.transpose(QB.Q)));
    var Q = new T(numeric.dot(QB.Q,QH.Q)),Q0;
    var m = B.length,j;
    var a,b,c,d,p1,p2,disc,x,y,p,q,n1,n2;
    var sqrt = Math.sqrt;
    for(k=0;k<m;k++) {
        i = B[k][0];
        if(i === B[k][1]) {
            // nothing
        } else {
            j = i+1;
            a = H[i][i];
            b = H[i][j];
            c = H[j][i];
            d = H[j][j];
            if(b === 0 && c === 0) continue;
            p1 = -a-d;
            p2 = a*d-b*c;
            disc = p1*p1-4*p2;
            if(disc>=0) {
                if(p1<0) x = -0.5*(p1-sqrt(disc));
                else     x = -0.5*(p1+sqrt(disc));
                n1 = (a-x)*(a-x)+b*b;
                n2 = c*c+(d-x)*(d-x);
                if(n1>n2) {
                    n1 = sqrt(n1);
                    p = (a-x)/n1;
                    q = b/n1;
                } else {
                    n2 = sqrt(n2);
                    p = c/n2;
                    q = (d-x)/n2;
                }
                Q0 = new T([[q,-p],[p,q]]);
                Q.setRows(i,j,Q0.dot(Q.getRows(i,j)));
            } else {
                x = -0.5*p1;
                y = 0.5*sqrt(-disc);
                n1 = (a-x)*(a-x)+b*b;
                n2 = c*c+(d-x)*(d-x);
                if(n1>n2) {
                    n1 = sqrt(n1+y*y);
                    p = (a-x)/n1;
                    q = b/n1;
                    x = 0;
                    y /= n1;
                } else {
                    n2 = sqrt(n2+y*y);
                    p = c/n2;
                    q = (d-x)/n2;
                    x = y/n2;
                    y = 0;
                }
                Q0 = new T([[q,-p],[p,q]],[[x,y],[y,-x]]);
                Q.setRows(i,j,Q0.dot(Q.getRows(i,j)));
            }
        }
    }
    var R = Q.dot(A).dot(Q.transjugate()), n = A.length, E = numeric.T.identity(n);
    for(j=0;j<n;j++) {
        if(j>0) {
            for(k=j-1;k>=0;k--) {
                var Rk = R.get([k,k]), Rj = R.get([j,j]);
                if(numeric.neq(Rk.x,Rj.x) || numeric.neq(Rk.y,Rj.y)) {
                    x = R.getRow(k).getBlock([k],[j-1]);
                    y = E.getRow(j).getBlock([k],[j-1]);
                    E.set([j,k],(R.get([k,j]).neg().sub(x.dot(y))).div(Rk.sub(Rj)));
                } else {
                    E.setRow(j,E.getRow(k));
                    continue;
                }
            }
        }
    }
    for(j=0;j<n;j++) {
        x = E.getRow(j);
        E.setRow(j,x.div(x.norm2()));
    }
    E = E.transpose();
    E = Q.transjugate().dot(E);
    return { lambda:R.getDiag(), E:E };
};

// 5. Compressed Column Storage matrices
numeric.ccsSparse = function ccsSparse(A) {
    var m = A.length,n,foo, i,j, counts = [];
    for(i=m-1;i!==-1;--i) {
        foo = A[i];
        for(j in foo) {
            j = parseInt(j);
            while(j>=counts.length) counts[counts.length] = 0;
            if(foo[j]!==0) counts[j]++;
        }
    }
    var n = counts.length;
    var Ai = Array(n+1);
    Ai[0] = 0;
    for(i=0;i<n;++i) Ai[i+1] = Ai[i] + counts[i];
    var Aj = Array(Ai[n]), Av = Array(Ai[n]);
    for(i=m-1;i!==-1;--i) {
        foo = A[i];
        for(j in foo) {
            if(foo[j]!==0) {
                counts[j]--;
                Aj[Ai[j]+counts[j]] = i;
                Av[Ai[j]+counts[j]] = foo[j];
            }
        }
    }
    return [Ai,Aj,Av];
}
numeric.ccsFull = function ccsFull(A) {
    var Ai = A[0], Aj = A[1], Av = A[2], s = numeric.ccsDim(A), m = s[0], n = s[1], i,j,j0,j1,k;
    var B = numeric.rep([m,n],0);
    for(i=0;i<n;i++) {
        j0 = Ai[i];
        j1 = Ai[i+1];
        for(j=j0;j<j1;++j) { B[Aj[j]][i] = Av[j]; }
    }
    return B;
}
numeric.ccsTSolve = function ccsTSolve(A,b,x,bj,xj) {
    var Ai = A[0], Aj = A[1], Av = A[2],m = Ai.length-1, max = Math.max,n=0;
    if(typeof bj === "undefined") x = numeric.rep([m],0);
    if(typeof bj === "undefined") bj = numeric.linspace(0,x.length-1);
    if(typeof xj === "undefined") xj = [];
    function dfs(j) {
        var k;
        if(x[j] !== 0) return;
        x[j] = 1;
        for(k=Ai[j];k<Ai[j+1];++k) dfs(Aj[k]);
        xj[n] = j;
        ++n;
    }
    var i,j,j0,j1,k,l,l0,l1,a;
    for(i=bj.length-1;i!==-1;--i) { dfs(bj[i]); }
    xj.length = n;
    for(i=xj.length-1;i!==-1;--i) { x[xj[i]] = 0; }
    for(i=bj.length-1;i!==-1;--i) { j = bj[i]; x[j] = b[j]; }
    for(i=xj.length-1;i!==-1;--i) {
        j = xj[i];
        j0 = Ai[j];
        j1 = max(Ai[j+1],j0);
        for(k=j0;k!==j1;++k) { if(Aj[k] === j) { x[j] /= Av[k]; break; } }
        a = x[j];
        for(k=j0;k!==j1;++k) {
            l = Aj[k];
            if(l !== j) x[l] -= a*Av[k];
        }
    }
    return x;
}
numeric.ccsDFS = function ccsDFS(n) {
    this.k = Array(n);
    this.k1 = Array(n);
    this.j = Array(n);
}
numeric.ccsDFS.prototype.dfs = function dfs(J,Ai,Aj,x,xj,Pinv) {
    var m = 0,foo,n=xj.length;
    var k = this.k, k1 = this.k1, j = this.j,km,k11;
    if(x[J]!==0) return;
    x[J] = 1;
    j[0] = J;
    k[0] = km = Ai[J];
    k1[0] = k11 = Ai[J+1];
    while(1) {
        if(km >= k11) {
            xj[n] = j[m];
            if(m===0) return;
            ++n;
            --m;
            km = k[m];
            k11 = k1[m];
        } else {
            foo = Pinv[Aj[km]];
            if(x[foo] === 0) {
                x[foo] = 1;
                k[m] = km;
                ++m;
                j[m] = foo;
                km = Ai[foo];
                k1[m] = k11 = Ai[foo+1];
            } else ++km;
        }
    }
}
numeric.ccsLPSolve = function ccsLPSolve(A,B,x,xj,I,Pinv,dfs) {
    var Ai = A[0], Aj = A[1], Av = A[2],m = Ai.length-1, n=0;
    var Bi = B[0], Bj = B[1], Bv = B[2];
    
    var i,i0,i1,j,J,j0,j1,k,l,l0,l1,a;
    i0 = Bi[I];
    i1 = Bi[I+1];
    xj.length = 0;
    for(i=i0;i<i1;++i) { dfs.dfs(Pinv[Bj[i]],Ai,Aj,x,xj,Pinv); }
    for(i=xj.length-1;i!==-1;--i) { x[xj[i]] = 0; }
    for(i=i0;i!==i1;++i) { j = Pinv[Bj[i]]; x[j] = Bv[i]; }
    for(i=xj.length-1;i!==-1;--i) {
        j = xj[i];
        j0 = Ai[j];
        j1 = Ai[j+1];
        for(k=j0;k<j1;++k) { if(Pinv[Aj[k]] === j) { x[j] /= Av[k]; break; } }
        a = x[j];
        for(k=j0;k<j1;++k) {
            l = Pinv[Aj[k]];
            if(l !== j) x[l] -= a*Av[k];
        }
    }
    return x;
}
numeric.ccsLUP1 = function ccsLUP1(A,threshold) {
    var m = A[0].length-1;
    var L = [numeric.rep([m+1],0),[],[]], U = [numeric.rep([m+1], 0),[],[]];
    var Li = L[0], Lj = L[1], Lv = L[2], Ui = U[0], Uj = U[1], Uv = U[2];
    var x = numeric.rep([m],0), xj = numeric.rep([m],0);
    var i,j,k,j0,j1,a,e,c,d,K;
    var sol = numeric.ccsLPSolve, max = Math.max, abs = Math.abs;
    var P = numeric.linspace(0,m-1),Pinv = numeric.linspace(0,m-1);
    var dfs = new numeric.ccsDFS(m);
    if(typeof threshold === "undefined") { threshold = 1; }
    for(i=0;i<m;++i) {
        sol(L,A,x,xj,i,Pinv,dfs);
        a = -1;
        e = -1;
        for(j=xj.length-1;j!==-1;--j) {
            k = xj[j];
            if(k <= i) continue;
            c = abs(x[k]);
            if(c > a) { e = k; a = c; }
        }
        if(abs(x[i])<threshold*a) {
            j = P[i];
            a = P[e];
            P[i] = a; Pinv[a] = i;
            P[e] = j; Pinv[j] = e;
            a = x[i]; x[i] = x[e]; x[e] = a;
        }
        a = Li[i];
        e = Ui[i];
        d = x[i];
        Lj[a] = P[i];
        Lv[a] = 1;
        ++a;
        for(j=xj.length-1;j!==-1;--j) {
            k = xj[j];
            c = x[k];
            xj[j] = 0;
            x[k] = 0;
            if(k<=i) { Uj[e] = k; Uv[e] = c;   ++e; }
            else     { Lj[a] = P[k]; Lv[a] = c/d; ++a; }
        }
        Li[i+1] = a;
        Ui[i+1] = e;
    }
    for(j=Lj.length-1;j!==-1;--j) { Lj[j] = Pinv[Lj[j]]; }
    return {L:L, U:U, P:P, Pinv:Pinv};
}
numeric.ccsDFS0 = function ccsDFS0(n) {
    this.k = Array(n);
    this.k1 = Array(n);
    this.j = Array(n);
}
numeric.ccsDFS0.prototype.dfs = function dfs(J,Ai,Aj,x,xj,Pinv,P) {
    var m = 0,foo,n=xj.length;
    var k = this.k, k1 = this.k1, j = this.j,km,k11;
    if(x[J]!==0) return;
    x[J] = 1;
    j[0] = J;
    k[0] = km = Ai[Pinv[J]];
    k1[0] = k11 = Ai[Pinv[J]+1];
    while(1) {
        if(isNaN(km)) throw new Error("Ow!");
        if(km >= k11) {
            xj[n] = Pinv[j[m]];
            if(m===0) return;
            ++n;
            --m;
            km = k[m];
            k11 = k1[m];
        } else {
            foo = Aj[km];
            if(x[foo] === 0) {
                x[foo] = 1;
                k[m] = km;
                ++m;
                j[m] = foo;
                foo = Pinv[foo];
                km = Ai[foo];
                k1[m] = k11 = Ai[foo+1];
            } else ++km;
        }
    }
}
numeric.ccsLPSolve0 = function ccsLPSolve0(A,B,y,xj,I,Pinv,P,dfs) {
    var Ai = A[0], Aj = A[1], Av = A[2],m = Ai.length-1, n=0;
    var Bi = B[0], Bj = B[1], Bv = B[2];
    
    var i,i0,i1,j,J,j0,j1,k,l,l0,l1,a;
    i0 = Bi[I];
    i1 = Bi[I+1];
    xj.length = 0;
    for(i=i0;i<i1;++i) { dfs.dfs(Bj[i],Ai,Aj,y,xj,Pinv,P); }
    for(i=xj.length-1;i!==-1;--i) { j = xj[i]; y[P[j]] = 0; }
    for(i=i0;i!==i1;++i) { j = Bj[i]; y[j] = Bv[i]; }
    for(i=xj.length-1;i!==-1;--i) {
        j = xj[i];
        l = P[j];
        j0 = Ai[j];
        j1 = Ai[j+1];
        for(k=j0;k<j1;++k) { if(Aj[k] === l) { y[l] /= Av[k]; break; } }
        a = y[l];
        for(k=j0;k<j1;++k) y[Aj[k]] -= a*Av[k];
        y[l] = a;
    }
}
numeric.ccsLUP0 = function ccsLUP0(A,threshold) {
    var m = A[0].length-1;
    var L = [numeric.rep([m+1],0),[],[]], U = [numeric.rep([m+1], 0),[],[]];
    var Li = L[0], Lj = L[1], Lv = L[2], Ui = U[0], Uj = U[1], Uv = U[2];
    var y = numeric.rep([m],0), xj = numeric.rep([m],0);
    var i,j,k,j0,j1,a,e,c,d,K;
    var sol = numeric.ccsLPSolve0, max = Math.max, abs = Math.abs;
    var P = numeric.linspace(0,m-1),Pinv = numeric.linspace(0,m-1);
    var dfs = new numeric.ccsDFS0(m);
    if(typeof threshold === "undefined") { threshold = 1; }
    for(i=0;i<m;++i) {
        sol(L,A,y,xj,i,Pinv,P,dfs);
        a = -1;
        e = -1;
        for(j=xj.length-1;j!==-1;--j) {
            k = xj[j];
            if(k <= i) continue;
            c = abs(y[P[k]]);
            if(c > a) { e = k; a = c; }
        }
        if(abs(y[P[i]])<threshold*a) {
            j = P[i];
            a = P[e];
            P[i] = a; Pinv[a] = i;
            P[e] = j; Pinv[j] = e;
        }
        a = Li[i];
        e = Ui[i];
        d = y[P[i]];
        Lj[a] = P[i];
        Lv[a] = 1;
        ++a;
        for(j=xj.length-1;j!==-1;--j) {
            k = xj[j];
            c = y[P[k]];
            xj[j] = 0;
            y[P[k]] = 0;
            if(k<=i) { Uj[e] = k; Uv[e] = c;   ++e; }
            else     { Lj[a] = P[k]; Lv[a] = c/d; ++a; }
        }
        Li[i+1] = a;
        Ui[i+1] = e;
    }
    for(j=Lj.length-1;j!==-1;--j) { Lj[j] = Pinv[Lj[j]]; }
    return {L:L, U:U, P:P, Pinv:Pinv};
}
numeric.ccsLUP = numeric.ccsLUP0;

numeric.ccsDim = function ccsDim(A) { return [numeric.sup(A[1])+1,A[0].length-1]; }
numeric.ccsGetBlock = function ccsGetBlock(A,i,j) {
    var s = numeric.ccsDim(A),m=s[0],n=s[1];
    if(typeof i === "undefined") { i = numeric.linspace(0,m-1); }
    else if(typeof i === "number") { i = [i]; }
    if(typeof j === "undefined") { j = numeric.linspace(0,n-1); }
    else if(typeof j === "number") { j = [j]; }
    var p,p0,p1,P = i.length,q,Q = j.length,r,jq,ip;
    var Bi = numeric.rep([n],0), Bj=[], Bv=[], B = [Bi,Bj,Bv];
    var Ai = A[0], Aj = A[1], Av = A[2];
    var x = numeric.rep([m],0),count=0,flags = numeric.rep([m],0);
    for(q=0;q<Q;++q) {
        jq = j[q];
        var q0 = Ai[jq];
        var q1 = Ai[jq+1];
        for(p=q0;p<q1;++p) {
            r = Aj[p];
            flags[r] = 1;
            x[r] = Av[p];
        }
        for(p=0;p<P;++p) {
            ip = i[p];
            if(flags[ip]) {
                Bj[count] = p;
                Bv[count] = x[i[p]];
                ++count;
            }
        }
        for(p=q0;p<q1;++p) {
            r = Aj[p];
            flags[r] = 0;
        }
        Bi[q+1] = count;
    }
    return B;
}

numeric.ccsDot = function ccsDot(A,B) {
    var Ai = A[0], Aj = A[1], Av = A[2];
    var Bi = B[0], Bj = B[1], Bv = B[2];
    var sA = numeric.ccsDim(A), sB = numeric.ccsDim(B);
    var m = sA[0], n = sA[1], o = sB[1];
    var x = numeric.rep([m],0), flags = numeric.rep([m],0), xj = Array(m);
    var Ci = numeric.rep([o],0), Cj = [], Cv = [], C = [Ci,Cj,Cv];
    var i,j,k,j0,j1,i0,i1,l,p,a,b;
    for(k=0;k!==o;++k) {
        j0 = Bi[k];
        j1 = Bi[k+1];
        p = 0;
        for(j=j0;j<j1;++j) {
            a = Bj[j];
            b = Bv[j];
            i0 = Ai[a];
            i1 = Ai[a+1];
            for(i=i0;i<i1;++i) {
                l = Aj[i];
                if(flags[l]===0) {
                    xj[p] = l;
                    flags[l] = 1;
                    p = p+1;
                }
                x[l] = x[l] + Av[i]*b;
            }
        }
        j0 = Ci[k];
        j1 = j0+p;
        Ci[k+1] = j1;
        for(j=p-1;j!==-1;--j) {
            b = j0+j;
            i = xj[j];
            Cj[b] = i;
            Cv[b] = x[i];
            flags[i] = 0;
            x[i] = 0;
        }
        Ci[k+1] = Ci[k]+p;
    }
    return C;
}

numeric.ccsLUPSolve = function ccsLUPSolve(LUP,B) {
    var L = LUP.L, U = LUP.U, P = LUP.P;
    var Bi = B[0];
    var flag = false;
    if(typeof Bi !== "object") { B = [[0,B.length],numeric.linspace(0,B.length-1),B]; Bi = B[0]; flag = true; }
    var Bj = B[1], Bv = B[2];
    var n = L[0].length-1, m = Bi.length-1;
    var x = numeric.rep([n],0), xj = Array(n);
    var b = numeric.rep([n],0), bj = Array(n);
    var Xi = numeric.rep([m+1],0), Xj = [], Xv = [];
    var sol = numeric.ccsTSolve;
    var i,j,j0,j1,k,J,N=0;
    for(i=0;i<m;++i) {
        k = 0;
        j0 = Bi[i];
        j1 = Bi[i+1];
        for(j=j0;j<j1;++j) { 
            J = LUP.Pinv[Bj[j]];
            bj[k] = J;
            b[J] = Bv[j];
            ++k;
        }
        bj.length = k;
        sol(L,b,x,bj,xj);
        for(j=bj.length-1;j!==-1;--j) b[bj[j]] = 0;
        sol(U,x,b,xj,bj);
        if(flag) return b;
        for(j=xj.length-1;j!==-1;--j) x[xj[j]] = 0;
        for(j=bj.length-1;j!==-1;--j) {
            J = bj[j];
            Xj[N] = J;
            Xv[N] = b[J];
            b[J] = 0;
            ++N;
        }
        Xi[i+1] = N;
    }
    return [Xi,Xj,Xv];
}

numeric.ccsbinop = function ccsbinop(body,setup) {
    if(typeof setup === "undefined") setup='';
    return Function('X','Y',
            'var Xi = X[0], Xj = X[1], Xv = X[2];\n'+
            'var Yi = Y[0], Yj = Y[1], Yv = Y[2];\n'+
            'var n = Xi.length-1,m = Math.max(numeric.sup(Xj),numeric.sup(Yj))+1;\n'+
            'var Zi = numeric.rep([n+1],0), Zj = [], Zv = [];\n'+
            'var x = numeric.rep([m],0),y = numeric.rep([m],0);\n'+
            'var xk,yk,zk;\n'+
            'var i,j,j0,j1,k,p=0;\n'+
            setup+
            'for(i=0;i<n;++i) {\n'+
            '  j0 = Xi[i]; j1 = Xi[i+1];\n'+
            '  for(j=j0;j!==j1;++j) {\n'+
            '    k = Xj[j];\n'+
            '    x[k] = 1;\n'+
            '    Zj[p] = k;\n'+
            '    ++p;\n'+
            '  }\n'+
            '  j0 = Yi[i]; j1 = Yi[i+1];\n'+
            '  for(j=j0;j!==j1;++j) {\n'+
            '    k = Yj[j];\n'+
            '    y[k] = Yv[j];\n'+
            '    if(x[k] === 0) {\n'+
            '      Zj[p] = k;\n'+
            '      ++p;\n'+
            '    }\n'+
            '  }\n'+
            '  Zi[i+1] = p;\n'+
            '  j0 = Xi[i]; j1 = Xi[i+1];\n'+
            '  for(j=j0;j!==j1;++j) x[Xj[j]] = Xv[j];\n'+
            '  j0 = Zi[i]; j1 = Zi[i+1];\n'+
            '  for(j=j0;j!==j1;++j) {\n'+
            '    k = Zj[j];\n'+
            '    xk = x[k];\n'+
            '    yk = y[k];\n'+
            body+'\n'+
            '    Zv[j] = zk;\n'+
            '  }\n'+
            '  j0 = Xi[i]; j1 = Xi[i+1];\n'+
            '  for(j=j0;j!==j1;++j) x[Xj[j]] = 0;\n'+
            '  j0 = Yi[i]; j1 = Yi[i+1];\n'+
            '  for(j=j0;j!==j1;++j) y[Yj[j]] = 0;\n'+
            '}\n'+
            'return [Zi,Zj,Zv];'
            );
};

(function() {
    var k,A,B,C;
    for(k in numeric.ops2) {
        if(isFinite(eval('1'+numeric.ops2[k]+'0'))) A = '[Y[0],Y[1],numeric.'+k+'(X,Y[2])]';
        else A = 'NaN';
        if(isFinite(eval('0'+numeric.ops2[k]+'1'))) B = '[X[0],X[1],numeric.'+k+'(X[2],Y)]';
        else B = 'NaN';
        if(isFinite(eval('1'+numeric.ops2[k]+'0')) && isFinite(eval('0'+numeric.ops2[k]+'1'))) C = 'numeric.ccs'+k+'MM(X,Y)';
        else C = 'NaN';
        numeric['ccs'+k+'MM'] = numeric.ccsbinop('zk = xk '+numeric.ops2[k]+'yk;');
        numeric['ccs'+k] = Function('X','Y',
                'if(typeof X === "number") return '+A+';\n'+
                'if(typeof Y === "number") return '+B+';\n'+
                'return '+C+';\n'
                );
    }
}());

numeric.ccsScatter = function ccsScatter(A) {
    var Ai = A[0], Aj = A[1], Av = A[2];
    var n = numeric.sup(Aj)+1,m=Ai.length;
    var Ri = numeric.rep([n],0),Rj=Array(m), Rv = Array(m);
    var counts = numeric.rep([n],0),i;
    for(i=0;i<m;++i) counts[Aj[i]]++;
    for(i=0;i<n;++i) Ri[i+1] = Ri[i] + counts[i];
    var ptr = Ri.slice(0),k,Aii;
    for(i=0;i<m;++i) {
        Aii = Aj[i];
        k = ptr[Aii];
        Rj[k] = Ai[i];
        Rv[k] = Av[i];
        ptr[Aii]=ptr[Aii]+1;
    }
    return [Ri,Rj,Rv];
}

numeric.ccsGather = function ccsGather(A) {
    var Ai = A[0], Aj = A[1], Av = A[2];
    var n = Ai.length-1,m = Aj.length;
    var Ri = Array(m), Rj = Array(m), Rv = Array(m);
    var i,j,j0,j1,p;
    p=0;
    for(i=0;i<n;++i) {
        j0 = Ai[i];
        j1 = Ai[i+1];
        for(j=j0;j!==j1;++j) {
            Rj[p] = i;
            Ri[p] = Aj[j];
            Rv[p] = Av[j];
            ++p;
        }
    }
    return [Ri,Rj,Rv];
}

// The following sparse linear algebra routines are deprecated.

numeric.sdim = function dim(A,ret,k) {
    if(typeof ret === "undefined") { ret = []; }
    if(typeof A !== "object") return ret;
    if(typeof k === "undefined") { k=0; }
    if(!(k in ret)) { ret[k] = 0; }
    if(A.length > ret[k]) ret[k] = A.length;
    var i;
    for(i in A) {
        if(A.hasOwnProperty(i)) dim(A[i],ret,k+1);
    }
    return ret;
};

numeric.sclone = function clone(A,k,n) {
    if(typeof k === "undefined") { k=0; }
    if(typeof n === "undefined") { n = numeric.sdim(A).length; }
    var i,ret = Array(A.length);
    if(k === n-1) {
        for(i in A) { if(A.hasOwnProperty(i)) ret[i] = A[i]; }
        return ret;
    }
    for(i in A) {
        if(A.hasOwnProperty(i)) ret[i] = clone(A[i],k+1,n);
    }
    return ret;
}

numeric.sdiag = function diag(d) {
    var n = d.length,i,ret = Array(n),i1,i2,i3;
    for(i=n-1;i>=1;i-=2) {
        i1 = i-1;
        ret[i] = []; ret[i][i] = d[i];
        ret[i1] = []; ret[i1][i1] = d[i1];
    }
    if(i===0) { ret[0] = []; ret[0][0] = d[i]; }
    return ret;
}

numeric.sidentity = function identity(n) { return numeric.sdiag(numeric.rep([n],1)); }

numeric.stranspose = function transpose(A) {
    var ret = [], n = A.length, i,j,Ai;
    for(i in A) {
        if(!(A.hasOwnProperty(i))) continue;
        Ai = A[i];
        for(j in Ai) {
            if(!(Ai.hasOwnProperty(j))) continue;
            if(typeof ret[j] !== "object") { ret[j] = []; }
            ret[j][i] = Ai[j];
        }
    }
    return ret;
}

numeric.sLUP = function LUP(A,tol) {
    throw new Error("The function numeric.sLUP had a bug in it and has been removed. Please use the new numeric.ccsLUP function instead.");
};

numeric.sdotMM = function dotMM(A,B) {
    var p = A.length, q = B.length, BT = numeric.stranspose(B), r = BT.length, Ai, BTk;
    var i,j,k,accum;
    var ret = Array(p),reti;
    for(i=p-1;i>=0;i--) {
        reti = [];
        Ai = A[i];
        for(k=r-1;k>=0;k--) {
            accum = 0;
            BTk = BT[k];
            for(j in Ai) {
                if(!(Ai.hasOwnProperty(j))) continue;
                if(j in BTk) { accum += Ai[j]*BTk[j]; }
            }
            if(accum) reti[k] = accum;
        }
        ret[i] = reti;
    }
    return ret;
}

numeric.sdotMV = function dotMV(A,x) {
    var p = A.length, Ai, i,j;
    var ret = Array(p), accum;
    for(i=p-1;i>=0;i--) {
        Ai = A[i];
        accum = 0;
        for(j in Ai) {
            if(!(Ai.hasOwnProperty(j))) continue;
            if(x[j]) accum += Ai[j]*x[j];
        }
        if(accum) ret[i] = accum;
    }
    return ret;
}

numeric.sdotVM = function dotMV(x,A) {
    var i,j,Ai,alpha;
    var ret = [], accum;
    for(i in x) {
        if(!x.hasOwnProperty(i)) continue;
        Ai = A[i];
        alpha = x[i];
        for(j in Ai) {
            if(!Ai.hasOwnProperty(j)) continue;
            if(!ret[j]) { ret[j] = 0; }
            ret[j] += alpha*Ai[j];
        }
    }
    return ret;
}

numeric.sdotVV = function dotVV(x,y) {
    var i,ret=0;
    for(i in x) { if(x[i] && y[i]) ret+= x[i]*y[i]; }
    return ret;
}

numeric.sdot = function dot(A,B) {
    var m = numeric.sdim(A).length, n = numeric.sdim(B).length;
    var k = m*1000+n;
    switch(k) {
    case 0: return A*B;
    case 1001: return numeric.sdotVV(A,B);
    case 2001: return numeric.sdotMV(A,B);
    case 1002: return numeric.sdotVM(A,B);
    case 2002: return numeric.sdotMM(A,B);
    default: throw new Error('numeric.sdot not implemented for tensors of order '+m+' and '+n);
    }
}

numeric.sscatter = function scatter(V) {
    var n = V[0].length, Vij, i, j, m = V.length, A = [], Aj;
    for(i=n-1;i>=0;--i) {
        if(!V[m-1][i]) continue;
        Aj = A;
        for(j=0;j<m-2;j++) {
            Vij = V[j][i];
            if(!Aj[Vij]) Aj[Vij] = [];
            Aj = Aj[Vij];
        }
        Aj[V[j][i]] = V[j+1][i];
    }
    return A;
}

numeric.sgather = function gather(A,ret,k) {
    if(typeof ret === "undefined") ret = [];
    if(typeof k === "undefined") k = [];
    var n,i,Ai;
    n = k.length;
    for(i in A) {
        if(A.hasOwnProperty(i)) {
            k[n] = parseInt(i);
            Ai = A[i];
            if(typeof Ai === "number") {
                if(Ai) {
                    if(ret.length === 0) {
                        for(i=n+1;i>=0;--i) ret[i] = [];
                    }
                    for(i=n;i>=0;--i) ret[i].push(k[i]);
                    ret[n+1].push(Ai);
                }
            } else gather(Ai,ret,k);
        }
    }
    if(k.length>n) k.pop();
    return ret;
}

// 6. Coordinate matrices
numeric.cLU = function LU(A) {
    var I = A[0], J = A[1], V = A[2];
    var p = I.length, m=0, i,j,k,a,b,c;
    for(i=0;i<p;i++) if(I[i]>m) m=I[i];
    m++;
    var L = Array(m), U = Array(m), left = numeric.rep([m],Infinity), right = numeric.rep([m],-Infinity);
    var Ui, Uj,alpha;
    for(k=0;k<p;k++) {
        i = I[k];
        j = J[k];
        if(j<left[i]) left[i] = j;
        if(j>right[i]) right[i] = j;
    }
    for(i=0;i<m-1;i++) { if(right[i] > right[i+1]) right[i+1] = right[i]; }
    for(i=m-1;i>=1;i--) { if(left[i]<left[i-1]) left[i-1] = left[i]; }
    var countL = 0, countU = 0;
    for(i=0;i<m;i++) {
        U[i] = numeric.rep([right[i]-left[i]+1],0);
        L[i] = numeric.rep([i-left[i]],0);
        countL += i-left[i]+1;
        countU += right[i]-i+1;
    }
    for(k=0;k<p;k++) { i = I[k]; U[i][J[k]-left[i]] = V[k]; }
    for(i=0;i<m-1;i++) {
        a = i-left[i];
        Ui = U[i];
        for(j=i+1;left[j]<=i && j<m;j++) {
            b = i-left[j];
            c = right[i]-i;
            Uj = U[j];
            alpha = Uj[b]/Ui[a];
            if(alpha) {
                for(k=1;k<=c;k++) { Uj[k+b] -= alpha*Ui[k+a]; }
                L[j][i-left[j]] = alpha;
            }
        }
    }
    var Ui = [], Uj = [], Uv = [], Li = [], Lj = [], Lv = [];
    var p,q,foo;
    p=0; q=0;
    for(i=0;i<m;i++) {
        a = left[i];
        b = right[i];
        foo = U[i];
        for(j=i;j<=b;j++) {
            if(foo[j-a]) {
                Ui[p] = i;
                Uj[p] = j;
                Uv[p] = foo[j-a];
                p++;
            }
        }
        foo = L[i];
        for(j=a;j<i;j++) {
            if(foo[j-a]) {
                Li[q] = i;
                Lj[q] = j;
                Lv[q] = foo[j-a];
                q++;
            }
        }
        Li[q] = i;
        Lj[q] = i;
        Lv[q] = 1;
        q++;
    }
    return {U:[Ui,Uj,Uv], L:[Li,Lj,Lv]};
};

numeric.cLUsolve = function LUsolve(lu,b) {
    var L = lu.L, U = lu.U, ret = numeric.clone(b);
    var Li = L[0], Lj = L[1], Lv = L[2];
    var Ui = U[0], Uj = U[1], Uv = U[2];
    var p = Ui.length, q = Li.length;
    var m = ret.length,i,j,k;
    k = 0;
    for(i=0;i<m;i++) {
        while(Lj[k] < i) {
            ret[i] -= Lv[k]*ret[Lj[k]];
            k++;
        }
        k++;
    }
    k = p-1;
    for(i=m-1;i>=0;i--) {
        while(Uj[k] > i) {
            ret[i] -= Uv[k]*ret[Uj[k]];
            k--;
        }
        ret[i] /= Uv[k];
        k--;
    }
    return ret;
};

numeric.cgrid = function grid(n,shape) {
    if(typeof n === "number") n = [n,n];
    var ret = numeric.rep(n,-1);
    var i,j,count;
    if(typeof shape !== "function") {
        switch(shape) {
        case 'L':
            shape = function(i,j) { return (i>=n[0]/2 || j<n[1]/2); }
            break;
        default:
            shape = function(i,j) { return true; };
            break;
        }
    }
    count=0;
    for(i=1;i<n[0]-1;i++) for(j=1;j<n[1]-1;j++) 
        if(shape(i,j)) {
            ret[i][j] = count;
            count++;
        }
    return ret;
}

numeric.cdelsq = function delsq(g) {
    var dir = [[-1,0],[0,-1],[0,1],[1,0]];
    var s = numeric.dim(g), m = s[0], n = s[1], i,j,k,p,q;
    var Li = [], Lj = [], Lv = [];
    for(i=1;i<m-1;i++) for(j=1;j<n-1;j++) {
        if(g[i][j]<0) continue;
        for(k=0;k<4;k++) {
            p = i+dir[k][0];
            q = j+dir[k][1];
            if(g[p][q]<0) continue;
            Li.push(g[i][j]);
            Lj.push(g[p][q]);
            Lv.push(-1);
        }
        Li.push(g[i][j]);
        Lj.push(g[i][j]);
        Lv.push(4);
    }
    return [Li,Lj,Lv];
}

numeric.cdotMV = function dotMV(A,x) {
    var ret, Ai = A[0], Aj = A[1], Av = A[2],k,p=Ai.length,N;
    N=0;
    for(k=0;k<p;k++) { if(Ai[k]>N) N = Ai[k]; }
    N++;
    ret = numeric.rep([N],0);
    for(k=0;k<p;k++) { ret[Ai[k]]+=Av[k]*x[Aj[k]]; }
    return ret;
}

// 7. Splines

numeric.Spline = function Spline(x,yl,yr,kl,kr) { this.x = x; this.yl = yl; this.yr = yr; this.kl = kl; this.kr = kr; }
numeric.Spline.prototype._at = function _at(x1,p) {
    var x = this.x;
    var yl = this.yl;
    var yr = this.yr;
    var kl = this.kl;
    var kr = this.kr;
    var x1,a,b,t;
    var add = numeric.add, sub = numeric.sub, mul = numeric.mul;
    a = sub(mul(kl[p],x[p+1]-x[p]),sub(yr[p+1],yl[p]));
    b = add(mul(kr[p+1],x[p]-x[p+1]),sub(yr[p+1],yl[p]));
    t = (x1-x[p])/(x[p+1]-x[p]);
    var s = t*(1-t);
    return add(add(add(mul(1-t,yl[p]),mul(t,yr[p+1])),mul(a,s*(1-t))),mul(b,s*t));
}
numeric.Spline.prototype.at = function at(x0) {
    if(typeof x0 === "number") {
        var x = this.x;
        var n = x.length;
        var p,q,mid,floor = Math.floor,a,b,t;
        p = 0;
        q = n-1;
        while(q-p>1) {
            mid = floor((p+q)/2);
            if(x[mid] <= x0) p = mid;
            else q = mid;
        }
        return this._at(x0,p);
    }
    var n = x0.length, i, ret = Array(n);
    for(i=n-1;i!==-1;--i) ret[i] = this.at(x0[i]);
    return ret;
}
numeric.Spline.prototype.diff = function diff() {
    var x = this.x;
    var yl = this.yl;
    var yr = this.yr;
    var kl = this.kl;
    var kr = this.kr;
    var n = yl.length;
    var i,dx,dy;
    var zl = kl, zr = kr, pl = Array(n), pr = Array(n);
    var add = numeric.add, mul = numeric.mul, div = numeric.div, sub = numeric.sub;
    for(i=n-1;i!==-1;--i) {
        dx = x[i+1]-x[i];
        dy = sub(yr[i+1],yl[i]);
        pl[i] = div(add(mul(dy, 6),mul(kl[i],-4*dx),mul(kr[i+1],-2*dx)),dx*dx);
        pr[i+1] = div(add(mul(dy,-6),mul(kl[i], 2*dx),mul(kr[i+1], 4*dx)),dx*dx);
    }
    return new numeric.Spline(x,zl,zr,pl,pr);
}
numeric.Spline.prototype.roots = function roots() {
    function sqr(x) { return x*x; }
    function heval(y0,y1,k0,k1,x) {
        var A = k0*2-(y1-y0);
        var B = -k1*2+(y1-y0);
        var t = (x+1)*0.5;
        var s = t*(1-t);
        return (1-t)*y0+t*y1+A*s*(1-t)+B*s*t;
    }
    var ret = [];
    var x = this.x, yl = this.yl, yr = this.yr, kl = this.kl, kr = this.kr;
    if(typeof yl[0] === "number") {
        yl = [yl];
        yr = [yr];
        kl = [kl];
        kr = [kr];
    }
    var m = yl.length,n=x.length-1,i,j,k,y,s,t;
    var ai,bi,ci,di, ret = Array(m),ri,k0,k1,y0,y1,A,B,D,dx,cx,stops,z0,z1,zm,t0,t1,tm;
    var sqrt = Math.sqrt;
    for(i=0;i!==m;++i) {
        ai = yl[i];
        bi = yr[i];
        ci = kl[i];
        di = kr[i];
        ri = [];
        for(j=0;j!==n;j++) {
            if(j>0 && bi[j]*ai[j]<0) ri.push(x[j]);
            dx = (x[j+1]-x[j]);
            cx = x[j];
            y0 = ai[j];
            y1 = bi[j+1];
            k0 = ci[j]/dx;
            k1 = di[j+1]/dx;
            D = sqr(k0-k1+3*(y0-y1)) + 12*k1*y0;
            A = k1+3*y0+2*k0-3*y1;
            B = 3*(k1+k0+2*(y0-y1));
            if(D<=0) {
                z0 = A/B;
                if(z0>x[j] && z0<x[j+1]) stops = [x[j],z0,x[j+1]];
                else stops = [x[j],x[j+1]];
            } else {
                z0 = (A-sqrt(D))/B;
                z1 = (A+sqrt(D))/B;
                stops = [x[j]];
                if(z0>x[j] && z0<x[j+1]) stops.push(z0);
                if(z1>x[j] && z1<x[j+1]) stops.push(z1);
                stops.push(x[j+1]);
            }
            t0 = stops[0];
            z0 = this._at(t0,j);
            for(k=0;k<stops.length-1;k++) {
                t1 = stops[k+1];
                z1 = this._at(t1,j);
                if(z0 === 0) {
                    ri.push(t0); 
                    t0 = t1;
                    z0 = z1;
                    continue;
                }
                if(z1 === 0 || z0*z1>0) {
                    t0 = t1;
                    z0 = z1;
                    continue;
                }
                var side = 0;
                while(1) {
                    tm = (z0*t1-z1*t0)/(z0-z1);
                    if(tm <= t0 || tm >= t1) { break; }
                    zm = this._at(tm,j);
                    if(zm*z1>0) {
                        t1 = tm;
                        z1 = zm;
                        if(side === -1) z0*=0.5;
                        side = -1;
                    } else if(zm*z0>0) {
                        t0 = tm;
                        z0 = zm;
                        if(side === 1) z1*=0.5;
                        side = 1;
                    } else break;
                }
                ri.push(tm);
                t0 = stops[k+1];
                z0 = this._at(t0, j);
            }
            if(z1 === 0) ri.push(t1);
        }
        ret[i] = ri;
    }
    if(typeof this.yl[0] === "number") return ret[0];
    return ret;
}
numeric.spline = function spline(x,y,k1,kn) {
    var n = x.length, b = [], dx = [], dy = [];
    var i;
    var sub = numeric.sub,mul = numeric.mul,add = numeric.add;
    for(i=n-2;i>=0;i--) { dx[i] = x[i+1]-x[i]; dy[i] = sub(y[i+1],y[i]); }
    if(typeof k1 === "string" || typeof kn === "string") { 
        k1 = kn = "periodic";
    }
    // Build sparse tridiagonal system
    var T = [[],[],[]];
    switch(typeof k1) {
    case "undefined":
        b[0] = mul(3/(dx[0]*dx[0]),dy[0]);
        T[0].push(0,0);
        T[1].push(0,1);
        T[2].push(2/dx[0],1/dx[0]);
        break;
    case "string":
        b[0] = add(mul(3/(dx[n-2]*dx[n-2]),dy[n-2]),mul(3/(dx[0]*dx[0]),dy[0]));
        T[0].push(0,0,0);
        T[1].push(n-2,0,1);
        T[2].push(1/dx[n-2],2/dx[n-2]+2/dx[0],1/dx[0]);
        break;
    default:
        b[0] = k1;
        T[0].push(0);
        T[1].push(0);
        T[2].push(1);
        break;
    }
    for(i=1;i<n-1;i++) {
        b[i] = add(mul(3/(dx[i-1]*dx[i-1]),dy[i-1]),mul(3/(dx[i]*dx[i]),dy[i]));
        T[0].push(i,i,i);
        T[1].push(i-1,i,i+1);
        T[2].push(1/dx[i-1],2/dx[i-1]+2/dx[i],1/dx[i]);
    }
    switch(typeof kn) {
    case "undefined":
        b[n-1] = mul(3/(dx[n-2]*dx[n-2]),dy[n-2]);
        T[0].push(n-1,n-1);
        T[1].push(n-2,n-1);
        T[2].push(1/dx[n-2],2/dx[n-2]);
        break;
    case "string":
        T[1][T[1].length-1] = 0;
        break;
    default:
        b[n-1] = kn;
        T[0].push(n-1);
        T[1].push(n-1);
        T[2].push(1);
        break;
    }
    if(typeof b[0] !== "number") b = numeric.transpose(b);
    else b = [b];
    var k = Array(b.length);
    if(typeof k1 === "string") {
        for(i=k.length-1;i!==-1;--i) {
            k[i] = numeric.ccsLUPSolve(numeric.ccsLUP(numeric.ccsScatter(T)),b[i]);
            k[i][n-1] = k[i][0];
        }
    } else {
        for(i=k.length-1;i!==-1;--i) {
            k[i] = numeric.cLUsolve(numeric.cLU(T),b[i]);
        }
    }
    if(typeof y[0] === "number") k = k[0];
    else k = numeric.transpose(k);
    return new numeric.Spline(x,y,y,k,k);
}

// 8. FFT
numeric.fftpow2 = function fftpow2(x,y) {
    var n = x.length;
    if(n === 1) return;
    var cos = Math.cos, sin = Math.sin, i,j;
    var xe = Array(n/2), ye = Array(n/2), xo = Array(n/2), yo = Array(n/2);
    j = n/2;
    for(i=n-1;i!==-1;--i) {
        --j;
        xo[j] = x[i];
        yo[j] = y[i];
        --i;
        xe[j] = x[i];
        ye[j] = y[i];
    }
    fftpow2(xe,ye);
    fftpow2(xo,yo);
    j = n/2;
    var t,k = (-6.2831853071795864769252867665590057683943387987502116419/n),ci,si;
    for(i=n-1;i!==-1;--i) {
        --j;
        if(j === -1) j = n/2-1;
        t = k*i;
        ci = cos(t);
        si = sin(t);
        x[i] = xe[j] + ci*xo[j] - si*yo[j];
        y[i] = ye[j] + ci*yo[j] + si*xo[j];
    }
}
numeric._ifftpow2 = function _ifftpow2(x,y) {
    var n = x.length;
    if(n === 1) return;
    var cos = Math.cos, sin = Math.sin, i,j;
    var xe = Array(n/2), ye = Array(n/2), xo = Array(n/2), yo = Array(n/2);
    j = n/2;
    for(i=n-1;i!==-1;--i) {
        --j;
        xo[j] = x[i];
        yo[j] = y[i];
        --i;
        xe[j] = x[i];
        ye[j] = y[i];
    }
    _ifftpow2(xe,ye);
    _ifftpow2(xo,yo);
    j = n/2;
    var t,k = (6.2831853071795864769252867665590057683943387987502116419/n),ci,si;
    for(i=n-1;i!==-1;--i) {
        --j;
        if(j === -1) j = n/2-1;
        t = k*i;
        ci = cos(t);
        si = sin(t);
        x[i] = xe[j] + ci*xo[j] - si*yo[j];
        y[i] = ye[j] + ci*yo[j] + si*xo[j];
    }
}
numeric.ifftpow2 = function ifftpow2(x,y) {
    numeric._ifftpow2(x,y);
    numeric.diveq(x,x.length);
    numeric.diveq(y,y.length);
}
numeric.convpow2 = function convpow2(ax,ay,bx,by) {
    numeric.fftpow2(ax,ay);
    numeric.fftpow2(bx,by);
    var i,n = ax.length,axi,bxi,ayi,byi;
    for(i=n-1;i!==-1;--i) {
        axi = ax[i]; ayi = ay[i]; bxi = bx[i]; byi = by[i];
        ax[i] = axi*bxi-ayi*byi;
        ay[i] = axi*byi+ayi*bxi;
    }
    numeric.ifftpow2(ax,ay);
}
numeric.T.prototype.fft = function fft() {
    var x = this.x, y = this.y;
    var n = x.length, log = Math.log, log2 = log(2),
        p = Math.ceil(log(2*n-1)/log2), m = Math.pow(2,p);
    var cx = numeric.rep([m],0), cy = numeric.rep([m],0), cos = Math.cos, sin = Math.sin;
    var k, c = (-3.141592653589793238462643383279502884197169399375105820/n),t;
    var a = numeric.rep([m],0), b = numeric.rep([m],0),nhalf = Math.floor(n/2);
    for(k=0;k<n;k++) a[k] = x[k];
    if(typeof y !== "undefined") for(k=0;k<n;k++) b[k] = y[k];
    cx[0] = 1;
    for(k=1;k<=m/2;k++) {
        t = c*k*k;
        cx[k] = cos(t);
        cy[k] = sin(t);
        cx[m-k] = cos(t);
        cy[m-k] = sin(t)
    }
    var X = new numeric.T(a,b), Y = new numeric.T(cx,cy);
    X = X.mul(Y);
    numeric.convpow2(X.x,X.y,numeric.clone(Y.x),numeric.neg(Y.y));
    X = X.mul(Y);
    X.x.length = n;
    X.y.length = n;
    return X;
}
numeric.T.prototype.ifft = function ifft() {
    var x = this.x, y = this.y;
    var n = x.length, log = Math.log, log2 = log(2),
        p = Math.ceil(log(2*n-1)/log2), m = Math.pow(2,p);
    var cx = numeric.rep([m],0), cy = numeric.rep([m],0), cos = Math.cos, sin = Math.sin;
    var k, c = (3.141592653589793238462643383279502884197169399375105820/n),t;
    var a = numeric.rep([m],0), b = numeric.rep([m],0),nhalf = Math.floor(n/2);
    for(k=0;k<n;k++) a[k] = x[k];
    if(typeof y !== "undefined") for(k=0;k<n;k++) b[k] = y[k];
    cx[0] = 1;
    for(k=1;k<=m/2;k++) {
        t = c*k*k;
        cx[k] = cos(t);
        cy[k] = sin(t);
        cx[m-k] = cos(t);
        cy[m-k] = sin(t)
    }
    var X = new numeric.T(a,b), Y = new numeric.T(cx,cy);
    X = X.mul(Y);
    numeric.convpow2(X.x,X.y,numeric.clone(Y.x),numeric.neg(Y.y));
    X = X.mul(Y);
    X.x.length = n;
    X.y.length = n;
    return X.div(n);
}

//9. Unconstrained optimization
numeric.gradient = function gradient(f,x) {
    var n = x.length;
    var f0 = f(x);
    if(isNaN(f0)) throw new Error('gradient: f(x) is a NaN!');
    var max = Math.max;
    var i,x0 = numeric.clone(x),f1,f2, J = Array(n);
    var div = numeric.div, sub = numeric.sub,errest,roundoff,max = Math.max,eps = 1e-3,abs = Math.abs, min = Math.min;
    var t0,t1,t2,it=0,d1,d2,N;
    for(i=0;i<n;i++) {
        var h = max(1e-6*f0,1e-8);
        while(1) {
            ++it;
            if(it>20) { throw new Error("Numerical gradient fails"); }
            x0[i] = x[i]+h;
            f1 = f(x0);
            x0[i] = x[i]-h;
            f2 = f(x0);
            x0[i] = x[i];
            if(isNaN(f1) || isNaN(f2)) { h/=16; continue; }
            J[i] = (f1-f2)/(2*h);
            t0 = x[i]-h;
            t1 = x[i];
            t2 = x[i]+h;
            d1 = (f1-f0)/h;
            d2 = (f0-f2)/h;
            N = max(abs(J[i]),abs(f0),abs(f1),abs(f2),abs(t0),abs(t1),abs(t2),1e-8);
            errest = min(max(abs(d1-J[i]),abs(d2-J[i]),abs(d1-d2))/N,h/N);
            if(errest>eps) { h/=16; }
            else break;
            }
    }
    return J;
}

numeric.uncmin = function uncmin(f,x0,tol,gradient,maxit,callback,options) {
    var grad = numeric.gradient;
    if(typeof options === "undefined") { options = {}; }
    if(typeof tol === "undefined") { tol = 1e-8; }
    if(typeof gradient === "undefined") { gradient = function(x) { return grad(f,x); }; }
    if(typeof maxit === "undefined") maxit = 1000;
    x0 = numeric.clone(x0);
    var n = x0.length;
    var f0 = f(x0),f1,df0;
    if(isNaN(f0)) throw new Error('uncmin: f(x0) is a NaN!');
    var max = Math.max, norm2 = numeric.norm2;
    tol = max(tol,numeric.epsilon);
    var step,g0,g1,H1 = options.Hinv || numeric.identity(n);
    var dot = numeric.dot, inv = numeric.inv, sub = numeric.sub, add = numeric.add, ten = numeric.tensor, div = numeric.div, mul = numeric.mul;
    var all = numeric.all, isfinite = numeric.isFinite, neg = numeric.neg;
    var it=0,i,s,x1,y,Hy,Hs,ys,i0,t,nstep,t1,t2;
    var msg = "";
    g0 = gradient(x0);
    while(it<maxit) {
        if(typeof callback === "function") { if(callback(it,x0,f0,g0,H1)) { msg = "Callback returned true"; break; } }
        if(!all(isfinite(g0))) { msg = "Gradient has Infinity or NaN"; break; }
        step = neg(dot(H1,g0));
        if(!all(isfinite(step))) { msg = "Search direction has Infinity or NaN"; break; }
        nstep = norm2(step);
        if(nstep < tol) { msg="Newton step smaller than tol"; break; }
        t = 1;
        df0 = dot(g0,step);
        // line search
        x1 = x0;
        while(it < maxit) {
            if(t*nstep < tol) { break; }
            s = mul(step,t);
            x1 = add(x0,s);
            f1 = f(x1);
            if(f1-f0 >= 0.1*t*df0 || isNaN(f1)) {
                t *= 0.5;
                ++it;
                continue;
            }
            break;
        }
        if(t*nstep < tol) { msg = "Line search step size smaller than tol"; break; }
        if(it === maxit) { msg = "maxit reached during line search"; break; }
        g1 = gradient(x1);
        y = sub(g1,g0);
        ys = dot(y,s);
        Hy = dot(H1,y);
        H1 = sub(add(H1,
                mul(
                        (ys+dot(y,Hy))/(ys*ys),
                        ten(s,s)    )),
                div(add(ten(Hy,s),ten(s,Hy)),ys));
        x0 = x1;
        f0 = f1;
        g0 = g1;
        ++it;
    }
    return {solution: x0, f: f0, gradient: g0, invHessian: H1, iterations:it, message: msg};
}

// 10. Ode solver (Dormand-Prince)
numeric.Dopri = function Dopri(x,y,f,ymid,iterations,msg,events) {
    this.x = x;
    this.y = y;
    this.f = f;
    this.ymid = ymid;
    this.iterations = iterations;
    this.events = events;
    this.message = msg;
}
numeric.Dopri.prototype._at = function _at(xi,j) {
    function sqr(x) { return x*x; }
    var sol = this;
    var xs = sol.x;
    var ys = sol.y;
    var k1 = sol.f;
    var ymid = sol.ymid;
    var n = xs.length;
    var x0,x1,xh,y0,y1,yh,xi;
    var floor = Math.floor,h;
    var c = 0.5;
    var add = numeric.add, mul = numeric.mul,sub = numeric.sub, p,q,w;
    x0 = xs[j];
    x1 = xs[j+1];
    y0 = ys[j];
    y1 = ys[j+1];
    h  = x1-x0;
    xh = x0+c*h;
    yh = ymid[j];
    p = sub(k1[j  ],mul(y0,1/(x0-xh)+2/(x0-x1)));
    q = sub(k1[j+1],mul(y1,1/(x1-xh)+2/(x1-x0)));
    w = [sqr(xi - x1) * (xi - xh) / sqr(x0 - x1) / (x0 - xh),
         sqr(xi - x0) * sqr(xi - x1) / sqr(x0 - xh) / sqr(x1 - xh),
         sqr(xi - x0) * (xi - xh) / sqr(x1 - x0) / (x1 - xh),
         (xi - x0) * sqr(xi - x1) * (xi - xh) / sqr(x0-x1) / (x0 - xh),
         (xi - x1) * sqr(xi - x0) * (xi - xh) / sqr(x0-x1) / (x1 - xh)];
    return add(add(add(add(mul(y0,w[0]),
                           mul(yh,w[1])),
                           mul(y1,w[2])),
                           mul( p,w[3])),
                           mul( q,w[4]));
}
numeric.Dopri.prototype.at = function at(x) {
    var i,j,k,floor = Math.floor;
    if(typeof x !== "number") {
        var n = x.length, ret = Array(n);
        for(i=n-1;i!==-1;--i) {
            ret[i] = this.at(x[i]);
        }
        return ret;
    }
    var x0 = this.x;
    i = 0; j = x0.length-1;
    while(j-i>1) {
        k = floor(0.5*(i+j));
        if(x0[k] <= x) i = k;
        else j = k;
    }
    return this._at(x,i);
}

numeric.dopri = function dopri(x0,x1,y0,f,tol,maxit,event) {
    if(typeof tol === "undefined") { tol = 1e-6; }
    if(typeof maxit === "undefined") { maxit = 1000; }
    var xs = [x0], ys = [y0], k1 = [f(x0,y0)], k2,k3,k4,k5,k6,k7, ymid = [];
    var A2 = 1/5;
    var A3 = [3/40,9/40];
    var A4 = [44/45,-56/15,32/9];
    var A5 = [19372/6561,-25360/2187,64448/6561,-212/729];
    var A6 = [9017/3168,-355/33,46732/5247,49/176,-5103/18656];
    var b = [35/384,0,500/1113,125/192,-2187/6784,11/84];
    var bm = [0.5*6025192743/30085553152,
              0,
              0.5*51252292925/65400821598,
              0.5*-2691868925/45128329728,
              0.5*187940372067/1594534317056,
              0.5*-1776094331/19743644256,
              0.5*11237099/235043384];
    var c = [1/5,3/10,4/5,8/9,1,1];
    var e = [-71/57600,0,71/16695,-71/1920,17253/339200,-22/525,1/40];
    var i = 0,er,j;
    var h = (x1-x0)/10;
    var it = 0;
    var add = numeric.add, mul = numeric.mul, y1,erinf;
    var max = Math.max, min = Math.min, abs = Math.abs, norminf = numeric.norminf,pow = Math.pow;
    var any = numeric.any, lt = numeric.lt, and = numeric.and, sub = numeric.sub;
    var e0, e1, ev;
    var ret = new numeric.Dopri(xs,ys,k1,ymid,-1,"");
    if(typeof event === "function") e0 = event(x0,y0);
    while(x0<x1 && it<maxit) {
        ++it;
        if(x0+h>x1) h = x1-x0;
        k2 = f(x0+c[0]*h,                add(y0,mul(   A2*h,k1[i])));
        k3 = f(x0+c[1]*h,            add(add(y0,mul(A3[0]*h,k1[i])),mul(A3[1]*h,k2)));
        k4 = f(x0+c[2]*h,        add(add(add(y0,mul(A4[0]*h,k1[i])),mul(A4[1]*h,k2)),mul(A4[2]*h,k3)));
        k5 = f(x0+c[3]*h,    add(add(add(add(y0,mul(A5[0]*h,k1[i])),mul(A5[1]*h,k2)),mul(A5[2]*h,k3)),mul(A5[3]*h,k4)));
        k6 = f(x0+c[4]*h,add(add(add(add(add(y0,mul(A6[0]*h,k1[i])),mul(A6[1]*h,k2)),mul(A6[2]*h,k3)),mul(A6[3]*h,k4)),mul(A6[4]*h,k5)));
        y1 = add(add(add(add(add(y0,mul(k1[i],h*b[0])),mul(k3,h*b[2])),mul(k4,h*b[3])),mul(k5,h*b[4])),mul(k6,h*b[5]));
        k7 = f(x0+h,y1);
        er = add(add(add(add(add(mul(k1[i],h*e[0]),mul(k3,h*e[2])),mul(k4,h*e[3])),mul(k5,h*e[4])),mul(k6,h*e[5])),mul(k7,h*e[6]));
        if(typeof er === "number") erinf = abs(er);
        else erinf = norminf(er);
        if(erinf > tol) { // reject
            h = 0.2*h*pow(tol/erinf,0.25);
            if(x0+h === x0) {
                ret.msg = "Step size became too small";
                break;
            }
            continue;
        }
        ymid[i] = add(add(add(add(add(add(y0,
                mul(k1[i],h*bm[0])),
                mul(k3   ,h*bm[2])),
                mul(k4   ,h*bm[3])),
                mul(k5   ,h*bm[4])),
                mul(k6   ,h*bm[5])),
                mul(k7   ,h*bm[6]));
        ++i;
        xs[i] = x0+h;
        ys[i] = y1;
        k1[i] = k7;
        if(typeof event === "function") {
            var yi,xl = x0,xr = x0+0.5*h,xi;
            e1 = event(xr,ymid[i-1]);
            ev = and(lt(e0,0),lt(0,e1));
            if(!any(ev)) { xl = xr; xr = x0+h; e0 = e1; e1 = event(xr,y1); ev = and(lt(e0,0),lt(0,e1)); }
            if(any(ev)) {
                var xc, yc, en,ei;
                var side=0, sl = 1.0, sr = 1.0;
                while(1) {
                    if(typeof e0 === "number") xi = (sr*e1*xl-sl*e0*xr)/(sr*e1-sl*e0);
                    else {
                        xi = xr;
                        for(j=e0.length-1;j!==-1;--j) {
                            if(e0[j]<0 && e1[j]>0) xi = min(xi,(sr*e1[j]*xl-sl*e0[j]*xr)/(sr*e1[j]-sl*e0[j]));
                        }
                    }
                    if(xi <= xl || xi >= xr) break;
                    yi = ret._at(xi, i-1);
                    ei = event(xi,yi);
                    en = and(lt(e0,0),lt(0,ei));
                    if(any(en)) {
                        xr = xi;
                        e1 = ei;
                        ev = en;
                        sr = 1.0;
                        if(side === -1) sl *= 0.5;
                        else sl = 1.0;
                        side = -1;
                    } else {
                        xl = xi;
                        e0 = ei;
                        sl = 1.0;
                        if(side === 1) sr *= 0.5;
                        else sr = 1.0;
                        side = 1;
                    }
                }
                y1 = ret._at(0.5*(x0+xi),i-1);
                ret.f[i] = f(xi,yi);
                ret.x[i] = xi;
                ret.y[i] = yi;
                ret.ymid[i-1] = y1;
                ret.events = ev;
                ret.iterations = it;
                return ret;
            }
        }
        x0 += h;
        y0 = y1;
        e0 = e1;
        h = min(0.8*h*pow(tol/erinf,0.25),4*h);
    }
    ret.iterations = it;
    return ret;
}

// 11. Ax = b
numeric.LU = function(A, fast) {
  fast = fast || false;

  var abs = Math.abs;
  var i, j, k, absAjk, Akk, Ak, Pk, Ai;
  var max;
  var n = A.length, n1 = n-1;
  var P = new Array(n);
  if(!fast) A = numeric.clone(A);

  for (k = 0; k < n; ++k) {
    Pk = k;
    Ak = A[k];
    max = abs(Ak[k]);
    for (j = k + 1; j < n; ++j) {
      absAjk = abs(A[j][k]);
      if (max < absAjk) {
        max = absAjk;
        Pk = j;
      }
    }
    P[k] = Pk;

    if (Pk != k) {
      A[k] = A[Pk];
      A[Pk] = Ak;
      Ak = A[k];
    }

    Akk = Ak[k];

    for (i = k + 1; i < n; ++i) {
      A[i][k] /= Akk;
    }

    for (i = k + 1; i < n; ++i) {
      Ai = A[i];
      for (j = k + 1; j < n1; ++j) {
        Ai[j] -= Ai[k] * Ak[j];
        ++j;
        Ai[j] -= Ai[k] * Ak[j];
      }
      if(j===n1) Ai[j] -= Ai[k] * Ak[j];
    }
  }

  return {
    LU: A,
    P:  P
  };
}

numeric.LUsolve = function LUsolve(LUP, b) {
  var i, j;
  var LU = LUP.LU;
  var n   = LU.length;
  var x = numeric.clone(b);
  var P   = LUP.P;
  var Pi, LUi, LUii, tmp;

  for (i=n-1;i!==-1;--i) x[i] = b[i];
  for (i = 0; i < n; ++i) {
    Pi = P[i];
    if (P[i] !== i) {
      tmp = x[i];
      x[i] = x[Pi];
      x[Pi] = tmp;
    }

    LUi = LU[i];
    for (j = 0; j < i; ++j) {
      x[i] -= x[j] * LUi[j];
    }
  }

  for (i = n - 1; i >= 0; --i) {
    LUi = LU[i];
    for (j = i + 1; j < n; ++j) {
      x[i] -= x[j] * LUi[j];
    }

    x[i] /= LUi[i];
  }

  return x;
}

numeric.solve = function solve(A,b,fast) { return numeric.LUsolve(numeric.LU(A,fast), b); }

// 12. Linear programming
numeric.echelonize = function echelonize(A) {
    var s = numeric.dim(A), m = s[0], n = s[1];
    var I = numeric.identity(m);
    var P = Array(m);
    var i,j,k,l,Ai,Ii,Z,a;
    var abs = Math.abs;
    var diveq = numeric.diveq;
    A = numeric.clone(A);
    for(i=0;i<m;++i) {
        k = 0;
        Ai = A[i];
        Ii = I[i];
        for(j=1;j<n;++j) if(abs(Ai[k])<abs(Ai[j])) k=j;
        P[i] = k;
        diveq(Ii,Ai[k]);
        diveq(Ai,Ai[k]);
        for(j=0;j<m;++j) if(j!==i) {
            Z = A[j]; a = Z[k];
            for(l=n-1;l!==-1;--l) Z[l] -= Ai[l]*a;
            Z = I[j];
            for(l=m-1;l!==-1;--l) Z[l] -= Ii[l]*a;
        }
    }
    return {I:I, A:A, P:P};
}

numeric.__solveLP = function __solveLP(c,A,b,tol,maxit,x,flag) {
    var sum = numeric.sum, log = numeric.log, mul = numeric.mul, sub = numeric.sub, dot = numeric.dot, div = numeric.div, add = numeric.add;
    var m = c.length, n = b.length,y;
    var unbounded = false, cb,i0=0;
    var alpha = 1.0;
    var f0,df0,AT = numeric.transpose(A), svd = numeric.svd,transpose = numeric.transpose,leq = numeric.leq, sqrt = Math.sqrt, abs = Math.abs;
    var muleq = numeric.muleq;
    var norm = numeric.norminf, any = numeric.any,min = Math.min;
    var all = numeric.all, gt = numeric.gt;
    var p = Array(m), A0 = Array(n),e=numeric.rep([n],1), H;
    var solve = numeric.solve, z = sub(b,dot(A,x)),count;
    var dotcc = dot(c,c);
    var g;
    for(count=i0;count<maxit;++count) {
        var i,j,d;
        for(i=n-1;i!==-1;--i) A0[i] = div(A[i],z[i]);
        var A1 = transpose(A0);
        for(i=m-1;i!==-1;--i) p[i] = (/*x[i]+*/sum(A1[i]));
        alpha = 0.25*abs(dotcc/dot(c,p));
        var a1 = 100*sqrt(dotcc/dot(p,p));
        if(!isFinite(alpha) || alpha>a1) alpha = a1;
        g = add(c,mul(alpha,p));
        H = dot(A1,A0);
        for(i=m-1;i!==-1;--i) H[i][i] += 1;
        d = solve(H,div(g,alpha),true);
        var t0 = div(z,dot(A,d));
        var t = 1.0;
        for(i=n-1;i!==-1;--i) if(t0[i]<0) t = min(t,-0.999*t0[i]);
        y = sub(x,mul(d,t));
        z = sub(b,dot(A,y));
        if(!all(gt(z,0))) return { solution: x, message: "", iterations: count };
        x = y;
        if(alpha<tol) return { solution: y, message: "", iterations: count };
        if(flag) {
            var s = dot(c,g), Ag = dot(A,g);
            unbounded = true;
            for(i=n-1;i!==-1;--i) if(s*Ag[i]<0) { unbounded = false; break; }
        } else {
            if(x[m-1]>=0) unbounded = false;
            else unbounded = true;
        }
        if(unbounded) return { solution: y, message: "Unbounded", iterations: count };
    }
    return { solution: x, message: "maximum iteration count exceeded", iterations:count };
}

numeric._solveLP = function _solveLP(c,A,b,tol,maxit) {
    var m = c.length, n = b.length,y;
    var sum = numeric.sum, log = numeric.log, mul = numeric.mul, sub = numeric.sub, dot = numeric.dot, div = numeric.div, add = numeric.add;
    var c0 = numeric.rep([m],0).concat([1]);
    var J = numeric.rep([n,1],-1);
    var A0 = numeric.blockMatrix([[A                   ,   J  ]]);
    var b0 = b;
    var y = numeric.rep([m],0).concat(Math.max(0,numeric.sup(numeric.neg(b)))+1);
    var x0 = numeric.__solveLP(c0,A0,b0,tol,maxit,y,false);
    var x = numeric.clone(x0.solution);
    x.length = m;
    var foo = numeric.inf(sub(b,dot(A,x)));
    if(foo<0) { return { solution: NaN, message: "Infeasible", iterations: x0.iterations }; }
    var ret = numeric.__solveLP(c, A, b, tol, maxit-x0.iterations, x, true);
    ret.iterations += x0.iterations;
    return ret;
};

numeric.solveLP = function solveLP(c,A,b,Aeq,beq,tol,maxit) {
    if(typeof maxit === "undefined") maxit = 1000;
    if(typeof tol === "undefined") tol = numeric.epsilon;
    if(typeof Aeq === "undefined") return numeric._solveLP(c,A,b,tol,maxit);
    var m = Aeq.length, n = Aeq[0].length, o = A.length;
    var B = numeric.echelonize(Aeq);
    var flags = numeric.rep([n],0);
    var P = B.P;
    var Q = [];
    var i;
    for(i=P.length-1;i!==-1;--i) flags[P[i]] = 1;
    for(i=n-1;i!==-1;--i) if(flags[i]===0) Q.push(i);
    var g = numeric.getRange;
    var I = numeric.linspace(0,m-1), J = numeric.linspace(0,o-1);
    var Aeq2 = g(Aeq,I,Q), A1 = g(A,J,P), A2 = g(A,J,Q), dot = numeric.dot, sub = numeric.sub;
    var A3 = dot(A1,B.I);
    var A4 = sub(A2,dot(A3,Aeq2)), b4 = sub(b,dot(A3,beq));
    var c1 = Array(P.length), c2 = Array(Q.length);
    for(i=P.length-1;i!==-1;--i) c1[i] = c[P[i]];
    for(i=Q.length-1;i!==-1;--i) c2[i] = c[Q[i]];
    var c4 = sub(c2,dot(c1,dot(B.I,Aeq2)));
    var S = numeric._solveLP(c4,A4,b4,tol,maxit);
    var x2 = S.solution;
    if(x2!==x2) return S;
    var x1 = dot(B.I,sub(beq,dot(Aeq2,x2)));
    var x = Array(c.length);
    for(i=P.length-1;i!==-1;--i) x[P[i]] = x1[i];
    for(i=Q.length-1;i!==-1;--i) x[Q[i]] = x2[i];
    return { solution: x, message:S.message, iterations: S.iterations };
}

numeric.MPStoLP = function MPStoLP(MPS) {
    if(MPS instanceof String) { MPS.split('\n'); }
    var state = 0;
    var states = ['Initial state','NAME','ROWS','COLUMNS','RHS','BOUNDS','ENDATA'];
    var n = MPS.length;
    var i,j,z,N=0,rows = {}, sign = [], rl = 0, vars = {}, nv = 0;
    var name;
    var c = [], A = [], b = [];
    function err(e) { throw new Error('MPStoLP: '+e+'\nLine '+i+': '+MPS[i]+'\nCurrent state: '+states[state]+'\n'); }
    for(i=0;i<n;++i) {
        z = MPS[i];
        var w0 = z.match(/\S*/g);
        var w = [];
        for(j=0;j<w0.length;++j) if(w0[j]!=="") w.push(w0[j]);
        if(w.length === 0) continue;
        for(j=0;j<states.length;++j) if(z.substr(0,states[j].length) === states[j]) break;
        if(j<states.length) {
            state = j;
            if(j===1) { name = w[1]; }
            if(j===6) return { name:name, c:c, A:numeric.transpose(A), b:b, rows:rows, vars:vars };
            continue;
        }
        switch(state) {
        case 0: case 1: err('Unexpected line');
        case 2: 
            switch(w[0]) {
            case 'N': if(N===0) N = w[1]; else err('Two or more N rows'); break;
            case 'L': rows[w[1]] = rl; sign[rl] = 1; b[rl] = 0; ++rl; break;
            case 'G': rows[w[1]] = rl; sign[rl] = -1;b[rl] = 0; ++rl; break;
            case 'E': rows[w[1]] = rl; sign[rl] = 0;b[rl] = 0; ++rl; break;
            default: err('Parse error '+numeric.prettyPrint(w));
            }
            break;
        case 3:
            if(!vars.hasOwnProperty(w[0])) { vars[w[0]] = nv; c[nv] = 0; A[nv] = numeric.rep([rl],0); ++nv; }
            var p = vars[w[0]];
            for(j=1;j<w.length;j+=2) {
                if(w[j] === N) { c[p] = parseFloat(w[j+1]); continue; }
                var q = rows[w[j]];
                A[p][q] = (sign[q]<0?-1:1)*parseFloat(w[j+1]);
            }
            break;
        case 4:
            for(j=1;j<w.length;j+=2) b[rows[w[j]]] = (sign[rows[w[j]]]<0?-1:1)*parseFloat(w[j+1]);
            break;
        case 5: /*FIXME*/ break;
        case 6: err('Internal error');
        }
    }
    err('Reached end of file without ENDATA');
}
// seedrandom.js version 2.0.
// Author: David Bau 4/2/2011
//
// Defines a method Math.seedrandom() that, when called, substitutes
// an explicitly seeded RC4-based algorithm for Math.random().  Also
// supports automatic seeding from local or network sources of entropy.
//
// Usage:
//
//   <script src=http://davidbau.com/encode/seedrandom-min.js></script>
//
//   Math.seedrandom('yipee'); Sets Math.random to a function that is
//                             initialized using the given explicit seed.
//
//   Math.seedrandom();        Sets Math.random to a function that is
//                             seeded using the current time, dom state,
//                             and other accumulated local entropy.
//                             The generated seed string is returned.
//
//   Math.seedrandom('yowza', true);
//                             Seeds using the given explicit seed mixed
//                             together with accumulated entropy.
//
//   <script src="http://bit.ly/srandom-512"></script>
//                             Seeds using physical random bits downloaded
//                             from random.org.
//
//   <script src="https://jsonlib.appspot.com/urandom?callback=Math.seedrandom">
//   </script>                 Seeds using urandom bits from call.jsonlib.com,
//                             which is faster than random.org.
//
// Examples:
//
//   Math.seedrandom("hello");            // Use "hello" as the seed.
//   document.write(Math.random());       // Always 0.5463663768140734
//   document.write(Math.random());       // Always 0.43973793770592234
//   var rng1 = Math.random;              // Remember the current prng.
//
//   var autoseed = Math.seedrandom();    // New prng with an automatic seed.
//   document.write(Math.random());       // Pretty much unpredictable.
//
//   Math.random = rng1;                  // Continue "hello" prng sequence.
//   document.write(Math.random());       // Always 0.554769432473455
//
//   Math.seedrandom(autoseed);           // Restart at the previous seed.
//   document.write(Math.random());       // Repeat the 'unpredictable' value.
//
// Notes:
//
// Each time seedrandom('arg') is called, entropy from the passed seed
// is accumulated in a pool to help generate future seeds for the
// zero-argument form of Math.seedrandom, so entropy can be injected over
// time by calling seedrandom with explicit data repeatedly.
//
// On speed - This javascript implementation of Math.random() is about
// 3-10x slower than the built-in Math.random() because it is not native
// code, but this is typically fast enough anyway.  Seeding is more expensive,
// especially if you use auto-seeding.  Some details (timings on Chrome 4):
//
// Our Math.random()            - avg less than 0.002 milliseconds per call
// seedrandom('explicit')       - avg less than 0.5 milliseconds per call
// seedrandom('explicit', true) - avg less than 2 milliseconds per call
// seedrandom()                 - avg about 38 milliseconds per call
//
// LICENSE (BSD):
//
// Copyright 2010 David Bau, all rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
// 
//   1. Redistributions of source code must retain the above copyright
//      notice, this list of conditions and the following disclaimer.
//
//   2. Redistributions in binary form must reproduce the above copyright
//      notice, this list of conditions and the following disclaimer in the
//      documentation and/or other materials provided with the distribution.
// 
//   3. Neither the name of this module nor the names of its contributors may
//      be used to endorse or promote products derived from this software
//      without specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
/**
 * All code is in an anonymous closure to keep the global namespace clean.
 *
 * @param {number=} overflow 
 * @param {number=} startdenom
 */

// Patched by Seb so that seedrandom.js does not pollute the Math object.
// My tests suggest that doing Math.trouble = 1 makes Math lookups about 5%
// slower.
numeric.seedrandom = { pow:Math.pow, random:Math.random };

(function (pool, math, width, chunks, significance, overflow, startdenom) {


//
// seedrandom()
// This is the seedrandom function described above.
//
math['seedrandom'] = function seedrandom(seed, use_entropy) {
  var key = [];
  var arc4;

  // Flatten the seed string or build one from local entropy if needed.
  seed = mixkey(flatten(
    use_entropy ? [seed, pool] :
    arguments.length ? seed :
    [new Date().getTime(), pool, window], 3), key);

  // Use the seed to initialize an ARC4 generator.
  arc4 = new ARC4(key);

  // Mix the randomness into accumulated entropy.
  mixkey(arc4.S, pool);

  // Override Math.random

  // This function returns a random double in [0, 1) that contains
  // randomness in every bit of the mantissa of the IEEE 754 value.

  math['random'] = function random() {  // Closure to return a random double:
    var n = arc4.g(chunks);             // Start with a numerator n < 2 ^ 48
    var d = startdenom;                 //   and denominator d = 2 ^ 48.
    var x = 0;                          //   and no 'extra last byte'.
    while (n < significance) {          // Fill up all significant digits by
      n = (n + x) * width;              //   shifting numerator and
      d *= width;                       //   denominator and generating a
      x = arc4.g(1);                    //   new least-significant-byte.
    }
    while (n >= overflow) {             // To avoid rounding up, before adding
      n /= 2;                           //   last byte, shift everything
      d /= 2;                           //   right using integer math until
      x >>>= 1;                         //   we have exactly the desired bits.
    }
    return (n + x) / d;                 // Form the number within [0, 1).
  };

  // Return the seed that was used
  return seed;
};

//
// ARC4
//
// An ARC4 implementation.  The constructor takes a key in the form of
// an array of at most (width) integers that should be 0 <= x < (width).
//
// The g(count) method returns a pseudorandom integer that concatenates
// the next (count) outputs from ARC4.  Its return value is a number x
// that is in the range 0 <= x < (width ^ count).
//
/** @constructor */
function ARC4(key) {
  var t, u, me = this, keylen = key.length;
  var i = 0, j = me.i = me.j = me.m = 0;
  me.S = [];
  me.c = [];

  // The empty key [] is treated as [0].
  if (!keylen) { key = [keylen++]; }

  // Set up S using the standard key scheduling algorithm.
  while (i < width) { me.S[i] = i++; }
  for (i = 0; i < width; i++) {
    t = me.S[i];
    j = lowbits(j + t + key[i % keylen]);
    u = me.S[j];
    me.S[i] = u;
    me.S[j] = t;
  }

  // The "g" method returns the next (count) outputs as one number.
  me.g = function getnext(count) {
    var s = me.S;
    var i = lowbits(me.i + 1); var t = s[i];
    var j = lowbits(me.j + t); var u = s[j];
    s[i] = u;
    s[j] = t;
    var r = s[lowbits(t + u)];
    while (--count) {
      i = lowbits(i + 1); t = s[i];
      j = lowbits(j + t); u = s[j];
      s[i] = u;
      s[j] = t;
      r = r * width + s[lowbits(t + u)];
    }
    me.i = i;
    me.j = j;
    return r;
  };
  // For robust unpredictability discard an initial batch of values.
  // See http://www.rsa.com/rsalabs/node.asp?id=2009
  me.g(width);
}

//
// flatten()
// Converts an object tree to nested arrays of strings.
//
/** @param {Object=} result 
  * @param {string=} prop
  * @param {string=} typ */
function flatten(obj, depth, result, prop, typ) {
  result = [];
  typ = typeof(obj);
  if (depth && typ == 'object') {
    for (prop in obj) {
      if (prop.indexOf('S') < 5) {    // Avoid FF3 bug (local/sessionStorage)
        try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}
      }
    }
  }
  return (result.length ? result : obj + (typ != 'string' ? '\0' : ''));
}

//
// mixkey()
// Mixes a string seed into a key that is an array of integers, and
// returns a shortened string seed that is equivalent to the result key.
//
/** @param {number=} smear 
  * @param {number=} j */
function mixkey(seed, key, smear, j) {
  seed += '';                         // Ensure the seed is a string
  smear = 0;
  for (j = 0; j < seed.length; j++) {
    key[lowbits(j)] =
      lowbits((smear ^= key[lowbits(j)] * 19) + seed.charCodeAt(j));
  }
  seed = '';
  for (j in key) { seed += String.fromCharCode(key[j]); }
  return seed;
}

//
// lowbits()
// A quick "n mod width" for width a power of 2.
//
function lowbits(n) { return n & (width - 1); }

//
// The following constants are related to IEEE 754 limits.
//
startdenom = math.pow(width, chunks);
significance = math.pow(2, significance);
overflow = significance * 2;

//
// When seedrandom.js is loaded, we immediately mix a few bits
// from the built-in RNG into the entropy pool.  Because we do
// not want to intefere with determinstic PRNG state later,
// seedrandom will not call math.random on its own again after
// initialization.
//
mixkey(math.random(), pool);

// End anonymous scope, and pass initial values.
}(
  [],   // pool: entropy pool starts empty
  numeric.seedrandom, // math: package containing random, pow, and seedrandom
  256,  // width: each RC4 output is 0 <= x < 256
  6,    // chunks: at least six RC4 outputs for each double
  52    // significance: there are 52 significant digits in a double
  ));
/* This file is a slightly modified version of quadprog.js from Alberto Santini.
 * It has been slightly modified by Sébastien Loisel to make sure that it handles
 * 0-based Arrays instead of 1-based Arrays.
 * License is in resources/LICENSE.quadprog */
(function(exports) {

function base0to1(A) {
    if(typeof A !== "object") { return A; }
    var ret = [], i,n=A.length;
    for(i=0;i<n;i++) ret[i+1] = base0to1(A[i]);
    return ret;
}
function base1to0(A) {
    if(typeof A !== "object") { return A; }
    var ret = [], i,n=A.length;
    for(i=1;i<n;i++) ret[i-1] = base1to0(A[i]);
    return ret;
}

function dpori(a, lda, n) {
    var i, j, k, kp1, t;

    for (k = 1; k <= n; k = k + 1) {
        a[k][k] = 1 / a[k][k];
        t = -a[k][k];
        //~ dscal(k - 1, t, a[1][k], 1);
        for (i = 1; i < k; i = i + 1) {
            a[i][k] = t * a[i][k];
        }

        kp1 = k + 1;
        if (n < kp1) {
            break;
        }
        for (j = kp1; j <= n; j = j + 1) {
            t = a[k][j];
            a[k][j] = 0;
            //~ daxpy(k, t, a[1][k], 1, a[1][j], 1);
            for (i = 1; i <= k; i = i + 1) {
                a[i][j] = a[i][j] + (t * a[i][k]);
            }
        }
    }

}

function dposl(a, lda, n, b) {
    var i, k, kb, t;

    for (k = 1; k <= n; k = k + 1) {
        //~ t = ddot(k - 1, a[1][k], 1, b[1], 1);
        t = 0;
        for (i = 1; i < k; i = i + 1) {
            t = t + (a[i][k] * b[i]);
        }

        b[k] = (b[k] - t) / a[k][k];
    }

    for (kb = 1; kb <= n; kb = kb + 1) {
        k = n + 1 - kb;
        b[k] = b[k] / a[k][k];
        t = -b[k];
        //~ daxpy(k - 1, t, a[1][k], 1, b[1], 1);
        for (i = 1; i < k; i = i + 1) {
            b[i] = b[i] + (t * a[i][k]);
        }
    }
}

function dpofa(a, lda, n, info) {
    var i, j, jm1, k, t, s;

    for (j = 1; j <= n; j = j + 1) {
        info[1] = j;
        s = 0;
        jm1 = j - 1;
        if (jm1 < 1) {
            s = a[j][j] - s;
            if (s <= 0) {
                break;
            }
            a[j][j] = Math.sqrt(s);
        } else {
            for (k = 1; k <= jm1; k = k + 1) {
                //~ t = a[k][j] - ddot(k - 1, a[1][k], 1, a[1][j], 1);
                t = a[k][j];
                for (i = 1; i < k; i = i + 1) {
                    t = t - (a[i][j] * a[i][k]);
                }
                t = t / a[k][k];
                a[k][j] = t;
                s = s + t * t;
            }
            s = a[j][j] - s;
            if (s <= 0) {
                break;
            }
            a[j][j] = Math.sqrt(s);
        }
        info[1] = 0;
    }
}

function qpgen2(dmat, dvec, fddmat, n, sol, crval, amat,
    bvec, fdamat, q, meq, iact, nact, iter, work, ierr) {

    var i, j, l, l1, info, it1, iwzv, iwrv, iwrm, iwsv, iwuv, nvl, r, iwnbv,
        temp, sum, t1, tt, gc, gs, nu,
        t1inf, t2min,
        vsmall, tmpa, tmpb,
        go;

    r = Math.min(n, q);
    l = 2 * n + (r * (r + 5)) / 2 + 2 * q + 1;

    vsmall = 1.0e-60;
    do {
        vsmall = vsmall + vsmall;
        tmpa = 1 + 0.1 * vsmall;
        tmpb = 1 + 0.2 * vsmall;
    } while (tmpa <= 1 || tmpb <= 1);

    for (i = 1; i <= n; i = i + 1) {
        work[i] = dvec[i];
    }
    for (i = n + 1; i <= l; i = i + 1) {
        work[i] = 0;
    }
    for (i = 1; i <= q; i = i + 1) {
        iact[i] = 0;
    }

    info = [];

    if (ierr[1] === 0) {
        dpofa(dmat, fddmat, n, info);
        if (info[1] !== 0) {
            ierr[1] = 2;
            return;
        }
        dposl(dmat, fddmat, n, dvec);
        dpori(dmat, fddmat, n);
    } else {
        for (j = 1; j <= n; j = j + 1) {
            sol[j] = 0;
            for (i = 1; i <= j; i = i + 1) {
                sol[j] = sol[j] + dmat[i][j] * dvec[i];
            }
        }
        for (j = 1; j <= n; j = j + 1) {
            dvec[j] = 0;
            for (i = j; i <= n; i = i + 1) {
                dvec[j] = dvec[j] + dmat[j][i] * sol[i];
            }
        }
    }

    crval[1] = 0;
    for (j = 1; j <= n; j = j + 1) {
        sol[j] = dvec[j];
        crval[1] = crval[1] + work[j] * sol[j];
        work[j] = 0;
        for (i = j + 1; i <= n; i = i + 1) {
            dmat[i][j] = 0;
        }
    }
    crval[1] = -crval[1] / 2;
    ierr[1] = 0;

    iwzv = n;
    iwrv = iwzv + n;
    iwuv = iwrv + r;
    iwrm = iwuv + r + 1;
    iwsv = iwrm + (r * (r + 1)) / 2;
    iwnbv = iwsv + q;

    for (i = 1; i <= q; i = i + 1) {
        sum = 0;
        for (j = 1; j <= n; j = j + 1) {
            sum = sum + amat[j][i] * amat[j][i];
        }
        work[iwnbv + i] = Math.sqrt(sum);
    }
    nact = 0;
    iter[1] = 0;
    iter[2] = 0;

    function fn_goto_50() {
        iter[1] = iter[1] + 1;

        l = iwsv;
        for (i = 1; i <= q; i = i + 1) {
            l = l + 1;
            sum = -bvec[i];
            for (j = 1; j <= n; j = j + 1) {
                sum = sum + amat[j][i] * sol[j];
            }
            if (Math.abs(sum) < vsmall) {
                sum = 0;
            }
            if (i > meq) {
                work[l] = sum;
            } else {
                work[l] = -Math.abs(sum);
                if (sum > 0) {
                    for (j = 1; j <= n; j = j + 1) {
                        amat[j][i] = -amat[j][i];
                    }
                    bvec[i] = -bvec[i];
                }
            }
        }

        for (i = 1; i <= nact; i = i + 1) {
            work[iwsv + iact[i]] = 0;
        }

        nvl = 0;
        temp = 0;
        for (i = 1; i <= q; i = i + 1) {
            if (work[iwsv + i] < temp * work[iwnbv + i]) {
                nvl = i;
                temp = work[iwsv + i] / work[iwnbv + i];
            }
        }
        if (nvl === 0) {
            return 999;
        }

        return 0;
    }

    function fn_goto_55() {
        for (i = 1; i <= n; i = i + 1) {
            sum = 0;
            for (j = 1; j <= n; j = j + 1) {
                sum = sum + dmat[j][i] * amat[j][nvl];
            }
            work[i] = sum;
        }

        l1 = iwzv;
        for (i = 1; i <= n; i = i + 1) {
            work[l1 + i] = 0;
        }
        for (j = nact + 1; j <= n; j = j + 1) {
            for (i = 1; i <= n; i = i + 1) {
                work[l1 + i] = work[l1 + i] + dmat[i][j] * work[j];
            }
        }

        t1inf = true;
        for (i = nact; i >= 1; i = i - 1) {
            sum = work[i];
            l = iwrm + (i * (i + 3)) / 2;
            l1 = l - i;
            for (j = i + 1; j <= nact; j = j + 1) {
                sum = sum - work[l] * work[iwrv + j];
                l = l + j;
            }
            sum = sum / work[l1];
            work[iwrv + i] = sum;
            if (iact[i] < meq) {
                // continue;
                break;
            }
            if (sum < 0) {
                // continue;
                break;
            }
            t1inf = false;
            it1 = i;
        }

        if (!t1inf) {
            t1 = work[iwuv + it1] / work[iwrv + it1];
            for (i = 1; i <= nact; i = i + 1) {
                if (iact[i] < meq) {
                    // continue;
                    break;
                }
                if (work[iwrv + i] < 0) {
                    // continue;
                    break;
                }
                temp = work[iwuv + i] / work[iwrv + i];
                if (temp < t1) {
                    t1 = temp;
                    it1 = i;
                }
            }
        }

        sum = 0;
        for (i = iwzv + 1; i <= iwzv + n; i = i + 1) {
            sum = sum + work[i] * work[i];
        }
        if (Math.abs(sum) <= vsmall) {
            if (t1inf) {
                ierr[1] = 1;
                // GOTO 999
                return 999;
            } else {
                for (i = 1; i <= nact; i = i + 1) {
                    work[iwuv + i] = work[iwuv + i] - t1 * work[iwrv + i];
                }
                work[iwuv + nact + 1] = work[iwuv + nact + 1] + t1;
                // GOTO 700
                return 700;
            }
        } else {
            sum = 0;
            for (i = 1; i <= n; i = i + 1) {
                sum = sum + work[iwzv + i] * amat[i][nvl];
            }
            tt = -work[iwsv + nvl] / sum;
            t2min = true;
            if (!t1inf) {
                if (t1 < tt) {
                    tt = t1;
                    t2min = false;
                }
            }

            for (i = 1; i <= n; i = i + 1) {
                sol[i] = sol[i] + tt * work[iwzv + i];
                if (Math.abs(sol[i]) < vsmall) {
                    sol[i] = 0;
                }
            }

            crval[1] = crval[1] + tt * sum * (tt / 2 + work[iwuv + nact + 1]);
            for (i = 1; i <= nact; i = i + 1) {
                work[iwuv + i] = work[iwuv + i] - tt * work[iwrv + i];
            }
            work[iwuv + nact + 1] = work[iwuv + nact + 1] + tt;

            if (t2min) {
                nact = nact + 1;
                iact[nact] = nvl;

                l = iwrm + ((nact - 1) * nact) / 2 + 1;
                for (i = 1; i <= nact - 1; i = i + 1) {
                    work[l] = work[i];
                    l = l + 1;
                }

                if (nact === n) {
                    work[l] = work[n];
                } else {
                    for (i = n; i >= nact + 1; i = i - 1) {
                        if (work[i] === 0) {
                            // continue;
                            break;
                        }
                        gc = Math.max(Math.abs(work[i - 1]), Math.abs(work[i]));
                        gs = Math.min(Math.abs(work[i - 1]), Math.abs(work[i]));
                        if (work[i - 1] >= 0) {
                            temp = Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));
                        } else {
                            temp = -Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));
                        }
                        gc = work[i - 1] / temp;
                        gs = work[i] / temp;

                        if (gc === 1) {
                            // continue;
                            break;
                        }
                        if (gc === 0) {
                            work[i - 1] = gs * temp;
                            for (j = 1; j <= n; j = j + 1) {
                                temp = dmat[j][i - 1];
                                dmat[j][i - 1] = dmat[j][i];
                                dmat[j][i] = temp;
                            }
                        } else {
                            work[i - 1] = temp;
                            nu = gs / (1 + gc);
                            for (j = 1; j <= n; j = j + 1) {
                                temp = gc * dmat[j][i - 1] + gs * dmat[j][i];
                                dmat[j][i] = nu * (dmat[j][i - 1] + temp) - dmat[j][i];
                                dmat[j][i - 1] = temp;

                            }
                        }
                    }
                    work[l] = work[nact];
                }
            } else {
                sum = -bvec[nvl];
                for (j = 1; j <= n; j = j + 1) {
                    sum = sum + sol[j] * amat[j][nvl];
                }
                if (nvl > meq) {
                    work[iwsv + nvl] = sum;
                } else {
                    work[iwsv + nvl] = -Math.abs(sum);
                    if (sum > 0) {
                        for (j = 1; j <= n; j = j + 1) {
                            amat[j][nvl] = -amat[j][nvl];
                        }
                        bvec[nvl] = -bvec[nvl];
                    }
                }
                // GOTO 700
                return 700;
            }
        }

        return 0;
    }

    function fn_goto_797() {
        l = iwrm + (it1 * (it1 + 1)) / 2 + 1;
        l1 = l + it1;
        if (work[l1] === 0) {
            // GOTO 798
            return 798;
        }
        gc = Math.max(Math.abs(work[l1 - 1]), Math.abs(work[l1]));
        gs = Math.min(Math.abs(work[l1 - 1]), Math.abs(work[l1]));
        if (work[l1 - 1] >= 0) {
            temp = Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));
        } else {
            temp = -Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));
        }
        gc = work[l1 - 1] / temp;
        gs = work[l1] / temp;

        if (gc === 1) {
            // GOTO 798
            return 798;
        }
        if (gc === 0) {
            for (i = it1 + 1; i <= nact; i = i + 1) {
                temp = work[l1 - 1];
                work[l1 - 1] = work[l1];
                work[l1] = temp;
                l1 = l1 + i;
            }
            for (i = 1; i <= n; i = i + 1) {
                temp = dmat[i][it1];
                dmat[i][it1] = dmat[i][it1 + 1];
                dmat[i][it1 + 1] = temp;
            }
        } else {
            nu = gs / (1 + gc);
            for (i = it1 + 1; i <= nact; i = i + 1) {
                temp = gc * work[l1 - 1] + gs * work[l1];
                work[l1] = nu * (work[l1 - 1] + temp) - work[l1];
                work[l1 - 1] = temp;
                l1 = l1 + i;
            }
            for (i = 1; i <= n; i = i + 1) {
                temp = gc * dmat[i][it1] + gs * dmat[i][it1 + 1];
                dmat[i][it1 + 1] = nu * (dmat[i][it1] + temp) - dmat[i][it1 + 1];
                dmat[i][it1] = temp;
            }
        }

        return 0;
    }

    function fn_goto_798() {
        l1 = l - it1;
        for (i = 1; i <= it1; i = i + 1) {
            work[l1] = work[l];
            l = l + 1;
            l1 = l1 + 1;
        }

        work[iwuv + it1] = work[iwuv + it1 + 1];
        iact[it1] = iact[it1 + 1];
        it1 = it1 + 1;
        if (it1 < nact) {
            // GOTO 797
            return 797;
        }

        return 0;
    }

    function fn_goto_799() {
        work[iwuv + nact] = work[iwuv + nact + 1];
        work[iwuv + nact + 1] = 0;
        iact[nact] = 0;
        nact = nact - 1;
        iter[2] = iter[2] + 1;

        return 0;
    }

    go = 0;
    while (true) {
        go = fn_goto_50();
        if (go === 999) {
            return;
        }
        while (true) {
            go = fn_goto_55();
            if (go === 0) {
                break;
            }
            if (go === 999) {
                return;
            }
            if (go === 700) {
                if (it1 === nact) {
                    fn_goto_799();
                } else {
                    while (true) {
                        fn_goto_797();
                        go = fn_goto_798();
                        if (go !== 797) {
                            break;
                        }
                    }
                    fn_goto_799();
                }
            }
        }
    }

}

function solveQP(Dmat, dvec, Amat, bvec, meq, factorized) {
    Dmat = base0to1(Dmat);
    dvec = base0to1(dvec);
    Amat = base0to1(Amat);
    var i, n, q,
        nact, r,
        crval = [], iact = [], sol = [], work = [], iter = [],
        message;

    meq = meq || 0;
    factorized = factorized ? base0to1(factorized) : [undefined, 0];
    bvec = bvec ? base0to1(bvec) : [];

    // In Fortran the array index starts from 1
    n = Dmat.length - 1;
    q = Amat[1].length - 1;

    if (!bvec) {
        for (i = 1; i <= q; i = i + 1) {
            bvec[i] = 0;
        }
    }
    for (i = 1; i <= q; i = i + 1) {
        iact[i] = 0;
    }
    nact = 0;
    r = Math.min(n, q);
    for (i = 1; i <= n; i = i + 1) {
        sol[i] = 0;
    }
    crval[1] = 0;
    for (i = 1; i <= (2 * n + (r * (r + 5)) / 2 + 2 * q + 1); i = i + 1) {
        work[i] = 0;
    }
    for (i = 1; i <= 2; i = i + 1) {
        iter[i] = 0;
    }

    qpgen2(Dmat, dvec, n, n, sol, crval, Amat,
        bvec, n, q, meq, iact, nact, iter, work, factorized);

    message = "";
    if (factorized[1] === 1) {
        message = "constraints are inconsistent, no solution!";
    }
    if (factorized[1] === 2) {
        message = "matrix D in quadratic function is not positive definite!";
    }

    return {
        solution: base1to0(sol),
        value: base1to0(crval),
        unconstrained_solution: base1to0(dvec),
        iterations: base1to0(iter),
        iact: base1to0(iact),
        message: message
    };
}
exports.solveQP = solveQP;
}(numeric));
/*
Shanti Rao sent me this routine by private email. I had to modify it
slightly to work on Arrays instead of using a Matrix object.
It is apparently translated from http://stitchpanorama.sourceforge.net/Python/svd.py
*/

numeric.svd= function svd(A) {
    var temp;
//Compute the thin SVD from G. H. Golub and C. Reinsch, Numer. Math. 14, 403-420 (1970)
	var prec= numeric.epsilon; //Math.pow(2,-52) // assumes double prec
	var tolerance= 1.e-64/prec;
	var itmax= 50;
	var c=0;
	var i=0;
	var j=0;
	var k=0;
	var l=0;
	
	var u= numeric.clone(A);
	var m= u.length;
	
	var n= u[0].length;
	
	if (m < n) throw "Need more rows than columns"
	
	var e = new Array(n);
	var q = new Array(n);
	for (i=0; i<n; i++) e[i] = q[i] = 0.0;
	var v = numeric.rep([n,n],0);
//	v.zero();
	
 	function pythag(a,b)
 	{
		a = Math.abs(a)
		b = Math.abs(b)
		if (a > b)
			return a*Math.sqrt(1.0+(b*b/a/a))
		else if (b == 0.0) 
			return a
		return b*Math.sqrt(1.0+(a*a/b/b))
	}

	//Householder's reduction to bidiagonal form

	var f= 0.0;
	var g= 0.0;
	var h= 0.0;
	var x= 0.0;
	var y= 0.0;
	var z= 0.0;
	var s= 0.0;
	
	for (i=0; i < n; i++)
	{	
		e[i]= g;
		s= 0.0;
		l= i+1;
		for (j=i; j < m; j++) 
			s += (u[j][i]*u[j][i]);
		if (s <= tolerance)
			g= 0.0;
		else
		{	
			f= u[i][i];
			g= Math.sqrt(s);
			if (f >= 0.0) g= -g;
			h= f*g-s
			u[i][i]=f-g;
			for (j=l; j < n; j++)
			{
				s= 0.0
				for (k=i; k < m; k++) 
					s += u[k][i]*u[k][j]
				f= s/h
				for (k=i; k < m; k++) 
					u[k][j]+=f*u[k][i]
			}
		}
		q[i]= g
		s= 0.0
		for (j=l; j < n; j++) 
			s= s + u[i][j]*u[i][j]
		if (s <= tolerance)
			g= 0.0
		else
		{	
			f= u[i][i+1]
			g= Math.sqrt(s)
			if (f >= 0.0) g= -g
			h= f*g - s
			u[i][i+1] = f-g;
			for (j=l; j < n; j++) e[j]= u[i][j]/h
			for (j=l; j < m; j++)
			{	
				s=0.0
				for (k=l; k < n; k++) 
					s += (u[j][k]*u[i][k])
				for (k=l; k < n; k++) 
					u[j][k]+=s*e[k]
			}	
		}
		y= Math.abs(q[i])+Math.abs(e[i])
		if (y>x) 
			x=y
	}
	
	// accumulation of right hand gtransformations
	for (i=n-1; i != -1; i+= -1)
	{	
		if (g != 0.0)
		{
		 	h= g*u[i][i+1]
			for (j=l; j < n; j++) 
				v[j][i]=u[i][j]/h
			for (j=l; j < n; j++)
			{	
				s=0.0
				for (k=l; k < n; k++) 
					s += u[i][k]*v[k][j]
				for (k=l; k < n; k++) 
					v[k][j]+=(s*v[k][i])
			}	
		}
		for (j=l; j < n; j++)
		{
			v[i][j] = 0;
			v[j][i] = 0;
		}
		v[i][i] = 1;
		g= e[i]
		l= i
	}
	
	// accumulation of left hand transformations
	for (i=n-1; i != -1; i+= -1)
	{	
		l= i+1
		g= q[i]
		for (j=l; j < n; j++) 
			u[i][j] = 0;
		if (g != 0.0)
		{
			h= u[i][i]*g
			for (j=l; j < n; j++)
			{
				s=0.0
				for (k=l; k < m; k++) s += u[k][i]*u[k][j];
				f= s/h
				for (k=i; k < m; k++) u[k][j]+=f*u[k][i];
			}
			for (j=i; j < m; j++) u[j][i] = u[j][i]/g;
		}
		else
			for (j=i; j < m; j++) u[j][i] = 0;
		u[i][i] += 1;
	}
	
	// diagonalization of the bidiagonal form
	prec= prec*x
	for (k=n-1; k != -1; k+= -1)
	{
		for (var iteration=0; iteration < itmax; iteration++)
		{	// test f splitting
			var test_convergence = false
			for (l=k; l != -1; l+= -1)
			{	
				if (Math.abs(e[l]) <= prec)
				{	test_convergence= true
					break 
				}
				if (Math.abs(q[l-1]) <= prec)
					break 
			}
			if (!test_convergence)
			{	// cancellation of e[l] if l>0
				c= 0.0
				s= 1.0
				var l1= l-1
				for (i =l; i<k+1; i++)
				{	
					f= s*e[i]
					e[i]= c*e[i]
					if (Math.abs(f) <= prec)
						break
					g= q[i]
					h= pythag(f,g)
					q[i]= h
					c= g/h
					s= -f/h
					for (j=0; j < m; j++)
					{	
						y= u[j][l1]
						z= u[j][i]
						u[j][l1] =  y*c+(z*s)
						u[j][i] = -y*s+(z*c)
					} 
				}	
			}
			// test f convergence
			z= q[k]
			if (l== k)
			{	//convergence
				if (z<0.0)
				{	//q[k] is made non-negative
					q[k]= -z
					for (j=0; j < n; j++)
						v[j][k] = -v[j][k]
				}
				break  //break out of iteration loop and move on to next k value
			}
			if (iteration >= itmax-1)
				throw 'Error: no convergence.'
			// shift from bottom 2x2 minor
			x= q[l]
			y= q[k-1]
			g= e[k-1]
			h= e[k]
			f= ((y-z)*(y+z)+(g-h)*(g+h))/(2.0*h*y)
			g= pythag(f,1.0)
			if (f < 0.0)
				f= ((x-z)*(x+z)+h*(y/(f-g)-h))/x
			else
				f= ((x-z)*(x+z)+h*(y/(f+g)-h))/x
			// next QR transformation
			c= 1.0
			s= 1.0
			for (i=l+1; i< k+1; i++)
			{	
				g= e[i]
				y= q[i]
				h= s*g
				g= c*g
				z= pythag(f,h)
				e[i-1]= z
				c= f/z
				s= h/z
				f= x*c+g*s
				g= -x*s+g*c
				h= y*s
				y= y*c
				for (j=0; j < n; j++)
				{	
					x= v[j][i-1]
					z= v[j][i]
					v[j][i-1] = x*c+z*s
					v[j][i] = -x*s+z*c
				}
				z= pythag(f,h)
				q[i-1]= z
				c= f/z
				s= h/z
				f= c*g+s*y
				x= -s*g+c*y
				for (j=0; j < m; j++)
				{
					y= u[j][i-1]
					z= u[j][i]
					u[j][i-1] = y*c+z*s
					u[j][i] = -y*s+z*c
				}
			}
			e[l]= 0.0
			e[k]= f
			q[k]= x
		} 
	}
		
	//vt= transpose(v)
	//return (u,q,vt)
	for (i=0;i<q.length; i++) 
	  if (q[i] < prec) q[i] = 0
	  
	//sort eigenvalues	
	for (i=0; i< n; i++)
	{	 
	//writeln(q)
	 for (j=i-1; j >= 0; j--)
	 {
	  if (q[j] < q[i])
	  {
	//  writeln(i,'-',j)
	   c = q[j]
	   q[j] = q[i]
	   q[i] = c
	   for(k=0;k<u.length;k++) { temp = u[k][i]; u[k][i] = u[k][j]; u[k][j] = temp; }
	   for(k=0;k<v.length;k++) { temp = v[k][i]; v[k][i] = v[k][j]; v[k][j] = temp; }
//	   u.swapCols(i,j)
//	   v.swapCols(i,j)
	   i = j	   
	  }
	 }	
	}
	
	return {U:u,S:q,V:v}
};


/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(10)))

/***/ }),
/* 1 */
/***/ (function(module, exports) {

function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(14);

var iterableToArrayLimit = __webpack_require__(15);

var nonIterableRest = __webpack_require__(16);

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;

/***/ }),
/* 3 */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;

/***/ }),
/* 4 */
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;

/***/ }),
/* 5 */
/***/ (function(module, exports) {



/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(1);

var assertThisInitialized = __webpack_require__(17);

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return assertThisInitialized(self);
}

module.exports = _possibleConstructorReturn;

/***/ }),
/* 7 */
/***/ (function(module, exports) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

module.exports = _getPrototypeOf;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(18);

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

module.exports = _inherits;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithoutHoles = __webpack_require__(19);

var iterableToArray = __webpack_require__(20);

var nonIterableSpread = __webpack_require__(21);

function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();
}

module.exports = _toConsumableArray;

/***/ }),
/* 10 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 11 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process, __dirname) {/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);


var mvtdstpack = function () {
  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;

  return function (mvtdstpack) {
    mvtdstpack = mvtdstpack || {};
    var Module = typeof mvtdstpack !== "undefined" ? mvtdstpack : {};
    var moduleOverrides = {};
    var key;

    for (key in Module) {
      if (Module.hasOwnProperty(key)) {
        moduleOverrides[key] = Module[key];
      }
    }

    Module["arguments"] = [];
    Module["thisProgram"] = "./this.program";

    Module["quit"] = function (status, toThrow) {
      throw toThrow;
    };

    Module["preRun"] = [];
    Module["postRun"] = [];
    var ENVIRONMENT_IS_WEB = false;
    var ENVIRONMENT_IS_WORKER = false;
    var ENVIRONMENT_IS_NODE = false;
    var ENVIRONMENT_IS_SHELL = false;
    ENVIRONMENT_IS_WEB = (typeof window === "undefined" ? "undefined" : _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(window)) === "object";
    ENVIRONMENT_IS_WORKER = typeof importScripts === "function";
    ENVIRONMENT_IS_NODE = (typeof process === "undefined" ? "undefined" : _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(process)) === "object" && "function" === "function" && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
    ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
    var scriptDirectory = "";

    function locateFile(path) {
      if (Module["locateFile"]) {
        return Module["locateFile"](path, scriptDirectory);
      } else {
        return scriptDirectory + path;
      }
    }

    if (ENVIRONMENT_IS_NODE) {
      scriptDirectory = __dirname + "/";
      var nodeFS;
      var nodePath;

      Module["read"] = function shell_read(filename, binary) {
        var ret;
        if (!nodeFS) nodeFS = __webpack_require__(5);
        if (!nodePath) nodePath = __webpack_require__(5);
        filename = nodePath["normalize"](filename);
        ret = nodeFS["readFileSync"](filename);
        return binary ? ret : ret.toString();
      };

      Module["readBinary"] = function readBinary(filename) {
        var ret = Module["read"](filename, true);

        if (!ret.buffer) {
          ret = new Uint8Array(ret);
        }

        assert(ret.buffer);
        return ret;
      };

      if (process["argv"].length > 1) {
        Module["thisProgram"] = process["argv"][1].replace(/\\/g, "/");
      }

      Module["arguments"] = process["argv"].slice(2);
      process["on"]("uncaughtException", function (ex) {
        if (!(ex instanceof ExitStatus)) {
          throw ex;
        }
      });
      process["on"]("unhandledRejection", abort);

      Module["quit"] = function (status) {
        process["exit"](status);
      };

      Module["inspect"] = function () {
        return "[Emscripten Module object]";
      };
    } else if (ENVIRONMENT_IS_SHELL) {
      if (typeof read != "undefined") {
        Module["read"] = function shell_read(f) {
          return read(f);
        };
      }

      Module["readBinary"] = function readBinary(f) {
        var data;

        if (typeof readbuffer === "function") {
          return new Uint8Array(readbuffer(f));
        }

        data = read(f, "binary");
        assert(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(data) === "object");
        return data;
      };

      if (typeof scriptArgs != "undefined") {
        Module["arguments"] = scriptArgs;
      } else if (typeof arguments != "undefined") {
        Module["arguments"] = arguments;
      }

      if (typeof quit === "function") {
        Module["quit"] = function (status) {
          quit(status);
        };
      }
    } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
      if (ENVIRONMENT_IS_WORKER) {
        scriptDirectory = self.location.href;
      } else if (document.currentScript) {
        scriptDirectory = document.currentScript.src;
      }

      if (_scriptDir) {
        scriptDirectory = _scriptDir;
      }

      if (scriptDirectory.indexOf("blob:") !== 0) {
        scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf("/") + 1);
      } else {
        scriptDirectory = "";
      }

      Module["read"] = function shell_read(url) {
        var xhr = new XMLHttpRequest();
        xhr.open("GET", url, false);
        xhr.send(null);
        return xhr.responseText;
      };

      if (ENVIRONMENT_IS_WORKER) {
        Module["readBinary"] = function readBinary(url) {
          var xhr = new XMLHttpRequest();
          xhr.open("GET", url, false);
          xhr.responseType = "arraybuffer";
          xhr.send(null);
          return new Uint8Array(xhr.response);
        };
      }

      Module["readAsync"] = function readAsync(url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open("GET", url, true);
        xhr.responseType = "arraybuffer";

        xhr.onload = function xhr_onload() {
          if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
            onload(xhr.response);
            return;
          }

          onerror();
        };

        xhr.onerror = onerror;
        xhr.send(null);
      };

      Module["setWindowTitle"] = function (title) {
        document.title = title;
      };
    } else {}

    var out = Module["print"] || (typeof console !== "undefined" ? console.log.bind(console) : typeof print !== "undefined" ? print : null);
    var err = Module["printErr"] || (typeof printErr !== "undefined" ? printErr : typeof console !== "undefined" && console.warn.bind(console) || out);

    for (key in moduleOverrides) {
      if (moduleOverrides.hasOwnProperty(key)) {
        Module[key] = moduleOverrides[key];
      }
    }

    moduleOverrides = undefined;
    var asm2wasmImports = {
      "f64-rem": function f64Rem(x, y) {
        return x % y;
      },
      "debugger": function _debugger() {
        debugger;
      }
    };
    var functionPointers = new Array(0);
    var tempRet0 = 0;

    var setTempRet0 = function setTempRet0(value) {
      tempRet0 = value;
    };

    if ((typeof WebAssembly === "undefined" ? "undefined" : _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(WebAssembly)) !== "object") {
      err("no native wasm support detected");
    }

    var wasmMemory;
    var wasmTable;
    var ABORT = false;
    var EXITSTATUS = 0;

    function assert(condition, text) {
      if (!condition) {
        abort("Assertion failed: " + text);
      }
    }

    var UTF8Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf8") : undefined;

    function UTF8ArrayToString(u8Array, idx, maxBytesToRead) {
      var endIdx = idx + maxBytesToRead;
      var endPtr = idx;

      while (u8Array[endPtr] && !(endPtr >= endIdx)) {
        ++endPtr;
      }

      if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
        return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
      } else {
        var str = "";

        while (idx < endPtr) {
          var u0 = u8Array[idx++];

          if (!(u0 & 128)) {
            str += String.fromCharCode(u0);
            continue;
          }

          var u1 = u8Array[idx++] & 63;

          if ((u0 & 224) == 192) {
            str += String.fromCharCode((u0 & 31) << 6 | u1);
            continue;
          }

          var u2 = u8Array[idx++] & 63;

          if ((u0 & 240) == 224) {
            u0 = (u0 & 15) << 12 | u1 << 6 | u2;
          } else {
            u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u8Array[idx++] & 63;
          }

          if (u0 < 65536) {
            str += String.fromCharCode(u0);
          } else {
            var ch = u0 - 65536;
            str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
          }
        }
      }

      return str;
    }

    function UTF8ToString(ptr, maxBytesToRead) {
      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : "";
    }

    function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
      if (!(maxBytesToWrite > 0)) return 0;
      var startIdx = outIdx;
      var endIdx = outIdx + maxBytesToWrite - 1;

      for (var i = 0; i < str.length; ++i) {
        var u = str.charCodeAt(i);

        if (u >= 55296 && u <= 57343) {
          var u1 = str.charCodeAt(++i);
          u = 65536 + ((u & 1023) << 10) | u1 & 1023;
        }

        if (u <= 127) {
          if (outIdx >= endIdx) break;
          outU8Array[outIdx++] = u;
        } else if (u <= 2047) {
          if (outIdx + 1 >= endIdx) break;
          outU8Array[outIdx++] = 192 | u >> 6;
          outU8Array[outIdx++] = 128 | u & 63;
        } else if (u <= 65535) {
          if (outIdx + 2 >= endIdx) break;
          outU8Array[outIdx++] = 224 | u >> 12;
          outU8Array[outIdx++] = 128 | u >> 6 & 63;
          outU8Array[outIdx++] = 128 | u & 63;
        } else {
          if (outIdx + 3 >= endIdx) break;
          outU8Array[outIdx++] = 240 | u >> 18;
          outU8Array[outIdx++] = 128 | u >> 12 & 63;
          outU8Array[outIdx++] = 128 | u >> 6 & 63;
          outU8Array[outIdx++] = 128 | u & 63;
        }
      }

      outU8Array[outIdx] = 0;
      return outIdx - startIdx;
    }

    function stringToUTF8(str, outPtr, maxBytesToWrite) {
      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
    }

    function lengthBytesUTF8(str) {
      var len = 0;

      for (var i = 0; i < str.length; ++i) {
        var u = str.charCodeAt(i);
        if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
        if (u <= 127) ++len;else if (u <= 2047) len += 2;else if (u <= 65535) len += 3;else len += 4;
      }

      return len;
    }

    var UTF16Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf-16le") : undefined;
    var WASM_PAGE_SIZE = 65536;
    var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

    function updateGlobalBufferViews() {
      Module["HEAP8"] = HEAP8 = new Int8Array(buffer);
      Module["HEAP16"] = HEAP16 = new Int16Array(buffer);
      Module["HEAP32"] = HEAP32 = new Int32Array(buffer);
      Module["HEAPU8"] = HEAPU8 = new Uint8Array(buffer);
      Module["HEAPU16"] = HEAPU16 = new Uint16Array(buffer);
      Module["HEAPU32"] = HEAPU32 = new Uint32Array(buffer);
      Module["HEAPF32"] = HEAPF32 = new Float32Array(buffer);
      Module["HEAPF64"] = HEAPF64 = new Float64Array(buffer);
    }

    var DYNAMIC_BASE = 9531216,
        DYNAMICTOP_PTR = 4288304;
    var TOTAL_STACK = 5242880;
    var INITIAL_TOTAL_MEMORY = Module["TOTAL_MEMORY"] || 16777216;
    if (INITIAL_TOTAL_MEMORY < TOTAL_STACK) err("TOTAL_MEMORY should be larger than TOTAL_STACK, was " + INITIAL_TOTAL_MEMORY + "! (TOTAL_STACK=" + TOTAL_STACK + ")");

    if (Module["buffer"]) {
      buffer = Module["buffer"];
    } else {
      if ((typeof WebAssembly === "undefined" ? "undefined" : _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(WebAssembly)) === "object" && typeof WebAssembly.Memory === "function") {
        wasmMemory = new WebAssembly.Memory({
          "initial": INITIAL_TOTAL_MEMORY / WASM_PAGE_SIZE,
          "maximum": INITIAL_TOTAL_MEMORY / WASM_PAGE_SIZE
        });
        buffer = wasmMemory.buffer;
      } else {
        buffer = new ArrayBuffer(INITIAL_TOTAL_MEMORY);
      }
    }

    updateGlobalBufferViews();
    HEAP32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;

    function callRuntimeCallbacks(callbacks) {
      while (callbacks.length > 0) {
        var callback = callbacks.shift();

        if (typeof callback == "function") {
          callback();
          continue;
        }

        var func = callback.func;

        if (typeof func === "number") {
          if (callback.arg === undefined) {
            Module["dynCall_v"](func);
          } else {
            Module["dynCall_vi"](func, callback.arg);
          }
        } else {
          func(callback.arg === undefined ? null : callback.arg);
        }
      }
    }

    var __ATPRERUN__ = [];
    var __ATINIT__ = [];
    var __ATMAIN__ = [];
    var __ATPOSTRUN__ = [];
    var runtimeInitialized = false;

    function preRun() {
      if (Module["preRun"]) {
        if (typeof Module["preRun"] == "function") Module["preRun"] = [Module["preRun"]];

        while (Module["preRun"].length) {
          addOnPreRun(Module["preRun"].shift());
        }
      }

      callRuntimeCallbacks(__ATPRERUN__);
    }

    function ensureInitRuntime() {
      if (runtimeInitialized) return;
      runtimeInitialized = true;
      callRuntimeCallbacks(__ATINIT__);
    }

    function preMain() {
      callRuntimeCallbacks(__ATMAIN__);
    }

    function postRun() {
      if (Module["postRun"]) {
        if (typeof Module["postRun"] == "function") Module["postRun"] = [Module["postRun"]];

        while (Module["postRun"].length) {
          addOnPostRun(Module["postRun"].shift());
        }
      }

      callRuntimeCallbacks(__ATPOSTRUN__);
    }

    function addOnPreRun(cb) {
      __ATPRERUN__.unshift(cb);
    }

    function addOnPostRun(cb) {
      __ATPOSTRUN__.unshift(cb);
    }

    var runDependencies = 0;
    var runDependencyWatcher = null;
    var dependenciesFulfilled = null;

    function addRunDependency(id) {
      runDependencies++;

      if (Module["monitorRunDependencies"]) {
        Module["monitorRunDependencies"](runDependencies);
      }
    }

    function removeRunDependency(id) {
      runDependencies--;

      if (Module["monitorRunDependencies"]) {
        Module["monitorRunDependencies"](runDependencies);
      }

      if (runDependencies == 0) {
        if (runDependencyWatcher !== null) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
        }

        if (dependenciesFulfilled) {
          var callback = dependenciesFulfilled;
          dependenciesFulfilled = null;
          callback();
        }
      }
    }

    Module["preloadedImages"] = {};
    Module["preloadedAudios"] = {};
    var dataURIPrefix = "data:application/octet-stream;base64,";

    function isDataURI(filename) {
      return String.prototype.startsWith ? filename.startsWith(dataURIPrefix) : filename.indexOf(dataURIPrefix) === 0;
    }

    var wasmBinaryFile = "mvtdstpack.wasm";

    if (!isDataURI(wasmBinaryFile)) {
      wasmBinaryFile = locateFile(wasmBinaryFile);
    }

    function getBinary() {
      try {
        if (Module["wasmBinary"]) {
          return new Uint8Array(Module["wasmBinary"]);
        }

        if (Module["readBinary"]) {
          return Module["readBinary"](wasmBinaryFile);
        } else {
          throw "both async and sync fetching of the wasm failed";
        }
      } catch (err) {
        abort(err);
      }
    }

    function getBinaryPromise() {
      if (!Module["wasmBinary"] && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === "function") {
        return fetch(wasmBinaryFile, {
          credentials: "same-origin"
        }).then(function (response) {
          if (!response["ok"]) {
            throw "failed to load wasm binary file at '" + wasmBinaryFile + "'";
          }

          return response["arrayBuffer"]();
        })["catch"](function () {
          return getBinary();
        });
      }

      return new Promise(function (resolve, reject) {
        resolve(getBinary());
      });
    }

    function createWasm(env) {
      var info = {
        "env": env,
        "global": {
          "NaN": NaN,
          Infinity: Infinity
        },
        "global.Math": Math,
        "asm2wasm": asm2wasmImports
      };

      function receiveInstance(instance, module) {
        var exports = instance.exports;
        Module["asm"] = exports;
        removeRunDependency("wasm-instantiate");
      }

      addRunDependency("wasm-instantiate");

      if (Module["instantiateWasm"]) {
        try {
          return Module["instantiateWasm"](info, receiveInstance);
        } catch (e) {
          err("Module.instantiateWasm callback failed with error: " + e);
          return false;
        }
      }

      function receiveInstantiatedSource(output) {
        receiveInstance(output["instance"]);
      }

      function instantiateArrayBuffer(receiver) {
        getBinaryPromise().then(function (binary) {
          return WebAssembly.instantiate(binary, info);
        }).then(receiver, function (reason) {
          err("failed to asynchronously prepare wasm: " + reason);
          abort(reason);
        });
      }

      if (!Module["wasmBinary"] && typeof WebAssembly.instantiateStreaming === "function" && !isDataURI(wasmBinaryFile) && typeof fetch === "function") {
        WebAssembly.instantiateStreaming(fetch(wasmBinaryFile, {
          credentials: "same-origin"
        }), info).then(receiveInstantiatedSource, function (reason) {
          err("wasm streaming compile failed: " + reason);
          err("falling back to ArrayBuffer instantiation");
          instantiateArrayBuffer(receiveInstantiatedSource);
        });
      } else {
        instantiateArrayBuffer(receiveInstantiatedSource);
      }

      return {};
    }

    Module["asm"] = function (global, env, providedBuffer) {
      env["memory"] = wasmMemory;
      env["table"] = wasmTable = new WebAssembly.Table({
        "initial": 110,
        "maximum": 110,
        "element": "anyfunc"
      });
      env["__memory_base"] = 1024;
      env["__table_base"] = 0;
      var exports = createWasm(env);
      return exports;
    };

    __ATINIT__.push({
      func: function func() {
        globalCtors();
      }
    });

    function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

    function __ZSt18uncaught_exceptionv() {
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }

    function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch (e) {}
    }

    var EXCEPTIONS = {
      last: 0,
      caught: [],
      infos: {},
      deAdjust: function deAdjust(adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;

        for (var key in EXCEPTIONS.infos) {
          var ptr = +key;
          var adj = EXCEPTIONS.infos[ptr].adjusted;
          var len = adj.length;

          for (var i = 0; i < len; i++) {
            if (adj[i] === adjusted) {
              return ptr;
            }
          }
        }

        return adjusted;
      },
      addRef: function addRef(ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },
      decRef: function decRef(ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;

        if (info.refcount === 0 && !info.rethrown) {
          if (info.destructor) {
            Module["dynCall_vi"](info.destructor, ptr);
          }

          delete EXCEPTIONS.infos[ptr];

          ___cxa_free_exception(ptr);
        }
      },
      clearRef: function clearRef(ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }
    };

    function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: [ptr],
        type: type,
        destructor: destructor,
        refcount: 0,
        caught: false,
        rethrown: false
      };
      EXCEPTIONS.last = ptr;

      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }

      throw ptr;
    }

    var SYSCALLS = {
      buffers: [null, [], []],
      printChar: function printChar(stream, curr) {
        var buffer = SYSCALLS.buffers[stream];

        if (curr === 0 || curr === 10) {
          (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));
          buffer.length = 0;
        } else {
          buffer.push(curr);
        }
      },
      varargs: 0,
      get: function get(varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];
        return ret;
      },
      getStr: function getStr() {
        var ret = UTF8ToString(SYSCALLS.get());
        return ret;
      },
      get64: function get64() {
        var low = SYSCALLS.get(),
            high = SYSCALLS.get();
        return low;
      },
      getZero: function getZero() {
        SYSCALLS.get();
      }
    };

    function ___syscall140(which, varargs) {
      SYSCALLS.varargs = varargs;

      try {
        var stream = SYSCALLS.getStreamFromFD(),
            offset_high = SYSCALLS.get(),
            offset_low = SYSCALLS.get(),
            result = SYSCALLS.get(),
            whence = SYSCALLS.get();
        return 0;
      } catch (e) {
        if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
        return -e.errno;
      }
    }

    function ___syscall146(which, varargs) {
      SYSCALLS.varargs = varargs;

      try {
        var stream = SYSCALLS.get(),
            iov = SYSCALLS.get(),
            iovcnt = SYSCALLS.get();
        var ret = 0;

        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[iov + i * 8 >> 2];
          var len = HEAP32[iov + (i * 8 + 4) >> 2];

          for (var j = 0; j < len; j++) {
            SYSCALLS.printChar(stream, HEAPU8[ptr + j]);
          }

          ret += len;
        }

        return ret;
      } catch (e) {
        if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
        return -e.errno;
      }
    }

    function ___syscall6(which, varargs) {
      SYSCALLS.varargs = varargs;

      try {
        var stream = SYSCALLS.getStreamFromFD();
        return 0;
      } catch (e) {
        if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
        return -e.errno;
      }
    }

    var structRegistrations = {};

    function runDestructors(destructors) {
      while (destructors.length) {
        var ptr = destructors.pop();
        var del = destructors.pop();
        del(ptr);
      }
    }

    function simpleReadValueFromPointer(pointer) {
      return this["fromWireType"](HEAPU32[pointer >> 2]);
    }

    var awaitingDependencies = {};
    var registeredTypes = {};
    var typeDependencies = {};
    var char_0 = 48;
    var char_9 = 57;

    function makeLegalFunctionName(name) {
      if (undefined === name) {
        return "_unknown";
      }

      name = name.replace(/[^a-zA-Z0-9_]/g, "$");
      var f = name.charCodeAt(0);

      if (f >= char_0 && f <= char_9) {
        return "_" + name;
      } else {
        return name;
      }
    }

    function createNamedFunction(name, body) {
      name = makeLegalFunctionName(name);
      return new Function("body", "return function " + name + "() {\n" + '    "use strict";' + "    return body.apply(this, arguments);\n" + "};\n")(body);
    }

    function extendError(baseErrorType, errorName) {
      var errorClass = createNamedFunction(errorName, function (message) {
        this.name = errorName;
        this.message = message;
        var stack = new Error(message).stack;

        if (stack !== undefined) {
          this.stack = this.toString() + "\n" + stack.replace(/^Error(:[^\n]*)?\n/, "");
        }
      });
      errorClass.prototype = Object.create(baseErrorType.prototype);
      errorClass.prototype.constructor = errorClass;

      errorClass.prototype.toString = function () {
        if (this.message === undefined) {
          return this.name;
        } else {
          return this.name + ": " + this.message;
        }
      };

      return errorClass;
    }

    var InternalError = undefined;

    function throwInternalError(message) {
      throw new InternalError(message);
    }

    function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
      myTypes.forEach(function (type) {
        typeDependencies[type] = dependentTypes;
      });

      function onComplete(typeConverters) {
        var myTypeConverters = getTypeConverters(typeConverters);

        if (myTypeConverters.length !== myTypes.length) {
          throwInternalError("Mismatched type converter count");
        }

        for (var i = 0; i < myTypes.length; ++i) {
          registerType(myTypes[i], myTypeConverters[i]);
        }
      }

      var typeConverters = new Array(dependentTypes.length);
      var unregisteredTypes = [];
      var registered = 0;
      dependentTypes.forEach(function (dt, i) {
        if (registeredTypes.hasOwnProperty(dt)) {
          typeConverters[i] = registeredTypes[dt];
        } else {
          unregisteredTypes.push(dt);

          if (!awaitingDependencies.hasOwnProperty(dt)) {
            awaitingDependencies[dt] = [];
          }

          awaitingDependencies[dt].push(function () {
            typeConverters[i] = registeredTypes[dt];
            ++registered;

            if (registered === unregisteredTypes.length) {
              onComplete(typeConverters);
            }
          });
        }
      });

      if (0 === unregisteredTypes.length) {
        onComplete(typeConverters);
      }
    }

    function __embind_finalize_value_object(structType) {
      var reg = structRegistrations[structType];
      delete structRegistrations[structType];
      var rawConstructor = reg.rawConstructor;
      var rawDestructor = reg.rawDestructor;
      var fieldRecords = reg.fields;
      var fieldTypes = fieldRecords.map(function (field) {
        return field.getterReturnType;
      }).concat(fieldRecords.map(function (field) {
        return field.setterArgumentType;
      }));
      whenDependentTypesAreResolved([structType], fieldTypes, function (fieldTypes) {
        var fields = {};
        fieldRecords.forEach(function (field, i) {
          var fieldName = field.fieldName;
          var getterReturnType = fieldTypes[i];
          var getter = field.getter;
          var getterContext = field.getterContext;
          var setterArgumentType = fieldTypes[i + fieldRecords.length];
          var setter = field.setter;
          var setterContext = field.setterContext;
          fields[fieldName] = {
            read: function read(ptr) {
              return getterReturnType["fromWireType"](getter(getterContext, ptr));
            },
            write: function write(ptr, o) {
              var destructors = [];
              setter(setterContext, ptr, setterArgumentType["toWireType"](destructors, o));
              runDestructors(destructors);
            }
          };
        });
        return [{
          name: reg.name,
          "fromWireType": function fromWireType(ptr) {
            var rv = {};

            for (var i in fields) {
              rv[i] = fields[i].read(ptr);
            }

            rawDestructor(ptr);
            return rv;
          },
          "toWireType": function toWireType(destructors, o) {
            for (var fieldName in fields) {
              if (!(fieldName in o)) {
                throw new TypeError("Missing field");
              }
            }

            var ptr = rawConstructor();

            for (fieldName in fields) {
              fields[fieldName].write(ptr, o[fieldName]);
            }

            if (destructors !== null) {
              destructors.push(rawDestructor, ptr);
            }

            return ptr;
          },
          "argPackAdvance": 8,
          "readValueFromPointer": simpleReadValueFromPointer,
          destructorFunction: rawDestructor
        }];
      });
    }

    function getShiftFromSize(size) {
      switch (size) {
        case 1:
          return 0;

        case 2:
          return 1;

        case 4:
          return 2;

        case 8:
          return 3;

        default:
          throw new TypeError("Unknown type size: " + size);
      }
    }

    function embind_init_charCodes() {
      var codes = new Array(256);

      for (var i = 0; i < 256; ++i) {
        codes[i] = String.fromCharCode(i);
      }

      embind_charCodes = codes;
    }

    var embind_charCodes = undefined;

    function readLatin1String(ptr) {
      var ret = "";
      var c = ptr;

      while (HEAPU8[c]) {
        ret += embind_charCodes[HEAPU8[c++]];
      }

      return ret;
    }

    var BindingError = undefined;

    function throwBindingError(message) {
      throw new BindingError(message);
    }

    function registerType(rawType, registeredInstance, options) {
      options = options || {};

      if (!("argPackAdvance" in registeredInstance)) {
        throw new TypeError("registerType registeredInstance requires argPackAdvance");
      }

      var name = registeredInstance.name;

      if (!rawType) {
        throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
      }

      if (registeredTypes.hasOwnProperty(rawType)) {
        if (options.ignoreDuplicateRegistrations) {
          return;
        } else {
          throwBindingError("Cannot register type '" + name + "' twice");
        }
      }

      registeredTypes[rawType] = registeredInstance;
      delete typeDependencies[rawType];

      if (awaitingDependencies.hasOwnProperty(rawType)) {
        var callbacks = awaitingDependencies[rawType];
        delete awaitingDependencies[rawType];
        callbacks.forEach(function (cb) {
          cb();
        });
      }
    }

    function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
      var shift = getShiftFromSize(size);
      name = readLatin1String(name);
      registerType(rawType, {
        name: name,
        "fromWireType": function fromWireType(wt) {
          return !!wt;
        },
        "toWireType": function toWireType(destructors, o) {
          return o ? trueValue : falseValue;
        },
        "argPackAdvance": 8,
        "readValueFromPointer": function readValueFromPointer(pointer) {
          var heap;

          if (size === 1) {
            heap = HEAP8;
          } else if (size === 2) {
            heap = HEAP16;
          } else if (size === 4) {
            heap = HEAP32;
          } else {
            throw new TypeError("Unknown boolean type size: " + name);
          }

          return this["fromWireType"](heap[pointer >> shift]);
        },
        destructorFunction: null
      });
    }

    function ClassHandle_isAliasOf(other) {
      if (!(this instanceof ClassHandle)) {
        return false;
      }

      if (!(other instanceof ClassHandle)) {
        return false;
      }

      var leftClass = this.$$.ptrType.registeredClass;
      var left = this.$$.ptr;
      var rightClass = other.$$.ptrType.registeredClass;
      var right = other.$$.ptr;

      while (leftClass.baseClass) {
        left = leftClass.upcast(left);
        leftClass = leftClass.baseClass;
      }

      while (rightClass.baseClass) {
        right = rightClass.upcast(right);
        rightClass = rightClass.baseClass;
      }

      return leftClass === rightClass && left === right;
    }

    function shallowCopyInternalPointer(o) {
      return {
        count: o.count,
        deleteScheduled: o.deleteScheduled,
        preservePointerOnDelete: o.preservePointerOnDelete,
        ptr: o.ptr,
        ptrType: o.ptrType,
        smartPtr: o.smartPtr,
        smartPtrType: o.smartPtrType
      };
    }

    function throwInstanceAlreadyDeleted(obj) {
      function getInstanceTypeName(handle) {
        return handle.$$.ptrType.registeredClass.name;
      }

      throwBindingError(getInstanceTypeName(obj) + " instance already deleted");
    }

    function ClassHandle_clone() {
      if (!this.$$.ptr) {
        throwInstanceAlreadyDeleted(this);
      }

      if (this.$$.preservePointerOnDelete) {
        this.$$.count.value += 1;
        return this;
      } else {
        var clone = Object.create(Object.getPrototypeOf(this), {
          $$: {
            value: shallowCopyInternalPointer(this.$$)
          }
        });
        clone.$$.count.value += 1;
        clone.$$.deleteScheduled = false;
        return clone;
      }
    }

    function runDestructor(handle) {
      var $$ = handle.$$;

      if ($$.smartPtr) {
        $$.smartPtrType.rawDestructor($$.smartPtr);
      } else {
        $$.ptrType.registeredClass.rawDestructor($$.ptr);
      }
    }

    function ClassHandle_delete() {
      if (!this.$$.ptr) {
        throwInstanceAlreadyDeleted(this);
      }

      if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {
        throwBindingError("Object already scheduled for deletion");
      }

      this.$$.count.value -= 1;
      var toDelete = 0 === this.$$.count.value;

      if (toDelete) {
        runDestructor(this);
      }

      if (!this.$$.preservePointerOnDelete) {
        this.$$.smartPtr = undefined;
        this.$$.ptr = undefined;
      }
    }

    function ClassHandle_isDeleted() {
      return !this.$$.ptr;
    }

    var delayFunction = undefined;
    var deletionQueue = [];

    function flushPendingDeletes() {
      while (deletionQueue.length) {
        var obj = deletionQueue.pop();
        obj.$$.deleteScheduled = false;
        obj["delete"]();
      }
    }

    function ClassHandle_deleteLater() {
      if (!this.$$.ptr) {
        throwInstanceAlreadyDeleted(this);
      }

      if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {
        throwBindingError("Object already scheduled for deletion");
      }

      deletionQueue.push(this);

      if (deletionQueue.length === 1 && delayFunction) {
        delayFunction(flushPendingDeletes);
      }

      this.$$.deleteScheduled = true;
      return this;
    }

    function init_ClassHandle() {
      ClassHandle.prototype["isAliasOf"] = ClassHandle_isAliasOf;
      ClassHandle.prototype["clone"] = ClassHandle_clone;
      ClassHandle.prototype["delete"] = ClassHandle_delete;
      ClassHandle.prototype["isDeleted"] = ClassHandle_isDeleted;
      ClassHandle.prototype["deleteLater"] = ClassHandle_deleteLater;
    }

    function ClassHandle() {}

    var registeredPointers = {};

    function ensureOverloadTable(proto, methodName, humanName) {
      if (undefined === proto[methodName].overloadTable) {
        var prevFunc = proto[methodName];

        proto[methodName] = function () {
          if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {
            throwBindingError("Function '" + humanName + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + proto[methodName].overloadTable + ")!");
          }

          return proto[methodName].overloadTable[arguments.length].apply(this, arguments);
        };

        proto[methodName].overloadTable = [];
        proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;
      }
    }

    function exposePublicSymbol(name, value, numArguments) {
      if (Module.hasOwnProperty(name)) {
        if (undefined === numArguments || undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments]) {
          throwBindingError("Cannot register public name '" + name + "' twice");
        }

        ensureOverloadTable(Module, name, name);

        if (Module.hasOwnProperty(numArguments)) {
          throwBindingError("Cannot register multiple overloads of a function with the same number of arguments (" + numArguments + ")!");
        }

        Module[name].overloadTable[numArguments] = value;
      } else {
        Module[name] = value;

        if (undefined !== numArguments) {
          Module[name].numArguments = numArguments;
        }
      }
    }

    function RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {
      this.name = name;
      this.constructor = constructor;
      this.instancePrototype = instancePrototype;
      this.rawDestructor = rawDestructor;
      this.baseClass = baseClass;
      this.getActualType = getActualType;
      this.upcast = upcast;
      this.downcast = downcast;
      this.pureVirtualFunctions = [];
    }

    function upcastPointer(ptr, ptrClass, desiredClass) {
      while (ptrClass !== desiredClass) {
        if (!ptrClass.upcast) {
          throwBindingError("Expected null or instance of " + desiredClass.name + ", got an instance of " + ptrClass.name);
        }

        ptr = ptrClass.upcast(ptr);
        ptrClass = ptrClass.baseClass;
      }

      return ptr;
    }

    function constNoSmartPtrRawPointerToWireType(destructors, handle) {
      if (handle === null) {
        if (this.isReference) {
          throwBindingError("null is not a valid " + this.name);
        }

        return 0;
      }

      if (!handle.$$) {
        throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
      }

      if (!handle.$$.ptr) {
        throwBindingError("Cannot pass deleted object as a pointer of type " + this.name);
      }

      var handleClass = handle.$$.ptrType.registeredClass;
      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
      return ptr;
    }

    function genericPointerToWireType(destructors, handle) {
      var ptr;

      if (handle === null) {
        if (this.isReference) {
          throwBindingError("null is not a valid " + this.name);
        }

        if (this.isSmartPointer) {
          ptr = this.rawConstructor();

          if (destructors !== null) {
            destructors.push(this.rawDestructor, ptr);
          }

          return ptr;
        } else {
          return 0;
        }
      }

      if (!handle.$$) {
        throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
      }

      if (!handle.$$.ptr) {
        throwBindingError("Cannot pass deleted object as a pointer of type " + this.name);
      }

      if (!this.isConst && handle.$$.ptrType.isConst) {
        throwBindingError("Cannot convert argument of type " + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + " to parameter type " + this.name);
      }

      var handleClass = handle.$$.ptrType.registeredClass;
      ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);

      if (this.isSmartPointer) {
        if (undefined === handle.$$.smartPtr) {
          throwBindingError("Passing raw pointer to smart pointer is illegal");
        }

        switch (this.sharingPolicy) {
          case 0:
            if (handle.$$.smartPtrType === this) {
              ptr = handle.$$.smartPtr;
            } else {
              throwBindingError("Cannot convert argument of type " + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + " to parameter type " + this.name);
            }

            break;

          case 1:
            ptr = handle.$$.smartPtr;
            break;

          case 2:
            if (handle.$$.smartPtrType === this) {
              ptr = handle.$$.smartPtr;
            } else {
              var clonedHandle = handle["clone"]();
              ptr = this.rawShare(ptr, __emval_register(function () {
                clonedHandle["delete"]();
              }));

              if (destructors !== null) {
                destructors.push(this.rawDestructor, ptr);
              }
            }

            break;

          default:
            throwBindingError("Unsupporting sharing policy");
        }
      }

      return ptr;
    }

    function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {
      if (handle === null) {
        if (this.isReference) {
          throwBindingError("null is not a valid " + this.name);
        }

        return 0;
      }

      if (!handle.$$) {
        throwBindingError('Cannot pass "' + _embind_repr(handle) + '" as a ' + this.name);
      }

      if (!handle.$$.ptr) {
        throwBindingError("Cannot pass deleted object as a pointer of type " + this.name);
      }

      if (handle.$$.ptrType.isConst) {
        throwBindingError("Cannot convert argument of type " + handle.$$.ptrType.name + " to parameter type " + this.name);
      }

      var handleClass = handle.$$.ptrType.registeredClass;
      var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);
      return ptr;
    }

    function RegisteredPointer_getPointee(ptr) {
      if (this.rawGetPointee) {
        ptr = this.rawGetPointee(ptr);
      }

      return ptr;
    }

    function RegisteredPointer_destructor(ptr) {
      if (this.rawDestructor) {
        this.rawDestructor(ptr);
      }
    }

    function RegisteredPointer_deleteObject(handle) {
      if (handle !== null) {
        handle["delete"]();
      }
    }

    function downcastPointer(ptr, ptrClass, desiredClass) {
      if (ptrClass === desiredClass) {
        return ptr;
      }

      if (undefined === desiredClass.baseClass) {
        return null;
      }

      var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);

      if (rv === null) {
        return null;
      }

      return desiredClass.downcast(rv);
    }

    function getInheritedInstanceCount() {
      return Object.keys(registeredInstances).length;
    }

    function getLiveInheritedInstances() {
      var rv = [];

      for (var k in registeredInstances) {
        if (registeredInstances.hasOwnProperty(k)) {
          rv.push(registeredInstances[k]);
        }
      }

      return rv;
    }

    function setDelayFunction(fn) {
      delayFunction = fn;

      if (deletionQueue.length && delayFunction) {
        delayFunction(flushPendingDeletes);
      }
    }

    function init_embind() {
      Module["getInheritedInstanceCount"] = getInheritedInstanceCount;
      Module["getLiveInheritedInstances"] = getLiveInheritedInstances;
      Module["flushPendingDeletes"] = flushPendingDeletes;
      Module["setDelayFunction"] = setDelayFunction;
    }

    var registeredInstances = {};

    function getBasestPointer(class_, ptr) {
      if (ptr === undefined) {
        throwBindingError("ptr should not be undefined");
      }

      while (class_.baseClass) {
        ptr = class_.upcast(ptr);
        class_ = class_.baseClass;
      }

      return ptr;
    }

    function getInheritedInstance(class_, ptr) {
      ptr = getBasestPointer(class_, ptr);
      return registeredInstances[ptr];
    }

    function makeClassHandle(prototype, record) {
      if (!record.ptrType || !record.ptr) {
        throwInternalError("makeClassHandle requires ptr and ptrType");
      }

      var hasSmartPtrType = !!record.smartPtrType;
      var hasSmartPtr = !!record.smartPtr;

      if (hasSmartPtrType !== hasSmartPtr) {
        throwInternalError("Both smartPtrType and smartPtr must be specified");
      }

      record.count = {
        value: 1
      };
      return Object.create(prototype, {
        $$: {
          value: record
        }
      });
    }

    function RegisteredPointer_fromWireType(ptr) {
      var rawPointer = this.getPointee(ptr);

      if (!rawPointer) {
        this.destructor(ptr);
        return null;
      }

      var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);

      if (undefined !== registeredInstance) {
        if (0 === registeredInstance.$$.count.value) {
          registeredInstance.$$.ptr = rawPointer;
          registeredInstance.$$.smartPtr = ptr;
          return registeredInstance["clone"]();
        } else {
          var rv = registeredInstance["clone"]();
          this.destructor(ptr);
          return rv;
        }
      }

      function makeDefaultHandle() {
        if (this.isSmartPointer) {
          return makeClassHandle(this.registeredClass.instancePrototype, {
            ptrType: this.pointeeType,
            ptr: rawPointer,
            smartPtrType: this,
            smartPtr: ptr
          });
        } else {
          return makeClassHandle(this.registeredClass.instancePrototype, {
            ptrType: this,
            ptr: ptr
          });
        }
      }

      var actualType = this.registeredClass.getActualType(rawPointer);
      var registeredPointerRecord = registeredPointers[actualType];

      if (!registeredPointerRecord) {
        return makeDefaultHandle.call(this);
      }

      var toType;

      if (this.isConst) {
        toType = registeredPointerRecord.constPointerType;
      } else {
        toType = registeredPointerRecord.pointerType;
      }

      var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);

      if (dp === null) {
        return makeDefaultHandle.call(this);
      }

      if (this.isSmartPointer) {
        return makeClassHandle(toType.registeredClass.instancePrototype, {
          ptrType: toType,
          ptr: dp,
          smartPtrType: this,
          smartPtr: ptr
        });
      } else {
        return makeClassHandle(toType.registeredClass.instancePrototype, {
          ptrType: toType,
          ptr: dp
        });
      }
    }

    function init_RegisteredPointer() {
      RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;
      RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;
      RegisteredPointer.prototype["argPackAdvance"] = 8;
      RegisteredPointer.prototype["readValueFromPointer"] = simpleReadValueFromPointer;
      RegisteredPointer.prototype["deleteObject"] = RegisteredPointer_deleteObject;
      RegisteredPointer.prototype["fromWireType"] = RegisteredPointer_fromWireType;
    }

    function RegisteredPointer(name, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {
      this.name = name;
      this.registeredClass = registeredClass;
      this.isReference = isReference;
      this.isConst = isConst;
      this.isSmartPointer = isSmartPointer;
      this.pointeeType = pointeeType;
      this.sharingPolicy = sharingPolicy;
      this.rawGetPointee = rawGetPointee;
      this.rawConstructor = rawConstructor;
      this.rawShare = rawShare;
      this.rawDestructor = rawDestructor;

      if (!isSmartPointer && registeredClass.baseClass === undefined) {
        if (isConst) {
          this["toWireType"] = constNoSmartPtrRawPointerToWireType;
          this.destructorFunction = null;
        } else {
          this["toWireType"] = nonConstNoSmartPtrRawPointerToWireType;
          this.destructorFunction = null;
        }
      } else {
        this["toWireType"] = genericPointerToWireType;
      }
    }

    function replacePublicSymbol(name, value, numArguments) {
      if (!Module.hasOwnProperty(name)) {
        throwInternalError("Replacing nonexistant public symbol");
      }

      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {
        Module[name].overloadTable[numArguments] = value;
      } else {
        Module[name] = value;
        Module[name].argCount = numArguments;
      }
    }

    function embind__requireFunction(signature, rawFunction) {
      signature = readLatin1String(signature);

      function makeDynCaller(dynCall) {
        var args = [];

        for (var i = 1; i < signature.length; ++i) {
          args.push("a" + i);
        }

        var name = "dynCall_" + signature + "_" + rawFunction;
        var body = "return function " + name + "(" + args.join(", ") + ") {\n";
        body += "    return dynCall(rawFunction" + (args.length ? ", " : "") + args.join(", ") + ");\n";
        body += "};\n";
        return new Function("dynCall", "rawFunction", body)(dynCall, rawFunction);
      }

      var fp;

      if (Module["FUNCTION_TABLE_" + signature] !== undefined) {
        fp = Module["FUNCTION_TABLE_" + signature][rawFunction];
      } else if (typeof FUNCTION_TABLE !== "undefined") {
        fp = FUNCTION_TABLE[rawFunction];
      } else {
        var dc = Module["dynCall_" + signature];

        if (dc === undefined) {
          dc = Module["dynCall_" + signature.replace(/f/g, "d")];

          if (dc === undefined) {
            throwBindingError("No dynCall invoker for signature: " + signature);
          }
        }

        fp = makeDynCaller(dc);
      }

      if (typeof fp !== "function") {
        throwBindingError("unknown function pointer with signature " + signature + ": " + rawFunction);
      }

      return fp;
    }

    var UnboundTypeError = undefined;

    function getTypeName(type) {
      var ptr = ___getTypeName(type);

      var rv = readLatin1String(ptr);

      _free(ptr);

      return rv;
    }

    function throwUnboundTypeError(message, types) {
      var unboundTypes = [];
      var seen = {};

      function visit(type) {
        if (seen[type]) {
          return;
        }

        if (registeredTypes[type]) {
          return;
        }

        if (typeDependencies[type]) {
          typeDependencies[type].forEach(visit);
          return;
        }

        unboundTypes.push(type);
        seen[type] = true;
      }

      types.forEach(visit);
      throw new UnboundTypeError(message + ": " + unboundTypes.map(getTypeName).join([", "]));
    }

    function __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name, destructorSignature, rawDestructor) {
      name = readLatin1String(name);
      getActualType = embind__requireFunction(getActualTypeSignature, getActualType);

      if (upcast) {
        upcast = embind__requireFunction(upcastSignature, upcast);
      }

      if (downcast) {
        downcast = embind__requireFunction(downcastSignature, downcast);
      }

      rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);
      var legalFunctionName = makeLegalFunctionName(name);
      exposePublicSymbol(legalFunctionName, function () {
        throwUnboundTypeError("Cannot construct " + name + " due to unbound types", [baseClassRawType]);
      });
      whenDependentTypesAreResolved([rawType, rawPointerType, rawConstPointerType], baseClassRawType ? [baseClassRawType] : [], function (base) {
        base = base[0];
        var baseClass;
        var basePrototype;

        if (baseClassRawType) {
          baseClass = base.registeredClass;
          basePrototype = baseClass.instancePrototype;
        } else {
          basePrototype = ClassHandle.prototype;
        }

        var constructor = createNamedFunction(legalFunctionName, function () {
          if (Object.getPrototypeOf(this) !== instancePrototype) {
            throw new BindingError("Use 'new' to construct " + name);
          }

          if (undefined === registeredClass.constructor_body) {
            throw new BindingError(name + " has no accessible constructor");
          }

          var body = registeredClass.constructor_body[arguments.length];

          if (undefined === body) {
            throw new BindingError("Tried to invoke ctor of " + name + " with invalid number of parameters (" + arguments.length + ") - expected (" + Object.keys(registeredClass.constructor_body).toString() + ") parameters instead!");
          }

          return body.apply(this, arguments);
        });
        var instancePrototype = Object.create(basePrototype, {
          constructor: {
            value: constructor
          }
        });
        constructor.prototype = instancePrototype;
        var registeredClass = new RegisteredClass(name, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);
        var referenceConverter = new RegisteredPointer(name, registeredClass, true, false, false);
        var pointerConverter = new RegisteredPointer(name + "*", registeredClass, false, false, false);
        var constPointerConverter = new RegisteredPointer(name + " const*", registeredClass, false, true, false);
        registeredPointers[rawType] = {
          pointerType: pointerConverter,
          constPointerType: constPointerConverter
        };
        replacePublicSymbol(legalFunctionName, constructor);
        return [referenceConverter, pointerConverter, constPointerConverter];
      });
    }

    function heap32VectorToArray(count, firstElement) {
      var array = [];

      for (var i = 0; i < count; i++) {
        array.push(HEAP32[(firstElement >> 2) + i]);
      }

      return array;
    }

    function __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {
      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
      invoker = embind__requireFunction(invokerSignature, invoker);
      whenDependentTypesAreResolved([], [rawClassType], function (classType) {
        classType = classType[0];
        var humanName = "constructor " + classType.name;

        if (undefined === classType.registeredClass.constructor_body) {
          classType.registeredClass.constructor_body = [];
        }

        if (undefined !== classType.registeredClass.constructor_body[argCount - 1]) {
          throw new BindingError("Cannot register multiple constructors with identical number of parameters (" + (argCount - 1) + ") for class '" + classType.name + "'! Overload resolution is currently only performed using the parameter count, not actual type info!");
        }

        classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {
          throwUnboundTypeError("Cannot construct " + classType.name + " due to unbound types", rawArgTypes);
        };

        whenDependentTypesAreResolved([], rawArgTypes, function (argTypes) {
          classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {
            if (arguments.length !== argCount - 1) {
              throwBindingError(humanName + " called with " + arguments.length + " arguments, expected " + (argCount - 1));
            }

            var destructors = [];
            var args = new Array(argCount);
            args[0] = rawConstructor;

            for (var i = 1; i < argCount; ++i) {
              args[i] = argTypes[i]["toWireType"](destructors, arguments[i - 1]);
            }

            var ptr = invoker.apply(null, args);
            runDestructors(destructors);
            return argTypes[0]["fromWireType"](ptr);
          };

          return [];
        });
        return [];
      });
    }

    function new_(constructor, argumentList) {
      if (!(constructor instanceof Function)) {
        throw new TypeError("new_ called with constructor type " + _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(constructor) + " which is not a function");
      }

      var dummy = createNamedFunction(constructor.name || "unknownFunctionName", function () {});
      dummy.prototype = constructor.prototype;
      var obj = new dummy();
      var r = constructor.apply(obj, argumentList);
      return r instanceof Object ? r : obj;
    }

    function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {
      var argCount = argTypes.length;

      if (argCount < 2) {
        throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!");
      }

      var isClassMethodFunc = argTypes[1] !== null && classType !== null;
      var needsDestructorStack = false;

      for (var i = 1; i < argTypes.length; ++i) {
        if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) {
          needsDestructorStack = true;
          break;
        }
      }

      var returns = argTypes[0].name !== "void";
      var argsList = "";
      var argsListWired = "";

      for (var i = 0; i < argCount - 2; ++i) {
        argsList += (i !== 0 ? ", " : "") + "arg" + i;
        argsListWired += (i !== 0 ? ", " : "") + "arg" + i + "Wired";
      }

      var invokerFnBody = "return function " + makeLegalFunctionName(humanName) + "(" + argsList + ") {\n" + "if (arguments.length !== " + (argCount - 2) + ") {\n" + "throwBindingError('function " + humanName + " called with ' + arguments.length + ' arguments, expected " + (argCount - 2) + " args!');\n" + "}\n";

      if (needsDestructorStack) {
        invokerFnBody += "var destructors = [];\n";
      }

      var dtorStack = needsDestructorStack ? "destructors" : "null";
      var args1 = ["throwBindingError", "invoker", "fn", "runDestructors", "retType", "classParam"];
      var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];

      if (isClassMethodFunc) {
        invokerFnBody += "var thisWired = classParam.toWireType(" + dtorStack + ", this);\n";
      }

      for (var i = 0; i < argCount - 2; ++i) {
        invokerFnBody += "var arg" + i + "Wired = argType" + i + ".toWireType(" + dtorStack + ", arg" + i + "); // " + argTypes[i + 2].name + "\n";
        args1.push("argType" + i);
        args2.push(argTypes[i + 2]);
      }

      if (isClassMethodFunc) {
        argsListWired = "thisWired" + (argsListWired.length > 0 ? ", " : "") + argsListWired;
      }

      invokerFnBody += (returns ? "var rv = " : "") + "invoker(fn" + (argsListWired.length > 0 ? ", " : "") + argsListWired + ");\n";

      if (needsDestructorStack) {
        invokerFnBody += "runDestructors(destructors);\n";
      } else {
        for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {
          var paramName = i === 1 ? "thisWired" : "arg" + (i - 2) + "Wired";

          if (argTypes[i].destructorFunction !== null) {
            invokerFnBody += paramName + "_dtor(" + paramName + "); // " + argTypes[i].name + "\n";
            args1.push(paramName + "_dtor");
            args2.push(argTypes[i].destructorFunction);
          }
        }
      }

      if (returns) {
        invokerFnBody += "var ret = retType.fromWireType(rv);\n" + "return ret;\n";
      } else {}

      invokerFnBody += "}\n";
      args1.push(invokerFnBody);
      var invokerFunction = new_(Function, args1).apply(null, args2);
      return invokerFunction;
    }

    function __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {
      var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
      methodName = readLatin1String(methodName);
      rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);
      whenDependentTypesAreResolved([], [rawClassType], function (classType) {
        classType = classType[0];
        var humanName = classType.name + "." + methodName;

        if (isPureVirtual) {
          classType.registeredClass.pureVirtualFunctions.push(methodName);
        }

        function unboundTypesHandler() {
          throwUnboundTypeError("Cannot call " + humanName + " due to unbound types", rawArgTypes);
        }

        var proto = classType.registeredClass.instancePrototype;
        var method = proto[methodName];

        if (undefined === method || undefined === method.overloadTable && method.className !== classType.name && method.argCount === argCount - 2) {
          unboundTypesHandler.argCount = argCount - 2;
          unboundTypesHandler.className = classType.name;
          proto[methodName] = unboundTypesHandler;
        } else {
          ensureOverloadTable(proto, methodName, humanName);
          proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;
        }

        whenDependentTypesAreResolved([], rawArgTypes, function (argTypes) {
          var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);

          if (undefined === proto[methodName].overloadTable) {
            memberFunction.argCount = argCount - 2;
            proto[methodName] = memberFunction;
          } else {
            proto[methodName].overloadTable[argCount - 2] = memberFunction;
          }

          return [];
        });
        return [];
      });
    }

    var emval_free_list = [];
    var emval_handle_array = [{}, {
      value: undefined
    }, {
      value: null
    }, {
      value: true
    }, {
      value: false
    }];

    function __emval_decref(handle) {
      if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {
        emval_handle_array[handle] = undefined;
        emval_free_list.push(handle);
      }
    }

    function count_emval_handles() {
      var count = 0;

      for (var i = 5; i < emval_handle_array.length; ++i) {
        if (emval_handle_array[i] !== undefined) {
          ++count;
        }
      }

      return count;
    }

    function get_first_emval() {
      for (var i = 5; i < emval_handle_array.length; ++i) {
        if (emval_handle_array[i] !== undefined) {
          return emval_handle_array[i];
        }
      }

      return null;
    }

    function init_emval() {
      Module["count_emval_handles"] = count_emval_handles;
      Module["get_first_emval"] = get_first_emval;
    }

    function __emval_register(value) {
      switch (value) {
        case undefined:
          {
            return 1;
          }

        case null:
          {
            return 2;
          }

        case true:
          {
            return 3;
          }

        case false:
          {
            return 4;
          }

        default:
          {
            var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;
            emval_handle_array[handle] = {
              refcount: 1,
              value: value
            };
            return handle;
          }
      }
    }

    function __embind_register_emval(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
        name: name,
        "fromWireType": function fromWireType(handle) {
          var rv = emval_handle_array[handle].value;

          __emval_decref(handle);

          return rv;
        },
        "toWireType": function toWireType(destructors, value) {
          return __emval_register(value);
        },
        "argPackAdvance": 8,
        "readValueFromPointer": simpleReadValueFromPointer,
        destructorFunction: null
      });
    }

    function _embind_repr(v) {
      if (v === null) {
        return "null";
      }

      var t = _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(v);

      if (t === "object" || t === "array" || t === "function") {
        return v.toString();
      } else {
        return "" + v;
      }
    }

    function floatReadValueFromPointer(name, shift) {
      switch (shift) {
        case 2:
          return function (pointer) {
            return this["fromWireType"](HEAPF32[pointer >> 2]);
          };

        case 3:
          return function (pointer) {
            return this["fromWireType"](HEAPF64[pointer >> 3]);
          };

        default:
          throw new TypeError("Unknown float type: " + name);
      }
    }

    function __embind_register_float(rawType, name, size) {
      var shift = getShiftFromSize(size);
      name = readLatin1String(name);
      registerType(rawType, {
        name: name,
        "fromWireType": function fromWireType(value) {
          return value;
        },
        "toWireType": function toWireType(destructors, value) {
          if (typeof value !== "number" && typeof value !== "boolean") {
            throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
          }

          return value;
        },
        "argPackAdvance": 8,
        "readValueFromPointer": floatReadValueFromPointer(name, shift),
        destructorFunction: null
      });
    }

    function __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {
      var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
      name = readLatin1String(name);
      rawInvoker = embind__requireFunction(signature, rawInvoker);
      exposePublicSymbol(name, function () {
        throwUnboundTypeError("Cannot call " + name + " due to unbound types", argTypes);
      }, argCount - 1);
      whenDependentTypesAreResolved([], argTypes, function (argTypes) {
        var invokerArgsArray = [argTypes[0], null].concat(argTypes.slice(1));
        replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null, rawInvoker, fn), argCount - 1);
        return [];
      });
    }

    function integerReadValueFromPointer(name, shift, signed) {
      switch (shift) {
        case 0:
          return signed ? function readS8FromPointer(pointer) {
            return HEAP8[pointer];
          } : function readU8FromPointer(pointer) {
            return HEAPU8[pointer];
          };

        case 1:
          return signed ? function readS16FromPointer(pointer) {
            return HEAP16[pointer >> 1];
          } : function readU16FromPointer(pointer) {
            return HEAPU16[pointer >> 1];
          };

        case 2:
          return signed ? function readS32FromPointer(pointer) {
            return HEAP32[pointer >> 2];
          } : function readU32FromPointer(pointer) {
            return HEAPU32[pointer >> 2];
          };

        default:
          throw new TypeError("Unknown integer type: " + name);
      }
    }

    function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
      name = readLatin1String(name);

      if (maxRange === -1) {
        maxRange = 4294967295;
      }

      var shift = getShiftFromSize(size);

      var fromWireType = function fromWireType(value) {
        return value;
      };

      if (minRange === 0) {
        var bitshift = 32 - 8 * size;

        fromWireType = function fromWireType(value) {
          return value << bitshift >>> bitshift;
        };
      }

      var isUnsignedType = name.indexOf("unsigned") != -1;
      registerType(primitiveType, {
        name: name,
        "fromWireType": fromWireType,
        "toWireType": function toWireType(destructors, value) {
          if (typeof value !== "number" && typeof value !== "boolean") {
            throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
          }

          if (value < minRange || value > maxRange) {
            throw new TypeError('Passing a number "' + _embind_repr(value) + '" from JS side to C/C++ side to an argument of type "' + name + '", which is outside the valid range [' + minRange + ", " + maxRange + "]!");
          }

          return isUnsignedType ? value >>> 0 : value | 0;
        },
        "argPackAdvance": 8,
        "readValueFromPointer": integerReadValueFromPointer(name, shift, minRange !== 0),
        destructorFunction: null
      });
    }

    function __embind_register_memory_view(rawType, dataTypeIndex, name) {
      var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];
      var TA = typeMapping[dataTypeIndex];

      function decodeMemoryView(handle) {
        handle = handle >> 2;
        var heap = HEAPU32;
        var size = heap[handle];
        var data = heap[handle + 1];
        return new TA(heap["buffer"], data, size);
      }

      name = readLatin1String(name);
      registerType(rawType, {
        name: name,
        "fromWireType": decodeMemoryView,
        "argPackAdvance": 8,
        "readValueFromPointer": decodeMemoryView
      }, {
        ignoreDuplicateRegistrations: true
      });
    }

    function __embind_register_std_string(rawType, name) {
      name = readLatin1String(name);
      var stdStringIsUTF8 = name === "std::string";
      registerType(rawType, {
        name: name,
        "fromWireType": function fromWireType(value) {
          var length = HEAPU32[value >> 2];
          var str;

          if (stdStringIsUTF8) {
            var endChar = HEAPU8[value + 4 + length];
            var endCharSwap = 0;

            if (endChar != 0) {
              endCharSwap = endChar;
              HEAPU8[value + 4 + length] = 0;
            }

            var decodeStartPtr = value + 4;

            for (var i = 0; i <= length; ++i) {
              var currentBytePtr = value + 4 + i;

              if (HEAPU8[currentBytePtr] == 0) {
                var stringSegment = UTF8ToString(decodeStartPtr);
                if (str === undefined) str = stringSegment;else {
                  str += String.fromCharCode(0);
                  str += stringSegment;
                }
                decodeStartPtr = currentBytePtr + 1;
              }
            }

            if (endCharSwap != 0) HEAPU8[value + 4 + length] = endCharSwap;
          } else {
            var a = new Array(length);

            for (var i = 0; i < length; ++i) {
              a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);
            }

            str = a.join("");
          }

          _free(value);

          return str;
        },
        "toWireType": function toWireType(destructors, value) {
          if (value instanceof ArrayBuffer) {
            value = new Uint8Array(value);
          }

          var getLength;
          var valueIsOfTypeString = typeof value === "string";

          if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {
            throwBindingError("Cannot pass non-string to std::string");
          }

          if (stdStringIsUTF8 && valueIsOfTypeString) {
            getLength = function getLength() {
              return lengthBytesUTF8(value);
            };
          } else {
            getLength = function getLength() {
              return value.length;
            };
          }

          var length = getLength();

          var ptr = _malloc(4 + length + 1);

          HEAPU32[ptr >> 2] = length;

          if (stdStringIsUTF8 && valueIsOfTypeString) {
            stringToUTF8(value, ptr + 4, length + 1);
          } else {
            if (valueIsOfTypeString) {
              for (var i = 0; i < length; ++i) {
                var charCode = value.charCodeAt(i);

                if (charCode > 255) {
                  _free(ptr);

                  throwBindingError("String has UTF-16 code units that do not fit in 8 bits");
                }

                HEAPU8[ptr + 4 + i] = charCode;
              }
            } else {
              for (var i = 0; i < length; ++i) {
                HEAPU8[ptr + 4 + i] = value[i];
              }
            }
          }

          if (destructors !== null) {
            destructors.push(_free, ptr);
          }

          return ptr;
        },
        "argPackAdvance": 8,
        "readValueFromPointer": simpleReadValueFromPointer,
        destructorFunction: function destructorFunction(ptr) {
          _free(ptr);
        }
      });
    }

    function __embind_register_std_wstring(rawType, charSize, name) {
      name = readLatin1String(name);
      var getHeap, shift;

      if (charSize === 2) {
        getHeap = function getHeap() {
          return HEAPU16;
        };

        shift = 1;
      } else if (charSize === 4) {
        getHeap = function getHeap() {
          return HEAPU32;
        };

        shift = 2;
      }

      registerType(rawType, {
        name: name,
        "fromWireType": function fromWireType(value) {
          var HEAP = getHeap();
          var length = HEAPU32[value >> 2];
          var a = new Array(length);
          var start = value + 4 >> shift;

          for (var i = 0; i < length; ++i) {
            a[i] = String.fromCharCode(HEAP[start + i]);
          }

          _free(value);

          return a.join("");
        },
        "toWireType": function toWireType(destructors, value) {
          var HEAP = getHeap();
          var length = value.length;

          var ptr = _malloc(4 + length * charSize);

          HEAPU32[ptr >> 2] = length;
          var start = ptr + 4 >> shift;

          for (var i = 0; i < length; ++i) {
            HEAP[start + i] = value.charCodeAt(i);
          }

          if (destructors !== null) {
            destructors.push(_free, ptr);
          }

          return ptr;
        },
        "argPackAdvance": 8,
        "readValueFromPointer": simpleReadValueFromPointer,
        destructorFunction: function destructorFunction(ptr) {
          _free(ptr);
        }
      });
    }

    function __embind_register_value_object(rawType, name, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {
      structRegistrations[rawType] = {
        name: readLatin1String(name),
        rawConstructor: embind__requireFunction(constructorSignature, rawConstructor),
        rawDestructor: embind__requireFunction(destructorSignature, rawDestructor),
        fields: []
      };
    }

    function __embind_register_value_object_field(structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {
      structRegistrations[structType].fields.push({
        fieldName: readLatin1String(fieldName),
        getterReturnType: getterReturnType,
        getter: embind__requireFunction(getterSignature, getter),
        getterContext: getterContext,
        setterArgumentType: setterArgumentType,
        setter: embind__requireFunction(setterSignature, setter),
        setterContext: setterContext
      });
    }

    function __embind_register_void(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
        isVoid: true,
        name: name,
        "argPackAdvance": 0,
        "fromWireType": function fromWireType() {
          return undefined;
        },
        "toWireType": function toWireType(destructors, o) {
          return undefined;
        }
      });
    }

    function __emval_incref(handle) {
      if (handle > 4) {
        emval_handle_array[handle].refcount += 1;
      }
    }

    function requireRegisteredType(rawType, humanName) {
      var impl = registeredTypes[rawType];

      if (undefined === impl) {
        throwBindingError(humanName + " has unknown type " + getTypeName(rawType));
      }

      return impl;
    }

    function __emval_take_value(type, argv) {
      type = requireRegisteredType(type, "_emval_take_value");
      var v = type["readValueFromPointer"](argv);
      return __emval_register(v);
    }

    function _abort() {
      Module["abort"]();
    }

    function _emscripten_get_heap_size() {
      return HEAP8.length;
    }

    function abortOnCannotGrowMemory(requestedSize) {
      abort("OOM");
    }

    function _emscripten_resize_heap(requestedSize) {
      abortOnCannotGrowMemory(requestedSize);
    }

    function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src + num), dest);
    }

    function ___setErrNo(value) {
      if (Module["___errno_location"]) HEAP32[Module["___errno_location"]() >> 2] = value;
      return value;
    }

    InternalError = Module["InternalError"] = extendError(Error, "InternalError");
    embind_init_charCodes();
    BindingError = Module["BindingError"] = extendError(Error, "BindingError");
    init_ClassHandle();
    init_RegisteredPointer();
    init_embind();
    UnboundTypeError = Module["UnboundTypeError"] = extendError(Error, "UnboundTypeError");
    init_emval();
    var asmGlobalArg = {};
    var asmLibraryArg = {
      "b": abort,
      "u": setTempRet0,
      "p": ___cxa_allocate_exception,
      "l": ___cxa_throw,
      "i": ___setErrNo,
      "t": ___syscall140,
      "h": ___syscall146,
      "s": ___syscall6,
      "r": __embind_finalize_value_object,
      "q": __embind_register_bool,
      "g": __embind_register_class,
      "o": __embind_register_class_constructor,
      "d": __embind_register_class_function,
      "F": __embind_register_emval,
      "n": __embind_register_float,
      "E": __embind_register_function,
      "e": __embind_register_integer,
      "c": __embind_register_memory_view,
      "m": __embind_register_std_string,
      "D": __embind_register_std_wstring,
      "C": __embind_register_value_object,
      "k": __embind_register_value_object_field,
      "B": __embind_register_void,
      "A": __emval_decref,
      "z": __emval_incref,
      "j": __emval_take_value,
      "f": _abort,
      "y": _emscripten_get_heap_size,
      "x": _emscripten_memcpy_big,
      "w": _emscripten_resize_heap,
      "v": abortOnCannotGrowMemory,
      "a": DYNAMICTOP_PTR
    };
    var asm = Module["asm"](asmGlobalArg, asmLibraryArg, buffer);
    Module["asm"] = asm;

    var ___errno_location = Module["___errno_location"] = function () {
      return Module["asm"]["G"].apply(null, arguments);
    };

    var ___getTypeName = Module["___getTypeName"] = function () {
      return Module["asm"]["H"].apply(null, arguments);
    };

    var _free = Module["_free"] = function () {
      return Module["asm"]["I"].apply(null, arguments);
    };

    var _malloc = Module["_malloc"] = function () {
      return Module["asm"]["J"].apply(null, arguments);
    };

    var globalCtors = Module["globalCtors"] = function () {
      return Module["asm"]["ca"].apply(null, arguments);
    };

    var dynCall_dii = Module["dynCall_dii"] = function () {
      return Module["asm"]["K"].apply(null, arguments);
    };

    var dynCall_i = Module["dynCall_i"] = function () {
      return Module["asm"]["L"].apply(null, arguments);
    };

    var dynCall_ii = Module["dynCall_ii"] = function () {
      return Module["asm"]["M"].apply(null, arguments);
    };

    var dynCall_iidiiii = Module["dynCall_iidiiii"] = function () {
      return Module["asm"]["N"].apply(null, arguments);
    };

    var dynCall_iii = Module["dynCall_iii"] = function () {
      return Module["asm"]["O"].apply(null, arguments);
    };

    var dynCall_iiii = Module["dynCall_iiii"] = function () {
      return Module["asm"]["P"].apply(null, arguments);
    };

    var dynCall_iiiid = Module["dynCall_iiiid"] = function () {
      return Module["asm"]["Q"].apply(null, arguments);
    };

    var dynCall_iiiii = Module["dynCall_iiiii"] = function () {
      return Module["asm"]["R"].apply(null, arguments);
    };

    var dynCall_iiiiiiiiiidd = Module["dynCall_iiiiiiiiiidd"] = function () {
      return Module["asm"]["S"].apply(null, arguments);
    };

    var dynCall_jiji = Module["dynCall_jiji"] = function () {
      return Module["asm"]["T"].apply(null, arguments);
    };

    var dynCall_v = Module["dynCall_v"] = function () {
      return Module["asm"]["U"].apply(null, arguments);
    };

    var dynCall_vi = Module["dynCall_vi"] = function () {
      return Module["asm"]["V"].apply(null, arguments);
    };

    var dynCall_vii = Module["dynCall_vii"] = function () {
      return Module["asm"]["W"].apply(null, arguments);
    };

    var dynCall_viid = Module["dynCall_viid"] = function () {
      return Module["asm"]["X"].apply(null, arguments);
    };

    var dynCall_viii = Module["dynCall_viii"] = function () {
      return Module["asm"]["Y"].apply(null, arguments);
    };

    var dynCall_viiid = Module["dynCall_viiid"] = function () {
      return Module["asm"]["Z"].apply(null, arguments);
    };

    var dynCall_viiii = Module["dynCall_viiii"] = function () {
      return Module["asm"]["_"].apply(null, arguments);
    };

    var dynCall_viiiii = Module["dynCall_viiiii"] = function () {
      return Module["asm"]["$"].apply(null, arguments);
    };

    var dynCall_viiiiii = Module["dynCall_viiiiii"] = function () {
      return Module["asm"]["aa"].apply(null, arguments);
    };

    var dynCall_viiiiiiiiidd = Module["dynCall_viiiiiiiiidd"] = function () {
      return Module["asm"]["ba"].apply(null, arguments);
    };

    Module["asm"] = asm;

    Module["then"] = function (func) {
      if (Module["calledRun"]) {
        func(Module);
      } else {
        var old = Module["onRuntimeInitialized"];

        Module["onRuntimeInitialized"] = function () {
          if (old) old();
          func(Module);
        };
      }

      return Module;
    };

    function ExitStatus(status) {
      this.name = "ExitStatus";
      this.message = "Program terminated with exit(" + status + ")";
      this.status = status;
    }

    ExitStatus.prototype = new Error();
    ExitStatus.prototype.constructor = ExitStatus;

    dependenciesFulfilled = function runCaller() {
      if (!Module["calledRun"]) run();
      if (!Module["calledRun"]) dependenciesFulfilled = runCaller;
    };

    function run(args) {
      args = args || Module["arguments"];

      if (runDependencies > 0) {
        return;
      }

      preRun();
      if (runDependencies > 0) return;
      if (Module["calledRun"]) return;

      function doRun() {
        if (Module["calledRun"]) return;
        Module["calledRun"] = true;
        if (ABORT) return;
        ensureInitRuntime();
        preMain();
        if (Module["onRuntimeInitialized"]) Module["onRuntimeInitialized"]();
        postRun();
      }

      if (Module["setStatus"]) {
        Module["setStatus"]("Running...");
        setTimeout(function () {
          setTimeout(function () {
            Module["setStatus"]("");
          }, 1);
          doRun();
        }, 1);
      } else {
        doRun();
      }
    }

    Module["run"] = run;

    function abort(what) {
      if (Module["onAbort"]) {
        Module["onAbort"](what);
      }

      if (what !== undefined) {
        out(what);
        err(what);
        what = JSON.stringify(what);
      } else {
        what = "";
      }

      ABORT = true;
      EXITSTATUS = 1;
      throw "abort(" + what + "). Build with -s ASSERTIONS=1 for more info.";
    }

    Module["abort"] = abort;

    if (Module["preInit"]) {
      if (typeof Module["preInit"] == "function") Module["preInit"] = [Module["preInit"]];

      while (Module["preInit"].length > 0) {
        Module["preInit"].pop()();
      }
    }

    Module["noExitRuntime"] = true;
    run();
    return mvtdstpack;
  };
}();

/* harmony default export */ __webpack_exports__["a"] = (mvtdstpack);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(11), "/"))

/***/ }),
/* 13 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process, __dirname, Buffer) {/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);
var integral=function(){var _scriptDir=typeof document!=='undefined'&&document.currentScript?document.currentScript.src:undefined;return function(integral){integral=integral||{};var Module=typeof integral!=="undefined"?integral:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key];}}Module["arguments"]=[];Module["thisProgram"]="./this.program";Module["quit"]=function(status,toThrow){throw toThrow;};Module["preRun"]=[];Module["postRun"]=[];var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=(typeof window==="undefined"?"undefined":_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(window))==="object";ENVIRONMENT_IS_WORKER=typeof importScripts==="function";ENVIRONMENT_IS_NODE=(typeof process==="undefined"?"undefined":_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(process))==="object"&&"function"==="function"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory="";function locateFile(path){if(Module["locateFile"]){return Module["locateFile"](path,scriptDirectory);}else{return scriptDirectory+path;}}if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+"/";var nodeFS;var nodePath;Module["read"]=function shell_read(filename,binary){var ret;ret=tryParseAsDataURI(filename);if(!ret){if(!nodeFS)nodeFS=__webpack_require__(5);if(!nodePath)nodePath=__webpack_require__(5);filename=nodePath["normalize"](filename);ret=nodeFS["readFileSync"](filename);}return binary?ret:ret.toString();};Module["readBinary"]=function readBinary(filename){var ret=Module["read"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret);}assert(ret.buffer);return ret;};if(process["argv"].length>1){Module["thisProgram"]=process["argv"][1].replace(/\\/g,"/");}Module["arguments"]=process["argv"].slice(2);process["on"]("uncaughtException",function(ex){if(!(ex instanceof ExitStatus)){throw ex;}});process["on"]("unhandledRejection",abort);Module["quit"]=function(status){process["exit"](status);};Module["inspect"]=function(){return"[Emscripten Module object]";};}else if(ENVIRONMENT_IS_SHELL){if(typeof read!="undefined"){Module["read"]=function shell_read(f){var data=tryParseAsDataURI(f);if(data){return intArrayToString(data);}return read(f);};}Module["readBinary"]=function readBinary(f){var data;data=tryParseAsDataURI(f);if(data){return data;}if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f));}data=read(f,"binary");assert(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(data)==="object");return data;};if(typeof scriptArgs!="undefined"){Module["arguments"]=scriptArgs;}else if(typeof arguments!="undefined"){Module["arguments"]=arguments;}if(typeof quit==="function"){Module["quit"]=function(status){quit(status);};}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href;}else if(document.currentScript){scriptDirectory=document.currentScript.src;}if(_scriptDir){scriptDirectory=_scriptDir;}if(scriptDirectory.indexOf("blob:")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf("/")+1);}else{scriptDirectory="";}Module["read"]=function shell_read(url){try{var xhr=new XMLHttpRequest();xhr.open("GET",url,false);xhr.send(null);return xhr.responseText;}catch(err){var data=tryParseAsDataURI(url);if(data){return intArrayToString(data);}throw err;}};if(ENVIRONMENT_IS_WORKER){Module["readBinary"]=function readBinary(url){try{var xhr=new XMLHttpRequest();xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response);}catch(err){var data=tryParseAsDataURI(url);if(data){return data;}throw err;}};}Module["readAsync"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest();xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return;}var data=tryParseAsDataURI(url);if(data){onload(data.buffer);return;}onerror();};xhr.onerror=onerror;xhr.send(null);};Module["setWindowTitle"]=function(title){document.title=title;};}else{}var out=Module["print"]||(typeof console!=="undefined"?console.log.bind(console):typeof print!=="undefined"?print:null);var err=Module["printErr"]||(typeof printErr!=="undefined"?printErr:typeof console!=="undefined"&&console.warn.bind(console)||out);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key];}}moduleOverrides=undefined;var STACK_ALIGN=16;function dynamicAlloc(size){var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;if(end<=_emscripten_get_heap_size()){HEAP32[DYNAMICTOP_PTR>>2]=end;}else{return 0;}return ret;}function getNativeTypeSize(type){switch(type){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:{if(type[type.length-1]==="*"){return 4;}else if(type[0]==="i"){var bits=parseInt(type.substr(1));assert(bits%8===0,"getNativeTypeSize invalid bits "+bits+", type "+type);return bits/8;}else{return 0;}}}}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;err(text);}}var jsCallStartIndex=1;var functionPointers=new Array(0);var funcWrappers={};function dynCall(sig,ptr,args){if(args&&args.length){return Module["dynCall_"+sig].apply(null,[ptr].concat(args));}else{return Module["dynCall_"+sig].call(null,ptr);}}var tempRet0=0;var setTempRet0=function setTempRet0(value){tempRet0=value;};var getTempRet0=function getTempRet0(){return tempRet0;};var GLOBAL_BASE=8;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort("Assertion failed: "+text);}}function getCFunc(ident){var func=Module["_"+ident];assert(func,"Cannot call unknown function "+ident+", make sure it is exported");return func;}function ccall(ident,returnType,argTypes,args,opts){var toC={"string":function string(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len);}return ret;},"array":function array(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret;}};function convertReturnValue(ret){if(returnType==="string")return UTF8ToString(ret);if(returnType==="boolean")return Boolean(ret);return ret;}var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i]);}else{cArgs[i]=args[i];}}}var ret=func.apply(null,cArgs);ret=convertReturnValue(ret);if(stack!==0)stackRestore(stack);return ret;}function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type);}}var ALLOC_NONE=3;function allocate(slab,types,allocator,ptr){var zeroinit,size;if(typeof slab==="number"){zeroinit=true;size=slab;}else{zeroinit=false;size=slab.length;}var singleType=typeof types==="string"?types:null;var ret;if(allocator==ALLOC_NONE){ret=ptr;}else{ret=[_malloc,stackAlloc,dynamicAlloc][allocator](Math.max(size,singleType?1:types.length));}if(zeroinit){var stop;ptr=ret;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0;}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0;}return ret;}if(singleType==="i8"){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret);}else{HEAPU8.set(new Uint8Array(slab),ret);}return ret;}var i=0,type,typeSize,previousType;while(i<size){var curr=slab[i];type=singleType||types[i];if(type===0){i++;continue;}if(type=="i64")type="i32";setValue(ret+i,curr,type);if(previousType!==type){typeSize=getNativeTypeSize(type);previousType=type;}i+=typeSize;}return ret;}var UTF8Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(u8Array,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(u8Array[endPtr]&&!(endPtr>=endIdx)){++endPtr;}if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr));}else{var str="";while(idx<endPtr){var u0=u8Array[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue;}var u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue;}var u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2;}else{u0=(u0&7)<<18|u1<<12|u2<<6|u8Array[idx++]&63;}if(u0<65536){str+=String.fromCharCode(u0);}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023);}}}return str;}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):"";}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023;}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u;}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63;}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63;}else{if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63;}}outU8Array[outIdx]=0;return outIdx-startIdx;}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4;}return len;}var UTF16Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf-16le"):undefined;function allocateUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8Array(str,HEAP8,ret,size);return ret;}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer);}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i);}if(!dontAddNull)HEAP8[buffer>>0]=0;}function demangle(func){return func;}function demangleAll(text){var regex=/__Z[\w\d_]+/g;return text.replace(regex,function(x){var y=demangle(x);return x===y?x:y+" ["+x+"]";});}function jsStackTrace(){var err=new Error();if(!err.stack){try{throw new Error(0);}catch(e){err=e;}if(!err.stack){return"(no stack trace available)";}}return err.stack.toString();}function stackTrace(){var js=jsStackTrace();if(Module["extraStackTrace"])js+="\n"+Module["extraStackTrace"]();return demangleAll(js);}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferViews(){Module["HEAP8"]=HEAP8=new Int8Array(buffer);Module["HEAP16"]=HEAP16=new Int16Array(buffer);Module["HEAP32"]=HEAP32=new Int32Array(buffer);Module["HEAPU8"]=HEAPU8=new Uint8Array(buffer);Module["HEAPU16"]=HEAPU16=new Uint16Array(buffer);Module["HEAPU32"]=HEAPU32=new Uint32Array(buffer);Module["HEAPF32"]=HEAPF32=new Float32Array(buffer);Module["HEAPF64"]=HEAPF64=new Float64Array(buffer);}var STACK_BASE=31056,DYNAMIC_BASE=5273936,DYNAMICTOP_PTR=31024;var TOTAL_STACK=5242880;var INITIAL_TOTAL_MEMORY=Module["TOTAL_MEMORY"]||16777216;if(INITIAL_TOTAL_MEMORY<TOTAL_STACK)err("TOTAL_MEMORY should be larger than TOTAL_STACK, was "+INITIAL_TOTAL_MEMORY+"! (TOTAL_STACK="+TOTAL_STACK+")");if(Module["buffer"]){buffer=Module["buffer"];}else{{buffer=new ArrayBuffer(INITIAL_TOTAL_MEMORY);}}updateGlobalBufferViews();HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback();continue;}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){Module["dynCall_v"](func);}else{Module["dynCall_vi"](func,callback.arg);}}else{func(callback.arg===undefined?null:callback.arg);}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift());}}callRuntimeCallbacks(__ATPRERUN__);}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;if(!Module["noFSInit"]&&!FS.init.initialized)FS.init();TTY.init();callRuntimeCallbacks(__ATINIT__);}function preMain(){FS.ignorePermissions=false;callRuntimeCallbacks(__ATMAIN__);}function exitRuntime(){runtimeExited=true;}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift());}}callRuntimeCallbacks(__ATPOSTRUN__);}function addOnPreRun(cb){__ATPRERUN__.unshift(cb);}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb);}var Math_abs=Math.abs;var Math_sqrt=Math.sqrt;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_min=Math.min;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id;}function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies);}}function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies);}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null;}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback();}}}Module["preloadedImages"]={};Module["preloadedAudios"]={};var memoryInitializer=null;var dataURIPrefix="data:application/octet-stream;base64,";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0;}__ATINIT__.push({func:function func(){globalCtors();}});memoryInitializer="data:application/octet-stream;base64,";var tempDoublePtr=31040;function ___cxa_allocate_exception(size){return _malloc(size);}function ___cxa_free_exception(ptr){try{return _free(ptr);}catch(e){}}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function deAdjust(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var key in EXCEPTIONS.infos){var ptr=+key;var adj=EXCEPTIONS.infos[ptr].adjusted;var len=adj.length;for(var i=0;i<len;i++){if(adj[i]===adjusted){return ptr;}}}return adjusted;},addRef:function addRef(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++;},decRef:function decRef(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0&&!info.rethrown){if(info.destructor){Module["dynCall_vi"](info.destructor,ptr);}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr);}},clearRef:function clearRef(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0;}};function ___cxa_begin_catch(ptr){var info=EXCEPTIONS.infos[ptr];if(info&&!info.caught){info.caught=true;__ZSt18uncaught_exceptionv.uncaught_exception--;}if(info)info.rethrown=false;EXCEPTIONS.caught.push(ptr);EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));return ptr;}function ___cxa_pure_virtual(){ABORT=true;throw"Pure virtual function called!";}function ___resumeException(ptr){if(!EXCEPTIONS.last){EXCEPTIONS.last=ptr;}throw ptr;}function ___cxa_find_matching_catch(){var thrown=EXCEPTIONS.last;if(!thrown){return(setTempRet0(0),0)|0;}var info=EXCEPTIONS.infos[thrown];var throwntype=info.type;if(!throwntype){return(setTempRet0(0),thrown)|0;}var typeArray=Array.prototype.slice.call(arguments);var pointer=Module["___cxa_is_pointer_type"](throwntype);if(!___cxa_find_matching_catch.buffer)___cxa_find_matching_catch.buffer=_malloc(4);HEAP32[___cxa_find_matching_catch.buffer>>2]=thrown;thrown=___cxa_find_matching_catch.buffer;for(var i=0;i<typeArray.length;i++){if(typeArray[i]&&Module["___cxa_can_catch"](typeArray[i],throwntype,thrown)){thrown=HEAP32[thrown>>2];info.adjusted.push(thrown);return(setTempRet0(typeArray[i]),thrown)|0;}}thrown=HEAP32[thrown>>2];return(setTempRet0(throwntype),thrown)|0;}function ___cxa_throw(ptr,type,destructor){EXCEPTIONS.infos[ptr]={ptr:ptr,adjusted:[ptr],type:type,destructor:destructor,refcount:0,caught:false,rethrown:false};EXCEPTIONS.last=ptr;if(!("uncaught_exception"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exception=1;}else{__ZSt18uncaught_exceptionv.uncaught_exception++;}throw ptr;}function ___cxa_uncaught_exception(){return!!__ZSt18uncaught_exceptionv.uncaught_exception;}function ___gxx_personality_v0(){}function ___lock(){}function ___setErrNo(value){if(Module["___errno_location"])HEAP32[Module["___errno_location"]()>>2]=value;return value;}function ___map_file(pathname,size){___setErrNo(1);return-1;}var PATH={splitPath:function splitPath(filename){var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1);},normalizeArray:function normalizeArray(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==="."){parts.splice(i,1);}else if(last===".."){parts.splice(i,1);up++;}else if(up){parts.splice(i,1);up--;}}if(allowAboveRoot){for(;up;up--){parts.unshift("..");}}return parts;},normalize:function normalize(path){var isAbsolute=path.charAt(0)==="/",trailingSlash=path.substr(-1)==="/";path=PATH.normalizeArray(path.split("/").filter(function(p){return!!p;}),!isAbsolute).join("/");if(!path&&!isAbsolute){path=".";}if(path&&trailingSlash){path+="/";}return(isAbsolute?"/":"")+path;},dirname:function dirname(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return".";}if(dir){dir=dir.substr(0,dir.length-1);}return root+dir;},basename:function basename(path){if(path==="/")return"/";var lastSlash=path.lastIndexOf("/");if(lastSlash===-1)return path;return path.substr(lastSlash+1);},extname:function extname(path){return PATH.splitPath(path)[3];},join:function join(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join("/"));},join2:function join2(l,r){return PATH.normalize(l+"/"+r);},resolve:function resolve(){var resolvedPath="",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=="string"){throw new TypeError("Arguments to path.resolve must be strings");}else if(!path){return"";}resolvedPath=path+"/"+resolvedPath;resolvedAbsolute=path.charAt(0)==="/";}resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter(function(p){return!!p;}),!resolvedAbsolute).join("/");return(resolvedAbsolute?"/":"")+resolvedPath||".";},relative:function relative(from,to){from=PATH.resolve(from).substr(1);to=PATH.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=="")break;}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=="")break;}if(start>end)return[];return arr.slice(start,end-start+1);}var fromParts=trim(from.split("/"));var toParts=trim(to.split("/"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break;}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push("..");}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/");}};var TTY={ttys:[],init:function init(){},shutdown:function shutdown(){},register:function register(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops);},stream_ops:{open:function open(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(19);}stream.tty=tty;stream.seekable=false;},close:function close(stream){stream.tty.ops.flush(stream.tty);},flush:function flush(stream){stream.tty.ops.flush(stream.tty);},read:function read(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(6);}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty);}catch(e){throw new FS.ErrnoError(5);}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(11);}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result;}if(bytesRead){stream.node.timestamp=Date.now();}return bytesRead;},write:function write(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(6);}try{for(var i=0;i<length;i++){stream.tty.ops.put_char(stream.tty,buffer[offset+i]);}}catch(e){throw new FS.ErrnoError(5);}if(length){stream.node.timestamp=Date.now();}return i;}},default_tty_ops:{get_char:function get_char(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=new Buffer(BUFSIZE);var bytesRead=0;var isPosixPlatform=process.platform!="win32";var fd=process.stdin.fd;if(isPosixPlatform){var usingDevice=false;try{fd=fs.openSync("/dev/stdin","r");usingDevice=true;}catch(e){}}try{bytesRead=fs.readSync(fd,buf,0,BUFSIZE,null);}catch(e){if(e.toString().indexOf("EOF")!=-1)bytesRead=0;else throw e;}if(usingDevice){fs.closeSync(fd);}if(bytesRead>0){result=buf.slice(0,bytesRead).toString("utf-8");}else{result=null;}}else if(typeof window!="undefined"&&typeof window.prompt=="function"){result=window.prompt("Input: ");if(result!==null){result+="\n";}}else if(typeof readline=="function"){result=readline();if(result!==null){result+="\n";}}if(!result){return null;}tty.input=intArrayFromString(result,true);}return tty.input.shift();},put_char:function put_char(tty,val){if(val===null||val===10){out(UTF8ArrayToString(tty.output,0));tty.output=[];}else{if(val!=0)tty.output.push(val);}},flush:function flush(tty){if(tty.output&&tty.output.length>0){out(UTF8ArrayToString(tty.output,0));tty.output=[];}}},default_tty1_ops:{put_char:function put_char(tty,val){if(val===null||val===10){err(UTF8ArrayToString(tty.output,0));tty.output=[];}else{if(val!=0)tty.output.push(val);}},flush:function flush(tty){if(tty.output&&tty.output.length>0){err(UTF8ArrayToString(tty.output,0));tty.output=[];}}}};var MEMFS={ops_table:null,mount:function mount(_mount){return MEMFS.createNode(null,"/",16384|511,0);},createNode:function createNode(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(1);}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}};}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={};}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null;}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream;}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream;}node.timestamp=Date.now();if(parent){parent.contents[name]=node;}return node;},getFileDataAsRegularArray:function getFileDataAsRegularArray(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i){arr.push(node.contents[i]);}return arr;}return node.contents;},getFileDataAsTypedArray:function getFileDataAsTypedArray(node){if(!node.contents)return new Uint8Array();if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents);},expandFileStorage:function expandFileStorage(node,newCapacity){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)|0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return;},resizeFileStorage:function resizeFileStorage(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return;}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(new ArrayBuffer(newSize));if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)));}node.usedBytes=newSize;return;}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize){node.contents.push(0);}node.usedBytes=newSize;},node_ops:{getattr:function getattr(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096;}else if(FS.isFile(node.mode)){attr.size=node.usedBytes;}else if(FS.isLink(node.mode)){attr.size=node.link.length;}else{attr.size=0;}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr;},setattr:function setattr(node,attr){if(attr.mode!==undefined){node.mode=attr.mode;}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp;}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size);}},lookup:function lookup(parent,name){throw FS.genericErrors[2];},mknod:function mknod(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev);},rename:function rename(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name);}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(39);}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir;},unlink:function unlink(parent,name){delete parent.contents[name];},rmdir:function rmdir(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(39);}delete parent.contents[name];},readdir:function readdir(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue;}entries.push(key);}return entries;},symlink:function symlink(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node;},readlink:function readlink(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(22);}return node.link;}},stream_ops:{read:function read(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset);}else{for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i];}}return size;},write:function write(stream,buffer,offset,length,position,canOwn){if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length;}else if(node.usedBytes===0&&position===0){node.contents=new Uint8Array(buffer.subarray(offset,offset+length));node.usedBytes=length;return length;}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length;}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i];}}node.usedBytes=Math.max(node.usedBytes,position+length);return length;},llseek:function llseek(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position;}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes;}}if(position<0){throw new FS.ErrnoError(22);}return position;},allocate:function allocate(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length);},mmap:function mmap(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(19);}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&(contents.buffer===buffer||contents.buffer===buffer.buffer)){allocated=false;ptr=contents.byteOffset;}else{if(position>0||position+length<stream.node.usedBytes){if(contents.subarray){contents=contents.subarray(position,position+length);}else{contents=Array.prototype.slice.call(contents,position,position+length);}}allocated=true;ptr=_malloc(length);if(!ptr){throw new FS.ErrnoError(12);}buffer.set(contents,ptr);}return{ptr:ptr,allocated:allocated};},msync:function msync(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(19);}if(mmapFlags&2){return 0;}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0;}}};var IDBFS={dbs:{},indexedDB:function(_indexedDB){function indexedDB(){return _indexedDB.apply(this,arguments);}indexedDB.toString=function(){return _indexedDB.toString();};return indexedDB;}(function(){if(typeof indexedDB!=="undefined")return indexedDB;var ret=null;if((typeof window==="undefined"?"undefined":_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(window))==="object")ret=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;assert(ret,"IDBFS used, but indexedDB not supported");return ret;}),DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function mount(_mount2){return MEMFS.mount.apply(null,arguments);},syncfs:function syncfs(mount,populate,callback){IDBFS.getLocalSet(mount,function(err,local){if(err)return callback(err);IDBFS.getRemoteSet(mount,function(err,remote){if(err)return callback(err);var src=populate?remote:local;var dst=populate?local:remote;IDBFS.reconcile(src,dst,callback);});});},getDB:function getDB(name,callback){var db=IDBFS.dbs[name];if(db){return callback(null,db);}var req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION);}catch(e){return callback(e);}if(!req){return callback("Unable to connect to IndexedDB");}req.onupgradeneeded=function(e){var db=e.target.result;var transaction=e.target.transaction;var fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME);}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME);}if(!fileStore.indexNames.contains("timestamp")){fileStore.createIndex("timestamp","timestamp",{unique:false});}};req.onsuccess=function(){db=req.result;IDBFS.dbs[name]=db;callback(null,db);};req.onerror=function(e){callback(this.error);e.preventDefault();};},getLocalSet:function getLocalSet(mount,callback){var entries={};function isRealDir(p){return p!=="."&&p!=="..";}function toAbsolute(root){return function(p){return PATH.join2(root,p);};}var check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var path=check.pop();var stat;try{stat=FS.stat(path);}catch(e){return callback(e);}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));}entries[path]={timestamp:stat.mtime};}return callback(null,{type:"local",entries:entries});},getRemoteSet:function getRemoteSet(mount,callback){var entries={};IDBFS.getDB(mount.mountpoint,function(err,db){if(err)return callback(err);try{var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readonly");transaction.onerror=function(e){callback(this.error);e.preventDefault();};var store=transaction.objectStore(IDBFS.DB_STORE_NAME);var index=store.index("timestamp");index.openKeyCursor().onsuccess=function(event){var cursor=event.target.result;if(!cursor){return callback(null,{type:"remote",db:db,entries:entries});}entries[cursor.primaryKey]={timestamp:cursor.key};cursor["continue"]();};}catch(e){return callback(e);}});},loadLocalEntry:function loadLocalEntry(path,callback){var stat,node;try{var lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path);}catch(e){return callback(e);}if(FS.isDir(stat.mode)){return callback(null,{timestamp:stat.mtime,mode:stat.mode});}else if(FS.isFile(stat.mode)){node.contents=MEMFS.getFileDataAsTypedArray(node);return callback(null,{timestamp:stat.mtime,mode:stat.mode,contents:node.contents});}else{return callback(new Error("node type not supported"));}},storeLocalEntry:function storeLocalEntry(path,entry,callback){try{if(FS.isDir(entry.mode)){FS.mkdir(path,entry.mode);}else if(FS.isFile(entry.mode)){FS.writeFile(path,entry.contents,{canOwn:true});}else{return callback(new Error("node type not supported"));}FS.chmod(path,entry.mode);FS.utime(path,entry.timestamp,entry.timestamp);}catch(e){return callback(e);}callback(null);},removeLocalEntry:function removeLocalEntry(path,callback){try{var lookup=FS.lookupPath(path);var stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path);}else if(FS.isFile(stat.mode)){FS.unlink(path);}}catch(e){return callback(e);}callback(null);},loadRemoteEntry:function loadRemoteEntry(store,path,callback){var req=store.get(path);req.onsuccess=function(event){callback(null,event.target.result);};req.onerror=function(e){callback(this.error);e.preventDefault();};},storeRemoteEntry:function storeRemoteEntry(store,path,entry,callback){var req=store.put(entry,path);req.onsuccess=function(){callback(null);};req.onerror=function(e){callback(this.error);e.preventDefault();};},removeRemoteEntry:function removeRemoteEntry(store,path,callback){var req=store["delete"](path);req.onsuccess=function(){callback(null);};req.onerror=function(e){callback(this.error);e.preventDefault();};},reconcile:function reconcile(src,dst,callback){var total=0;var create=[];Object.keys(src.entries).forEach(function(key){var e=src.entries[key];var e2=dst.entries[key];if(!e2||e.timestamp>e2.timestamp){create.push(key);total++;}});var remove=[];Object.keys(dst.entries).forEach(function(key){var e=dst.entries[key];var e2=src.entries[key];if(!e2){remove.push(key);total++;}});if(!total){return callback(null);}var errored=false;var completed=0;var db=src.type==="remote"?src.db:dst.db;var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readwrite");var store=transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err){if(err){if(!done.errored){done.errored=true;return callback(err);}return;}if(++completed>=total){return callback(null);}}transaction.onerror=function(e){done(this.error);e.preventDefault();};create.sort().forEach(function(path){if(dst.type==="local"){IDBFS.loadRemoteEntry(store,path,function(err,entry){if(err)return done(err);IDBFS.storeLocalEntry(path,entry,done);});}else{IDBFS.loadLocalEntry(path,function(err,entry){if(err)return done(err);IDBFS.storeRemoteEntry(store,path,entry,done);});}});remove.sort().reverse().forEach(function(path){if(dst.type==="local"){IDBFS.removeLocalEntry(path,done);}else{IDBFS.removeRemoteEntry(store,path,done);}});}};var NODEFS={isWindows:false,staticInit:function staticInit(){NODEFS.isWindows=!!process.platform.match(/^win/);var flags=process["binding"]("constants");if(flags["fs"]){flags=flags["fs"];}NODEFS.flagsForNodeMap={1024:flags["O_APPEND"],64:flags["O_CREAT"],128:flags["O_EXCL"],0:flags["O_RDONLY"],2:flags["O_RDWR"],4096:flags["O_SYNC"],512:flags["O_TRUNC"],1:flags["O_WRONLY"]};},bufferFrom:function bufferFrom(arrayBuffer){return Buffer.alloc?Buffer.from(arrayBuffer):new Buffer(arrayBuffer);},mount:function mount(_mount3){assert(ENVIRONMENT_IS_NODE);return NODEFS.createNode(null,"/",NODEFS.getMode(_mount3.opts.root),0);},createNode:function createNode(parent,name,mode,dev){if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw new FS.ErrnoError(22);}var node=FS.createNode(parent,name,mode);node.node_ops=NODEFS.node_ops;node.stream_ops=NODEFS.stream_ops;return node;},getMode:function getMode(path){var stat;try{stat=fs.lstatSync(path);if(NODEFS.isWindows){stat.mode=stat.mode|(stat.mode&292)>>2;}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno);}return stat.mode;},realPath:function realPath(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent;}parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null,parts);},flagsForNode:function flagsForNode(flags){flags&=~2097152;flags&=~2048;flags&=~32768;flags&=~524288;var newFlags=0;for(var k in NODEFS.flagsForNodeMap){if(flags&k){newFlags|=NODEFS.flagsForNodeMap[k];flags^=k;}}if(!flags){return newFlags;}else{throw new FS.ErrnoError(22);}},node_ops:{getattr:function getattr(node){var path=NODEFS.realPath(node);var stat;try{stat=fs.lstatSync(path);}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno);}if(NODEFS.isWindows&&!stat.blksize){stat.blksize=4096;}if(NODEFS.isWindows&&!stat.blocks){stat.blocks=(stat.size+stat.blksize-1)/stat.blksize|0;}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks};},setattr:function setattr(node,attr){var path=NODEFS.realPath(node);try{if(attr.mode!==undefined){fs.chmodSync(path,attr.mode);node.mode=attr.mode;}if(attr.timestamp!==undefined){var date=new Date(attr.timestamp);fs.utimesSync(path,date,date);}if(attr.size!==undefined){fs.truncateSync(path,attr.size);}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno);}},lookup:function lookup(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);var mode=NODEFS.getMode(path);return NODEFS.createNode(parent,name,mode);},mknod:function mknod(parent,name,mode,dev){var node=NODEFS.createNode(parent,name,mode,dev);var path=NODEFS.realPath(node);try{if(FS.isDir(node.mode)){fs.mkdirSync(path,node.mode);}else{fs.writeFileSync(path,"",{mode:node.mode});}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno);}return node;},rename:function rename(oldNode,newDir,newName){var oldPath=NODEFS.realPath(oldNode);var newPath=PATH.join2(NODEFS.realPath(newDir),newName);try{fs.renameSync(oldPath,newPath);}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno);}},unlink:function unlink(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.unlinkSync(path);}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno);}},rmdir:function rmdir(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.rmdirSync(path);}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno);}},readdir:function readdir(node){var path=NODEFS.realPath(node);try{return fs.readdirSync(path);}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno);}},symlink:function symlink(parent,newName,oldPath){var newPath=PATH.join2(NODEFS.realPath(parent),newName);try{fs.symlinkSync(oldPath,newPath);}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno);}},readlink:function readlink(node){var path=NODEFS.realPath(node);try{path=fs.readlinkSync(path);path=NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root),path);return path;}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno);}}},stream_ops:{open:function open(stream){var path=NODEFS.realPath(stream.node);try{if(FS.isFile(stream.node.mode)){stream.nfd=fs.openSync(path,NODEFS.flagsForNode(stream.flags));}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno);}},close:function close(stream){try{if(FS.isFile(stream.node.mode)&&stream.nfd){fs.closeSync(stream.nfd);}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(-e.errno);}},read:function read(stream,buffer,offset,length,position){if(length===0)return 0;try{return fs.readSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position);}catch(e){throw new FS.ErrnoError(-e.errno);}},write:function write(stream,buffer,offset,length,position){try{return fs.writeSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position);}catch(e){throw new FS.ErrnoError(-e.errno);}},llseek:function llseek(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position;}else if(whence===2){if(FS.isFile(stream.node.mode)){try{var stat=fs.fstatSync(stream.nfd);position+=stat.size;}catch(e){throw new FS.ErrnoError(-e.errno);}}}if(position<0){throw new FS.ErrnoError(22);}return position;}}};var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function mount(_mount4){assert(ENVIRONMENT_IS_WORKER);if(!WORKERFS.reader)WORKERFS.reader=new FileReaderSync();var root=WORKERFS.createNode(null,"/",WORKERFS.DIR_MODE,0);var createdParents={};function ensureParent(path){var parts=path.split("/");var parent=root;for(var i=0;i<parts.length-1;i++){var curr=parts.slice(0,i+1).join("/");if(!createdParents[curr]){createdParents[curr]=WORKERFS.createNode(parent,parts[i],WORKERFS.DIR_MODE,0);}parent=createdParents[curr];}return parent;}function base(path){var parts=path.split("/");return parts[parts.length-1];}Array.prototype.forEach.call(_mount4.opts["files"]||[],function(file){WORKERFS.createNode(ensureParent(file.name),base(file.name),WORKERFS.FILE_MODE,0,file,file.lastModifiedDate);});(_mount4.opts["blobs"]||[]).forEach(function(obj){WORKERFS.createNode(ensureParent(obj["name"]),base(obj["name"]),WORKERFS.FILE_MODE,0,obj["data"]);});(_mount4.opts["packages"]||[]).forEach(function(pack){pack["metadata"].files.forEach(function(file){var name=file.filename.substr(1);WORKERFS.createNode(ensureParent(name),base(name),WORKERFS.FILE_MODE,0,pack["blob"].slice(file.start,file.end));});});return root;},createNode:function createNode(parent,name,mode,dev,contents,mtime){var node=FS.createNode(parent,name,mode);node.mode=mode;node.node_ops=WORKERFS.node_ops;node.stream_ops=WORKERFS.stream_ops;node.timestamp=(mtime||new Date()).getTime();assert(WORKERFS.FILE_MODE!==WORKERFS.DIR_MODE);if(mode===WORKERFS.FILE_MODE){node.size=contents.size;node.contents=contents;}else{node.size=4096;node.contents={};}if(parent){parent.contents[name]=node;}return node;},node_ops:{getattr:function getattr(node){return{dev:1,ino:undefined,mode:node.mode,nlink:1,uid:0,gid:0,rdev:undefined,size:node.size,atime:new Date(node.timestamp),mtime:new Date(node.timestamp),ctime:new Date(node.timestamp),blksize:4096,blocks:Math.ceil(node.size/4096)};},setattr:function setattr(node,attr){if(attr.mode!==undefined){node.mode=attr.mode;}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp;}},lookup:function lookup(parent,name){throw new FS.ErrnoError(2);},mknod:function mknod(parent,name,mode,dev){throw new FS.ErrnoError(1);},rename:function rename(oldNode,newDir,newName){throw new FS.ErrnoError(1);},unlink:function unlink(parent,name){throw new FS.ErrnoError(1);},rmdir:function rmdir(parent,name){throw new FS.ErrnoError(1);},readdir:function readdir(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue;}entries.push(key);}return entries;},symlink:function symlink(parent,newName,oldPath){throw new FS.ErrnoError(1);},readlink:function readlink(node){throw new FS.ErrnoError(1);}},stream_ops:{read:function read(stream,buffer,offset,length,position){if(position>=stream.node.size)return 0;var chunk=stream.node.contents.slice(position,position+length);var ab=WORKERFS.reader.readAsArrayBuffer(chunk);buffer.set(new Uint8Array(ab),offset);return chunk.size;},write:function write(stream,buffer,offset,length,position){throw new FS.ErrnoError(5);},llseek:function llseek(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position;}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.size;}}if(position<0){throw new FS.ErrnoError(22);}return position;}}};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function handleFSError(e){if(!(e instanceof FS.ErrnoError))throw e+" : "+stackTrace();return ___setErrNo(e.errno);},lookupPath:function lookupPath(path,opts){path=PATH.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:"",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key];}}if(opts.recurse_count>8){throw new FS.ErrnoError(40);}var parts=PATH.normalizeArray(path.split("/").filter(function(p){return!!p;}),false);var current=FS.root;var current_path="/";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break;}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root;}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(40);}}}}return{path:current_path,node:current};},getPath:function getPath(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!=="/"?mount+"/"+path:mount+path;}path=path?node.name+"/"+path:node.name;node=node.parent;}},hashName:function hashName(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0;}return(parentid+hash>>>0)%FS.nameTable.length;},hashAddNode:function hashAddNode(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node;},hashRemoveNode:function hashRemoveNode(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next;}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break;}current=current.name_next;}}},lookupNode:function lookupNode(parent,name){var err=FS.mayLookup(parent);if(err){throw new FS.ErrnoError(err,parent);}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node;}}return FS.lookup(parent,name);},createNode:function createNode(parent,name,mode,rdev){if(!FS.FSNode){FS.FSNode=function(parent,name,mode,rdev){if(!parent){parent=this;}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev;};FS.FSNode.prototype={};var readMode=292|73;var writeMode=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:function get(){return(this.mode&readMode)===readMode;},set:function set(val){val?this.mode|=readMode:this.mode&=~readMode;}},write:{get:function get(){return(this.mode&writeMode)===writeMode;},set:function set(val){val?this.mode|=writeMode:this.mode&=~writeMode;}},isFolder:{get:function get(){return FS.isDir(this.mode);}},isDevice:{get:function get(){return FS.isChrdev(this.mode);}}});}var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node;},destroyNode:function destroyNode(node){FS.hashRemoveNode(node);},isRoot:function isRoot(node){return node===node.parent;},isMountpoint:function isMountpoint(node){return!!node.mounted;},isFile:function isFile(mode){return(mode&61440)===32768;},isDir:function isDir(mode){return(mode&61440)===16384;},isLink:function isLink(mode){return(mode&61440)===40960;},isChrdev:function isChrdev(mode){return(mode&61440)===8192;},isBlkdev:function isBlkdev(mode){return(mode&61440)===24576;},isFIFO:function isFIFO(mode){return(mode&61440)===4096;},isSocket:function isSocket(mode){return(mode&49152)===49152;},flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function modeStringToFlags(str){var flags=FS.flagModes[str];if(typeof flags==="undefined"){throw new Error("Unknown file open mode: "+str);}return flags;},flagsToPermissionString:function flagsToPermissionString(flag){var perms=["r","w","rw"][flag&3];if(flag&512){perms+="w";}return perms;},nodePermissions:function nodePermissions(node,perms){if(FS.ignorePermissions){return 0;}if(perms.indexOf("r")!==-1&&!(node.mode&292)){return 13;}else if(perms.indexOf("w")!==-1&&!(node.mode&146)){return 13;}else if(perms.indexOf("x")!==-1&&!(node.mode&73)){return 13;}return 0;},mayLookup:function mayLookup(dir){var err=FS.nodePermissions(dir,"x");if(err)return err;if(!dir.node_ops.lookup)return 13;return 0;},mayCreate:function mayCreate(dir,name){try{var node=FS.lookupNode(dir,name);return 17;}catch(e){}return FS.nodePermissions(dir,"wx");},mayDelete:function mayDelete(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name);}catch(e){return e.errno;}var err=FS.nodePermissions(dir,"wx");if(err){return err;}if(isdir){if(!FS.isDir(node.mode)){return 20;}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return 16;}}else{if(FS.isDir(node.mode)){return 21;}}return 0;},mayOpen:function mayOpen(node,flags){if(!node){return 2;}if(FS.isLink(node.mode)){return 40;}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!=="r"||flags&512){return 21;}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags));},MAX_OPEN_FDS:4096,nextfd:function nextfd(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd;}}throw new FS.ErrnoError(24);},getStream:function getStream(fd){return FS.streams[fd];},createStream:function createStream(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=function(){};FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:function get(){return this.node;},set:function set(val){this.node=val;}},isRead:{get:function get(){return(this.flags&2097155)!==1;}},isWrite:{get:function get(){return(this.flags&2097155)!==0;}},isAppend:{get:function get(){return this.flags&1024;}}});}var newStream=new FS.FSStream();for(var p in stream){newStream[p]=stream[p];}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream;},closeStream:function closeStream(fd){FS.streams[fd]=null;},chrdev_stream_ops:{open:function open(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream);}},llseek:function llseek(){throw new FS.ErrnoError(29);}},major:function major(dev){return dev>>8;},minor:function minor(dev){return dev&255;},makedev:function makedev(ma,mi){return ma<<8|mi;},registerDevice:function registerDevice(dev,ops){FS.devices[dev]={stream_ops:ops};},getDevice:function getDevice(dev){return FS.devices[dev];},getMounts:function getMounts(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts);}return mounts;},syncfs:function syncfs(populate,callback){if(typeof populate==="function"){callback=populate;populate=false;}FS.syncFSRequests++;if(FS.syncFSRequests>1){console.log("warning: "+FS.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(err){FS.syncFSRequests--;return callback(err);}function done(err){if(err){if(!done.errored){done.errored=true;return doCallback(err);}return;}if(++completed>=mounts.length){doCallback(null);}}mounts.forEach(function(mount){if(!mount.type.syncfs){return done(null);}mount.type.syncfs(mount,populate,done);});},mount:function mount(type,opts,mountpoint){var root=mountpoint==="/";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(16);}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(16);}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(20);}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot;}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount);}}return mountRoot;},unmount:function unmount(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(22);}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach(function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current);}current=next;}});node.mounted=null;var idx=node.mount.mounts.indexOf(mount);node.mount.mounts.splice(idx,1);},lookup:function lookup(parent,name){return parent.node_ops.lookup(parent,name);},mknod:function mknod(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name==="."||name===".."){throw new FS.ErrnoError(22);}var err=FS.mayCreate(parent,name);if(err){throw new FS.ErrnoError(err);}if(!parent.node_ops.mknod){throw new FS.ErrnoError(1);}return parent.node_ops.mknod(parent,name,mode,dev);},create:function create(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0);},mkdir:function mkdir(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0);},mkdirTree:function mkdirTree(path,mode){var dirs=path.split("/");var d="";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+="/"+dirs[i];try{FS.mkdir(d,mode);}catch(e){if(e.errno!=17)throw e;}}},mkdev:function mkdev(path,mode,dev){if(typeof dev==="undefined"){dev=mode;mode=438;}mode|=8192;return FS.mknod(path,mode,dev);},symlink:function symlink(oldpath,newpath){if(!PATH.resolve(oldpath)){throw new FS.ErrnoError(2);}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(2);}var newname=PATH.basename(newpath);var err=FS.mayCreate(parent,newname);if(err){throw new FS.ErrnoError(err);}if(!parent.node_ops.symlink){throw new FS.ErrnoError(1);}return parent.node_ops.symlink(parent,newname,oldpath);},rename:function rename(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node;}catch(e){throw new FS.ErrnoError(16);}if(!old_dir||!new_dir)throw new FS.ErrnoError(2);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(18);}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH.relative(old_path,new_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(22);}relative=PATH.relative(new_path,old_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(39);}var new_node;try{new_node=FS.lookupNode(new_dir,new_name);}catch(e){}if(old_node===new_node){return;}var isdir=FS.isDir(old_node.mode);var err=FS.mayDelete(old_dir,old_name,isdir);if(err){throw new FS.ErrnoError(err);}err=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(err){throw new FS.ErrnoError(err);}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(1);}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(16);}if(new_dir!==old_dir){err=FS.nodePermissions(old_dir,"w");if(err){throw new FS.ErrnoError(err);}}try{if(FS.trackingDelegate["willMovePath"]){FS.trackingDelegate["willMovePath"](old_path,new_path);}}catch(e){console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message);}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name);}catch(e){throw e;}finally{FS.hashAddNode(old_node);}try{if(FS.trackingDelegate["onMovePath"])FS.trackingDelegate["onMovePath"](old_path,new_path);}catch(e){console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message);}},rmdir:function rmdir(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,true);if(err){throw new FS.ErrnoError(err);}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(1);}if(FS.isMountpoint(node)){throw new FS.ErrnoError(16);}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path);}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message);}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path);}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message);}},readdir:function readdir(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(20);}return node.node_ops.readdir(node);},unlink:function unlink(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,false);if(err){throw new FS.ErrnoError(err);}if(!parent.node_ops.unlink){throw new FS.ErrnoError(1);}if(FS.isMountpoint(node)){throw new FS.ErrnoError(16);}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path);}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message);}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path);}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message);}},readlink:function readlink(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(2);}if(!link.node_ops.readlink){throw new FS.ErrnoError(22);}return PATH.resolve(FS.getPath(link.parent),link.node_ops.readlink(link));},stat:function stat(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(2);}if(!node.node_ops.getattr){throw new FS.ErrnoError(1);}return node.node_ops.getattr(node);},lstat:function lstat(path){return FS.stat(path,true);},chmod:function chmod(path,mode,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node;}else{node=path;}if(!node.node_ops.setattr){throw new FS.ErrnoError(1);}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()});},lchmod:function lchmod(path,mode){FS.chmod(path,mode,true);},fchmod:function fchmod(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(9);}FS.chmod(stream.node,mode);},chown:function chown(path,uid,gid,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node;}else{node=path;}if(!node.node_ops.setattr){throw new FS.ErrnoError(1);}node.node_ops.setattr(node,{timestamp:Date.now()});},lchown:function lchown(path,uid,gid){FS.chown(path,uid,gid,true);},fchown:function fchown(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(9);}FS.chown(stream.node,uid,gid);},truncate:function truncate(path,len){if(len<0){throw new FS.ErrnoError(22);}var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;}else{node=path;}if(!node.node_ops.setattr){throw new FS.ErrnoError(1);}if(FS.isDir(node.mode)){throw new FS.ErrnoError(21);}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(22);}var err=FS.nodePermissions(node,"w");if(err){throw new FS.ErrnoError(err);}node.node_ops.setattr(node,{size:len,timestamp:Date.now()});},ftruncate:function ftruncate(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(9);}if((stream.flags&2097155)===0){throw new FS.ErrnoError(22);}FS.truncate(stream.node,len);},utime:function utime(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)});},open:function open(path,flags,mode,fd_start,fd_end){if(path===""){throw new FS.ErrnoError(2);}flags=typeof flags==="string"?FS.modeStringToFlags(flags):flags;mode=typeof mode==="undefined"?438:mode;if(flags&64){mode=mode&4095|32768;}else{mode=0;}var node;if(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(path)==="object"){node=path;}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node;}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(17);}}else{node=FS.mknod(path,mode,0);created=true;}}if(!node){throw new FS.ErrnoError(2);}if(FS.isChrdev(node.mode)){flags&=~512;}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(20);}if(!created){var err=FS.mayOpen(node,flags);if(err){throw new FS.ErrnoError(err);}}if(flags&512){FS.truncate(node,0);}flags&=~(128|512);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream);}if(Module["logReadFiles"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;console.log("FS.trackingDelegate error on read file: "+path);}}try{if(FS.trackingDelegate["onOpenFile"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ;}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE;}FS.trackingDelegate["onOpenFile"](path,trackingFlags);}}catch(e){console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: "+e.message);}return stream;},close:function close(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(9);}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream);}}catch(e){throw e;}finally{FS.closeStream(stream.fd);}stream.fd=null;},isClosed:function isClosed(stream){return stream.fd===null;},llseek:function llseek(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(9);}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(29);}if(whence!=0&&whence!=1&&whence!=2){throw new FS.ErrnoError(22);}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position;},read:function read(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(22);}if(FS.isClosed(stream)){throw new FS.ErrnoError(9);}if((stream.flags&2097155)===1){throw new FS.ErrnoError(9);}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(21);}if(!stream.stream_ops.read){throw new FS.ErrnoError(22);}var seeking=typeof position!=="undefined";if(!seeking){position=stream.position;}else if(!stream.seekable){throw new FS.ErrnoError(29);}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead;},write:function write(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(22);}if(FS.isClosed(stream)){throw new FS.ErrnoError(9);}if((stream.flags&2097155)===0){throw new FS.ErrnoError(9);}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(21);}if(!stream.stream_ops.write){throw new FS.ErrnoError(22);}if(stream.flags&1024){FS.llseek(stream,0,2);}var seeking=typeof position!=="undefined";if(!seeking){position=stream.position;}else if(!stream.seekable){throw new FS.ErrnoError(29);}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate["onWriteToFile"])FS.trackingDelegate["onWriteToFile"](stream.path);}catch(e){console.log("FS.trackingDelegate['onWriteToFile']('"+stream.path+"') threw an exception: "+e.message);}return bytesWritten;},allocate:function allocate(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(9);}if(offset<0||length<=0){throw new FS.ErrnoError(22);}if((stream.flags&2097155)===0){throw new FS.ErrnoError(9);}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(19);}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(95);}stream.stream_ops.allocate(stream,offset,length);},mmap:function mmap(stream,buffer,offset,length,position,prot,flags){if((stream.flags&2097155)===1){throw new FS.ErrnoError(13);}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(19);}return stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags);},msync:function msync(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0;}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags);},munmap:function munmap(stream){return 0;},ioctl:function ioctl(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(25);}return stream.stream_ops.ioctl(stream,cmd,arg);},readFile:function readFile(path,opts){opts=opts||{};opts.flags=opts.flags||"r";opts.encoding=opts.encoding||"binary";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error('Invalid encoding type "'+opts.encoding+'"');}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding==="utf8"){ret=UTF8ArrayToString(buf,0);}else if(opts.encoding==="binary"){ret=buf;}FS.close(stream);return ret;},writeFile:function writeFile(path,data,opts){opts=opts||{};opts.flags=opts.flags||"w";var stream=FS.open(path,opts.flags,opts.mode);if(typeof data==="string"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn);}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn);}else{throw new Error("Unsupported data type");}FS.close(stream);},cwd:function cwd(){return FS.currentPath;},chdir:function chdir(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(2);}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(20);}var err=FS.nodePermissions(lookup.node,"x");if(err){throw new FS.ErrnoError(err);}FS.currentPath=lookup.path;},createDefaultDirectories:function createDefaultDirectories(){FS.mkdir("/tmp");FS.mkdir("/home");FS.mkdir("/home/web_user");},createDefaultDevices:function createDefaultDevices(){FS.mkdir("/dev");FS.registerDevice(FS.makedev(1,3),{read:function read(){return 0;},write:function write(stream,buffer,offset,length,pos){return length;}});FS.mkdev("/dev/null",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev("/dev/tty",FS.makedev(5,0));FS.mkdev("/dev/tty1",FS.makedev(6,0));var random_device;if((typeof crypto==="undefined"?"undefined":_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(crypto))==="object"&&typeof crypto["getRandomValues"]==="function"){var randomBuffer=new Uint8Array(1);random_device=function random_device(){crypto.getRandomValues(randomBuffer);return randomBuffer[0];};}else if(ENVIRONMENT_IS_NODE){try{var crypto_module=__webpack_require__(5);random_device=function random_device(){return crypto_module["randomBytes"](1)[0];};}catch(e){}}else{}if(!random_device){random_device=function random_device(){abort("random_device");};}FS.createDevice("/dev","random",random_device);FS.createDevice("/dev","urandom",random_device);FS.mkdir("/dev/shm");FS.mkdir("/dev/shm/tmp");},createSpecialDirectories:function createSpecialDirectories(){FS.mkdir("/proc");FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd");FS.mount({mount:function mount(){var node=FS.createNode("/proc/self","fd",16384|511,73);node.node_ops={lookup:function lookup(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(9);var ret={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:function readlink(){return stream.path;}}};ret.parent=ret;return ret;}};return node;}},{},"/proc/self/fd");},createStandardStreams:function createStandardStreams(){if(Module["stdin"]){FS.createDevice("/dev","stdin",Module["stdin"]);}else{FS.symlink("/dev/tty","/dev/stdin");}if(Module["stdout"]){FS.createDevice("/dev","stdout",null,Module["stdout"]);}else{FS.symlink("/dev/tty","/dev/stdout");}if(Module["stderr"]){FS.createDevice("/dev","stderr",null,Module["stderr"]);}else{FS.symlink("/dev/tty1","/dev/stderr");}var stdin=FS.open("/dev/stdin","r");var stdout=FS.open("/dev/stdout","w");var stderr=FS.open("/dev/stderr","w");},ensureErrnoError:function ensureErrnoError(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=function(errno){this.errno=errno;};this.setErrno(errno);this.message="FS error";if(this.stack)Object.defineProperty(this,"stack",{value:new Error().stack,writable:true});};FS.ErrnoError.prototype=new Error();FS.ErrnoError.prototype.constructor=FS.ErrnoError;[2].forEach(function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack="<generic error, no stack>";});},staticInit:function staticInit(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},"/");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={"MEMFS":MEMFS,"IDBFS":IDBFS,"NODEFS":NODEFS,"WORKERFS":WORKERFS};},init:function init(input,output,error){FS.init.initialized=true;FS.ensureErrnoError();Module["stdin"]=input||Module["stdin"];Module["stdout"]=output||Module["stdout"];Module["stderr"]=error||Module["stderr"];FS.createStandardStreams();},quit:function quit(){FS.init.initialized=false;var fflush=Module["_fflush"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue;}FS.close(stream);}},getMode:function getMode(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode;},joinPath:function joinPath(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]=="/")path=path.substr(1);return path;},absolutePath:function absolutePath(relative,base){return PATH.resolve(base,relative);},standardizePath:function standardizePath(path){return PATH.normalize(path);},findObject:function findObject(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object;}else{___setErrNo(ret.error);return null;}},analyzePath:function analyzePath(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path;}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path==="/";}catch(e){ret.error=e.errno;}return ret;},createFolder:function createFolder(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode);},createPath:function createPath(parent,path,canRead,canWrite){parent=typeof parent==="string"?parent:FS.getPath(parent);var parts=path.split("/").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current);}catch(e){}parent=current;}return current;},createFile:function createFile(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode);},createDataFile:function createDataFile(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==="string"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i){arr[i]=data.charCodeAt(i);}data=arr;}FS.chmod(node,mode|146);var stream=FS.open(node,"w");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode);}return node;},createDevice:function createDevice(parent,name,input,output){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:function open(stream){stream.seekable=false;},close:function close(stream){if(output&&output.buffer&&output.buffer.length){output(10);}},read:function read(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input();}catch(e){throw new FS.ErrnoError(5);}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(11);}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result;}if(bytesRead){stream.node.timestamp=Date.now();}return bytesRead;},write:function write(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i]);}catch(e){throw new FS.ErrnoError(5);}}if(length){stream.node.timestamp=Date.now();}return i;}});return FS.mkdev(path,mode,dev);},createLink:function createLink(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);return FS.symlink(target,path);},forceLoadFile:function forceLoadFile(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!=="undefined"){throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");}else if(Module["read"]){try{obj.contents=intArrayFromString(Module["read"](obj.url),true);obj.usedBytes=obj.contents.length;}catch(e){success=false;}}else{throw new Error("Cannot load without read() or XMLHttpRequest.");}if(!success)___setErrNo(5);return success;},createLazyFile:function createLazyFile(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[];}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined;}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset];};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter;};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest();xhr.open("HEAD",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var datalength=Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&header==="bytes";var usesGzip=(header=xhr.getResponseHeader("Content-Encoding"))&&header==="gzip";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=function doXHR(from,to){if(from>to)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(to>datalength-1)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest();xhr.open("GET",url,false);if(datalength!==chunkSize)xhr.setRequestHeader("Range","bytes="+from+"-"+to);if(typeof Uint8Array!="undefined")xhr.responseType="arraybuffer";if(xhr.overrideMimeType){xhr.overrideMimeType("text/plain; charset=x-user-defined");}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[]);}else{return intArrayFromString(xhr.responseText||"",true);}};var lazyArray=this;lazyArray.setDataGetter(function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==="undefined"){lazyArray.chunks[chunkNum]=doXHR(start,end);}if(typeof lazyArray.chunks[chunkNum]==="undefined")throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum];});if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;console.log("LazyFiles on gzip forces download of the whole file when length is accessed");}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true;};if(typeof XMLHttpRequest!=="undefined"){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array();Object.defineProperties(lazyArray,{length:{get:function get(){if(!this.lengthKnown){this.cacheLength();}return this._length;}},chunkSize:{get:function get(){if(!this.lengthKnown){this.cacheLength();}return this._chunkSize;}}});var properties={isDevice:false,contents:lazyArray};}else{var properties={isDevice:false,url:url};}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents;}else if(properties.url){node.contents=null;node.url=properties.url;}Object.defineProperties(node,{usedBytes:{get:function get(){return this.contents.length;}}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach(function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(5);}return fn.apply(null,arguments);};});stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(5);}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i];}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i);}}return size;};node.stream_ops=stream_ops;return node;},createPreloadedFile:function createPreloadedFile(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency("cp "+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn);}if(onload)onload();removeRunDependency(dep);}var handled=false;Module["preloadPlugins"].forEach(function(plugin){if(handled)return;if(plugin["canHandle"](fullname)){plugin["handle"](byteArray,fullname,finish,function(){if(onerror)onerror();removeRunDependency(dep);});handled=true;}});if(!handled)finish(byteArray);}addRunDependency(dep);if(typeof url=="string"){Browser.asyncLoad(url,function(byteArray){processData(byteArray);},onerror);}else{processData(url);}},indexedDB:function indexedDB(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;},DB_NAME:function DB_NAME(){return"EM_FS_"+window.location.pathname;},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function saveFilesToDB(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION);}catch(e){return onerror(e);}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){console.log("creating db");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME);};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],"readwrite");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror();}paths.forEach(function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish();};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish();};});transaction.onerror=onerror;};openRequest.onerror=onerror;},loadFilesFromDB:function loadFilesFromDB(paths,onload,onerror){onload=onload||function(){};onerror=onerror||function(){};var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION);}catch(e){return onerror(e);}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],"readonly");}catch(e){onerror(e);return;}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror();}paths.forEach(function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path);}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish();};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish();};});transaction.onerror=onerror;};openRequest.onerror=onerror;}};var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function calculateAt(dirfd,path){if(path[0]!=="/"){var dir;if(dirfd===-100){dir=FS.cwd();}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);dir=dirstream.path;}path=PATH.join2(dir,path);}return path;},doStat:function doStat(func,path,buf){try{var stat=func(path);}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-ERRNO_CODES.ENOTDIR;}throw e;}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;tempI64=[stat.size>>>0,(tempDouble=stat.size,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[buf+40>>2]=tempI64[0],HEAP32[buf+44>>2]=tempI64[1];HEAP32[buf+48>>2]=4096;HEAP32[buf+52>>2]=stat.blocks;HEAP32[buf+56>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+76>>2]=0;tempI64=[stat.ino>>>0,(tempDouble=stat.ino,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[buf+80>>2]=tempI64[0],HEAP32[buf+84>>2]=tempI64[1];return 0;},doMsync:function doMsync(addr,stream,len,flags){var buffer=new Uint8Array(HEAPU8.subarray(addr,addr+len));FS.msync(stream,buffer,0,len,flags);},doMkdir:function doMkdir(path,mode){path=PATH.normalize(path);if(path[path.length-1]==="/")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0;},doMknod:function doMknod(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-ERRNO_CODES.EINVAL;}FS.mknod(path,mode,dev);return 0;},doReadlink:function doReadlink(path,buf,bufsize){if(bufsize<=0)return-ERRNO_CODES.EINVAL;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len;},doAccess:function doAccess(path,amode){if(amode&~7){return-ERRNO_CODES.EINVAL;}var node;var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;var perms="";if(amode&4)perms+="r";if(amode&2)perms+="w";if(amode&1)perms+="x";if(perms&&FS.nodePermissions(node,perms)){return-ERRNO_CODES.EACCES;}return 0;},doDup:function doDup(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd;},doReadv:function doReadv(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break;}return ret;},doWritev:function doWritev(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;}return ret;},varargs:0,get:function get(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret;},getStr:function getStr(){var ret=UTF8ToString(SYSCALLS.get());return ret;},getStreamFromFD:function getStreamFromFD(){var stream=FS.getStream(SYSCALLS.get());if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return stream;},getSocketFromFD:function getSocketFromFD(){var socket=SOCKFS.getSocket(SYSCALLS.get());if(!socket)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return socket;},getSocketAddress:function getSocketAddress(allowNull){var addrp=SYSCALLS.get(),addrlen=SYSCALLS.get();if(allowNull&&addrp===0)return null;var info=__read_sockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info;},get64:function get64(){var low=SYSCALLS.get(),high=SYSCALLS.get();return low;},getZero:function getZero(){SYSCALLS.get();}};function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();if(!(offset_high==-1&&offset_low<0)&&!(offset_high==0&&offset_low>=0)){return-ERRNO_CODES.EOVERFLOW;}var offset=offset_low;FS.llseek(stream,offset,whence);tempI64=[stream.position>>>0,(tempDouble=stream.position,+Math_abs(tempDouble)>=+1?tempDouble>+0?(Math_min(+Math_floor(tempDouble/+4294967296),+4294967295)|0)>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/+4294967296)>>>0:0)],HEAP32[result>>2]=tempI64[0],HEAP32[result+4>>2]=tempI64[1];if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0;}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno;}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doWritev(stream,iov,iovcnt);}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno;}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0;}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno;}}function ___syscall91(which,varargs){SYSCALLS.varargs=varargs;try{var addr=SYSCALLS.get(),len=SYSCALLS.get();var info=SYSCALLS.mappings[addr];if(!info)return 0;if(len===info.len){var stream=FS.getStream(info.fd);SYSCALLS.doMsync(addr,stream,len,info.flags);FS.munmap(stream);SYSCALLS.mappings[addr]=null;if(info.allocated){_free(info.malloc);}}return 0;}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno;}}function ___unlock(){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+size);}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i);}embind_charCodes=codes;}var embind_charCodes=undefined;function readLatin1String(ptr){var ret="";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]];}return ret;}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return"_unknown";}name=name.replace(/[^a-zA-Z0-9_]/g,"$");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return"_"+name;}else{return name;}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function("body","return function "+name+"() {\n"+'    "use strict";'+"    return body.apply(this, arguments);\n"+"};\n")(body);}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+"\n"+stack.replace(/^Error(:[^\n]*)?\n/,"");}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name;}else{return this.name+": "+this.message;}};return errorClass;}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message);}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message);}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes;});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError("Mismatched type converter count");}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i]);}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach(function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt];}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[];}awaitingDependencies[dt].push(function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters);}});}});if(0===unregisteredTypes.length){onComplete(typeConverters);}}function registerType(rawType,registeredInstance,options){options=options||{};if(!("argPackAdvance"in registeredInstance)){throw new TypeError("registerType registeredInstance requires argPackAdvance");}var name=registeredInstance.name;if(!rawType){throwBindingError('type "'+name+'" must have a positive integer typeid pointer');}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return;}else{throwBindingError("Cannot register type '"+name+"' twice");}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(function(cb){cb();});}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,"fromWireType":function fromWireType(wt){return!!wt;},"toWireType":function toWireType(destructors,o){return o?trueValue:falseValue;},"argPackAdvance":8,"readValueFromPointer":function readValueFromPointer(pointer){var heap;if(size===1){heap=HEAP8;}else if(size===2){heap=HEAP16;}else if(size===4){heap=HEAP32;}else{throw new TypeError("Unknown boolean type size: "+name);}return this["fromWireType"](heap[pointer>>shift]);},destructorFunction:null});}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false;}if(!(other instanceof ClassHandle)){return false;}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass;}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass;}return leftClass===rightClass&&left===right;}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType};}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name;}throwBindingError(getInstanceTypeName(obj)+" instance already deleted");}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this);}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this;}else{var clone=Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}});clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone;}}function runDestructor(handle){var $$=handle.$$;if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr);}else{$$.ptrType.registeredClass.rawDestructor($$.ptr);}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this);}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError("Object already scheduled for deletion");}this.$$.count.value-=1;var toDelete=0===this.$$.count.value;if(toDelete){runDestructor(this);}if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined;}}function ClassHandle_isDeleted(){return!this.$$.ptr;}var delayFunction=undefined;var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj["delete"]();}}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this);}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError("Object already scheduled for deletion");}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes);}this.$$.deleteScheduled=true;return this;}function init_ClassHandle(){ClassHandle.prototype["isAliasOf"]=ClassHandle_isAliasOf;ClassHandle.prototype["clone"]=ClassHandle_clone;ClassHandle.prototype["delete"]=ClassHandle_delete;ClassHandle.prototype["isDeleted"]=ClassHandle_isDeleted;ClassHandle.prototype["deleteLater"]=ClassHandle_deleteLater;}function ClassHandle(){}var registeredPointers={};function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError("Function '"+humanName+"' called with an invalid number of arguments ("+arguments.length+") - expects one of ("+proto[methodName].overloadTable+")!");}return proto[methodName].overloadTable[arguments.length].apply(this,arguments);};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc;}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError("Cannot register public name '"+name+"' twice");}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError("Cannot register multiple overloads of a function with the same number of arguments ("+numArguments+")!");}Module[name].overloadTable[numArguments]=value;}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments;}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[];}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError("Expected null or instance of "+desiredClass.name+", got an instance of "+ptrClass.name);}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass;}return ptr;}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError("null is not a valid "+this.name);}return 0;}if(!handle.$$){throwBindingError('Cannot pass "'+_embind_repr(handle)+'" as a '+this.name);}if(!handle.$$.ptr){throwBindingError("Cannot pass deleted object as a pointer of type "+this.name);}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr;}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError("null is not a valid "+this.name);}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr);}return ptr;}else{return 0;}}if(!handle.$$){throwBindingError('Cannot pass "'+_embind_repr(handle)+'" as a '+this.name);}if(!handle.$$.ptr){throwBindingError("Cannot pass deleted object as a pointer of type "+this.name);}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError("Cannot convert argument of type "+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+" to parameter type "+this.name);}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError("Passing raw pointer to smart pointer is illegal");}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr;}else{throwBindingError("Cannot convert argument of type "+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+" to parameter type "+this.name);}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr;}else{var clonedHandle=handle["clone"]();ptr=this.rawShare(ptr,__emval_register(function(){clonedHandle["delete"]();}));if(destructors!==null){destructors.push(this.rawDestructor,ptr);}}break;default:throwBindingError("Unsupporting sharing policy");}}return ptr;}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError("null is not a valid "+this.name);}return 0;}if(!handle.$$){throwBindingError('Cannot pass "'+_embind_repr(handle)+'" as a '+this.name);}if(!handle.$$.ptr){throwBindingError("Cannot pass deleted object as a pointer of type "+this.name);}if(handle.$$.ptrType.isConst){throwBindingError("Cannot convert argument of type "+handle.$$.ptrType.name+" to parameter type "+this.name);}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr;}function simpleReadValueFromPointer(pointer){return this["fromWireType"](HEAPU32[pointer>>2]);}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr);}return ptr;}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr);}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle["delete"]();}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr;}if(undefined===desiredClass.baseClass){return null;}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null;}return desiredClass.downcast(rv);}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length;}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k]);}}return rv;}function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes);}}function init_embind(){Module["getInheritedInstanceCount"]=getInheritedInstanceCount;Module["getLiveInheritedInstances"]=getLiveInheritedInstances;Module["flushPendingDeletes"]=flushPendingDeletes;Module["setDelayFunction"]=setDelayFunction;}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError("ptr should not be undefined");}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass;}return ptr;}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr];}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError("makeClassHandle requires ptr and ptrType");}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError("Both smartPtrType and smartPtr must be specified");}record.count={value:1};return Object.create(prototype,{$$:{value:record}});}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null;}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance["clone"]();}else{var rv=registeredInstance["clone"]();this.destructor(ptr);return rv;}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr});}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr});}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this);}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType;}else{toType=registeredPointerRecord.pointerType;}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this);}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr});}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp});}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype["argPackAdvance"]=8;RegisteredPointer.prototype["readValueFromPointer"]=simpleReadValueFromPointer;RegisteredPointer.prototype["deleteObject"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype["fromWireType"]=RegisteredPointer_fromWireType;}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this["toWireType"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null;}else{this["toWireType"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null;}}else{this["toWireType"]=genericPointerToWireType;}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError("Replacing nonexistant public symbol");}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value;}else{Module[name]=value;Module[name].argCount=numArguments;}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(dynCall){var args=[];for(var i=1;i<signature.length;++i){args.push("a"+i);}var name="dynCall_"+signature+"_"+rawFunction;var body="return function "+name+"("+args.join(", ")+") {\n";body+="    return dynCall(rawFunction"+(args.length?", ":"")+args.join(", ")+");\n";body+="};\n";return new Function("dynCall","rawFunction",body)(dynCall,rawFunction);}var fp;if(Module["FUNCTION_TABLE_"+signature]!==undefined){fp=Module["FUNCTION_TABLE_"+signature][rawFunction];}else if(typeof FUNCTION_TABLE!=="undefined"){fp=FUNCTION_TABLE[rawFunction];}else{var dc=Module["dynCall_"+signature];if(dc===undefined){dc=Module["dynCall_"+signature.replace(/f/g,"d")];if(dc===undefined){throwBindingError("No dynCall invoker for signature: "+signature);}}fp=makeDynCaller(dc);}if(typeof fp!=="function"){throwBindingError("unknown function pointer with signature "+signature+": "+rawFunction);}return fp;}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv;}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return;}if(registeredTypes[type]){return;}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return;}unboundTypes.push(type);seen[type]=true;}types.forEach(visit);throw new UnboundTypeError(message+": "+unboundTypes.map(getTypeName).join([", "]));}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast);}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast);}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError("Cannot construct "+name+" due to unbound types",[baseClassRawType]);});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype;}else{basePrototype=ClassHandle.prototype;}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError("Use 'new' to construct "+name);}if(undefined===registeredClass.constructor_body){throw new BindingError(name+" has no accessible constructor");}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError("Tried to invoke ctor of "+name+" with invalid number of parameters ("+arguments.length+") - expected ("+Object.keys(registeredClass.constructor_body).toString()+") parameters instead!");}return body.apply(this,arguments);});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+"*",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+" const*",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter];});}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i]);}return array;}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr);}}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName="constructor "+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[];}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError("Cannot register multiple constructors with identical number of parameters ("+(argCount-1)+") for class '"+classType.name+"'! Overload resolution is currently only performed using the parameter count, not actual type info!");}classType.registeredClass.constructor_body[argCount-1]=function unboundTypeHandler(){throwUnboundTypeError("Cannot construct "+classType.name+" due to unbound types",rawArgTypes);};whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){classType.registeredClass.constructor_body[argCount-1]=function constructor_body(){if(arguments.length!==argCount-1){throwBindingError(humanName+" called with "+arguments.length+" arguments, expected "+(argCount-1));}var destructors=[];var args=new Array(argCount);args[0]=rawConstructor;for(var i=1;i<argCount;++i){args[i]=argTypes[i]["toWireType"](destructors,arguments[i-1]);}var ptr=invoker.apply(null,args);runDestructors(destructors);return argTypes[0]["fromWireType"](ptr);};return[];});return[];});}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError("new_ called with constructor type "+_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(constructor)+" which is not a function");}var dummy=createNamedFunction(constructor.name||"unknownFunctionName",function(){});dummy.prototype=constructor.prototype;var obj=new dummy();var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj;}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!");}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break;}}var returns=argTypes[0].name!=="void";var argsList="";var argsListWired="";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?", ":"")+"arg"+i;argsListWired+=(i!==0?", ":"")+"arg"+i+"Wired";}var invokerFnBody="return function "+makeLegalFunctionName(humanName)+"("+argsList+") {\n"+"if (arguments.length !== "+(argCount-2)+") {\n"+"throwBindingError('function "+humanName+" called with ' + arguments.length + ' arguments, expected "+(argCount-2)+" args!');\n"+"}\n";if(needsDestructorStack){invokerFnBody+="var destructors = [];\n";}var dtorStack=needsDestructorStack?"destructors":"null";var args1=["throwBindingError","invoker","fn","runDestructors","retType","classParam"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+="var thisWired = classParam.toWireType("+dtorStack+", this);\n";}for(var i=0;i<argCount-2;++i){invokerFnBody+="var arg"+i+"Wired = argType"+i+".toWireType("+dtorStack+", arg"+i+"); // "+argTypes[i+2].name+"\n";args1.push("argType"+i);args2.push(argTypes[i+2]);}if(isClassMethodFunc){argsListWired="thisWired"+(argsListWired.length>0?", ":"")+argsListWired;}invokerFnBody+=(returns?"var rv = ":"")+"invoker(fn"+(argsListWired.length>0?", ":"")+argsListWired+");\n";if(needsDestructorStack){invokerFnBody+="runDestructors(destructors);\n";}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?"thisWired":"arg"+(i-2)+"Wired";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+"_dtor("+paramName+"); // "+argTypes[i].name+"\n";args1.push(paramName+"_dtor");args2.push(argTypes[i].destructorFunction);}}}if(returns){invokerFnBody+="var ret = retType.fromWireType(rv);\n"+"return ret;\n";}else{}invokerFnBody+="}\n";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction;}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+"."+methodName;if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName);}function unboundTypesHandler(){throwUnboundTypeError("Cannot call "+humanName+" due to unbound types",rawArgTypes);}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler;}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler;}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction;}else{proto[methodName].overloadTable[argCount-2]=memberFunction;}return[];});return[];});}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle);}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count;}}return count;}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i];}}return null;}function init_emval(){Module["count_emval_handles"]=count_emval_handles;Module["get_first_emval"]=get_first_emval;}function __emval_register(value){switch(value){case undefined:{return 1;}case null:{return 2;}case true:{return 3;}case false:{return 4;}default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle;}}}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,"fromWireType":function fromWireType(handle){var rv=emval_handle_array[handle].value;__emval_decref(handle);return rv;},"toWireType":function toWireType(destructors,value){return __emval_register(value);},"argPackAdvance":8,"readValueFromPointer":simpleReadValueFromPointer,destructorFunction:null});}function _embind_repr(v){if(v===null){return"null";}var t=_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(v);if(t==="object"||t==="array"||t==="function"){return v.toString();}else{return""+v;}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this["fromWireType"](HEAPF32[pointer>>2]);};case 3:return function(pointer){return this["fromWireType"](HEAPF64[pointer>>3]);};default:throw new TypeError("Unknown float type: "+name);}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,"fromWireType":function fromWireType(value){return value;},"toWireType":function toWireType(destructors,value){if(typeof value!=="number"&&typeof value!=="boolean"){throw new TypeError('Cannot convert "'+_embind_repr(value)+'" to '+this.name);}return value;},"argPackAdvance":8,"readValueFromPointer":floatReadValueFromPointer(name,shift),destructorFunction:null});}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer];}:function readU8FromPointer(pointer){return HEAPU8[pointer];};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1];}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1];};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2];}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2];};default:throw new TypeError("Unknown integer type: "+name);}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295;}var shift=getShiftFromSize(size);var fromWireType=function fromWireType(value){return value;};if(minRange===0){var bitshift=32-8*size;fromWireType=function fromWireType(value){return value<<bitshift>>>bitshift;};}var isUnsignedType=name.indexOf("unsigned")!=-1;registerType(primitiveType,{name:name,"fromWireType":fromWireType,"toWireType":function toWireType(destructors,value){if(typeof value!=="number"&&typeof value!=="boolean"){throw new TypeError('Cannot convert "'+_embind_repr(value)+'" to '+this.name);}if(value<minRange||value>maxRange){throw new TypeError('Passing a number "'+_embind_repr(value)+'" from JS side to C/C++ side to an argument of type "'+name+'", which is outside the valid range ['+minRange+", "+maxRange+"]!");}return isUnsignedType?value>>>0:value|0;},"argPackAdvance":8,"readValueFromPointer":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null});}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(heap["buffer"],data,size);}name=readLatin1String(name);registerType(rawType,{name:name,"fromWireType":decodeMemoryView,"argPackAdvance":8,"readValueFromPointer":decodeMemoryView},{ignoreDuplicateRegistrations:true});}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name==="std::string";registerType(rawType,{name:name,"fromWireType":function fromWireType(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var endChar=HEAPU8[value+4+length];var endCharSwap=0;if(endChar!=0){endCharSwap=endChar;HEAPU8[value+4+length]=0;}var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(HEAPU8[currentBytePtr]==0){var stringSegment=UTF8ToString(decodeStartPtr);if(str===undefined)str=stringSegment;else{str+=String.fromCharCode(0);str+=stringSegment;}decodeStartPtr=currentBytePtr+1;}}if(endCharSwap!=0)HEAPU8[value+4+length]=endCharSwap;}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i]);}str=a.join("");}_free(value);return str;},"toWireType":function toWireType(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value);}var getLength;var valueIsOfTypeString=typeof value==="string";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError("Cannot pass non-string to std::string");}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=function getLength(){return lengthBytesUTF8(value);};}else{getLength=function getLength(){return value.length;};}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1);}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError("String has UTF-16 code units that do not fit in 8 bits");}HEAPU8[ptr+4+i]=charCode;}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i];}}}if(destructors!==null){destructors.push(_free,ptr);}return ptr;},"argPackAdvance":8,"readValueFromPointer":simpleReadValueFromPointer,destructorFunction:function destructorFunction(ptr){_free(ptr);}});}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var getHeap,shift;if(charSize===2){getHeap=function getHeap(){return HEAPU16;};shift=1;}else if(charSize===4){getHeap=function getHeap(){return HEAPU32;};shift=2;}registerType(rawType,{name:name,"fromWireType":function fromWireType(value){var HEAP=getHeap();var length=HEAPU32[value>>2];var a=new Array(length);var start=value+4>>shift;for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAP[start+i]);}_free(value);return a.join("");},"toWireType":function toWireType(destructors,value){var HEAP=getHeap();var length=value.length;var ptr=_malloc(4+length*charSize);HEAPU32[ptr>>2]=length;var start=ptr+4>>shift;for(var i=0;i<length;++i){HEAP[start+i]=value.charCodeAt(i);}if(destructors!==null){destructors.push(_free,ptr);}return ptr;},"argPackAdvance":8,"readValueFromPointer":simpleReadValueFromPointer,destructorFunction:function destructorFunction(ptr){_free(ptr);}});}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,"argPackAdvance":0,"fromWireType":function fromWireType(){return undefined;},"toWireType":function toWireType(destructors,o){return undefined;}});}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1;}}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+" has unknown type "+getTypeName(rawType));}return impl;}function __emval_take_value(type,argv){type=requireRegisteredType(type,"_emval_take_value");var v=type["readValueFromPointer"](argv);return __emval_register(v);}function _abort(){Module["abort"]();}function _emscripten_get_heap_size(){return HEAP8.length;}function abortOnCannotGrowMemory(requestedSize){abort("OOM");}function _emscripten_resize_heap(requestedSize){abortOnCannotGrowMemory(requestedSize);}var ENV={};function _getenv(name){if(name===0)return 0;name=UTF8ToString(name);if(!ENV.hasOwnProperty(name))return 0;if(_getenv.ret)_free(_getenv.ret);_getenv.ret=allocateUTF8(ENV[name]);return _getenv.ret;}function _llvm_exp2_f32(x){return Math.pow(2,x);}function _llvm_exp2_f64(a0){return _llvm_exp2_f32(a0);}function _llvm_stackrestore(p){var self=_llvm_stacksave;var ret=self.LLVM_SAVEDSTACKS[p];self.LLVM_SAVEDSTACKS.splice(p,1);stackRestore(ret);}function _llvm_stacksave(){var self=_llvm_stacksave;if(!self.LLVM_SAVEDSTACKS){self.LLVM_SAVEDSTACKS=[];}self.LLVM_SAVEDSTACKS.push(stackSave());return self.LLVM_SAVEDSTACKS.length-1;}function _llvm_trap(){abort("trap!");}function _longjmp(env,value){_setThrew(env,value||1);throw"longjmp";}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);}function _pthread_cond_wait(){return 0;}var _sqrt=Math_sqrt;function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0);}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]){;}return sum;}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1);}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1);}}else{newDate.setDate(newDate.getDate()+days);return newDate;}}return newDate;}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?UTF8ToString(tm_zone):""};var pattern=UTF8ToString(format);var EXPANSION_RULES_1={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_1[rule]);}var WEEKDAYS=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];var MONTHS=["January","February","March","April","May","June","July","August","September","October","November","December"];function leadingSomething(value,digits,character){var str=typeof value==="number"?value.toString():value||"";while(str.length<digits){str=character[0]+str;}return str;}function leadingNulls(value,digits){return leadingSomething(value,digits,"0");}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0;}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate());}}return compare;}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30);}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1;}else{return thisDate.getFullYear();}}else{return thisDate.getFullYear()-1;}}var EXPANSION_RULES_2={"%a":function a(date){return WEEKDAYS[date.tm_wday].substring(0,3);},"%A":function A(date){return WEEKDAYS[date.tm_wday];},"%b":function b(date){return MONTHS[date.tm_mon].substring(0,3);},"%B":function B(date){return MONTHS[date.tm_mon];},"%C":function C(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2);},"%d":function d(date){return leadingNulls(date.tm_mday,2);},"%e":function e(date){return leadingSomething(date.tm_mday,2," ");},"%g":function g(date){return getWeekBasedYear(date).toString().substring(2);},"%G":function G(date){return getWeekBasedYear(date);},"%H":function H(date){return leadingNulls(date.tm_hour,2);},"%I":function I(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2);},"%j":function j(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3);},"%m":function m(date){return leadingNulls(date.tm_mon+1,2);},"%M":function M(date){return leadingNulls(date.tm_min,2);},"%n":function n(){return"\n";},"%p":function p(date){if(date.tm_hour>=0&&date.tm_hour<12){return"AM";}else{return"PM";}},"%S":function S(date){return leadingNulls(date.tm_sec,2);},"%t":function t(){return"\t";},"%u":function u(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay()||7;},"%U":function U(date){var janFirst=new Date(date.tm_year+1900,0,1);var firstSunday=janFirst.getDay()===0?janFirst:__addDays(janFirst,7-janFirst.getDay());var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstSunday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstSundayUntilEndJanuary=31-firstSunday.getDate();var days=firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2);}return compareByDay(firstSunday,janFirst)===0?"01":"00";},"%V":function V(date){var janFourthThisYear=new Date(date.tm_year+1900,0,4);var janFourthNextYear=new Date(date.tm_year+1901,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);var endDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);if(compareByDay(endDate,firstWeekStartThisYear)<0){return"53";}if(compareByDay(firstWeekStartNextYear,endDate)<=0){return"01";}var daysDifference;if(firstWeekStartThisYear.getFullYear()<date.tm_year+1900){daysDifference=date.tm_yday+32-firstWeekStartThisYear.getDate();}else{daysDifference=date.tm_yday+1-firstWeekStartThisYear.getDate();}return leadingNulls(Math.ceil(daysDifference/7),2);},"%w":function w(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay();},"%W":function W(date){var janFirst=new Date(date.tm_year,0,1);var firstMonday=janFirst.getDay()===1?janFirst:__addDays(janFirst,janFirst.getDay()===0?1:7-janFirst.getDay()+1);var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstMonday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstMondayUntilEndJanuary=31-firstMonday.getDate();var days=firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2);}return compareByDay(firstMonday,janFirst)===0?"01":"00";},"%y":function y(date){return(date.tm_year+1900).toString().substring(2);},"%Y":function Y(date){return date.tm_year+1900;},"%z":function z(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?"+":"-")+String("0000"+off).slice(-4);},"%Z":function Z(date){return date.tm_zone;},"%%":function _(){return"%";}};for(var rule in EXPANSION_RULES_2){if(pattern.indexOf(rule)>=0){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_2[rule](date));}}var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0;}writeArrayToMemory(bytes,s);return bytes.length-1;}function _strftime_l(s,maxsize,format,tm){return _strftime(s,maxsize,format,tm);}FS.staticInit();if(ENVIRONMENT_IS_NODE){var fs=__webpack_require__(5);var NODEJS_PATH=__webpack_require__(5);NODEFS.staticInit();}embind_init_charCodes();BindingError=Module["BindingError"]=extendError(Error,"BindingError");InternalError=Module["InternalError"]=extendError(Error,"InternalError");init_ClassHandle();init_RegisteredPointer();init_embind();UnboundTypeError=Module["UnboundTypeError"]=extendError(Error,"UnboundTypeError");init_emval();var ASSERTIONS=false;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array;}function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){if(ASSERTIONS){assert(false,"Character code "+chr+" ("+String.fromCharCode(chr)+")  at offset "+i+" not in 0x00-0xFF.");}chr&=255;}ret.push(String.fromCharCode(chr));}return ret.join("");}var decodeBase64=typeof atob==="function"?atob:function(input){var keyStr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";var output="";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2);}if(enc4!==64){output=output+String.fromCharCode(chr3);}}while(i<input.length);return output;};function intArrayFromBase64(s){if(typeof ENVIRONMENT_IS_NODE==="boolean"&&ENVIRONMENT_IS_NODE){var buf;try{buf=Buffer.from(s,"base64");}catch(_){buf=new Buffer(s,"base64");}return new Uint8Array(buf.buffer,buf.byteOffset,buf.byteLength);}try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i);}return bytes;}catch(_){throw new Error("Converting base64 string to bytes failed.");}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return;}return intArrayFromBase64(filename.slice(dataURIPrefix.length));}function invoke_dd(index,a1){var sp=stackSave();try{return dynCall_dd(index,a1);}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0);}}function invoke_ddd(index,a1,a2){var sp=stackSave();try{return dynCall_ddd(index,a1,a2);}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0);}}function invoke_ddi(index,a1,a2){var sp=stackSave();try{return dynCall_ddi(index,a1,a2);}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0);}}function invoke_ii(index,a1){var sp=stackSave();try{return dynCall_ii(index,a1);}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0);}}function invoke_vi(index,a1){var sp=stackSave();try{dynCall_vi(index,a1);}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0);}}function invoke_vid(index,a1,a2){var sp=stackSave();try{dynCall_vid(index,a1,a2);}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0);}}function invoke_viddi(index,a1,a2,a3,a4){var sp=stackSave();try{dynCall_viddi(index,a1,a2,a3,a4);}catch(e){stackRestore(sp);if(e!==e+0&&e!=="longjmp")throw e;_setThrew(1,0);}}var asmGlobalArg={"Math":Math,"Int8Array":Int8Array,"Int16Array":Int16Array,"Int32Array":Int32Array,"Uint8Array":Uint8Array,"Uint16Array":Uint16Array,"Float32Array":Float32Array,"Float64Array":Float64Array,"NaN":NaN,Infinity:Infinity};var asmLibraryArg={"a":abort,"b":setTempRet0,"c":getTempRet0,"d":invoke_dd,"e":invoke_ddd,"f":invoke_ddi,"g":invoke_ii,"h":invoke_vi,"i":invoke_vid,"j":invoke_viddi,"k":ClassHandle,"l":ClassHandle_clone,"m":ClassHandle_delete,"n":ClassHandle_deleteLater,"o":ClassHandle_isAliasOf,"p":ClassHandle_isDeleted,"q":RegisteredClass,"r":RegisteredPointer,"s":RegisteredPointer_deleteObject,"t":RegisteredPointer_destructor,"u":RegisteredPointer_fromWireType,"v":RegisteredPointer_getPointee,"w":___cxa_allocate_exception,"x":___cxa_begin_catch,"y":___cxa_find_matching_catch,"z":___cxa_free_exception,"A":___cxa_pure_virtual,"B":___cxa_throw,"C":___cxa_uncaught_exception,"D":___gxx_personality_v0,"E":___lock,"F":___map_file,"G":___resumeException,"H":___setErrNo,"I":___syscall140,"J":___syscall146,"K":___syscall6,"L":___syscall91,"M":___unlock,"N":__addDays,"O":__arraySum,"P":__embind_register_bool,"Q":__embind_register_class,"R":__embind_register_class_constructor,"S":__embind_register_class_function,"T":__embind_register_emval,"U":__embind_register_float,"V":__embind_register_integer,"W":__embind_register_memory_view,"X":__embind_register_std_string,"Y":__embind_register_std_wstring,"Z":__embind_register_void,"_":__emval_decref,"$":__emval_incref,"aa":__emval_register,"ab":__emval_take_value,"ac":__isLeapYear,"ad":_abort,"ae":_embind_repr,"af":_emscripten_get_heap_size,"ag":_emscripten_memcpy_big,"ah":_emscripten_resize_heap,"ai":_getenv,"aj":_llvm_exp2_f32,"ak":_llvm_exp2_f64,"al":_llvm_stackrestore,"am":_llvm_stacksave,"an":_llvm_trap,"ao":_longjmp,"ap":_pthread_cond_wait,"aq":_sqrt,"ar":_strftime,"as":_strftime_l,"at":abortOnCannotGrowMemory,"au":constNoSmartPtrRawPointerToWireType,"av":count_emval_handles,"aw":craftInvokerFunction,"ax":createNamedFunction,"ay":downcastPointer,"az":embind__requireFunction,"aA":embind_init_charCodes,"aB":ensureOverloadTable,"aC":exposePublicSymbol,"aD":extendError,"aE":floatReadValueFromPointer,"aF":flushPendingDeletes,"aG":genericPointerToWireType,"aH":getBasestPointer,"aI":getInheritedInstance,"aJ":getInheritedInstanceCount,"aK":getLiveInheritedInstances,"aL":getShiftFromSize,"aM":getTypeName,"aN":get_first_emval,"aO":heap32VectorToArray,"aP":init_ClassHandle,"aQ":init_RegisteredPointer,"aR":init_embind,"aS":init_emval,"aT":integerReadValueFromPointer,"aU":makeClassHandle,"aV":makeLegalFunctionName,"aW":new_,"aX":nonConstNoSmartPtrRawPointerToWireType,"aY":readLatin1String,"aZ":registerType,"a_":replacePublicSymbol,"a$":requireRegisteredType,"ba":runDestructor,"bb":runDestructors,"bc":setDelayFunction,"bd":shallowCopyInternalPointer,"be":simpleReadValueFromPointer,"bf":throwBindingError,"bg":throwInstanceAlreadyDeleted,"bh":throwInternalError,"bi":throwUnboundTypeError,"bj":upcastPointer,"bk":whenDependentTypesAreResolved,"bl":tempDoublePtr,"bm":DYNAMICTOP_PTR};// EMSCRIPTEN_START_ASM
var asm=/** @suppress {uselessCode} */function(global,env,buffer){"use asm";var a=new global.Int8Array(buffer),b=new global.Int16Array(buffer),c=new global.Int32Array(buffer),d=new global.Uint8Array(buffer),e=new global.Uint16Array(buffer),f=new global.Float32Array(buffer),g=new global.Float64Array(buffer),h=env.bl|0,i=env.bm|0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=global.NaN,s=global.Infinity,t=global.Math.floor,u=global.Math.abs,v=global.Math.sqrt,w=global.Math.pow,x=global.Math.sin,y=global.Math.atan,z=global.Math.exp,A=global.Math.log,B=global.Math.ceil,C=global.Math.imul,D=global.Math.clz32,E=env.a,F=env.b,G=env.c,H=env.d,I=env.e,J=env.f,K=env.g,L=env.h,M=env.i,N=env.j,O=env.k,P=env.l,Q=env.m,R=env.n,S=env.o,T=env.p,U=env.q,V=env.r,W=env.s,X=env.t,Y=env.u,Z=env.v,_=env.w,$=env.x,aa=env.y,ba=env.z,ca=env.A,da=env.B,ea=env.C,fa=env.D,ga=env.E,ha=env.F,ia=env.G,ja=env.H,ka=env.I,la=env.J,ma=env.K,na=env.L,oa=env.M,pa=env.N,qa=env.O,ra=env.P,sa=env.Q,ta=env.R,ua=env.S,va=env.T,wa=env.U,xa=env.V,ya=env.W,za=env.X,Aa=env.Y,Ba=env.Z,Ca=env._,Da=env.$,Ea=env.aa,Fa=env.ab,Ga=env.ac,Ha=env.ad,Ia=env.ae,Ja=env.af,Ka=env.ag,La=env.ah,Ma=env.ai,Na=env.aj,Oa=env.ak,Pa=env.al,Qa=env.am,Ra=env.an,Sa=env.ao,Ta=env.ap,Ua=env.aq,Va=env.ar,Wa=env.as,Xa=env.at,Ya=env.au,Za=env.av,_a=env.aw,$a=env.ax,ab=env.ay,bb=env.az,cb=env.aA,db=env.aB,eb=env.aC,fb=env.aD,gb=env.aE,hb=env.aF,ib=env.aG,jb=env.aH,kb=env.aI,lb=env.aJ,mb=env.aK,nb=env.aL,ob=env.aM,pb=env.aN,qb=env.aO,rb=env.aP,sb=env.aQ,tb=env.aR,ub=env.aS,vb=env.aT,wb=env.aU,xb=env.aV,yb=env.aW,zb=env.aX,Ab=env.aY,Bb=env.aZ,Cb=env.a_,Db=env.a$,Eb=env.ba,Fb=env.bb,Gb=env.bc,Hb=env.bd,Ib=env.be,Jb=env.bf,Kb=env.bg,Lb=env.bh,Mb=env.bi,Nb=env.bj,Ob=env.bk,Pb=31056,Qb=5273936,Rb=0.0;// EMSCRIPTEN_START_FUNCS
function xs(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;D=Pb;Pb=Pb+240|0;s=D+160|0;t=D+231|0;u=D+230|0;C=D+216|0;B=D+204|0;v=D+200|0;w=D;x=D+196|0;y=D+192|0;z=D+229|0;r=D+228|0;ts(C,f,s,t,u);c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[B+(b<<2)>>2]=0;b=b+1|0;}p=B+11|0;q=B+8|0;if((a[p>>0]|0)<0)b=(c[q>>2]&2147483647)+-1|0;else b=10;MA(B,b,0);b=(a[p>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b;c[x>>2]=w;c[y>>2]=0;a[z>>0]=1;a[r>>0]=69;o=B+4|0;k=c[d>>2]|0;j=k;a:while(1){if(k){f=c[k+12>>2]|0;if((f|0)==(c[k+16>>2]|0))f=Yb[c[(c[k>>2]|0)+36>>2]&127](k)|0;else f=Vc(a[f>>0]|0)|0;if(id(f,ad()|0)|0){c[d>>2]=0;n=0;l=1;k=0;}else{n=j;l=0;}}else{n=0;l=1;k=0;}j=c[e>>2]|0;do{if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Vc(a[f>>0]|0)|0;if(!(id(f,ad()|0)|0)){if(l)break;else break a;}else{c[e>>2]=0;E=19;break;}}else E=19;}while(0);if((E|0)==19){E=0;if(l){j=0;break;}else j=0;}f=a[p>>0]|0;f=f<<24>>24<0?c[o>>2]|0:f&255;if((c[v>>2]|0)==(b+f|0)){MA(B,f<<1,0);if((a[p>>0]|0)<0)b=(c[q>>2]&2147483647)+-1|0;else b=10;MA(B,b,0);b=(a[p>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b+f;}l=k+12|0;f=c[l>>2]|0;m=k+16|0;if((f|0)==(c[m>>2]|0))f=Yb[c[(c[k>>2]|0)+36>>2]&127](k)|0;else f=Vc(a[f>>0]|0)|0;if(us(f&255,z,r,b,v,a[t>>0]|0,a[u>>0]|0,C,w,x,y,s)|0)break;f=c[l>>2]|0;if((f|0)==(c[m>>2]|0))Yb[c[(c[k>>2]|0)+40>>2]&127](k)|0;else{c[l>>2]=f+1;Vc(a[f>>0]|0)|0;}j=n;}u=a[C+11>>0]|0;if(!((a[z>>0]|0)==0?1:((u<<24>>24<0?c[C+4>>2]|0:u&255)|0)==0)?(A=c[x>>2]|0,(A-w|0)<160):0){z=c[y>>2]|0;c[x>>2]=A+4;c[A>>2]=z;}g[i>>3]=+ys(b,c[v>>2]|0,h);ws(C,w,c[x>>2]|0,h);if(k){b=c[k+12>>2]|0;if((b|0)==(c[k+16>>2]|0))b=Yb[c[(c[n>>2]|0)+36>>2]&127](k)|0;else b=Vc(a[b>>0]|0)|0;if(id(b,ad()|0)|0){c[d>>2]=0;f=1;}else f=0;}else f=1;do{if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else b=Vc(a[b>>0]|0)|0;if(!(id(b,ad()|0)|0)){if(f)break;else{E=50;break;}}else{c[e>>2]=0;E=48;break;}}else E=48;}while(0);if((E|0)==48?f:0)E=50;if((E|0)==50)c[h>>2]=c[h>>2]|2;E=c[d>>2]|0;GA(B);GA(C);Pb=D;return E|0;}function ys(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0,g=0,h=0,i=0;i=Pb;Pb=Pb+16|0;f=i;if((a|0)==(b|0)){c[d>>2]=4;e=0.0;}else{g=c[(wo()|0)>>2]|0;c[(wo()|0)>>2]=0;e=+vq(a,f,ks()|0);a=c[(wo()|0)>>2]|0;if(!a)c[(wo()|0)>>2]=g;if((c[f>>2]|0)==(b|0)){if((a|0)==34)h=6;}else{e=0.0;h=6;}if((h|0)==6)c[d>>2]=4;}Pb=i;return+e;}function zs(b,d,e,g,h,i){b=b|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;D=Pb;Pb=Pb+240|0;s=D+160|0;t=D+231|0;u=D+230|0;C=D+216|0;B=D+204|0;v=D+200|0;w=D;x=D+196|0;y=D+192|0;z=D+229|0;r=D+228|0;ts(C,g,s,t,u);c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[B+(b<<2)>>2]=0;b=b+1|0;}p=B+11|0;q=B+8|0;if((a[p>>0]|0)<0)b=(c[q>>2]&2147483647)+-1|0;else b=10;MA(B,b,0);b=(a[p>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b;c[x>>2]=w;c[y>>2]=0;a[z>>0]=1;a[r>>0]=69;o=B+4|0;k=c[d>>2]|0;j=k;a:while(1){if(k){g=c[k+12>>2]|0;if((g|0)==(c[k+16>>2]|0))g=Yb[c[(c[k>>2]|0)+36>>2]&127](k)|0;else g=Vc(a[g>>0]|0)|0;if(id(g,ad()|0)|0){c[d>>2]=0;n=0;l=1;k=0;}else{n=j;l=0;}}else{n=0;l=1;k=0;}j=c[e>>2]|0;do{if(j){g=c[j+12>>2]|0;if((g|0)==(c[j+16>>2]|0))g=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else g=Vc(a[g>>0]|0)|0;if(!(id(g,ad()|0)|0)){if(l)break;else break a;}else{c[e>>2]=0;E=19;break;}}else E=19;}while(0);if((E|0)==19){E=0;if(l){j=0;break;}else j=0;}g=a[p>>0]|0;g=g<<24>>24<0?c[o>>2]|0:g&255;if((c[v>>2]|0)==(b+g|0)){MA(B,g<<1,0);if((a[p>>0]|0)<0)b=(c[q>>2]&2147483647)+-1|0;else b=10;MA(B,b,0);b=(a[p>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b+g;}l=k+12|0;g=c[l>>2]|0;m=k+16|0;if((g|0)==(c[m>>2]|0))g=Yb[c[(c[k>>2]|0)+36>>2]&127](k)|0;else g=Vc(a[g>>0]|0)|0;if(us(g&255,z,r,b,v,a[t>>0]|0,a[u>>0]|0,C,w,x,y,s)|0)break;g=c[l>>2]|0;if((g|0)==(c[m>>2]|0))Yb[c[(c[k>>2]|0)+40>>2]&127](k)|0;else{c[l>>2]=g+1;Vc(a[g>>0]|0)|0;}j=n;}u=a[C+11>>0]|0;if(!((a[z>>0]|0)==0?1:((u<<24>>24<0?c[C+4>>2]|0:u&255)|0)==0)?(A=c[x>>2]|0,(A-w|0)<160):0){z=c[y>>2]|0;c[x>>2]=A+4;c[A>>2]=z;}f[i>>2]=+As(b,c[v>>2]|0,h);ws(C,w,c[x>>2]|0,h);if(k){b=c[k+12>>2]|0;if((b|0)==(c[k+16>>2]|0))b=Yb[c[(c[n>>2]|0)+36>>2]&127](k)|0;else b=Vc(a[b>>0]|0)|0;if(id(b,ad()|0)|0){c[d>>2]=0;g=1;}else g=0;}else g=1;do{if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else b=Vc(a[b>>0]|0)|0;if(!(id(b,ad()|0)|0)){if(g)break;else{E=50;break;}}else{c[e>>2]=0;E=48;break;}}else E=48;}while(0);if((E|0)==48?g:0)E=50;if((E|0)==50)c[h>>2]=c[h>>2]|2;E=c[d>>2]|0;GA(B);GA(C);Pb=D;return E|0;}function As(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0,g=0,h=0,i=0;i=Pb;Pb=Pb+16|0;f=i;if((a|0)==(b|0)){c[d>>2]=4;e=0.0;}else{g=c[(wo()|0)>>2]|0;c[(wo()|0)>>2]=0;e=+uq(a,f,ks()|0);a=c[(wo()|0)>>2]|0;if(!a)c[(wo()|0)>>2]=g;if((c[f>>2]|0)==(b|0)){if((a|0)==34)h=6;}else{e=0.0;h=6;}if((h|0)==6)c[d>>2]=4;}Pb=i;return+e;}function Bs(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=Pb;Pb=Pb+240|0;r=B+224|0;y=B+212|0;z=B+200|0;s=B+196|0;t=B;v=B+192|0;w=B+188|0;x=Cs(f)|0;q=Ds(b,f,B+160|0)|0;Es(y,f,r);c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[z+(b<<2)>>2]=0;b=b+1|0;}o=z+11|0;p=z+8|0;if((a[o>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;MA(z,b,0);b=(a[o>>0]|0)<0?c[z>>2]|0:z;c[s>>2]=b;c[v>>2]=t;c[w>>2]=0;n=z+4|0;j=c[d>>2]|0;i=j;a:while(1){if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Vc(a[f>>0]|0)|0;if(id(f,ad()|0)|0){c[d>>2]=0;m=0;k=1;j=0;}else{m=i;k=0;}}else{m=0;k=1;j=0;}i=c[e>>2]|0;do{if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Vc(a[f>>0]|0)|0;if(!(id(f,ad()|0)|0)){if(k)break;else break a;}else{c[e>>2]=0;A=19;break;}}else A=19;}while(0);if((A|0)==19){A=0;if(k){i=0;break;}else i=0;}f=a[o>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[s>>2]|0)==(b+f|0)){MA(z,f<<1,0);if((a[o>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;MA(z,b,0);b=(a[o>>0]|0)<0?c[z>>2]|0:z;c[s>>2]=b+f;}k=j+12|0;f=c[k>>2]|0;l=j+16|0;if((f|0)==(c[l>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Vc(a[f>>0]|0)|0;if(js(f&255,x,b,s,w,a[r>>0]|0,y,t,v,q)|0)break;f=c[k>>2]|0;if((f|0)==(c[l>>2]|0))Yb[c[(c[j>>2]|0)+40>>2]&127](j)|0;else{c[k>>2]=f+1;Vc(a[f>>0]|0)|0;}i=m;}r=a[y+11>>0]|0;if((r<<24>>24<0?c[y+4>>2]|0:r&255)|0?(u=c[v>>2]|0,(u-t|0)<160):0){w=c[w>>2]|0;c[v>>2]=u+4;c[u>>2]=w;}w=Fs(b,c[s>>2]|0,g,x)|0;x=G()|0;c[h>>2]=w;c[h+4>>2]=x;ws(y,t,c[v>>2]|0,g);if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=Yb[c[(c[m>>2]|0)+36>>2]&127](j)|0;else b=Vc(a[b>>0]|0)|0;if(id(b,ad()|0)|0){c[d>>2]=0;f=1;}else f=0;}else f=1;do{if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=Vc(a[b>>0]|0)|0;if(!(id(b,ad()|0)|0)){if(f)break;else{A=50;break;}}else{c[e>>2]=0;A=48;break;}}else A=48;}while(0);if((A|0)==48?f:0)A=50;if((A|0)==50)c[g>>2]=c[g>>2]|2;A=c[d>>2]|0;GA(z);GA(y);Pb=B;return A|0;}function Cs(a){a=a|0;switch(c[a+4>>2]&74){case 64:{a=8;break;}case 8:{a=16;break;}case 0:{a=0;break;}default:a=10;}return a|0;}function Ds(a,b,c){a=a|0;b=b|0;c=c|0;return Gs(a,b,c)|0;}function Es(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0;f=Pb;Pb=Pb+16|0;g=f;zr(g,d);d=hs(g,30388)|0;a[e>>0]=Yb[c[(c[d>>2]|0)+16>>2]&127](d)|0;nc[c[(c[d>>2]|0)+20>>2]&63](b,d);is(g);Pb=f;return;}function Fs(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;k=Pb;Pb=Pb+16|0;h=k;do{if((b|0)==(d|0)){c[e>>2]=4;f=0;b=0;}else{if((a[b>>0]|0)==45){c[e>>2]=4;f=0;b=0;break;}i=c[(wo()|0)>>2]|0;c[(wo()|0)>>2]=0;b=fq(b,h,f,ks()|0)|0;f=G()|0;g=c[(wo()|0)>>2]|0;if(!g)c[(wo()|0)>>2]=i;if((c[h>>2]|0)==(d|0)){if((g|0)==34){b=-1;f=-1;j=8;}}else{b=0;f=0;j=8;}if((j|0)==8)c[e>>2]=4;}}while(0);F(f|0);Pb=k;return b|0;}function Gs(a,b,c){a=a|0;b=b|0;c=c|0;return 6288;}function Hs(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=Pb;Pb=Pb+240|0;r=B+224|0;y=B+212|0;z=B+200|0;s=B+196|0;t=B;v=B+192|0;w=B+188|0;x=Cs(f)|0;q=Ds(b,f,B+160|0)|0;Es(y,f,r);c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[z+(b<<2)>>2]=0;b=b+1|0;}o=z+11|0;p=z+8|0;if((a[o>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;MA(z,b,0);b=(a[o>>0]|0)<0?c[z>>2]|0:z;c[s>>2]=b;c[v>>2]=t;c[w>>2]=0;n=z+4|0;j=c[d>>2]|0;i=j;a:while(1){if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Vc(a[f>>0]|0)|0;if(id(f,ad()|0)|0){c[d>>2]=0;m=0;k=1;j=0;}else{m=i;k=0;}}else{m=0;k=1;j=0;}i=c[e>>2]|0;do{if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Vc(a[f>>0]|0)|0;if(!(id(f,ad()|0)|0)){if(k)break;else break a;}else{c[e>>2]=0;A=19;break;}}else A=19;}while(0);if((A|0)==19){A=0;if(k){i=0;break;}else i=0;}f=a[o>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[s>>2]|0)==(b+f|0)){MA(z,f<<1,0);if((a[o>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;MA(z,b,0);b=(a[o>>0]|0)<0?c[z>>2]|0:z;c[s>>2]=b+f;}k=j+12|0;f=c[k>>2]|0;l=j+16|0;if((f|0)==(c[l>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Vc(a[f>>0]|0)|0;if(js(f&255,x,b,s,w,a[r>>0]|0,y,t,v,q)|0)break;f=c[k>>2]|0;if((f|0)==(c[l>>2]|0))Yb[c[(c[j>>2]|0)+40>>2]&127](j)|0;else{c[k>>2]=f+1;Vc(a[f>>0]|0)|0;}i=m;}r=a[y+11>>0]|0;if((r<<24>>24<0?c[y+4>>2]|0:r&255)|0?(u=c[v>>2]|0,(u-t|0)<160):0){w=c[w>>2]|0;c[v>>2]=u+4;c[u>>2]=w;}c[h>>2]=Is(b,c[s>>2]|0,g,x)|0;ws(y,t,c[v>>2]|0,g);if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=Yb[c[(c[m>>2]|0)+36>>2]&127](j)|0;else b=Vc(a[b>>0]|0)|0;if(id(b,ad()|0)|0){c[d>>2]=0;f=1;}else f=0;}else f=1;do{if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=Vc(a[b>>0]|0)|0;if(!(id(b,ad()|0)|0)){if(f)break;else{A=50;break;}}else{c[e>>2]=0;A=48;break;}}else A=48;}while(0);if((A|0)==48?f:0)A=50;if((A|0)==50)c[g>>2]=c[g>>2]|2;A=c[d>>2]|0;GA(z);GA(y);Pb=B;return A|0;}function Is(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;j=Pb;Pb=Pb+16|0;h=j;do{if((b|0)==(d|0)){c[e>>2]=4;b=0;}else{if((a[b>>0]|0)==45){c[e>>2]=4;b=0;break;}i=c[(wo()|0)>>2]|0;c[(wo()|0)>>2]=0;b=fq(b,h,f,ks()|0)|0;f=G()|0;g=c[(wo()|0)>>2]|0;if(!g)c[(wo()|0)>>2]=i;do{if((c[h>>2]|0)==(d|0)){if(f>>>0>0|(f|0)==0&b>>>0>4294967295|(g|0)==34){c[e>>2]=4;b=-1;break;}else break;}else{c[e>>2]=4;b=0;}}while(0);}}while(0);Pb=j;return b|0;}function Js(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=Pb;Pb=Pb+240|0;r=B+224|0;y=B+212|0;z=B+200|0;s=B+196|0;t=B;v=B+192|0;w=B+188|0;x=Cs(f)|0;q=Ds(b,f,B+160|0)|0;Es(y,f,r);c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[z+(b<<2)>>2]=0;b=b+1|0;}o=z+11|0;p=z+8|0;if((a[o>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;MA(z,b,0);b=(a[o>>0]|0)<0?c[z>>2]|0:z;c[s>>2]=b;c[v>>2]=t;c[w>>2]=0;n=z+4|0;j=c[d>>2]|0;i=j;a:while(1){if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Vc(a[f>>0]|0)|0;if(id(f,ad()|0)|0){c[d>>2]=0;m=0;k=1;j=0;}else{m=i;k=0;}}else{m=0;k=1;j=0;}i=c[e>>2]|0;do{if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Vc(a[f>>0]|0)|0;if(!(id(f,ad()|0)|0)){if(k)break;else break a;}else{c[e>>2]=0;A=19;break;}}else A=19;}while(0);if((A|0)==19){A=0;if(k){i=0;break;}else i=0;}f=a[o>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[s>>2]|0)==(b+f|0)){MA(z,f<<1,0);if((a[o>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;MA(z,b,0);b=(a[o>>0]|0)<0?c[z>>2]|0:z;c[s>>2]=b+f;}k=j+12|0;f=c[k>>2]|0;l=j+16|0;if((f|0)==(c[l>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Vc(a[f>>0]|0)|0;if(js(f&255,x,b,s,w,a[r>>0]|0,y,t,v,q)|0)break;f=c[k>>2]|0;if((f|0)==(c[l>>2]|0))Yb[c[(c[j>>2]|0)+40>>2]&127](j)|0;else{c[k>>2]=f+1;Vc(a[f>>0]|0)|0;}i=m;}r=a[y+11>>0]|0;if((r<<24>>24<0?c[y+4>>2]|0:r&255)|0?(u=c[v>>2]|0,(u-t|0)<160):0){w=c[w>>2]|0;c[v>>2]=u+4;c[u>>2]=w;}c[h>>2]=Ks(b,c[s>>2]|0,g,x)|0;ws(y,t,c[v>>2]|0,g);if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=Yb[c[(c[m>>2]|0)+36>>2]&127](j)|0;else b=Vc(a[b>>0]|0)|0;if(id(b,ad()|0)|0){c[d>>2]=0;f=1;}else f=0;}else f=1;do{if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=Vc(a[b>>0]|0)|0;if(!(id(b,ad()|0)|0)){if(f)break;else{A=50;break;}}else{c[e>>2]=0;A=48;break;}}else A=48;}while(0);if((A|0)==48?f:0)A=50;if((A|0)==50)c[g>>2]=c[g>>2]|2;A=c[d>>2]|0;GA(z);GA(y);Pb=B;return A|0;}function Ks(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;j=Pb;Pb=Pb+16|0;h=j;do{if((b|0)==(d|0)){c[e>>2]=4;b=0;}else{if((a[b>>0]|0)==45){c[e>>2]=4;b=0;break;}i=c[(wo()|0)>>2]|0;c[(wo()|0)>>2]=0;b=fq(b,h,f,ks()|0)|0;f=G()|0;g=c[(wo()|0)>>2]|0;if(!g)c[(wo()|0)>>2]=i;do{if((c[h>>2]|0)==(d|0)){if(f>>>0>0|(f|0)==0&b>>>0>4294967295|(g|0)==34){c[e>>2]=4;b=-1;break;}else break;}else{c[e>>2]=4;b=0;}}while(0);}}while(0);Pb=j;return b|0;}function Ls(d,e,f,g,h,i){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;C=Pb;Pb=Pb+240|0;s=C+224|0;z=C+212|0;A=C+200|0;t=C+196|0;u=C;w=C+192|0;x=C+188|0;y=Cs(g)|0;r=Ds(d,g,C+160|0)|0;Es(z,g,s);c[A>>2]=0;c[A+4>>2]=0;c[A+8>>2]=0;d=0;while(1){if((d|0)==3)break;c[A+(d<<2)>>2]=0;d=d+1|0;}p=A+11|0;q=A+8|0;if((a[p>>0]|0)<0)d=(c[q>>2]&2147483647)+-1|0;else d=10;MA(A,d,0);d=(a[p>>0]|0)<0?c[A>>2]|0:A;c[t>>2]=d;c[w>>2]=u;c[x>>2]=0;o=A+4|0;k=c[e>>2]|0;j=k;a:while(1){if(k){g=c[k+12>>2]|0;if((g|0)==(c[k+16>>2]|0))g=Yb[c[(c[k>>2]|0)+36>>2]&127](k)|0;else g=Vc(a[g>>0]|0)|0;if(id(g,ad()|0)|0){c[e>>2]=0;n=0;l=1;k=0;}else{n=j;l=0;}}else{n=0;l=1;k=0;}j=c[f>>2]|0;do{if(j){g=c[j+12>>2]|0;if((g|0)==(c[j+16>>2]|0))g=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else g=Vc(a[g>>0]|0)|0;if(!(id(g,ad()|0)|0)){if(l)break;else break a;}else{c[f>>2]=0;B=19;break;}}else B=19;}while(0);if((B|0)==19){B=0;if(l){j=0;break;}else j=0;}g=a[p>>0]|0;g=g<<24>>24<0?c[o>>2]|0:g&255;if((c[t>>2]|0)==(d+g|0)){MA(A,g<<1,0);if((a[p>>0]|0)<0)d=(c[q>>2]&2147483647)+-1|0;else d=10;MA(A,d,0);d=(a[p>>0]|0)<0?c[A>>2]|0:A;c[t>>2]=d+g;}l=k+12|0;g=c[l>>2]|0;m=k+16|0;if((g|0)==(c[m>>2]|0))g=Yb[c[(c[k>>2]|0)+36>>2]&127](k)|0;else g=Vc(a[g>>0]|0)|0;if(js(g&255,y,d,t,x,a[s>>0]|0,z,u,w,r)|0)break;g=c[l>>2]|0;if((g|0)==(c[m>>2]|0))Yb[c[(c[k>>2]|0)+40>>2]&127](k)|0;else{c[l>>2]=g+1;Vc(a[g>>0]|0)|0;}j=n;}s=a[z+11>>0]|0;if((s<<24>>24<0?c[z+4>>2]|0:s&255)|0?(v=c[w>>2]|0,(v-u|0)<160):0){x=c[x>>2]|0;c[w>>2]=v+4;c[v>>2]=x;}b[i>>1]=Ms(d,c[t>>2]|0,h,y)|0;ws(z,u,c[w>>2]|0,h);if(k){d=c[k+12>>2]|0;if((d|0)==(c[k+16>>2]|0))d=Yb[c[(c[n>>2]|0)+36>>2]&127](k)|0;else d=Vc(a[d>>0]|0)|0;if(id(d,ad()|0)|0){c[e>>2]=0;g=1;}else g=0;}else g=1;do{if(j){d=c[j+12>>2]|0;if((d|0)==(c[j+16>>2]|0))d=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else d=Vc(a[d>>0]|0)|0;if(!(id(d,ad()|0)|0)){if(g)break;else{B=50;break;}}else{c[f>>2]=0;B=48;break;}}else B=48;}while(0);if((B|0)==48?g:0)B=50;if((B|0)==50)c[h>>2]=c[h>>2]|2;B=c[e>>2]|0;GA(A);GA(z);Pb=C;return B|0;}function Ms(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;j=Pb;Pb=Pb+16|0;h=j;do{if((b|0)==(d|0)){c[e>>2]=4;b=0;}else{if((a[b>>0]|0)==45){c[e>>2]=4;b=0;break;}i=c[(wo()|0)>>2]|0;c[(wo()|0)>>2]=0;b=fq(b,h,f,ks()|0)|0;f=G()|0;g=c[(wo()|0)>>2]|0;if(!g)c[(wo()|0)>>2]=i;do{if((c[h>>2]|0)==(d|0)){if(f>>>0>0|(f|0)==0&b>>>0>65535|(g|0)==34){c[e>>2]=4;b=-1;break;}else{b=b&65535;break;}}else{c[e>>2]=4;b=0;}}while(0);}}while(0);Pb=j;return b|0;}function Ns(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=Pb;Pb=Pb+240|0;r=B+224|0;y=B+212|0;z=B+200|0;s=B+196|0;t=B;v=B+192|0;w=B+188|0;x=Cs(f)|0;q=Ds(b,f,B+160|0)|0;Es(y,f,r);c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[z+(b<<2)>>2]=0;b=b+1|0;}o=z+11|0;p=z+8|0;if((a[o>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;MA(z,b,0);b=(a[o>>0]|0)<0?c[z>>2]|0:z;c[s>>2]=b;c[v>>2]=t;c[w>>2]=0;n=z+4|0;j=c[d>>2]|0;i=j;a:while(1){if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Vc(a[f>>0]|0)|0;if(id(f,ad()|0)|0){c[d>>2]=0;m=0;k=1;j=0;}else{m=i;k=0;}}else{m=0;k=1;j=0;}i=c[e>>2]|0;do{if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Vc(a[f>>0]|0)|0;if(!(id(f,ad()|0)|0)){if(k)break;else break a;}else{c[e>>2]=0;A=19;break;}}else A=19;}while(0);if((A|0)==19){A=0;if(k){i=0;break;}else i=0;}f=a[o>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[s>>2]|0)==(b+f|0)){MA(z,f<<1,0);if((a[o>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;MA(z,b,0);b=(a[o>>0]|0)<0?c[z>>2]|0:z;c[s>>2]=b+f;}k=j+12|0;f=c[k>>2]|0;l=j+16|0;if((f|0)==(c[l>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Vc(a[f>>0]|0)|0;if(js(f&255,x,b,s,w,a[r>>0]|0,y,t,v,q)|0)break;f=c[k>>2]|0;if((f|0)==(c[l>>2]|0))Yb[c[(c[j>>2]|0)+40>>2]&127](j)|0;else{c[k>>2]=f+1;Vc(a[f>>0]|0)|0;}i=m;}r=a[y+11>>0]|0;if((r<<24>>24<0?c[y+4>>2]|0:r&255)|0?(u=c[v>>2]|0,(u-t|0)<160):0){w=c[w>>2]|0;c[v>>2]=u+4;c[u>>2]=w;}w=Os(b,c[s>>2]|0,g,x)|0;x=G()|0;c[h>>2]=w;c[h+4>>2]=x;ws(y,t,c[v>>2]|0,g);if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=Yb[c[(c[m>>2]|0)+36>>2]&127](j)|0;else b=Vc(a[b>>0]|0)|0;if(id(b,ad()|0)|0){c[d>>2]=0;f=1;}else f=0;}else f=1;do{if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=Vc(a[b>>0]|0)|0;if(!(id(b,ad()|0)|0)){if(f)break;else{A=50;break;}}else{c[e>>2]=0;A=48;break;}}else A=48;}while(0);if((A|0)==48?f:0)A=50;if((A|0)==50)c[g>>2]=c[g>>2]|2;A=c[d>>2]|0;GA(z);GA(y);Pb=B;return A|0;}function Os(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;i=Pb;Pb=Pb+16|0;g=i;if((a|0)==(b|0)){c[d>>2]=4;e=0;a=0;}else{h=c[(wo()|0)>>2]|0;c[(wo()|0)>>2]=0;a=gq(a,g,e,ks()|0)|0;e=G()|0;f=c[(wo()|0)>>2]|0;if(!f)c[(wo()|0)>>2]=h;if((c[g>>2]|0)==(b|0)){if((f|0)==34){c[d>>2]=4;e=(e|0)>0|(e|0)==0&a>>>0>0;a=e?-1:0;e=e?2147483647:-2147483648;}}else{c[d>>2]=4;a=0;e=0;}}F(e|0);Pb=i;return a|0;}function Ps(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=Pb;Pb=Pb+240|0;r=B+224|0;y=B+212|0;z=B+200|0;s=B+196|0;t=B;v=B+192|0;w=B+188|0;x=Cs(f)|0;q=Ds(b,f,B+160|0)|0;Es(y,f,r);c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[z+(b<<2)>>2]=0;b=b+1|0;}o=z+11|0;p=z+8|0;if((a[o>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;MA(z,b,0);b=(a[o>>0]|0)<0?c[z>>2]|0:z;c[s>>2]=b;c[v>>2]=t;c[w>>2]=0;n=z+4|0;j=c[d>>2]|0;i=j;a:while(1){if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Vc(a[f>>0]|0)|0;if(id(f,ad()|0)|0){c[d>>2]=0;m=0;k=1;j=0;}else{m=i;k=0;}}else{m=0;k=1;j=0;}i=c[e>>2]|0;do{if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Vc(a[f>>0]|0)|0;if(!(id(f,ad()|0)|0)){if(k)break;else break a;}else{c[e>>2]=0;A=19;break;}}else A=19;}while(0);if((A|0)==19){A=0;if(k){i=0;break;}else i=0;}f=a[o>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[s>>2]|0)==(b+f|0)){MA(z,f<<1,0);if((a[o>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;MA(z,b,0);b=(a[o>>0]|0)<0?c[z>>2]|0:z;c[s>>2]=b+f;}k=j+12|0;f=c[k>>2]|0;l=j+16|0;if((f|0)==(c[l>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Vc(a[f>>0]|0)|0;if(js(f&255,x,b,s,w,a[r>>0]|0,y,t,v,q)|0)break;f=c[k>>2]|0;if((f|0)==(c[l>>2]|0))Yb[c[(c[j>>2]|0)+40>>2]&127](j)|0;else{c[k>>2]=f+1;Vc(a[f>>0]|0)|0;}i=m;}r=a[y+11>>0]|0;if((r<<24>>24<0?c[y+4>>2]|0:r&255)|0?(u=c[v>>2]|0,(u-t|0)<160):0){w=c[w>>2]|0;c[v>>2]=u+4;c[u>>2]=w;}c[h>>2]=Qs(b,c[s>>2]|0,g,x)|0;ws(y,t,c[v>>2]|0,g);if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=Yb[c[(c[m>>2]|0)+36>>2]&127](j)|0;else b=Vc(a[b>>0]|0)|0;if(id(b,ad()|0)|0){c[d>>2]=0;f=1;}else f=0;}else f=1;do{if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=Vc(a[b>>0]|0)|0;if(!(id(b,ad()|0)|0)){if(f)break;else{A=50;break;}}else{c[e>>2]=0;A=48;break;}}else A=48;}while(0);if((A|0)==48?f:0)A=50;if((A|0)==50)c[g>>2]=c[g>>2]|2;A=c[d>>2]|0;GA(z);GA(y);Pb=B;return A|0;}function Qs(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;i=Pb;Pb=Pb+16|0;g=i;if((a|0)==(b|0)){c[d>>2]=4;a=0;}else{h=c[(wo()|0)>>2]|0;c[(wo()|0)>>2]=0;a=gq(a,g,e,ks()|0)|0;e=G()|0;f=c[(wo()|0)>>2]|0;if(!f)c[(wo()|0)>>2]=h;a:do{if((c[g>>2]|0)==(b|0)){do{if((f|0)==34){c[d>>2]=4;if((e|0)>0|(e|0)==0&a>>>0>0){a=2147483647;break a;}}else{if((e|0)<-1|(e|0)==-1&a>>>0<2147483648){c[d>>2]=4;break;}if((e|0)>0|(e|0)==0&a>>>0>2147483647){c[d>>2]=4;a=2147483647;break a;}else break a;}}while(0);a=-2147483648;}else{c[d>>2]=4;a=0;}}while(0);}Pb=i;return a|0;}function Rs(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=Pb;Pb=Pb+112|0;k=w;l=(f-e|0)/12|0;if(l>>>0>100){k=Bq(l)|0;if(!k)mA();else{j=k;u=k;}}else{j=k;u=0;}n=e;o=j;k=0;while(1){if((n|0)==(f|0))break;m=a[n+11>>0]|0;if(m<<24>>24<0)m=c[n+4>>2]|0;else m=m&255;if(!m){a[o>>0]=2;l=l+-1|0;k=k+1|0;}else a[o>>0]=1;n=n+12|0;o=o+1|0;}t=0;r=k;while(1){k=c[b>>2]|0;do{if(k){m=c[k+12>>2]|0;if((m|0)==(c[k+16>>2]|0))k=Yb[c[(c[k>>2]|0)+36>>2]&127](k)|0;else k=Vc(a[m>>0]|0)|0;if(id(k,ad()|0)|0){c[b>>2]=0;o=1;break;}else{o=(c[b>>2]|0)==0;break;}}else o=1;}while(0);m=c[d>>2]|0;if(m){k=c[m+12>>2]|0;if((k|0)==(c[m+16>>2]|0))k=Yb[c[(c[m>>2]|0)+36>>2]&127](m)|0;else k=Vc(a[k>>0]|0)|0;if(id(k,ad()|0)|0){c[d>>2]=0;k=1;m=0;}else k=0;}else{k=1;m=0;}n=c[b>>2]|0;if(!((l|0)!=0&(o^k)))break;k=c[n+12>>2]|0;if((k|0)==(c[n+16>>2]|0))k=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else k=Vc(a[k>>0]|0)|0;k=k&255;if(!i)k=_b[c[(c[g>>2]|0)+12>>2]&15](g,k)|0;s=t+1|0;p=e;o=0;q=j;while(1){if((p|0)==(f|0))break;do{if((a[q>>0]|0)==1){n=p+11|0;if((a[n>>0]|0)<0)m=c[p>>2]|0;else m=p;m=a[m+t>>0]|0;if(!i)m=_b[c[(c[g>>2]|0)+12>>2]&15](g,m)|0;if(k<<24>>24!=m<<24>>24){a[q>>0]=0;m=o;n=r;l=l+-1|0;break;}m=a[n>>0]|0;if(m<<24>>24<0)m=c[p+4>>2]|0;else m=m&255;if((m|0)==(s|0)){a[q>>0]=2;m=1;n=r+1|0;l=l+-1|0;}else{m=1;n=r;}}else{m=o;n=r;}}while(0);p=p+12|0;o=m;q=q+1|0;r=n;}a:do{if(o){k=c[b>>2]|0;m=k+12|0;n=c[m>>2]|0;if((n|0)==(c[k+16>>2]|0))Yb[c[(c[k>>2]|0)+40>>2]&127](k)|0;else{c[m>>2]=n+1;Vc(a[n>>0]|0)|0;}if((r+l|0)>>>0>1){n=e;o=j;k=r;while(1){if((n|0)==(f|0))break a;if((a[o>>0]|0)==2){m=a[n+11>>0]|0;if(m<<24>>24<0)m=c[n+4>>2]|0;else m=m&255;if((m|0)!=(s|0)){a[o>>0]=0;k=k+-1|0;}}n=n+12|0;o=o+1|0;}}else k=r;}else k=r;}while(0);t=s;r=k;}do{if(n){k=c[n+12>>2]|0;if((k|0)==(c[n+16>>2]|0))k=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else k=Vc(a[k>>0]|0)|0;if(id(k,ad()|0)|0){c[b>>2]=0;l=1;break;}else{l=(c[b>>2]|0)==0;break;}}else l=1;}while(0);do{if(m){k=c[m+12>>2]|0;if((k|0)==(c[m+16>>2]|0))k=Yb[c[(c[m>>2]|0)+36>>2]&127](m)|0;else k=Vc(a[k>>0]|0)|0;if(!(id(k,ad()|0)|0)){if(l)break;else{v=79;break;}}else{c[d>>2]=0;v=41;break;}}else v=41;}while(0);if((v|0)==41?l:0)v=79;if((v|0)==79)c[h>>2]=c[h>>2]|2;while(1){if((e|0)==(f|0)){v=84;break;}if((a[j>>0]|0)==2)break;e=e+12|0;j=j+1|0;}if((v|0)==84){c[h>>2]=c[h>>2]|4;e=f;}Cq(u);Pb=w;return e|0;}function Ss(a){a=a|0;Or(a);return;}function Ts(a){a=a|0;Or(a);oA(a);return;}function Us(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=Pb;Pb=Pb+48|0;i=o+40|0;n=o;j=o+32|0;k=o+36|0;l=o+28|0;m=o+24|0;if(!(c[f+4>>2]&1)){c[j>>2]=-1;m=c[(c[b>>2]|0)+16>>2]|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];c[n>>2]=c[k>>2];c[i>>2]=c[l>>2];c[d>>2]=gc[m&63](b,n,i,f,g,j)|0;switch(c[j>>2]|0){case 0:{a[h>>0]=0;break;}case 1:{a[h>>0]=1;break;}default:{a[h>>0]=1;c[g>>2]=4;}}i=c[d>>2]|0;}else{zr(i,f);l=hs(i,30404)|0;is(i);zr(i,f);b=hs(i,30412)|0;is(i);nc[c[(c[b>>2]|0)+24>>2]&63](n,b);nc[c[(c[b>>2]|0)+28>>2]&63](n+12|0,b);c[m>>2]=c[e>>2];b=n+24|0;c[i>>2]=c[m>>2];a[h>>0]=(st(d,i,n,b,l,g,1)|0)==(n|0)&1;i=c[d>>2]|0;do{b=b+-12|0;XA(b);}while((b|0)!=(n|0));}Pb=o;return i|0;}function Vs(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Pb;Pb=Pb+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];g=rt(a,j,i,e,f,g)|0;Pb=h;return g|0;}function Ws(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Pb;Pb=Pb+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];g=qt(a,j,i,e,f,g)|0;Pb=h;return g|0;}function Xs(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Pb;Pb=Pb+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];g=pt(a,j,i,e,f,g)|0;Pb=h;return g|0;}function Ys(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Pb;Pb=Pb+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];g=ot(a,j,i,e,f,g)|0;Pb=h;return g|0;}function Zs(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Pb;Pb=Pb+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];g=nt(a,j,i,e,f,g)|0;Pb=h;return g|0;}function _s(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Pb;Pb=Pb+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];g=jt(a,j,i,e,f,g)|0;Pb=h;return g|0;}function $s(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Pb;Pb=Pb+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];g=it(a,j,i,e,f,g)|0;Pb=h;return g|0;}function at(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Pb;Pb=Pb+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];g=ht(a,j,i,e,f,g)|0;Pb=h;return g|0;}function bt(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Pb;Pb=Pb+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];g=et(a,j,i,e,f,g)|0;Pb=h;return g|0;}function ct(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;y=Pb;Pb=Pb+304|0;v=y+264|0;t=y+160|0;w=y+292|0;x=y+280|0;u=y+276|0;q=y;r=y+272|0;s=y+268|0;c[w>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[w+(b<<2)>>2]=0;b=b+1|0;}zr(x,f);b=hs(x,30404)|0;bc[c[(c[b>>2]|0)+48>>2]&7](b,6288,6314,t)|0;is(x);c[x>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[x+(b<<2)>>2]=0;b=b+1|0;}p=x+11|0;o=x+8|0;if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;MA(x,b,0);b=(a[p>>0]|0)<0?c[x>>2]|0:x;c[u>>2]=b;c[r>>2]=q;c[s>>2]=0;n=x+4|0;j=c[d>>2]|0;i=j;a:while(1){if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=er(c[f>>2]|0)|0;if(Ar(f,dr()|0)|0){c[d>>2]=0;m=0;k=1;j=0;}else{m=i;k=0;}}else{m=0;k=1;j=0;}i=c[e>>2]|0;do{if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=er(c[f>>2]|0)|0;if(!(Ar(f,dr()|0)|0)){if(k)break;else break a;}else{c[e>>2]=0;z=22;break;}}else z=22;}while(0);if((z|0)==22){z=0;if(k){i=0;break;}else i=0;}f=a[p>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[u>>2]|0)==(b+f|0)){MA(x,f<<1,0);if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;MA(x,b,0);b=(a[p>>0]|0)<0?c[x>>2]|0:x;c[u>>2]=b+f;}k=j+12|0;f=c[k>>2]|0;l=j+16|0;if((f|0)==(c[l>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=er(c[f>>2]|0)|0;if(dt(f,16,b,u,s,0,w,q,r,t)|0)break;f=c[k>>2]|0;if((f|0)==(c[l>>2]|0))Yb[c[(c[j>>2]|0)+40>>2]&127](j)|0;else{c[k>>2]=f+4;er(c[f>>2]|0)|0;}i=m;}MA(x,(c[u>>2]|0)-b|0,0);t=(a[p>>0]|0)<0?c[x>>2]|0:x;u=ks()|0;c[v>>2]=h;if((ls(t,u,23381,v)|0)!=1)c[g>>2]=4;if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=Yb[c[(c[m>>2]|0)+36>>2]&127](j)|0;else b=er(c[b>>2]|0)|0;if(Ar(b,dr()|0)|0){c[d>>2]=0;f=1;}else f=0;}else f=1;do{if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=er(c[b>>2]|0)|0;if(!(Ar(b,dr()|0)|0)){if(f)break;else{z=52;break;}}else{c[e>>2]=0;z=50;break;}}else z=50;}while(0);if((z|0)==50?f:0)z=52;if((z|0)==52)c[g>>2]=c[g>>2]|2;z=c[d>>2]|0;GA(x);GA(w);Pb=y;return z|0;}function dt(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0;o=c[f>>2]|0;p=(o|0)==(e|0);do{if(p){m=(c[l+96>>2]|0)==(b|0);if(!m?(c[l+100>>2]|0)!=(b|0):0){n=5;break;}c[f>>2]=e+1;a[e>>0]=m?43:45;c[g>>2]=0;m=0;}else n=5;}while(0);a:do{if((n|0)==5){n=a[i+11>>0]|0;if((b|0)==(h|0)?((n<<24>>24<0?c[i+4>>2]|0:n&255)|0)!=0:0){m=c[k>>2]|0;if((m-j|0)>=160){m=0;break;}f=c[g>>2]|0;c[k>>2]=m+4;c[m>>2]=f;c[g>>2]=0;m=0;break;}i=l+104|0;h=0;while(1){m=l+(h<<2)|0;if((h|0)==26){m=i;break;}if((c[m>>2]|0)==(b|0))break;else h=h+1|0;}m=m-l|0;h=m>>2;if((m|0)>92)m=-1;else{switch(d|0){case 10:case 8:{if((h|0)>=(d|0)){m=-1;break a;}break;}case 16:{if((m|0)>=88){if(p){m=-1;break a;}if((o-e|0)>=3){m=-1;break a;}if((a[o+-1>>0]|0)!=48){m=-1;break a;}c[g>>2]=0;m=a[6288+h>>0]|0;c[f>>2]=o+1;a[o>>0]=m;m=0;break a;}break;}default:{}}m=a[6288+h>>0]|0;c[f>>2]=o+1;a[o>>0]=m;c[g>>2]=(c[g>>2]|0)+1;m=0;}}}while(0);return m|0;}function et(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;D=Pb;Pb=Pb+336|0;s=D+160|0;t=D+328|0;u=D+324|0;C=D+312|0;B=D+300|0;v=D+296|0;w=D;x=D+292|0;y=D+288|0;z=D+333|0;r=D+332|0;ft(C,f,s,t,u);c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[B+(b<<2)>>2]=0;b=b+1|0;}p=B+11|0;q=B+8|0;if((a[p>>0]|0)<0)b=(c[q>>2]&2147483647)+-1|0;else b=10;MA(B,b,0);b=(a[p>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b;c[x>>2]=w;c[y>>2]=0;a[z>>0]=1;a[r>>0]=69;o=B+4|0;k=c[d>>2]|0;j=k;a:while(1){if(k){f=c[k+12>>2]|0;if((f|0)==(c[k+16>>2]|0))f=Yb[c[(c[k>>2]|0)+36>>2]&127](k)|0;else f=er(c[f>>2]|0)|0;if(Ar(f,dr()|0)|0){c[d>>2]=0;n=0;l=1;k=0;}else{n=j;l=0;}}else{n=0;l=1;k=0;}j=c[e>>2]|0;do{if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=er(c[f>>2]|0)|0;if(!(Ar(f,dr()|0)|0)){if(l)break;else break a;}else{c[e>>2]=0;E=19;break;}}else E=19;}while(0);if((E|0)==19){E=0;if(l){j=0;break;}else j=0;}f=a[p>>0]|0;f=f<<24>>24<0?c[o>>2]|0:f&255;if((c[v>>2]|0)==(b+f|0)){MA(B,f<<1,0);if((a[p>>0]|0)<0)b=(c[q>>2]&2147483647)+-1|0;else b=10;MA(B,b,0);b=(a[p>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b+f;}l=k+12|0;f=c[l>>2]|0;m=k+16|0;if((f|0)==(c[m>>2]|0))f=Yb[c[(c[k>>2]|0)+36>>2]&127](k)|0;else f=er(c[f>>2]|0)|0;if(gt(f,z,r,b,v,c[t>>2]|0,c[u>>2]|0,C,w,x,y,s)|0)break;f=c[l>>2]|0;if((f|0)==(c[m>>2]|0))Yb[c[(c[k>>2]|0)+40>>2]&127](k)|0;else{c[l>>2]=f+4;er(c[f>>2]|0)|0;}j=n;}u=a[C+11>>0]|0;if(!((a[z>>0]|0)==0?1:((u<<24>>24<0?c[C+4>>2]|0:u&255)|0)==0)?(A=c[x>>2]|0,(A-w|0)<160):0){z=c[y>>2]|0;c[x>>2]=A+4;c[A>>2]=z;}g[i>>3]=+vs(b,c[v>>2]|0,h);ws(C,w,c[x>>2]|0,h);if(k){b=c[k+12>>2]|0;if((b|0)==(c[k+16>>2]|0))b=Yb[c[(c[n>>2]|0)+36>>2]&127](k)|0;else b=er(c[b>>2]|0)|0;if(Ar(b,dr()|0)|0){c[d>>2]=0;f=1;}else f=0;}else f=1;do{if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else b=er(c[b>>2]|0)|0;if(!(Ar(b,dr()|0)|0)){if(f)break;else{E=50;break;}}else{c[e>>2]=0;E=48;break;}}else E=48;}while(0);if((E|0)==48?f:0)E=50;if((E|0)==50)c[h>>2]=c[h>>2]|2;E=c[d>>2]|0;GA(B);GA(C);Pb=D;return E|0;}function ft(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=Pb;Pb=Pb+16|0;h=g;zr(h,b);b=hs(h,30404)|0;bc[c[(c[b>>2]|0)+48>>2]&7](b,6288,6320,d)|0;d=hs(h,30412)|0;c[e>>2]=Yb[c[(c[d>>2]|0)+12>>2]&127](d)|0;c[f>>2]=Yb[c[(c[d>>2]|0)+16>>2]&127](d)|0;nc[c[(c[d>>2]|0)+20>>2]&63](a,d);is(h);Pb=g;return;}function gt(b,d,e,f,g,h,i,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0;a:do{if((b|0)==(h|0)){if(a[d>>0]|0){a[d>>0]=0;e=c[g>>2]|0;c[g>>2]=e+1;a[e>>0]=46;g=a[j+11>>0]|0;if(((g<<24>>24<0?c[j+4>>2]|0:g&255)|0)!=0?(o=c[l>>2]|0,(o-k|0)<160):0){k=c[m>>2]|0;c[l>>2]=o+4;c[o>>2]=k;o=0;}else o=0;}else o=-1;}else{if((b|0)==(i|0)?(i=a[j+11>>0]|0,(i<<24>>24<0?c[j+4>>2]|0:i&255)|0):0){if(!(a[d>>0]|0)){o=-1;break;}o=c[l>>2]|0;if((o-k|0)>=160){o=0;break;}k=c[m>>2]|0;c[l>>2]=o+4;c[o>>2]=k;c[m>>2]=0;o=0;break;}i=n+128|0;h=0;while(1){o=n+(h<<2)|0;if((h|0)==32){o=i;break;}if((c[o>>2]|0)==(b|0))break;else h=h+1|0;}h=o-n|0;if((h|0)<=124){i=a[6288+(h>>2)>>0]|0;n=h+-88|0;switch(n>>>2|n<<30|0){case 2:case 3:{o=c[g>>2]|0;if((o|0)!=(f|0)?(a[o+-1>>0]&95)!=(a[e>>0]&127):0){o=-1;break a;}c[g>>2]=o+1;a[o>>0]=i;o=0;break a;}case 1:case 0:{a[e>>0]=80;break;}default:{o=i&95;if((((o|0)==(a[e>>0]|0)?(a[e>>0]=o|128,a[d>>0]|0):0)?(a[d>>0]=0,e=a[j+11>>0]|0,(e<<24>>24<0?c[j+4>>2]|0:e&255)|0):0)?(p=c[l>>2]|0,(p-k|0)<160):0){k=c[m>>2]|0;c[l>>2]=p+4;c[p>>2]=k;}}}l=c[g>>2]|0;c[g>>2]=l+1;a[l>>0]=i;if((h|0)>84)o=0;else{c[m>>2]=(c[m>>2]|0)+1;o=0;}}else o=-1;}}while(0);return o|0;}function ht(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;D=Pb;Pb=Pb+336|0;s=D+160|0;t=D+328|0;u=D+324|0;C=D+312|0;B=D+300|0;v=D+296|0;w=D;x=D+292|0;y=D+288|0;z=D+333|0;r=D+332|0;ft(C,f,s,t,u);c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[B+(b<<2)>>2]=0;b=b+1|0;}p=B+11|0;q=B+8|0;if((a[p>>0]|0)<0)b=(c[q>>2]&2147483647)+-1|0;else b=10;MA(B,b,0);b=(a[p>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b;c[x>>2]=w;c[y>>2]=0;a[z>>0]=1;a[r>>0]=69;o=B+4|0;k=c[d>>2]|0;j=k;a:while(1){if(k){f=c[k+12>>2]|0;if((f|0)==(c[k+16>>2]|0))f=Yb[c[(c[k>>2]|0)+36>>2]&127](k)|0;else f=er(c[f>>2]|0)|0;if(Ar(f,dr()|0)|0){c[d>>2]=0;n=0;l=1;k=0;}else{n=j;l=0;}}else{n=0;l=1;k=0;}j=c[e>>2]|0;do{if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=er(c[f>>2]|0)|0;if(!(Ar(f,dr()|0)|0)){if(l)break;else break a;}else{c[e>>2]=0;E=19;break;}}else E=19;}while(0);if((E|0)==19){E=0;if(l){j=0;break;}else j=0;}f=a[p>>0]|0;f=f<<24>>24<0?c[o>>2]|0:f&255;if((c[v>>2]|0)==(b+f|0)){MA(B,f<<1,0);if((a[p>>0]|0)<0)b=(c[q>>2]&2147483647)+-1|0;else b=10;MA(B,b,0);b=(a[p>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b+f;}l=k+12|0;f=c[l>>2]|0;m=k+16|0;if((f|0)==(c[m>>2]|0))f=Yb[c[(c[k>>2]|0)+36>>2]&127](k)|0;else f=er(c[f>>2]|0)|0;if(gt(f,z,r,b,v,c[t>>2]|0,c[u>>2]|0,C,w,x,y,s)|0)break;f=c[l>>2]|0;if((f|0)==(c[m>>2]|0))Yb[c[(c[k>>2]|0)+40>>2]&127](k)|0;else{c[l>>2]=f+4;er(c[f>>2]|0)|0;}j=n;}u=a[C+11>>0]|0;if(!((a[z>>0]|0)==0?1:((u<<24>>24<0?c[C+4>>2]|0:u&255)|0)==0)?(A=c[x>>2]|0,(A-w|0)<160):0){z=c[y>>2]|0;c[x>>2]=A+4;c[A>>2]=z;}g[i>>3]=+ys(b,c[v>>2]|0,h);ws(C,w,c[x>>2]|0,h);if(k){b=c[k+12>>2]|0;if((b|0)==(c[k+16>>2]|0))b=Yb[c[(c[n>>2]|0)+36>>2]&127](k)|0;else b=er(c[b>>2]|0)|0;if(Ar(b,dr()|0)|0){c[d>>2]=0;f=1;}else f=0;}else f=1;do{if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else b=er(c[b>>2]|0)|0;if(!(Ar(b,dr()|0)|0)){if(f)break;else{E=50;break;}}else{c[e>>2]=0;E=48;break;}}else E=48;}while(0);if((E|0)==48?f:0)E=50;if((E|0)==50)c[h>>2]=c[h>>2]|2;E=c[d>>2]|0;GA(B);GA(C);Pb=D;return E|0;}function it(b,d,e,g,h,i){b=b|0;d=d|0;e=e|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;D=Pb;Pb=Pb+336|0;s=D+160|0;t=D+328|0;u=D+324|0;C=D+312|0;B=D+300|0;v=D+296|0;w=D;x=D+292|0;y=D+288|0;z=D+333|0;r=D+332|0;ft(C,g,s,t,u);c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[B+(b<<2)>>2]=0;b=b+1|0;}p=B+11|0;q=B+8|0;if((a[p>>0]|0)<0)b=(c[q>>2]&2147483647)+-1|0;else b=10;MA(B,b,0);b=(a[p>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b;c[x>>2]=w;c[y>>2]=0;a[z>>0]=1;a[r>>0]=69;o=B+4|0;k=c[d>>2]|0;j=k;a:while(1){if(k){g=c[k+12>>2]|0;if((g|0)==(c[k+16>>2]|0))g=Yb[c[(c[k>>2]|0)+36>>2]&127](k)|0;else g=er(c[g>>2]|0)|0;if(Ar(g,dr()|0)|0){c[d>>2]=0;n=0;l=1;k=0;}else{n=j;l=0;}}else{n=0;l=1;k=0;}j=c[e>>2]|0;do{if(j){g=c[j+12>>2]|0;if((g|0)==(c[j+16>>2]|0))g=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else g=er(c[g>>2]|0)|0;if(!(Ar(g,dr()|0)|0)){if(l)break;else break a;}else{c[e>>2]=0;E=19;break;}}else E=19;}while(0);if((E|0)==19){E=0;if(l){j=0;break;}else j=0;}g=a[p>>0]|0;g=g<<24>>24<0?c[o>>2]|0:g&255;if((c[v>>2]|0)==(b+g|0)){MA(B,g<<1,0);if((a[p>>0]|0)<0)b=(c[q>>2]&2147483647)+-1|0;else b=10;MA(B,b,0);b=(a[p>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b+g;}l=k+12|0;g=c[l>>2]|0;m=k+16|0;if((g|0)==(c[m>>2]|0))g=Yb[c[(c[k>>2]|0)+36>>2]&127](k)|0;else g=er(c[g>>2]|0)|0;if(gt(g,z,r,b,v,c[t>>2]|0,c[u>>2]|0,C,w,x,y,s)|0)break;g=c[l>>2]|0;if((g|0)==(c[m>>2]|0))Yb[c[(c[k>>2]|0)+40>>2]&127](k)|0;else{c[l>>2]=g+4;er(c[g>>2]|0)|0;}j=n;}u=a[C+11>>0]|0;if(!((a[z>>0]|0)==0?1:((u<<24>>24<0?c[C+4>>2]|0:u&255)|0)==0)?(A=c[x>>2]|0,(A-w|0)<160):0){z=c[y>>2]|0;c[x>>2]=A+4;c[A>>2]=z;}f[i>>2]=+As(b,c[v>>2]|0,h);ws(C,w,c[x>>2]|0,h);if(k){b=c[k+12>>2]|0;if((b|0)==(c[k+16>>2]|0))b=Yb[c[(c[n>>2]|0)+36>>2]&127](k)|0;else b=er(c[b>>2]|0)|0;if(Ar(b,dr()|0)|0){c[d>>2]=0;g=1;}else g=0;}else g=1;do{if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else b=er(c[b>>2]|0)|0;if(!(Ar(b,dr()|0)|0)){if(g)break;else{E=50;break;}}else{c[e>>2]=0;E=48;break;}}else E=48;}while(0);if((E|0)==48?g:0)E=50;if((E|0)==50)c[h>>2]=c[h>>2]|2;E=c[d>>2]|0;GA(B);GA(C);Pb=D;return E|0;}function jt(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=Pb;Pb=Pb+304|0;r=B+300|0;y=B+288|0;z=B+276|0;s=B+272|0;t=B;v=B+268|0;w=B+264|0;x=Cs(f)|0;q=kt(b,f,B+160|0)|0;lt(y,f,r);c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[z+(b<<2)>>2]=0;b=b+1|0;}o=z+11|0;p=z+8|0;if((a[o>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;MA(z,b,0);b=(a[o>>0]|0)<0?c[z>>2]|0:z;c[s>>2]=b;c[v>>2]=t;c[w>>2]=0;n=z+4|0;j=c[d>>2]|0;i=j;a:while(1){if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=er(c[f>>2]|0)|0;if(Ar(f,dr()|0)|0){c[d>>2]=0;m=0;k=1;j=0;}else{m=i;k=0;}}else{m=0;k=1;j=0;}i=c[e>>2]|0;do{if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=er(c[f>>2]|0)|0;if(!(Ar(f,dr()|0)|0)){if(k)break;else break a;}else{c[e>>2]=0;A=19;break;}}else A=19;}while(0);if((A|0)==19){A=0;if(k){i=0;break;}else i=0;}f=a[o>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[s>>2]|0)==(b+f|0)){MA(z,f<<1,0);if((a[o>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;MA(z,b,0);b=(a[o>>0]|0)<0?c[z>>2]|0:z;c[s>>2]=b+f;}k=j+12|0;f=c[k>>2]|0;l=j+16|0;if((f|0)==(c[l>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=er(c[f>>2]|0)|0;if(dt(f,x,b,s,w,c[r>>2]|0,y,t,v,q)|0)break;f=c[k>>2]|0;if((f|0)==(c[l>>2]|0))Yb[c[(c[j>>2]|0)+40>>2]&127](j)|0;else{c[k>>2]=f+4;er(c[f>>2]|0)|0;}i=m;}r=a[y+11>>0]|0;if((r<<24>>24<0?c[y+4>>2]|0:r&255)|0?(u=c[v>>2]|0,(u-t|0)<160):0){w=c[w>>2]|0;c[v>>2]=u+4;c[u>>2]=w;}w=Fs(b,c[s>>2]|0,g,x)|0;x=G()|0;c[h>>2]=w;c[h+4>>2]=x;ws(y,t,c[v>>2]|0,g);if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=Yb[c[(c[m>>2]|0)+36>>2]&127](j)|0;else b=er(c[b>>2]|0)|0;if(Ar(b,dr()|0)|0){c[d>>2]=0;f=1;}else f=0;}else f=1;do{if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=er(c[b>>2]|0)|0;if(!(Ar(b,dr()|0)|0)){if(f)break;else{A=50;break;}}else{c[e>>2]=0;A=48;break;}}else A=48;}while(0);if((A|0)==48?f:0)A=50;if((A|0)==50)c[g>>2]=c[g>>2]|2;A=c[d>>2]|0;GA(z);GA(y);Pb=B;return A|0;}function kt(a,b,c){a=a|0;b=b|0;c=c|0;return mt(a,b,c)|0;}function lt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=Pb;Pb=Pb+16|0;f=e;zr(f,b);b=hs(f,30412)|0;c[d>>2]=Yb[c[(c[b>>2]|0)+16>>2]&127](b)|0;nc[c[(c[b>>2]|0)+20>>2]&63](a,b);is(f);Pb=e;return;}function mt(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;a=Pb;Pb=Pb+16|0;e=a;zr(e,b);b=hs(e,30404)|0;bc[c[(c[b>>2]|0)+48>>2]&7](b,6288,6314,d)|0;is(e);Pb=a;return d|0;}function nt(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=Pb;Pb=Pb+304|0;r=B+300|0;y=B+288|0;z=B+276|0;s=B+272|0;t=B;v=B+268|0;w=B+264|0;x=Cs(f)|0;q=kt(b,f,B+160|0)|0;lt(y,f,r);c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[z+(b<<2)>>2]=0;b=b+1|0;}o=z+11|0;p=z+8|0;if((a[o>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;MA(z,b,0);b=(a[o>>0]|0)<0?c[z>>2]|0:z;c[s>>2]=b;c[v>>2]=t;c[w>>2]=0;n=z+4|0;j=c[d>>2]|0;i=j;a:while(1){if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=er(c[f>>2]|0)|0;if(Ar(f,dr()|0)|0){c[d>>2]=0;m=0;k=1;j=0;}else{m=i;k=0;}}else{m=0;k=1;j=0;}i=c[e>>2]|0;do{if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=er(c[f>>2]|0)|0;if(!(Ar(f,dr()|0)|0)){if(k)break;else break a;}else{c[e>>2]=0;A=19;break;}}else A=19;}while(0);if((A|0)==19){A=0;if(k){i=0;break;}else i=0;}f=a[o>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[s>>2]|0)==(b+f|0)){MA(z,f<<1,0);if((a[o>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;MA(z,b,0);b=(a[o>>0]|0)<0?c[z>>2]|0:z;c[s>>2]=b+f;}k=j+12|0;f=c[k>>2]|0;l=j+16|0;if((f|0)==(c[l>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=er(c[f>>2]|0)|0;if(dt(f,x,b,s,w,c[r>>2]|0,y,t,v,q)|0)break;f=c[k>>2]|0;if((f|0)==(c[l>>2]|0))Yb[c[(c[j>>2]|0)+40>>2]&127](j)|0;else{c[k>>2]=f+4;er(c[f>>2]|0)|0;}i=m;}r=a[y+11>>0]|0;if((r<<24>>24<0?c[y+4>>2]|0:r&255)|0?(u=c[v>>2]|0,(u-t|0)<160):0){w=c[w>>2]|0;c[v>>2]=u+4;c[u>>2]=w;}c[h>>2]=Is(b,c[s>>2]|0,g,x)|0;ws(y,t,c[v>>2]|0,g);if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=Yb[c[(c[m>>2]|0)+36>>2]&127](j)|0;else b=er(c[b>>2]|0)|0;if(Ar(b,dr()|0)|0){c[d>>2]=0;f=1;}else f=0;}else f=1;do{if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=er(c[b>>2]|0)|0;if(!(Ar(b,dr()|0)|0)){if(f)break;else{A=50;break;}}else{c[e>>2]=0;A=48;break;}}else A=48;}while(0);if((A|0)==48?f:0)A=50;if((A|0)==50)c[g>>2]=c[g>>2]|2;A=c[d>>2]|0;GA(z);GA(y);Pb=B;return A|0;}function ot(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=Pb;Pb=Pb+304|0;r=B+300|0;y=B+288|0;z=B+276|0;s=B+272|0;t=B;v=B+268|0;w=B+264|0;x=Cs(f)|0;q=kt(b,f,B+160|0)|0;lt(y,f,r);c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[z+(b<<2)>>2]=0;b=b+1|0;}o=z+11|0;p=z+8|0;if((a[o>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;MA(z,b,0);b=(a[o>>0]|0)<0?c[z>>2]|0:z;c[s>>2]=b;c[v>>2]=t;c[w>>2]=0;n=z+4|0;j=c[d>>2]|0;i=j;a:while(1){if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=er(c[f>>2]|0)|0;if(Ar(f,dr()|0)|0){c[d>>2]=0;m=0;k=1;j=0;}else{m=i;k=0;}}else{m=0;k=1;j=0;}i=c[e>>2]|0;do{if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=er(c[f>>2]|0)|0;if(!(Ar(f,dr()|0)|0)){if(k)break;else break a;}else{c[e>>2]=0;A=19;break;}}else A=19;}while(0);if((A|0)==19){A=0;if(k){i=0;break;}else i=0;}f=a[o>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[s>>2]|0)==(b+f|0)){MA(z,f<<1,0);if((a[o>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;MA(z,b,0);b=(a[o>>0]|0)<0?c[z>>2]|0:z;c[s>>2]=b+f;}k=j+12|0;f=c[k>>2]|0;l=j+16|0;if((f|0)==(c[l>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=er(c[f>>2]|0)|0;if(dt(f,x,b,s,w,c[r>>2]|0,y,t,v,q)|0)break;f=c[k>>2]|0;if((f|0)==(c[l>>2]|0))Yb[c[(c[j>>2]|0)+40>>2]&127](j)|0;else{c[k>>2]=f+4;er(c[f>>2]|0)|0;}i=m;}r=a[y+11>>0]|0;if((r<<24>>24<0?c[y+4>>2]|0:r&255)|0?(u=c[v>>2]|0,(u-t|0)<160):0){w=c[w>>2]|0;c[v>>2]=u+4;c[u>>2]=w;}c[h>>2]=Ks(b,c[s>>2]|0,g,x)|0;ws(y,t,c[v>>2]|0,g);if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=Yb[c[(c[m>>2]|0)+36>>2]&127](j)|0;else b=er(c[b>>2]|0)|0;if(Ar(b,dr()|0)|0){c[d>>2]=0;f=1;}else f=0;}else f=1;do{if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=er(c[b>>2]|0)|0;if(!(Ar(b,dr()|0)|0)){if(f)break;else{A=50;break;}}else{c[e>>2]=0;A=48;break;}}else A=48;}while(0);if((A|0)==48?f:0)A=50;if((A|0)==50)c[g>>2]=c[g>>2]|2;A=c[d>>2]|0;GA(z);GA(y);Pb=B;return A|0;}function pt(d,e,f,g,h,i){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;C=Pb;Pb=Pb+304|0;s=C+300|0;z=C+288|0;A=C+276|0;t=C+272|0;u=C;w=C+268|0;x=C+264|0;y=Cs(g)|0;r=kt(d,g,C+160|0)|0;lt(z,g,s);c[A>>2]=0;c[A+4>>2]=0;c[A+8>>2]=0;d=0;while(1){if((d|0)==3)break;c[A+(d<<2)>>2]=0;d=d+1|0;}p=A+11|0;q=A+8|0;if((a[p>>0]|0)<0)d=(c[q>>2]&2147483647)+-1|0;else d=10;MA(A,d,0);d=(a[p>>0]|0)<0?c[A>>2]|0:A;c[t>>2]=d;c[w>>2]=u;c[x>>2]=0;o=A+4|0;k=c[e>>2]|0;j=k;a:while(1){if(k){g=c[k+12>>2]|0;if((g|0)==(c[k+16>>2]|0))g=Yb[c[(c[k>>2]|0)+36>>2]&127](k)|0;else g=er(c[g>>2]|0)|0;if(Ar(g,dr()|0)|0){c[e>>2]=0;n=0;l=1;k=0;}else{n=j;l=0;}}else{n=0;l=1;k=0;}j=c[f>>2]|0;do{if(j){g=c[j+12>>2]|0;if((g|0)==(c[j+16>>2]|0))g=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else g=er(c[g>>2]|0)|0;if(!(Ar(g,dr()|0)|0)){if(l)break;else break a;}else{c[f>>2]=0;B=19;break;}}else B=19;}while(0);if((B|0)==19){B=0;if(l){j=0;break;}else j=0;}g=a[p>>0]|0;g=g<<24>>24<0?c[o>>2]|0:g&255;if((c[t>>2]|0)==(d+g|0)){MA(A,g<<1,0);if((a[p>>0]|0)<0)d=(c[q>>2]&2147483647)+-1|0;else d=10;MA(A,d,0);d=(a[p>>0]|0)<0?c[A>>2]|0:A;c[t>>2]=d+g;}l=k+12|0;g=c[l>>2]|0;m=k+16|0;if((g|0)==(c[m>>2]|0))g=Yb[c[(c[k>>2]|0)+36>>2]&127](k)|0;else g=er(c[g>>2]|0)|0;if(dt(g,y,d,t,x,c[s>>2]|0,z,u,w,r)|0)break;g=c[l>>2]|0;if((g|0)==(c[m>>2]|0))Yb[c[(c[k>>2]|0)+40>>2]&127](k)|0;else{c[l>>2]=g+4;er(c[g>>2]|0)|0;}j=n;}s=a[z+11>>0]|0;if((s<<24>>24<0?c[z+4>>2]|0:s&255)|0?(v=c[w>>2]|0,(v-u|0)<160):0){x=c[x>>2]|0;c[w>>2]=v+4;c[v>>2]=x;}b[i>>1]=Ms(d,c[t>>2]|0,h,y)|0;ws(z,u,c[w>>2]|0,h);if(k){d=c[k+12>>2]|0;if((d|0)==(c[k+16>>2]|0))d=Yb[c[(c[n>>2]|0)+36>>2]&127](k)|0;else d=er(c[d>>2]|0)|0;if(Ar(d,dr()|0)|0){c[e>>2]=0;g=1;}else g=0;}else g=1;do{if(j){d=c[j+12>>2]|0;if((d|0)==(c[j+16>>2]|0))d=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else d=er(c[d>>2]|0)|0;if(!(Ar(d,dr()|0)|0)){if(g)break;else{B=50;break;}}else{c[f>>2]=0;B=48;break;}}else B=48;}while(0);if((B|0)==48?g:0)B=50;if((B|0)==50)c[h>>2]=c[h>>2]|2;B=c[e>>2]|0;GA(A);GA(z);Pb=C;return B|0;}function qt(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=Pb;Pb=Pb+304|0;r=B+300|0;y=B+288|0;z=B+276|0;s=B+272|0;t=B;v=B+268|0;w=B+264|0;x=Cs(f)|0;q=kt(b,f,B+160|0)|0;lt(y,f,r);c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[z+(b<<2)>>2]=0;b=b+1|0;}o=z+11|0;p=z+8|0;if((a[o>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;MA(z,b,0);b=(a[o>>0]|0)<0?c[z>>2]|0:z;c[s>>2]=b;c[v>>2]=t;c[w>>2]=0;n=z+4|0;j=c[d>>2]|0;i=j;a:while(1){if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=er(c[f>>2]|0)|0;if(Ar(f,dr()|0)|0){c[d>>2]=0;m=0;k=1;j=0;}else{m=i;k=0;}}else{m=0;k=1;j=0;}i=c[e>>2]|0;do{if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=er(c[f>>2]|0)|0;if(!(Ar(f,dr()|0)|0)){if(k)break;else break a;}else{c[e>>2]=0;A=19;break;}}else A=19;}while(0);if((A|0)==19){A=0;if(k){i=0;break;}else i=0;}f=a[o>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[s>>2]|0)==(b+f|0)){MA(z,f<<1,0);if((a[o>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;MA(z,b,0);b=(a[o>>0]|0)<0?c[z>>2]|0:z;c[s>>2]=b+f;}k=j+12|0;f=c[k>>2]|0;l=j+16|0;if((f|0)==(c[l>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=er(c[f>>2]|0)|0;if(dt(f,x,b,s,w,c[r>>2]|0,y,t,v,q)|0)break;f=c[k>>2]|0;if((f|0)==(c[l>>2]|0))Yb[c[(c[j>>2]|0)+40>>2]&127](j)|0;else{c[k>>2]=f+4;er(c[f>>2]|0)|0;}i=m;}r=a[y+11>>0]|0;if((r<<24>>24<0?c[y+4>>2]|0:r&255)|0?(u=c[v>>2]|0,(u-t|0)<160):0){w=c[w>>2]|0;c[v>>2]=u+4;c[u>>2]=w;}w=Os(b,c[s>>2]|0,g,x)|0;x=G()|0;c[h>>2]=w;c[h+4>>2]=x;ws(y,t,c[v>>2]|0,g);if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=Yb[c[(c[m>>2]|0)+36>>2]&127](j)|0;else b=er(c[b>>2]|0)|0;if(Ar(b,dr()|0)|0){c[d>>2]=0;f=1;}else f=0;}else f=1;do{if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=er(c[b>>2]|0)|0;if(!(Ar(b,dr()|0)|0)){if(f)break;else{A=50;break;}}else{c[e>>2]=0;A=48;break;}}else A=48;}while(0);if((A|0)==48?f:0)A=50;if((A|0)==50)c[g>>2]=c[g>>2]|2;A=c[d>>2]|0;GA(z);GA(y);Pb=B;return A|0;}function rt(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=Pb;Pb=Pb+304|0;r=B+300|0;y=B+288|0;z=B+276|0;s=B+272|0;t=B;v=B+268|0;w=B+264|0;x=Cs(f)|0;q=kt(b,f,B+160|0)|0;lt(y,f,r);c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[z+(b<<2)>>2]=0;b=b+1|0;}o=z+11|0;p=z+8|0;if((a[o>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;MA(z,b,0);b=(a[o>>0]|0)<0?c[z>>2]|0:z;c[s>>2]=b;c[v>>2]=t;c[w>>2]=0;n=z+4|0;j=c[d>>2]|0;i=j;a:while(1){if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=er(c[f>>2]|0)|0;if(Ar(f,dr()|0)|0){c[d>>2]=0;m=0;k=1;j=0;}else{m=i;k=0;}}else{m=0;k=1;j=0;}i=c[e>>2]|0;do{if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=er(c[f>>2]|0)|0;if(!(Ar(f,dr()|0)|0)){if(k)break;else break a;}else{c[e>>2]=0;A=19;break;}}else A=19;}while(0);if((A|0)==19){A=0;if(k){i=0;break;}else i=0;}f=a[o>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[s>>2]|0)==(b+f|0)){MA(z,f<<1,0);if((a[o>>0]|0)<0)b=(c[p>>2]&2147483647)+-1|0;else b=10;MA(z,b,0);b=(a[o>>0]|0)<0?c[z>>2]|0:z;c[s>>2]=b+f;}k=j+12|0;f=c[k>>2]|0;l=j+16|0;if((f|0)==(c[l>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=er(c[f>>2]|0)|0;if(dt(f,x,b,s,w,c[r>>2]|0,y,t,v,q)|0)break;f=c[k>>2]|0;if((f|0)==(c[l>>2]|0))Yb[c[(c[j>>2]|0)+40>>2]&127](j)|0;else{c[k>>2]=f+4;er(c[f>>2]|0)|0;}i=m;}r=a[y+11>>0]|0;if((r<<24>>24<0?c[y+4>>2]|0:r&255)|0?(u=c[v>>2]|0,(u-t|0)<160):0){w=c[w>>2]|0;c[v>>2]=u+4;c[u>>2]=w;}c[h>>2]=Qs(b,c[s>>2]|0,g,x)|0;ws(y,t,c[v>>2]|0,g);if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=Yb[c[(c[m>>2]|0)+36>>2]&127](j)|0;else b=er(c[b>>2]|0)|0;if(Ar(b,dr()|0)|0){c[d>>2]=0;f=1;}else f=0;}else f=1;do{if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=er(c[b>>2]|0)|0;if(!(Ar(b,dr()|0)|0)){if(f)break;else{A=50;break;}}else{c[e>>2]=0;A=48;break;}}else A=48;}while(0);if((A|0)==48?f:0)A=50;if((A|0)==50)c[g>>2]=c[g>>2]|2;A=c[d>>2]|0;GA(z);GA(y);Pb=B;return A|0;}function st(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=Pb;Pb=Pb+112|0;k=w;l=(f-e|0)/12|0;if(l>>>0>100){k=Bq(l)|0;if(!k)mA();else{j=k;u=k;}}else{j=k;u=0;}k=0;n=e;o=j;while(1){if((n|0)==(f|0))break;m=a[n+8+3>>0]|0;if(m<<24>>24<0)m=c[n+4>>2]|0;else m=m&255;if(!m){a[o>>0]=2;k=k+1|0;l=l+-1|0;}else a[o>>0]=1;n=n+12|0;o=o+1|0;}t=0;r=k;while(1){k=c[b>>2]|0;do{if(k){m=c[k+12>>2]|0;if((m|0)==(c[k+16>>2]|0))k=Yb[c[(c[k>>2]|0)+36>>2]&127](k)|0;else k=er(c[m>>2]|0)|0;if(Ar(k,dr()|0)|0){c[b>>2]=0;o=1;break;}else{o=(c[b>>2]|0)==0;break;}}else o=1;}while(0);m=c[d>>2]|0;if(m){k=c[m+12>>2]|0;if((k|0)==(c[m+16>>2]|0))k=Yb[c[(c[m>>2]|0)+36>>2]&127](m)|0;else k=er(c[k>>2]|0)|0;if(Ar(k,dr()|0)|0){c[d>>2]=0;k=1;m=0;}else k=0;}else{k=1;m=0;}n=c[b>>2]|0;if(!((l|0)!=0&(o^k)))break;k=c[n+12>>2]|0;if((k|0)==(c[n+16>>2]|0))k=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else k=er(c[k>>2]|0)|0;if(!i)k=_b[c[(c[g>>2]|0)+28>>2]&15](g,k)|0;s=t+1|0;p=e;o=0;q=j;while(1){if((p|0)==(f|0))break;do{if((a[q>>0]|0)==1){n=p+8+3|0;if((a[n>>0]|0)<0)m=c[p>>2]|0;else m=p;m=c[m+(t<<2)>>2]|0;if(!i)m=_b[c[(c[g>>2]|0)+28>>2]&15](g,m)|0;if((k|0)!=(m|0)){a[q>>0]=0;m=o;n=r;l=l+-1|0;break;}m=a[n>>0]|0;if(m<<24>>24<0)m=c[p+4>>2]|0;else m=m&255;if((m|0)==(s|0)){a[q>>0]=2;m=1;n=r+1|0;l=l+-1|0;}else{m=1;n=r;}}else{m=o;n=r;}}while(0);p=p+12|0;o=m;q=q+1|0;r=n;}a:do{if(o){k=c[b>>2]|0;m=k+12|0;n=c[m>>2]|0;if((n|0)==(c[k+16>>2]|0))Yb[c[(c[k>>2]|0)+40>>2]&127](k)|0;else{c[m>>2]=n+4;er(c[n>>2]|0)|0;}if((r+l|0)>>>0>1){n=e;o=j;k=r;while(1){if((n|0)==(f|0))break a;if((a[o>>0]|0)==2){m=a[n+8+3>>0]|0;if(m<<24>>24<0)m=c[n+4>>2]|0;else m=m&255;if((m|0)!=(s|0)){a[o>>0]=0;k=k+-1|0;}}n=n+12|0;o=o+1|0;}}else k=r;}else k=r;}while(0);t=s;r=k;}do{if(n){k=c[n+12>>2]|0;if((k|0)==(c[n+16>>2]|0))k=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else k=er(c[k>>2]|0)|0;if(Ar(k,dr()|0)|0){c[b>>2]=0;l=1;break;}else{l=(c[b>>2]|0)==0;break;}}else l=1;}while(0);do{if(m){k=c[m+12>>2]|0;if((k|0)==(c[m+16>>2]|0))k=Yb[c[(c[m>>2]|0)+36>>2]&127](m)|0;else k=er(c[k>>2]|0)|0;if(!(Ar(k,dr()|0)|0)){if(l)break;else{v=79;break;}}else{c[d>>2]=0;v=41;break;}}else v=41;}while(0);if((v|0)==41?l:0)v=79;if((v|0)==79)c[h>>2]=c[h>>2]|2;while(1){if((e|0)==(f|0)){v=84;break;}if((a[j>>0]|0)==2)break;e=e+12|0;j=j+1|0;}if((v|0)==84){c[h>>2]=c[h>>2]|4;e=f;}Cq(u);Pb=w;return e|0;}function tt(a){a=a|0;Or(a);return;}function ut(a){a=a|0;Or(a);oA(a);return;}function vt(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;l=Pb;Pb=Pb+16|0;k=l+4|0;h=l;if(!(c[e+4>>2]&1)){j=c[(c[b>>2]|0)+24>>2]|0;c[h>>2]=c[d>>2];c[k>>2]=c[h>>2];b=dc[j&31](b,k,e,f,g&1)|0;}else{zr(k,e);b=hs(k,30388)|0;is(k);e=c[b>>2]|0;if(g)nc[c[e+24>>2]&63](k,b);else nc[c[e+28>>2]&63](k,b);i=k+11|0;b=a[i>>0]|0;e=c[k>>2]|0;j=k+4|0;g=b<<24>>24<0?e:k;while(1){h=b<<24>>24<0;if((g|0)==((h?e:k)+(h?c[j>>2]|0:b&255)|0))break;b=a[g>>0]|0;e=c[d>>2]|0;if(e|0){f=e+24|0;h=c[f>>2]|0;if((h|0)==(c[e+28>>2]|0)){h=c[(c[e>>2]|0)+52>>2]|0;b=Vc(b)|0;b=_b[h&15](e,b)|0;}else{c[f>>2]=h+1;a[h>>0]=b;b=Vc(b)|0;}if(id(b,ad()|0)|0)c[d>>2]=0;}g=g+1|0;b=a[i>>0]|0;e=c[k>>2]|0;}b=c[d>>2]|0;GA(k);}Pb=l;return b|0;}function wt(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=Pb;Pb=Pb+32|0;j=b;n=b+16|0;m=b+12|0;l=b+4|0;k=b+8|0;a[n>>0]=a[23602]|0;a[n+1>>0]=a[23603]|0;a[n+2>>0]=a[23604]|0;a[n+3>>0]=a[23605]|0;a[n+4>>0]=a[23606]|0;a[n+5>>0]=a[23607]|0;p=e+4|0;Jt(n+1|0,23608,1,c[p>>2]|0);p=(c[p>>2]|0)>>>9&1;q=p+13|0;h=Qa()|0;o=Pb;Pb=Pb+((1*q|0)+15&-16)|0;i=ks()|0;c[j>>2]=g;g=o+(Dt(o,q,i,n,j)|0)|0;n=Et(o,g,e)|0;i=Pb;Pb=Pb+((1*((p<<1|24)+-1|0)|0)+15&-16)|0;zr(j,e);Kt(o,n,g,i,m,l,j);is(j);c[k>>2]=c[d>>2];d=c[m>>2]|0;g=c[l>>2]|0;c[j>>2]=c[k>>2];g=Ft(j,i,d,g,e,f)|0;Pa(h|0);Pb=b;return g|0;}function xt(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a=Pb;Pb=Pb+32|0;j=a+8|0;i=a;m=a+24|0;l=a+16|0;k=a+20|0;o=i;c[o>>2]=37;c[o+4>>2]=0;o=d+4|0;Jt(i+1|0,23599,1,c[o>>2]|0);o=(c[o>>2]|0)>>>9&1;q=o+23|0;h=Qa()|0;n=Pb;Pb=Pb+((1*q|0)+15&-16)|0;p=ks()|0;r=j;c[r>>2]=f;c[r+4>>2]=g;f=n+(Dt(n,q,p,i,j)|0)|0;g=Et(n,f,d)|0;i=Pb;Pb=Pb+((1*((o<<1|44)+-1|0)|0)+15&-16)|0;zr(j,d);Kt(n,g,f,i,m,l,j);is(j);c[k>>2]=c[b>>2];f=c[m>>2]|0;g=c[l>>2]|0;c[j>>2]=c[k>>2];g=Ft(j,i,f,g,d,e)|0;Pa(h|0);Pb=a;return g|0;}function yt(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=Pb;Pb=Pb+32|0;j=b;n=b+16|0;m=b+12|0;l=b+4|0;k=b+8|0;a[n>>0]=a[23602]|0;a[n+1>>0]=a[23603]|0;a[n+2>>0]=a[23604]|0;a[n+3>>0]=a[23605]|0;a[n+4>>0]=a[23606]|0;a[n+5>>0]=a[23607]|0;p=e+4|0;Jt(n+1|0,23608,0,c[p>>2]|0);p=(c[p>>2]|0)>>>9&1;q=p|12;h=Qa()|0;o=Pb;Pb=Pb+((1*q|0)+15&-16)|0;i=ks()|0;c[j>>2]=g;g=o+(Dt(o,q,i,n,j)|0)|0;n=Et(o,g,e)|0;i=Pb;Pb=Pb+((1*(p<<1|21)|0)+15&-16)|0;zr(j,e);Kt(o,n,g,i,m,l,j);is(j);c[k>>2]=c[d>>2];d=c[m>>2]|0;g=c[l>>2]|0;c[j>>2]=c[k>>2];g=Ft(j,i,d,g,e,f)|0;Pa(h|0);Pb=b;return g|0;}function zt(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a=Pb;Pb=Pb+32|0;j=a+8|0;i=a;m=a+24|0;l=a+16|0;k=a+20|0;o=i;c[o>>2]=37;c[o+4>>2]=0;o=d+4|0;Jt(i+1|0,23599,0,c[o>>2]|0);o=(c[o>>2]|0)>>>9&1|22;q=o+1|0;h=Qa()|0;n=Pb;Pb=Pb+((1*q|0)+15&-16)|0;p=ks()|0;r=j;c[r>>2]=f;c[r+4>>2]=g;f=n+(Dt(n,q,p,i,j)|0)|0;g=Et(n,f,d)|0;i=Pb;Pb=Pb+((1*((o<<1)+-1|0)|0)+15&-16)|0;zr(j,d);Kt(n,g,f,i,m,l,j);is(j);c[k>>2]=c[b>>2];f=c[m>>2]|0;g=c[l>>2]|0;c[j>>2]=c[k>>2];g=Ft(j,i,f,g,d,e)|0;Pa(h|0);Pb=a;return g|0;}function At(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;v=Pb;Pb=Pb+176|0;r=v+168|0;m=v+144|0;l=v+128|0;i=v+120|0;h=v+104|0;k=v+96|0;o=v+64|0;n=v+164|0;p=v;u=v+160|0;s=v+156|0;t=v+152|0;j=k;c[j>>2]=37;c[j+4>>2]=0;j=Gt(k+1|0,30825,c[d+4>>2]|0)|0;c[n>>2]=o;a=ks()|0;if(j){c[h>>2]=c[d+8>>2];g[h+8>>3]=f;a=Dt(o,30,a,k,h)|0;}else{g[i>>3]=f;a=Dt(o,30,a,k,i)|0;}if((a|0)>29){a=ks()|0;if(j){c[l>>2]=c[d+8>>2];g[l+8>>3]=f;h=Ht(n,a,k,l)|0;}else{g[m>>3]=f;h=Ht(n,a,k,m)|0;}a=c[n>>2]|0;if(!a)mA();else{q=h;y=a;z=a;}}else{q=a;y=0;z=c[n>>2]|0;}h=z+q|0;i=Et(z,h,d)|0;if((z|0)!=(o|0)){a=Bq(q<<1)|0;if(!a)mA();else{w=a;x=a;}}else{w=p;x=0;}zr(r,d);It(z,i,h,w,u,s,r);is(r);c[t>>2]=c[b>>2];b=c[u>>2]|0;z=c[s>>2]|0;c[r>>2]=c[t>>2];z=Ft(r,w,b,z,d,e)|0;Cq(x);Cq(y);Pb=v;return z|0;}function Bt(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;v=Pb;Pb=Pb+176|0;r=v+168|0;m=v+144|0;l=v+128|0;i=v+120|0;h=v+104|0;k=v+96|0;o=v+64|0;n=v+164|0;p=v;u=v+160|0;s=v+156|0;t=v+152|0;j=k;c[j>>2]=37;c[j+4>>2]=0;j=Gt(k+1|0,23597,c[d+4>>2]|0)|0;c[n>>2]=o;a=ks()|0;if(j){c[h>>2]=c[d+8>>2];g[h+8>>3]=f;a=Dt(o,30,a,k,h)|0;}else{g[i>>3]=f;a=Dt(o,30,a,k,i)|0;}if((a|0)>29){a=ks()|0;if(j){c[l>>2]=c[d+8>>2];g[l+8>>3]=f;h=Ht(n,a,k,l)|0;}else{g[m>>3]=f;h=Ht(n,a,k,m)|0;}a=c[n>>2]|0;if(!a)mA();else{q=h;y=a;z=a;}}else{q=a;y=0;z=c[n>>2]|0;}h=z+q|0;i=Et(z,h,d)|0;if((z|0)!=(o|0)){a=Bq(q<<1)|0;if(!a)mA();else{w=a;x=a;}}else{w=p;x=0;}zr(r,d);It(z,i,h,w,u,s,r);is(r);c[t>>2]=c[b>>2];b=c[u>>2]|0;z=c[s>>2]|0;c[r>>2]=c[t>>2];z=Ft(r,w,b,z,d,e)|0;Cq(x);Cq(y);Pb=v;return z|0;}function Ct(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;b=Pb;Pb=Pb+96|0;l=b+72|0;k=b+80|0;h=b+48|0;j=b;m=b+76|0;a[k>>0]=a[23591]|0;a[k+1>>0]=a[23592]|0;a[k+2>>0]=a[23593]|0;a[k+3>>0]=a[23594]|0;a[k+4>>0]=a[23595]|0;a[k+5>>0]=a[23596]|0;i=ks()|0;c[l>>2]=g;g=Dt(h,20,i,k,l)|0;k=h+g|0;i=Et(h,k,e)|0;zr(l,e);n=hs(l,30372)|0;is(l);bc[c[(c[n>>2]|0)+32>>2]&7](n,h,k,j)|0;g=j+g|0;c[m>>2]=c[d>>2];c[l>>2]=c[m>>2];g=Ft(l,j,(i|0)==(k|0)?g:j+(i-h)|0,g,e,f)|0;Pb=b;return g|0;}function Dt(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;g=Pb;Pb=Pb+16|0;h=g;c[h>>2]=f;f=_p(d)|0;d=Kp(a,b,e,h)|0;if(f|0)_p(f)|0;Pb=g;return d|0;}function Et(b,d,e){b=b|0;d=d|0;e=e|0;var f=0;a:do{switch((c[e+4>>2]&176)<<24>>24){case 16:{e=a[b>>0]|0;switch(e<<24>>24){case 43:case 45:{b=b+1|0;break a;}default:{}}if((d-b|0)>1&e<<24>>24==48){switch(a[b+1>>0]|0){case 88:case 120:break;default:{f=7;break a;}}b=b+2|0;}else f=7;break;}case 32:{b=d;break;}default:f=7;}}while(0);return b|0;}function Ft(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0;n=Pb;Pb=Pb+16|0;m=n;i=c[b>>2]|0;a:do{if(!i)i=0;else{k=d;j=f-k|0;l=g+12|0;g=c[l>>2]|0;g=(g|0)>(j|0)?g-j|0:0;j=e;k=j-k|0;if((k|0)>0?($b[c[(c[i>>2]|0)+48>>2]&31](i,d,k)|0)!=(k|0):0){c[b>>2]=0;i=0;break;}do{if((g|0)>0){c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;EA(m,g,h);if(($b[c[(c[i>>2]|0)+48>>2]&31](i,(a[m+11>>0]|0)<0?c[m>>2]|0:m,g)|0)==(g|0)){GA(m);break;}else{c[b>>2]=0;GA(m);i=0;break a;}}}while(0);f=f-j|0;if((f|0)>0?($b[c[(c[i>>2]|0)+48>>2]&31](i,e,f)|0)!=(f|0):0){c[b>>2]=0;i=0;break;}c[l>>2]=0;}}while(0);Pb=n;return i|0;}function Gt(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;if(d&2048){a[b>>0]=43;b=b+1|0;}if(d&1024){a[b>>0]=35;b=b+1|0;}g=d&260;e=d&16384;f=(g|0)==260;if(f)h=0;else{a[b>>0]=46;a[b+1>>0]=42;h=1;b=b+2|0;}while(1){d=a[c>>0]|0;if(!(d<<24>>24))break;a[b>>0]=d;c=c+1|0;b=b+1|0;}a:do{switch(g&511){case 4:{d=e>>>9&255^102;break;}case 256:{d=e>>>9&255^101;break;}default:{d=e>>>9&255;if(f){d=d^97;break a;}else{d=d^103;break a;}}}}while(0);a[b>>0]=d;return h|0;}function Ht(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=Pb;Pb=Pb+16|0;g=f;c[g>>2]=e;e=_p(b)|0;b=mq(a,d,g)|0;if(e|0)_p(e)|0;Pb=f;return b|0;}function It(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;v=Pb;Pb=Pb+16|0;s=v;t=hs(i,30372)|0;r=hs(i,30388)|0;nc[c[(c[r>>2]|0)+20>>2]&63](s,r);c[h>>2]=f;i=a[b>>0]|0;switch(i<<24>>24){case 43:case 45:{q=_b[c[(c[t>>2]|0)+28>>2]&15](t,i)|0;j=c[h>>2]|0;c[h>>2]=j+1;a[j>>0]=q;j=b+1|0;break;}default:j=b;}q=e;a:do{if((q-j|0)>1?(a[j>>0]|0)==48:0){i=j+1|0;switch(a[i>>0]|0){case 88:case 120:break;default:{u=4;break a;}}o=_b[c[(c[t>>2]|0)+28>>2]&15](t,48)|0;p=c[h>>2]|0;c[h>>2]=p+1;a[p>>0]=o;j=j+2|0;p=_b[c[(c[t>>2]|0)+28>>2]&15](t,a[i>>0]|0)|0;i=c[h>>2]|0;c[h>>2]=i+1;a[i>>0]=p;i=j;while(1){if(i>>>0>=e>>>0)break a;p=a[i>>0]|0;if(!(Yp(p,ks()|0)|0))break a;i=i+1|0;}}else u=4;}while(0);b:do{if((u|0)==4){i=j;while(1){if(i>>>0>=e>>>0)break b;p=a[i>>0]|0;if(!(Pp(p,ks()|0)|0))break b;i=i+1|0;}}}while(0);o=s+11|0;n=a[o>>0]|0;p=s+4|0;c:do{if((n<<24>>24<0?c[p>>2]|0:n&255)|0){d:do{if((j|0)!=(i|0)){k=i;l=j;while(1){k=k+-1|0;if(l>>>0>=k>>>0)break d;n=a[l>>0]|0;a[l>>0]=a[k>>0]|0;a[k>>0]=n;l=l+1|0;}}}while(0);n=Yb[c[(c[r>>2]|0)+16>>2]&127](r)|0;m=j;l=0;k=0;while(1){if(m>>>0>=i>>>0)break;w=a[((a[o>>0]|0)<0?c[s>>2]|0:s)+k>>0]|0;if(w<<24>>24>0&(l|0)==(w<<24>>24|0)){l=c[h>>2]|0;c[h>>2]=l+1;a[l>>0]=n;l=a[o>>0]|0;k=k+(k>>>0<((l<<24>>24<0?c[p>>2]|0:l&255)+-1|0)>>>0&1)|0;l=0;}x=_b[c[(c[t>>2]|0)+28>>2]&15](t,a[m>>0]|0)|0;w=c[h>>2]|0;c[h>>2]=w+1;a[w>>0]=x;m=m+1|0;l=l+1|0;}k=f+(j-b)|0;j=c[h>>2]|0;if((k|0)==(j|0))k=t;else while(1){j=j+-1|0;if(k>>>0>=j>>>0){k=t;break c;}x=a[k>>0]|0;a[k>>0]=a[j>>0]|0;a[j>>0]=x;k=k+1|0;}}else{bc[c[(c[t>>2]|0)+32>>2]&7](t,j,i,c[h>>2]|0)|0;c[h>>2]=(c[h>>2]|0)+(i-j);k=t;}}while(0);while(1){if(i>>>0>=e>>>0)break;j=a[i>>0]|0;if(j<<24>>24==46){u=32;break;}w=_b[c[(c[k>>2]|0)+28>>2]&15](t,j)|0;x=c[h>>2]|0;c[h>>2]=x+1;a[x>>0]=w;i=i+1|0;}if((u|0)==32){w=Yb[c[(c[r>>2]|0)+12>>2]&127](r)|0;x=c[h>>2]|0;c[h>>2]=x+1;a[x>>0]=w;i=i+1|0;}bc[c[(c[t>>2]|0)+32>>2]&7](t,i,e,c[h>>2]|0)|0;x=(c[h>>2]|0)+(q-i)|0;c[h>>2]=x;c[g>>2]=(d|0)==(e|0)?x:f+(d-b)|0;GA(s);Pb=v;return;}function Jt(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0;if(e&2048){a[b>>0]=43;b=b+1|0;}if(e&512){a[b>>0]=35;b=b+1|0;}f=b;while(1){b=a[c>>0]|0;if(!(b<<24>>24))break;a[f>>0]=b;c=c+1|0;f=f+1|0;}switch(e&74){case 64:{b=111;break;}case 8:{b=e>>>9&32^120;break;}default:b=d?100:117;}a[f>>0]=b;return;}function Kt(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;r=Pb;Pb=Pb+16|0;q=r;p=hs(i,30372)|0;l=hs(i,30388)|0;nc[c[(c[l>>2]|0)+20>>2]&63](q,l);n=q+11|0;m=a[n>>0]|0;o=q+4|0;if((m<<24>>24<0?c[o>>2]|0:m&255)|0){c[h>>2]=f;i=a[b>>0]|0;switch(i<<24>>24){case 43:case 45:{m=_b[c[(c[p>>2]|0)+28>>2]&15](p,i)|0;i=c[h>>2]|0;c[h>>2]=i+1;a[i>>0]=m;i=b+1|0;break;}default:i=b;}a:do{if((e-i|0)>1?(a[i>>0]|0)==48:0){j=i+1|0;switch(a[j>>0]|0){case 88:case 120:break;default:break a;}m=_b[c[(c[p>>2]|0)+28>>2]&15](p,48)|0;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=m;k=_b[c[(c[p>>2]|0)+28>>2]&15](p,a[j>>0]|0)|0;m=c[h>>2]|0;c[h>>2]=m+1;a[m>>0]=k;i=i+2|0;}}while(0);b:do{if((i|0)!=(e|0)){j=e;k=i;while(1){j=j+-1|0;if(k>>>0>=j>>>0)break b;m=a[k>>0]|0;a[k>>0]=a[j>>0]|0;a[j>>0]=m;k=k+1|0;}}}while(0);m=Yb[c[(c[l>>2]|0)+16>>2]&127](l)|0;l=i;j=0;k=0;while(1){if(l>>>0>=e>>>0)break;s=a[((a[n>>0]|0)<0?c[q>>2]|0:q)+j>>0]|0;if(s<<24>>24!=0&(k|0)==(s<<24>>24|0)){k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=m;k=a[n>>0]|0;j=j+(j>>>0<((k<<24>>24<0?c[o>>2]|0:k&255)+-1|0)>>>0&1)|0;k=0;}t=_b[c[(c[p>>2]|0)+28>>2]&15](p,a[l>>0]|0)|0;s=c[h>>2]|0;c[h>>2]=s+1;a[s>>0]=t;l=l+1|0;k=k+1|0;}i=f+(i-b)|0;j=c[h>>2]|0;if((i|0)!=(j|0)){while(1){j=j+-1|0;if(i>>>0>=j>>>0)break;t=a[i>>0]|0;a[i>>0]=a[j>>0]|0;a[j>>0]=t;i=i+1|0;}i=c[h>>2]|0;}}else{bc[c[(c[p>>2]|0)+32>>2]&7](p,b,e,f)|0;i=f+(e-b)|0;c[h>>2]=i;}c[g>>2]=(d|0)==(e|0)?i:f+(d-b)|0;GA(q);Pb=r;return;}function Lt(a){a=a|0;Or(a);return;}function Mt(a){a=a|0;Or(a);oA(a);return;}function Nt(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;l=Pb;Pb=Pb+16|0;k=l+4|0;h=l;if(!(c[e+4>>2]&1)){j=c[(c[b>>2]|0)+24>>2]|0;c[h>>2]=c[d>>2];c[k>>2]=c[h>>2];b=dc[j&31](b,k,e,f,g&1)|0;}else{zr(k,e);b=hs(k,30412)|0;is(k);e=c[b>>2]|0;if(g)nc[c[e+24>>2]&63](k,b);else nc[c[e+28>>2]&63](k,b);i=k+8+3|0;b=a[i>>0]|0;e=c[k>>2]|0;j=k+4|0;g=b<<24>>24<0?e:k;while(1){h=b<<24>>24<0;if((g|0)==((h?e:k)+((h?c[j>>2]|0:b&255)<<2)|0))break;b=c[g>>2]|0;e=c[d>>2]|0;if(e|0){f=e+24|0;h=c[f>>2]|0;if((h|0)==(c[e+28>>2]|0)){h=c[(c[e>>2]|0)+52>>2]|0;b=er(b)|0;b=_b[h&15](e,b)|0;}else{c[f>>2]=h+4;c[h>>2]=b;b=er(b)|0;}if(Ar(b,dr()|0)|0)c[d>>2]=0;}g=g+4|0;b=a[i>>0]|0;e=c[k>>2]|0;}b=c[d>>2]|0;XA(k);}Pb=l;return b|0;}function Ot(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=Pb;Pb=Pb+32|0;j=b;n=b+16|0;m=b+12|0;l=b+4|0;k=b+8|0;a[n>>0]=a[23602]|0;a[n+1>>0]=a[23603]|0;a[n+2>>0]=a[23604]|0;a[n+3>>0]=a[23605]|0;a[n+4>>0]=a[23606]|0;a[n+5>>0]=a[23607]|0;p=e+4|0;Jt(n+1|0,23608,1,c[p>>2]|0);p=(c[p>>2]|0)>>>9&1;q=p+13|0;h=Qa()|0;o=Pb;Pb=Pb+((1*q|0)+15&-16)|0;i=ks()|0;c[j>>2]=g;g=o+(Dt(o,q,i,n,j)|0)|0;n=Et(o,g,e)|0;i=Pb;Pb=Pb+((1*((p<<1|24)+-1<<2)|0)+15&-16)|0;zr(j,e);Xt(o,n,g,i,m,l,j);is(j);c[k>>2]=c[d>>2];d=c[m>>2]|0;g=c[l>>2]|0;c[j>>2]=c[k>>2];g=Vt(j,i,d,g,e,f)|0;Pa(h|0);Pb=b;return g|0;}function Pt(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a=Pb;Pb=Pb+32|0;j=a+8|0;i=a;m=a+24|0;l=a+16|0;k=a+20|0;o=i;c[o>>2]=37;c[o+4>>2]=0;o=d+4|0;Jt(i+1|0,23599,1,c[o>>2]|0);o=(c[o>>2]|0)>>>9&1;q=o+23|0;h=Qa()|0;n=Pb;Pb=Pb+((1*q|0)+15&-16)|0;p=ks()|0;r=j;c[r>>2]=f;c[r+4>>2]=g;f=n+(Dt(n,q,p,i,j)|0)|0;g=Et(n,f,d)|0;i=Pb;Pb=Pb+((1*((o<<1|44)+-1<<2)|0)+15&-16)|0;zr(j,d);Xt(n,g,f,i,m,l,j);is(j);c[k>>2]=c[b>>2];f=c[m>>2]|0;g=c[l>>2]|0;c[j>>2]=c[k>>2];g=Vt(j,i,f,g,d,e)|0;Pa(h|0);Pb=a;return g|0;}function Qt(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;b=Pb;Pb=Pb+32|0;j=b;n=b+16|0;m=b+12|0;l=b+4|0;k=b+8|0;a[n>>0]=a[23602]|0;a[n+1>>0]=a[23603]|0;a[n+2>>0]=a[23604]|0;a[n+3>>0]=a[23605]|0;a[n+4>>0]=a[23606]|0;a[n+5>>0]=a[23607]|0;p=e+4|0;Jt(n+1|0,23608,0,c[p>>2]|0);p=(c[p>>2]|0)>>>9&1;q=p|12;h=Qa()|0;o=Pb;Pb=Pb+((1*q|0)+15&-16)|0;i=ks()|0;c[j>>2]=g;g=o+(Dt(o,q,i,n,j)|0)|0;n=Et(o,g,e)|0;i=Pb;Pb=Pb+((1*((p<<1|21)<<2)|0)+15&-16)|0;zr(j,e);Xt(o,n,g,i,m,l,j);is(j);c[k>>2]=c[d>>2];d=c[m>>2]|0;g=c[l>>2]|0;c[j>>2]=c[k>>2];g=Vt(j,i,d,g,e,f)|0;Pa(h|0);Pb=b;return g|0;}function Rt(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a=Pb;Pb=Pb+32|0;j=a+8|0;i=a;m=a+24|0;l=a+16|0;k=a+20|0;o=i;c[o>>2]=37;c[o+4>>2]=0;o=d+4|0;Jt(i+1|0,23599,0,c[o>>2]|0);o=(c[o>>2]|0)>>>9&1|22;q=o+1|0;h=Qa()|0;n=Pb;Pb=Pb+((1*q|0)+15&-16)|0;p=ks()|0;r=j;c[r>>2]=f;c[r+4>>2]=g;f=n+(Dt(n,q,p,i,j)|0)|0;g=Et(n,f,d)|0;i=Pb;Pb=Pb+((1*((o<<1)+-1<<2)|0)+15&-16)|0;zr(j,d);Xt(n,g,f,i,m,l,j);is(j);c[k>>2]=c[b>>2];f=c[m>>2]|0;g=c[l>>2]|0;c[j>>2]=c[k>>2];g=Vt(j,i,f,g,d,e)|0;Pa(h|0);Pb=a;return g|0;}function St(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;x=Pb;Pb=Pb+352|0;r=x+344|0;m=x+320|0;l=x+304|0;i=x+296|0;h=x+280|0;k=x+272|0;o=x+240|0;n=x+340|0;p=x;u=x+336|0;s=x+332|0;t=x+328|0;j=k;c[j>>2]=37;c[j+4>>2]=0;j=Gt(k+1|0,30825,c[d+4>>2]|0)|0;c[n>>2]=o;a=ks()|0;if(j){c[h>>2]=c[d+8>>2];g[h+8>>3]=f;a=Dt(o,30,a,k,h)|0;}else{g[i>>3]=f;a=Dt(o,30,a,k,i)|0;}if((a|0)>29){a=ks()|0;if(j){c[l>>2]=c[d+8>>2];g[l+8>>3]=f;h=Ht(n,a,k,l)|0;}else{g[m>>3]=f;h=Ht(n,a,k,m)|0;}a=c[n>>2]|0;if(!a)mA();else{q=h;z=a;w=a;}}else{q=a;z=0;w=c[n>>2]|0;}h=w+q|0;i=Et(w,h,d)|0;do{if((w|0)!=(o|0)){a=Bq(q<<3)|0;if(!a)mA();else{v=a;y=0;A=a;break;}}else{v=p;y=1;A=0;}}while(0);zr(r,d);Wt(w,i,h,v,u,s,r);is(r);c[t>>2]=c[b>>2];w=c[u>>2]|0;a=c[s>>2]|0;c[r>>2]=c[t>>2];a=Vt(r,v,w,a,d,e)|0;c[b>>2]=a;if(!y)Cq(A);Cq(z);Pb=x;return a|0;}function Tt(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;x=Pb;Pb=Pb+352|0;r=x+344|0;m=x+320|0;l=x+304|0;i=x+296|0;h=x+280|0;k=x+272|0;o=x+240|0;n=x+340|0;p=x;u=x+336|0;s=x+332|0;t=x+328|0;j=k;c[j>>2]=37;c[j+4>>2]=0;j=Gt(k+1|0,23597,c[d+4>>2]|0)|0;c[n>>2]=o;a=ks()|0;if(j){c[h>>2]=c[d+8>>2];g[h+8>>3]=f;a=Dt(o,30,a,k,h)|0;}else{g[i>>3]=f;a=Dt(o,30,a,k,i)|0;}if((a|0)>29){a=ks()|0;if(j){c[l>>2]=c[d+8>>2];g[l+8>>3]=f;h=Ht(n,a,k,l)|0;}else{g[m>>3]=f;h=Ht(n,a,k,m)|0;}a=c[n>>2]|0;if(!a)mA();else{q=h;z=a;w=a;}}else{q=a;z=0;w=c[n>>2]|0;}h=w+q|0;i=Et(w,h,d)|0;do{if((w|0)!=(o|0)){a=Bq(q<<3)|0;if(!a)mA();else{v=a;y=0;A=a;break;}}else{v=p;y=1;A=0;}}while(0);zr(r,d);Wt(w,i,h,v,u,s,r);is(r);c[t>>2]=c[b>>2];w=c[u>>2]|0;a=c[s>>2]|0;c[r>>2]=c[t>>2];a=Vt(r,v,w,a,d,e)|0;c[b>>2]=a;if(!y)Cq(A);Cq(z);Pb=x;return a|0;}function Ut(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0;b=Pb;Pb=Pb+208|0;l=b+184|0;k=b+192|0;h=b+160|0;j=b;m=b+188|0;a[k>>0]=a[23591]|0;a[k+1>>0]=a[23592]|0;a[k+2>>0]=a[23593]|0;a[k+3>>0]=a[23594]|0;a[k+4>>0]=a[23595]|0;a[k+5>>0]=a[23596]|0;i=ks()|0;c[l>>2]=g;g=Dt(h,20,i,k,l)|0;k=h+g|0;i=Et(h,k,e)|0;zr(l,e);n=hs(l,30404)|0;is(l);bc[c[(c[n>>2]|0)+48>>2]&7](n,h,k,j)|0;g=j+(g<<2)|0;c[m>>2]=c[d>>2];c[l>>2]=c[m>>2];g=Vt(l,j,(i|0)==(k|0)?g:j+(i-h<<2)|0,g,e,f)|0;Pb=b;return g|0;}function Vt(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0;n=Pb;Pb=Pb+16|0;m=n;i=c[b>>2]|0;a:do{if(!i)i=0;else{o=d;j=f-o>>2;l=g+12|0;g=c[l>>2]|0;g=(g|0)>(j|0)?g-j|0:0;j=e;o=j-o|0;k=o>>2;if((o|0)>0?($b[c[(c[i>>2]|0)+48>>2]&31](i,d,k)|0)!=(k|0):0){c[b>>2]=0;i=0;break;}do{if((g|0)>0){c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;VA(m,g,h);if(($b[c[(c[i>>2]|0)+48>>2]&31](i,(a[m+8+3>>0]|0)<0?c[m>>2]|0:m,g)|0)==(g|0)){XA(m);break;}else{c[b>>2]=0;XA(m);i=0;break a;}}}while(0);o=f-j|0;f=o>>2;if((o|0)>0?($b[c[(c[i>>2]|0)+48>>2]&31](i,e,f)|0)!=(f|0):0){c[b>>2]=0;i=0;break;}c[l>>2]=0;}}while(0);Pb=n;return i|0;}function Wt(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;v=Pb;Pb=Pb+16|0;s=v;t=hs(i,30404)|0;q=hs(i,30412)|0;nc[c[(c[q>>2]|0)+20>>2]&63](s,q);c[h>>2]=f;i=a[b>>0]|0;switch(i<<24>>24){case 43:case 45:{r=_b[c[(c[t>>2]|0)+44>>2]&15](t,i)|0;i=c[h>>2]|0;c[h>>2]=i+4;c[i>>2]=r;i=b+1|0;break;}default:i=b;}r=e;a:do{if((r-i|0)>1?(a[i>>0]|0)==48:0){j=i+1|0;switch(a[j>>0]|0){case 88:case 120:break;default:{u=4;break a;}}o=_b[c[(c[t>>2]|0)+44>>2]&15](t,48)|0;p=c[h>>2]|0;c[h>>2]=p+4;c[p>>2]=o;i=i+2|0;p=_b[c[(c[t>>2]|0)+44>>2]&15](t,a[j>>0]|0)|0;j=c[h>>2]|0;c[h>>2]=j+4;c[j>>2]=p;j=i;while(1){if(j>>>0>=e>>>0)break a;p=a[j>>0]|0;if(!(Yp(p,ks()|0)|0))break a;j=j+1|0;}}else u=4;}while(0);b:do{if((u|0)==4){j=i;while(1){if(j>>>0>=e>>>0)break b;p=a[j>>0]|0;if(!(Pp(p,ks()|0)|0))break b;j=j+1|0;}}}while(0);o=s+11|0;n=a[o>>0]|0;p=s+4|0;c:do{if((n<<24>>24<0?c[p>>2]|0:n&255)|0){d:do{if((i|0)!=(j|0)){k=j;l=i;while(1){k=k+-1|0;if(l>>>0>=k>>>0)break d;n=a[l>>0]|0;a[l>>0]=a[k>>0]|0;a[k>>0]=n;l=l+1|0;}}}while(0);n=Yb[c[(c[q>>2]|0)+16>>2]&127](q)|0;m=i;k=0;l=0;while(1){if(m>>>0>=j>>>0)break;w=a[((a[o>>0]|0)<0?c[s>>2]|0:s)+k>>0]|0;if(w<<24>>24>0&(l|0)==(w<<24>>24|0)){l=c[h>>2]|0;c[h>>2]=l+4;c[l>>2]=n;l=a[o>>0]|0;k=k+(k>>>0<((l<<24>>24<0?c[p>>2]|0:l&255)+-1|0)>>>0&1)|0;l=0;}x=_b[c[(c[t>>2]|0)+44>>2]&15](t,a[m>>0]|0)|0;w=c[h>>2]|0;c[h>>2]=w+4;c[w>>2]=x;m=m+1|0;l=l+1|0;}i=f+(i-b<<2)|0;l=c[h>>2]|0;if((i|0)==(l|0))k=t;else{k=l;while(1){k=k+-4|0;if(i>>>0>=k>>>0){k=t;i=l;break c;}x=c[i>>2]|0;c[i>>2]=c[k>>2];c[k>>2]=x;i=i+4|0;}}}else{bc[c[(c[t>>2]|0)+48>>2]&7](t,i,j,c[h>>2]|0)|0;i=(c[h>>2]|0)+(j-i<<2)|0;c[h>>2]=i;k=t;}}while(0);while(1){if(j>>>0>=e>>>0)break;i=a[j>>0]|0;if(i<<24>>24==46){u=32;break;}w=_b[c[(c[k>>2]|0)+44>>2]&15](t,i)|0;x=c[h>>2]|0;i=x+4|0;c[h>>2]=i;c[x>>2]=w;j=j+1|0;}if((u|0)==32){w=Yb[c[(c[q>>2]|0)+12>>2]&127](q)|0;x=c[h>>2]|0;i=x+4|0;c[h>>2]=i;c[x>>2]=w;j=j+1|0;}bc[c[(c[t>>2]|0)+48>>2]&7](t,j,e,i)|0;x=(c[h>>2]|0)+(r-j<<2)|0;c[h>>2]=x;c[g>>2]=(d|0)==(e|0)?x:f+(d-b<<2)|0;GA(s);Pb=v;return;}function Xt(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;r=Pb;Pb=Pb+16|0;q=r;p=hs(i,30404)|0;l=hs(i,30412)|0;nc[c[(c[l>>2]|0)+20>>2]&63](q,l);n=q+11|0;m=a[n>>0]|0;o=q+4|0;if((m<<24>>24<0?c[o>>2]|0:m&255)|0){c[h>>2]=f;i=a[b>>0]|0;switch(i<<24>>24){case 43:case 45:{m=_b[c[(c[p>>2]|0)+44>>2]&15](p,i)|0;i=c[h>>2]|0;c[h>>2]=i+4;c[i>>2]=m;i=b+1|0;break;}default:i=b;}a:do{if((e-i|0)>1?(a[i>>0]|0)==48:0){j=i+1|0;switch(a[j>>0]|0){case 88:case 120:break;default:break a;}m=_b[c[(c[p>>2]|0)+44>>2]&15](p,48)|0;k=c[h>>2]|0;c[h>>2]=k+4;c[k>>2]=m;k=_b[c[(c[p>>2]|0)+44>>2]&15](p,a[j>>0]|0)|0;m=c[h>>2]|0;c[h>>2]=m+4;c[m>>2]=k;i=i+2|0;}}while(0);b:do{if((i|0)!=(e|0)){j=e;k=i;while(1){j=j+-1|0;if(k>>>0>=j>>>0)break b;m=a[k>>0]|0;a[k>>0]=a[j>>0]|0;a[j>>0]=m;k=k+1|0;}}}while(0);m=Yb[c[(c[l>>2]|0)+16>>2]&127](l)|0;l=i;j=0;k=0;while(1){if(l>>>0>=e>>>0)break;s=a[((a[n>>0]|0)<0?c[q>>2]|0:q)+j>>0]|0;if(s<<24>>24!=0&(k|0)==(s<<24>>24|0)){k=c[h>>2]|0;c[h>>2]=k+4;c[k>>2]=m;k=a[n>>0]|0;j=j+(j>>>0<((k<<24>>24<0?c[o>>2]|0:k&255)+-1|0)>>>0&1)|0;k=0;}t=_b[c[(c[p>>2]|0)+44>>2]&15](p,a[l>>0]|0)|0;s=c[h>>2]|0;c[h>>2]=s+4;c[s>>2]=t;l=l+1|0;k=k+1|0;}i=f+(i-b<<2)|0;j=c[h>>2]|0;if((i|0)!=(j|0)){while(1){j=j+-4|0;if(i>>>0>=j>>>0)break;t=c[i>>2]|0;c[i>>2]=c[j>>2];c[j>>2]=t;i=i+4|0;}i=c[h>>2]|0;}}else{bc[c[(c[p>>2]|0)+48>>2]&7](p,b,e,f)|0;i=f+(e-b<<2)|0;c[h>>2]=i;}c[g>>2]=(d|0)==(e|0)?i:f+(d-b<<2)|0;GA(q);Pb=r;return;}function Yt(a){a=a|0;Or(a);return;}function Zt(a){a=a|0;Or(a);oA(a);return;}function _t(a){a=a|0;return 2;}function $t(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Pb;Pb=Pb+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];g=ru(a,j,i,e,f,g,24127,24135)|0;Pb=h;return g|0;}function au(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0;i=Pb;Pb=Pb+16|0;j=i+12|0;k=i+8|0;m=i+4|0;l=i;n=b+8|0;n=Yb[c[(c[n>>2]|0)+20>>2]&127](n)|0;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];e=a[n+11>>0]|0;o=e<<24>>24<0;d=o?c[n>>2]|0:n;e=d+(o?c[n+4>>2]|0:e&255)|0;c[k>>2]=c[m>>2];c[j>>2]=c[l>>2];h=ru(b,k,j,f,g,h,d,e)|0;Pb=i;return h|0;}function bu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=Pb;Pb=Pb+16|0;i=h+4|0;j=h;zr(i,e);e=hs(i,30372)|0;is(i);c[j>>2]=c[d>>2];c[i>>2]=c[j>>2];pu(a,g+24|0,b,i,f,e);Pb=h;return c[b>>2]|0;}function cu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=Pb;Pb=Pb+16|0;i=h+4|0;j=h;zr(i,e);e=hs(i,30372)|0;is(i);c[j>>2]=c[d>>2];c[i>>2]=c[j>>2];qu(a,g+16|0,b,i,f,e);Pb=h;return c[b>>2]|0;}function du(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=Pb;Pb=Pb+16|0;i=h+4|0;j=h;zr(i,e);e=hs(i,30372)|0;is(i);c[j>>2]=c[d>>2];c[i>>2]=c[j>>2];Cu(a,g+20|0,b,i,f,e);Pb=h;return c[b>>2]|0;}function eu(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;R=Pb;Pb=Pb+144|0;k=R+128|0;j=R+112|0;P=R+124|0;Q=R+120|0;l=R+116|0;m=R+108|0;n=R+104|0;o=R+100|0;p=R+96|0;q=R+92|0;r=R+88|0;s=R+84|0;t=R+80|0;u=R+76|0;v=R+72|0;w=R+68|0;x=R+64|0;y=R+60|0;z=R+56|0;A=R+52|0;B=R+48|0;C=R+44|0;D=R+40|0;E=R+36|0;F=R+32|0;G=R+28|0;H=R+24|0;I=R+20|0;J=R+16|0;K=R+12|0;L=R+8|0;M=R+4|0;N=R;c[g>>2]=0;zr(k,f);O=hs(k,30372)|0;is(k);do{switch(i<<24>>24|0){case 65:case 97:{c[P>>2]=c[e>>2];c[k>>2]=c[P>>2];pu(b,h+24|0,d,k,g,O);S=26;break;}case 104:case 66:case 98:{c[Q>>2]=c[e>>2];c[k>>2]=c[Q>>2];qu(b,h+16|0,d,k,g,O);S=26;break;}case 99:{Q=b+8|0;Q=Yb[c[(c[Q>>2]|0)+12>>2]&127](Q)|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];S=a[Q+11>>0]|0;e=S<<24>>24<0;i=e?c[Q>>2]|0:Q;S=i+(e?c[Q+4>>2]|0:S&255)|0;c[j>>2]=c[l>>2];c[k>>2]=c[m>>2];c[d>>2]=ru(b,j,k,f,g,h,i,S)|0;S=26;break;}case 101:case 100:{c[n>>2]=c[e>>2];c[k>>2]=c[n>>2];su(b,h+12|0,d,k,g,O);S=26;break;}case 68:{c[o>>2]=c[d>>2];c[p>>2]=c[e>>2];c[j>>2]=c[o>>2];c[k>>2]=c[p>>2];c[d>>2]=ru(b,j,k,f,g,h,24087,24095)|0;S=26;break;}case 70:{c[q>>2]=c[d>>2];c[r>>2]=c[e>>2];c[j>>2]=c[q>>2];c[k>>2]=c[r>>2];c[d>>2]=ru(b,j,k,f,g,h,24095,24103)|0;S=26;break;}case 72:{c[s>>2]=c[e>>2];c[k>>2]=c[s>>2];tu(b,h+8|0,d,k,g,O);S=26;break;}case 73:{c[t>>2]=c[e>>2];c[k>>2]=c[t>>2];uu(b,h+8|0,d,k,g,O);S=26;break;}case 106:{c[u>>2]=c[e>>2];c[k>>2]=c[u>>2];vu(b,h+28|0,d,k,g,O);S=26;break;}case 109:{c[v>>2]=c[e>>2];c[k>>2]=c[v>>2];wu(b,h+16|0,d,k,g,O);S=26;break;}case 77:{c[w>>2]=c[e>>2];c[k>>2]=c[w>>2];xu(b,h+4|0,d,k,g,O);S=26;break;}case 116:case 110:{c[x>>2]=c[e>>2];c[k>>2]=c[x>>2];yu(b,d,k,g,O);S=26;break;}case 112:{c[y>>2]=c[e>>2];c[k>>2]=c[y>>2];zu(b,h+8|0,d,k,g,O);S=26;break;}case 114:{c[z>>2]=c[d>>2];c[A>>2]=c[e>>2];c[j>>2]=c[z>>2];c[k>>2]=c[A>>2];c[d>>2]=ru(b,j,k,f,g,h,24103,24114)|0;S=26;break;}case 82:{c[B>>2]=c[d>>2];c[C>>2]=c[e>>2];c[j>>2]=c[B>>2];c[k>>2]=c[C>>2];c[d>>2]=ru(b,j,k,f,g,h,24114,24119)|0;S=26;break;}case 83:{c[D>>2]=c[e>>2];c[k>>2]=c[D>>2];Au(b,h,d,k,g,O);S=26;break;}case 84:{c[E>>2]=c[d>>2];c[F>>2]=c[e>>2];c[j>>2]=c[E>>2];c[k>>2]=c[F>>2];c[d>>2]=ru(b,j,k,f,g,h,24119,24127)|0;S=26;break;}case 119:{c[G>>2]=c[e>>2];c[k>>2]=c[G>>2];Bu(b,h+24|0,d,k,g,O);S=26;break;}case 120:{i=c[(c[b>>2]|0)+20>>2]|0;c[H>>2]=c[d>>2];c[I>>2]=c[e>>2];c[j>>2]=c[H>>2];c[k>>2]=c[I>>2];j=gc[i&63](b,j,k,f,g,h)|0;break;}case 88:{Q=b+8|0;Q=Yb[c[(c[Q>>2]|0)+24>>2]&127](Q)|0;c[J>>2]=c[d>>2];c[K>>2]=c[e>>2];S=a[Q+11>>0]|0;e=S<<24>>24<0;i=e?c[Q>>2]|0:Q;S=i+(e?c[Q+4>>2]|0:S&255)|0;c[j>>2]=c[J>>2];c[k>>2]=c[K>>2];c[d>>2]=ru(b,j,k,f,g,h,i,S)|0;S=26;break;}case 121:{c[L>>2]=c[e>>2];c[k>>2]=c[L>>2];Cu(b,h+20|0,d,k,g,O);S=26;break;}case 89:{c[M>>2]=c[e>>2];c[k>>2]=c[M>>2];Du(b,h+20|0,d,k,g,O);S=26;break;}case 37:{c[N>>2]=c[e>>2];c[k>>2]=c[N>>2];Eu(b,d,k,g,O);S=26;break;}default:{c[g>>2]=c[g>>2]|4;S=26;}}}while(0);if((S|0)==26)j=c[d>>2]|0;Pb=R;return j|0;}function fu(b){b=b|0;if((a[29128]|0)==0?eC(29128)|0:0){ou();c[7625]=27888;}return c[7625]|0;}function gu(b){b=b|0;if((a[29112]|0)==0?eC(29112)|0:0){nu();c[7624]=27600;}return c[7624]|0;}function hu(b){b=b|0;if((a[29096]|0)==0?eC(29096)|0:0){mu();c[7623]=27312;}return c[7623]|0;}function iu(b){b=b|0;if((a[29088]|0)==0?eC(29088)|0:0){c[7620]=0;c[7621]=0;c[7622]=0;DA(30480,23845,Qc(23845)|0);}return 30480;}function ju(b){b=b|0;if((a[29080]|0)==0?eC(29080)|0:0){c[7617]=0;c[7618]=0;c[7619]=0;DA(30468,23833,Qc(23833)|0);}return 30468;}function ku(b){b=b|0;if((a[29072]|0)==0?eC(29072)|0:0){c[7614]=0;c[7615]=0;c[7616]=0;DA(30456,23824,Qc(23824)|0);}return 30456;}function lu(b){b=b|0;if((a[29064]|0)==0?eC(29064)|0:0){c[7611]=0;c[7612]=0;c[7613]=0;DA(30444,23815,Qc(23815)|0);}return 30444;}function mu(){var b=0,d=0;if((a[29104]|0)==0?eC(29104)|0:0){d=27312;do{c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[d+(b<<2)>>2]=0;b=b+1|0;}d=d+12|0;}while((d|0)!=27600);}LA(27312,23866)|0;LA(27324,23869)|0;return;}function nu(){var b=0,d=0;if((a[29120]|0)==0?eC(29120)|0:0){d=27600;do{c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[d+(b<<2)>>2]=0;b=b+1|0;}d=d+12|0;}while((d|0)!=27888);}LA(27600,23872)|0;LA(27612,23880)|0;LA(27624,23889)|0;LA(27636,23895)|0;LA(27648,23901)|0;LA(27660,23905)|0;LA(27672,23910)|0;LA(27684,23915)|0;LA(27696,23922)|0;LA(27708,23932)|0;LA(27720,23940)|0;LA(27732,23949)|0;LA(27744,23958)|0;LA(27756,23962)|0;LA(27768,23966)|0;LA(27780,23970)|0;LA(27792,23901)|0;LA(27804,23974)|0;LA(27816,23978)|0;LA(27828,23982)|0;LA(27840,23986)|0;LA(27852,23990)|0;LA(27864,23994)|0;LA(27876,23998)|0;return;}function ou(){var b=0,d=0;if((a[29136]|0)==0?eC(29136)|0:0){d=27888;do{c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[d+(b<<2)>>2]=0;b=b+1|0;}d=d+12|0;}while((d|0)!=28056);}LA(27888,24002)|0;LA(27900,24009)|0;LA(27912,24016)|0;LA(27924,24024)|0;LA(27936,24034)|0;LA(27948,24043)|0;LA(27960,24050)|0;LA(27972,24059)|0;LA(27984,24063)|0;LA(27996,24067)|0;LA(28008,24071)|0;LA(28020,24075)|0;LA(28032,24079)|0;LA(28044,24083)|0;return;}function pu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=Pb;Pb=Pb+16|0;i=h+4|0;j=h;a=a+8|0;a=Yb[c[c[a>>2]>>2]&127](a)|0;c[j>>2]=c[e>>2];c[i>>2]=c[j>>2];a=(Rs(d,i,a,a+168|0,g,f,0)|0)-a|0;if((a|0)<168)c[b>>2]=((a|0)/12|0|0)%7|0;Pb=h;return;}function qu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=Pb;Pb=Pb+16|0;i=h+4|0;j=h;a=a+8|0;a=Yb[c[(c[a>>2]|0)+4>>2]&127](a)|0;c[j>>2]=c[e>>2];c[i>>2]=c[j>>2];a=(Rs(d,i,a,a+288|0,g,f,0)|0)-a|0;if((a|0)<288)c[b>>2]=((a|0)/12|0|0)%12|0;Pb=h;return;}function ru(d,e,f,g,h,i,j,k){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;z=Pb;Pb=Pb+16|0;s=z+12|0;r=z+8|0;w=z+4|0;x=z;zr(s,g);t=hs(s,30372)|0;is(s);c[h>>2]=0;u=t+8|0;m=0;a:while(1){l=c[e>>2]|0;if(!((j|0)!=(k|0)&(m|0)==0))break;n=l;if(l){m=c[l+12>>2]|0;if((m|0)==(c[l+16>>2]|0))m=Yb[c[(c[l>>2]|0)+36>>2]&127](l)|0;else m=Vc(a[m>>0]|0)|0;if(id(m,ad()|0)|0){c[e>>2]=0;l=0;o=1;q=0;}else{o=0;q=n;}}else{l=0;o=1;q=n;}p=c[f>>2]|0;m=p;do{if(p){n=c[p+12>>2]|0;if((n|0)==(c[p+16>>2]|0))n=Yb[c[(c[p>>2]|0)+36>>2]&127](p)|0;else n=Vc(a[n>>0]|0)|0;if(!(id(n,ad()|0)|0)){if(o)break;else{y=63;break a;}}else{c[f>>2]=0;m=0;y=15;break;}}else y=15;}while(0);if((y|0)==15){y=0;if(o){y=63;break;}else p=0;}b:do{if(($b[c[(c[t>>2]|0)+36>>2]&31](t,a[j>>0]|0,0)|0)<<24>>24==37){p=j+1|0;if((p|0)==(k|0)){y=63;break a;}n=$b[c[(c[t>>2]|0)+36>>2]&31](t,a[p>>0]|0,0)|0;switch(n<<24>>24){case 48:case 69:{j=j+2|0;if((j|0)==(k|0)){y=63;break a;}o=n;l=$b[c[(c[t>>2]|0)+36>>2]&31](t,a[j>>0]|0,0)|0;j=p;break;}default:{o=0;l=n;}}p=c[(c[d>>2]|0)+36>>2]|0;c[w>>2]=q;c[x>>2]=m;c[r>>2]=c[w>>2];c[s>>2]=c[x>>2];c[e>>2]=ic[p&15](d,r,s,g,h,i,l,o)|0;j=j+2|0;}else{m=a[j>>0]|0;if(m<<24>>24>-1?(v=c[u>>2]|0,b[v+(m<<24>>24<<1)>>1]&8192):0){do{j=j+1|0;if((j|0)==(k|0)){j=k;break;}m=a[j>>0]|0;if(m<<24>>24<=-1)break;}while((b[v+(m<<24>>24<<1)>>1]&8192)!=0);while(1){if(l){m=c[l+12>>2]|0;if((m|0)==(c[l+16>>2]|0))m=Yb[c[(c[l>>2]|0)+36>>2]&127](l)|0;else m=Vc(a[m>>0]|0)|0;if(id(m,ad()|0)|0){c[e>>2]=0;l=0;n=1;}else n=0;}else{l=0;n=1;}do{if(p){m=c[p+12>>2]|0;if((m|0)==(c[p+16>>2]|0))m=Yb[c[(c[p>>2]|0)+36>>2]&127](p)|0;else m=Vc(a[m>>0]|0)|0;if(!(id(m,ad()|0)|0)){if(n)break;else break b;}else{c[f>>2]=0;y=42;break;}}else y=42;}while(0);if((y|0)==42){y=0;if(n)break b;else p=0;}n=l+12|0;m=c[n>>2]|0;o=l+16|0;if((m|0)==(c[o>>2]|0))m=Yb[c[(c[l>>2]|0)+36>>2]&127](l)|0;else m=Vc(a[m>>0]|0)|0;if((m&255)<<24>>24<=-1)break b;if(!(b[(c[u>>2]|0)+(m<<24>>24<<1)>>1]&8192))break b;m=c[n>>2]|0;if((m|0)==(c[o>>2]|0))Yb[c[(c[l>>2]|0)+40>>2]&127](l)|0;else{c[n>>2]=m+1;Vc(a[m>>0]|0)|0;}}}n=l+12|0;m=c[n>>2]|0;o=l+16|0;if((m|0)==(c[o>>2]|0))m=Yb[c[(c[l>>2]|0)+36>>2]&127](l)|0;else m=Vc(a[m>>0]|0)|0;q=_b[c[(c[t>>2]|0)+12>>2]&15](t,m&255)|0;if(q<<24>>24!=(_b[c[(c[t>>2]|0)+12>>2]&15](t,a[j>>0]|0)|0)<<24>>24){c[h>>2]=4;break;}m=c[n>>2]|0;if((m|0)==(c[o>>2]|0))Yb[c[(c[l>>2]|0)+40>>2]&127](l)|0;else{c[n>>2]=m+1;Vc(a[m>>0]|0)|0;}j=j+1|0;}}while(0);m=c[h>>2]|0;}if((y|0)==63)c[h>>2]=4;if(l){j=c[l+12>>2]|0;if((j|0)==(c[l+16>>2]|0))j=Yb[c[(c[l>>2]|0)+36>>2]&127](l)|0;else j=Vc(a[j>>0]|0)|0;if(id(j,ad()|0)|0){c[e>>2]=0;l=0;n=1;}else n=0;}else{l=0;n=1;}j=c[f>>2]|0;do{if(j){m=c[j+12>>2]|0;if((m|0)==(c[j+16>>2]|0))j=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else j=Vc(a[m>>0]|0)|0;if(!(id(j,ad()|0)|0)){if(n)break;else{y=78;break;}}else{c[f>>2]=0;y=76;break;}}else y=76;}while(0);if((y|0)==76?n:0)y=78;if((y|0)==78)c[h>>2]=c[h>>2]|2;Pb=z;return l|0;}function su(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=Pb;Pb=Pb+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=Fu(d,a,f,g,2)|0;d=c[f>>2]|0;if((a+-1|0)>>>0<31&(d&4|0)==0)c[b>>2]=a;else c[f>>2]=d|4;Pb=h;return;}function tu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=Pb;Pb=Pb+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=Fu(d,a,f,g,2)|0;d=c[f>>2]|0;if((a|0)<24&(d&4|0)==0)c[b>>2]=a;else c[f>>2]=d|4;Pb=h;return;}function uu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=Pb;Pb=Pb+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=Fu(d,a,f,g,2)|0;d=c[f>>2]|0;if((a+-1|0)>>>0<12&(d&4|0)==0)c[b>>2]=a;else c[f>>2]=d|4;Pb=h;return;}function vu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=Pb;Pb=Pb+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=Fu(d,a,f,g,3)|0;d=c[f>>2]|0;if((a|0)<366&(d&4|0)==0)c[b>>2]=a;else c[f>>2]=d|4;Pb=h;return;}function wu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=Pb;Pb=Pb+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=Fu(d,a,f,g,2)|0;d=c[f>>2]|0;if((a|0)<13&(d&4|0)==0)c[b>>2]=a+-1;else c[f>>2]=d|4;Pb=h;return;}function xu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=Pb;Pb=Pb+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=Fu(d,a,f,g,2)|0;d=c[f>>2]|0;if((a|0)<60&(d&4|0)==0)c[b>>2]=a;else c[f>>2]=d|4;Pb=h;return;}function yu(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0;j=h+8|0;a:while(1){d=c[e>>2]|0;do{if(d){h=c[d+12>>2]|0;if((h|0)==(c[d+16>>2]|0))d=Yb[c[(c[d>>2]|0)+36>>2]&127](d)|0;else d=Vc(a[h>>0]|0)|0;if(id(d,ad()|0)|0){c[e>>2]=0;h=1;break;}else{h=(c[e>>2]|0)==0;break;}}else h=1;}while(0);i=c[f>>2]|0;do{if(i){d=c[i+12>>2]|0;if((d|0)==(c[i+16>>2]|0))d=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else d=Vc(a[d>>0]|0)|0;if(!(id(d,ad()|0)|0)){if(h)break;else break a;}else{c[f>>2]=0;k=15;break;}}else k=15;}while(0);if((k|0)==15){k=0;if(h){i=0;break;}else i=0;}d=c[e>>2]|0;h=c[d+12>>2]|0;if((h|0)==(c[d+16>>2]|0))d=Yb[c[(c[d>>2]|0)+36>>2]&127](d)|0;else d=Vc(a[h>>0]|0)|0;if((d&255)<<24>>24<=-1)break;if(!(b[(c[j>>2]|0)+(d<<24>>24<<1)>>1]&8192))break;d=c[e>>2]|0;h=d+12|0;i=c[h>>2]|0;if((i|0)==(c[d+16>>2]|0))Yb[c[(c[d>>2]|0)+40>>2]&127](d)|0;else{c[h>>2]=i+1;Vc(a[i>>0]|0)|0;}}d=c[e>>2]|0;do{if(d){h=c[d+12>>2]|0;if((h|0)==(c[d+16>>2]|0))d=Yb[c[(c[d>>2]|0)+36>>2]&127](d)|0;else d=Vc(a[h>>0]|0)|0;if(id(d,ad()|0)|0){c[e>>2]=0;h=1;break;}else{h=(c[e>>2]|0)==0;break;}}else h=1;}while(0);do{if(i){d=c[i+12>>2]|0;if((d|0)==(c[i+16>>2]|0))d=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else d=Vc(a[d>>0]|0)|0;if(!(id(d,ad()|0)|0)){if(h)break;else{k=41;break;}}else{c[f>>2]=0;k=39;break;}}else k=39;}while(0);if((k|0)==39?h:0)k=41;if((k|0)==41)c[g>>2]=c[g>>2]|2;return;}function zu(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0;m=Pb;Pb=Pb+16|0;k=m+4|0;l=m;j=b+8|0;j=Yb[c[(c[j>>2]|0)+8>>2]&127](j)|0;b=a[j+11>>0]|0;if(b<<24>>24<0)i=c[j+4>>2]|0;else i=b&255;b=a[j+12+11>>0]|0;if(b<<24>>24<0)b=c[j+16>>2]|0;else b=b&255;do{if((i|0)!=(0-b|0)){c[l>>2]=c[f>>2];c[k>>2]=c[l>>2];b=(Rs(e,k,j,j+24|0,h,g,0)|0)-j|0;i=c[d>>2]|0;if((i|0)==12&(b|0)==0){c[d>>2]=0;break;}if((i|0)<12&(b|0)==12)c[d>>2]=i+12;}else c[g>>2]=c[g>>2]|4;}while(0);Pb=m;return;}function Au(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=Pb;Pb=Pb+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=Fu(d,a,f,g,2)|0;d=c[f>>2]|0;if((a|0)<61&(d&4|0)==0)c[b>>2]=a;else c[f>>2]=d|4;Pb=h;return;}function Bu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=Pb;Pb=Pb+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=Fu(d,a,f,g,1)|0;d=c[f>>2]|0;if((a|0)<7&(d&4|0)==0)c[b>>2]=a;else c[f>>2]=d|4;Pb=h;return;}function Cu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=Pb;Pb=Pb+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=Fu(d,a,f,g,4)|0;if(!(c[f>>2]&4)){if((a|0)<69)a=a+2e3|0;else a=(a|0)<100?a+1900|0:a;c[b>>2]=a+-1900;}Pb=h;return;}function Du(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=Pb;Pb=Pb+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=Fu(d,a,f,g,4)|0;if(!(c[f>>2]&4))c[b>>2]=a+-1900;Pb=h;return;}function Eu(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0;b=c[d>>2]|0;do{if(b){h=c[b+12>>2]|0;if((h|0)==(c[b+16>>2]|0))b=Yb[c[(c[b>>2]|0)+36>>2]&127](b)|0;else b=Vc(a[h>>0]|0)|0;if(id(b,ad()|0)|0){c[d>>2]=0;i=1;break;}else{i=(c[d>>2]|0)==0;break;}}else i=1;}while(0);h=c[e>>2]|0;do{if(h){b=c[h+12>>2]|0;if((b|0)==(c[h+16>>2]|0))b=Yb[c[(c[h>>2]|0)+36>>2]&127](h)|0;else b=Vc(a[b>>0]|0)|0;if(!(id(b,ad()|0)|0)){if(i){j=h;k=17;break;}else{k=16;break;}}else{c[e>>2]=0;k=14;break;}}else k=14;}while(0);if((k|0)==14)if(i)k=16;else{j=0;k=17;}a:do{if((k|0)==16)c[f>>2]=c[f>>2]|6;else if((k|0)==17){b=c[d>>2]|0;h=c[b+12>>2]|0;if((h|0)==(c[b+16>>2]|0))b=Yb[c[(c[b>>2]|0)+36>>2]&127](b)|0;else b=Vc(a[h>>0]|0)|0;if(($b[c[(c[g>>2]|0)+36>>2]&31](g,b&255,0)|0)<<24>>24!=37){c[f>>2]=c[f>>2]|4;break;}b=c[d>>2]|0;h=b+12|0;i=c[h>>2]|0;if((i|0)==(c[b+16>>2]|0))Yb[c[(c[b>>2]|0)+40>>2]&127](b)|0;else{c[h>>2]=i+1;Vc(a[i>>0]|0)|0;}b=c[d>>2]|0;do{if(b){h=c[b+12>>2]|0;if((h|0)==(c[b+16>>2]|0))b=Yb[c[(c[b>>2]|0)+36>>2]&127](b)|0;else b=Vc(a[h>>0]|0)|0;if(id(b,ad()|0)|0){c[d>>2]=0;h=1;break;}else{h=(c[d>>2]|0)==0;break;}}else h=1;}while(0);do{if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else b=Vc(a[b>>0]|0)|0;if(!(id(b,ad()|0)|0)){if(h)break a;else break;}else{c[e>>2]=0;k=38;break;}}else k=38;}while(0);if((k|0)==38?!h:0)break;c[f>>2]=c[f>>2]|2;}}while(0);return;}function Fu(d,e,f,g,h){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;i=c[d>>2]|0;do{if(i){j=c[i+12>>2]|0;if((j|0)==(c[i+16>>2]|0))i=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else i=Vc(a[j>>0]|0)|0;if(id(i,ad()|0)|0){c[d>>2]=0;k=1;break;}else{k=(c[d>>2]|0)==0;break;}}else k=1;}while(0);j=c[e>>2]|0;do{if(j){i=c[j+12>>2]|0;if((i|0)==(c[j+16>>2]|0))i=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else i=Vc(a[i>>0]|0)|0;if(!(id(i,ad()|0)|0)){if(k){q=17;break;}else{q=16;break;}}else{c[e>>2]=0;q=14;break;}}else q=14;}while(0);if((q|0)==14)if(k)q=16;else{j=0;q=17;}a:do{if((q|0)==16){c[f>>2]=c[f>>2]|6;i=0;}else if((q|0)==17){i=c[d>>2]|0;k=c[i+12>>2]|0;if((k|0)==(c[i+16>>2]|0))i=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else i=Vc(a[k>>0]|0)|0;k=i&255;if(k<<24>>24>-1?(p=g+8|0,b[(c[p>>2]|0)+(i<<24>>24<<1)>>1]&2048):0){i=($b[c[(c[g>>2]|0)+36>>2]&31](g,k,0)|0)<<24>>24;k=c[d>>2]|0;l=k+12|0;m=c[l>>2]|0;if((m|0)==(c[k+16>>2]|0))Yb[c[(c[k>>2]|0)+40>>2]&127](k)|0;else{c[l>>2]=m+1;Vc(a[m>>0]|0)|0;}n=j;m=j;while(1){i=i+-48|0;o=h+-1|0;j=c[d>>2]|0;do{if(j){k=c[j+12>>2]|0;if((k|0)==(c[j+16>>2]|0))j=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else j=Vc(a[k>>0]|0)|0;if(id(j,ad()|0)|0){c[d>>2]=0;l=1;break;}else{l=(c[d>>2]|0)==0;break;}}else l=1;}while(0);if(m){j=c[m+12>>2]|0;if((j|0)==(c[m+16>>2]|0))j=Yb[c[(c[m>>2]|0)+36>>2]&127](m)|0;else j=Vc(a[j>>0]|0)|0;if(id(j,ad()|0)|0){c[e>>2]=0;j=1;n=0;m=0;}else j=0;}else{j=1;m=0;}k=c[d>>2]|0;if(!((h|0)>1&(l^j)))break;j=c[k+12>>2]|0;if((j|0)==(c[k+16>>2]|0))j=Yb[c[(c[k>>2]|0)+36>>2]&127](k)|0;else j=Vc(a[j>>0]|0)|0;k=j&255;if(k<<24>>24<=-1)break a;if(!(b[(c[p>>2]|0)+(j<<24>>24<<1)>>1]&2048))break a;i=(i*10|0)+(($b[c[(c[g>>2]|0)+36>>2]&31](g,k,0)|0)<<24>>24)|0;j=c[d>>2]|0;k=j+12|0;l=c[k>>2]|0;if((l|0)==(c[j+16>>2]|0))Yb[c[(c[j>>2]|0)+40>>2]&127](j)|0;else{c[k>>2]=l+1;Vc(a[l>>0]|0)|0;}h=o;}do{if(k){j=c[k+12>>2]|0;if((j|0)==(c[k+16>>2]|0))j=Yb[c[(c[k>>2]|0)+36>>2]&127](k)|0;else j=Vc(a[j>>0]|0)|0;if(id(j,ad()|0)|0){c[d>>2]=0;k=1;break;}else{k=(c[d>>2]|0)==0;break;}}else k=1;}while(0);do{if(n){j=c[n+12>>2]|0;if((j|0)==(c[n+16>>2]|0))j=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else j=Vc(a[j>>0]|0)|0;if(!(id(j,ad()|0)|0)){if(k)break a;else break;}else{c[e>>2]=0;q=63;break;}}else q=63;}while(0);if((q|0)==63?!k:0)break;c[f>>2]=c[f>>2]|2;break;}c[f>>2]=c[f>>2]|4;i=0;}}while(0);return i|0;}function Gu(a){a=a|0;Or(a);return;}function Hu(a){a=a|0;Or(a);oA(a);return;}function Iu(a){a=a|0;return 2;}function Ju(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Pb;Pb=Pb+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];g=av(a,j,i,e,f,g,6512,6544)|0;Pb=h;return g|0;}function Ku(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0;i=Pb;Pb=Pb+16|0;j=i+12|0;k=i+8|0;m=i+4|0;l=i;n=b+8|0;n=Yb[c[(c[n>>2]|0)+20>>2]&127](n)|0;c[m>>2]=c[d>>2];c[l>>2]=c[e>>2];e=a[n+8+3>>0]|0;o=e<<24>>24<0;d=o?c[n>>2]|0:n;e=d+((o?c[n+4>>2]|0:e&255)<<2)|0;c[k>>2]=c[m>>2];c[j>>2]=c[l>>2];h=av(b,k,j,f,g,h,d,e)|0;Pb=i;return h|0;}function Lu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=Pb;Pb=Pb+16|0;i=h+4|0;j=h;zr(i,e);e=hs(i,30404)|0;is(i);c[j>>2]=c[d>>2];c[i>>2]=c[j>>2];_u(a,g+24|0,b,i,f,e);Pb=h;return c[b>>2]|0;}function Mu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=Pb;Pb=Pb+16|0;i=h+4|0;j=h;zr(i,e);e=hs(i,30404)|0;is(i);c[j>>2]=c[d>>2];c[i>>2]=c[j>>2];$u(a,g+16|0,b,i,f,e);Pb=h;return c[b>>2]|0;}function Nu(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=Pb;Pb=Pb+16|0;i=h+4|0;j=h;zr(i,e);e=hs(i,30404)|0;is(i);c[j>>2]=c[d>>2];c[i>>2]=c[j>>2];lv(a,g+20|0,b,i,f,e);Pb=h;return c[b>>2]|0;}function Ou(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;R=Pb;Pb=Pb+144|0;k=R+128|0;j=R+112|0;P=R+124|0;Q=R+120|0;l=R+116|0;m=R+108|0;n=R+104|0;o=R+100|0;p=R+96|0;q=R+92|0;r=R+88|0;s=R+84|0;t=R+80|0;u=R+76|0;v=R+72|0;w=R+68|0;x=R+64|0;y=R+60|0;z=R+56|0;A=R+52|0;B=R+48|0;C=R+44|0;D=R+40|0;E=R+36|0;F=R+32|0;G=R+28|0;H=R+24|0;I=R+20|0;J=R+16|0;K=R+12|0;L=R+8|0;M=R+4|0;N=R;c[g>>2]=0;zr(k,f);O=hs(k,30404)|0;is(k);do{switch(i<<24>>24|0){case 65:case 97:{c[P>>2]=c[e>>2];c[k>>2]=c[P>>2];_u(b,h+24|0,d,k,g,O);S=26;break;}case 104:case 66:case 98:{c[Q>>2]=c[e>>2];c[k>>2]=c[Q>>2];$u(b,h+16|0,d,k,g,O);S=26;break;}case 99:{Q=b+8|0;Q=Yb[c[(c[Q>>2]|0)+12>>2]&127](Q)|0;c[l>>2]=c[d>>2];c[m>>2]=c[e>>2];S=a[Q+8+3>>0]|0;e=S<<24>>24<0;i=e?c[Q>>2]|0:Q;S=i+((e?c[Q+4>>2]|0:S&255)<<2)|0;c[j>>2]=c[l>>2];c[k>>2]=c[m>>2];c[d>>2]=av(b,j,k,f,g,h,i,S)|0;S=26;break;}case 101:case 100:{c[n>>2]=c[e>>2];c[k>>2]=c[n>>2];bv(b,h+12|0,d,k,g,O);S=26;break;}case 68:{c[o>>2]=c[d>>2];c[p>>2]=c[e>>2];c[j>>2]=c[o>>2];c[k>>2]=c[p>>2];c[d>>2]=av(b,j,k,f,g,h,6336,6368)|0;S=26;break;}case 70:{c[q>>2]=c[d>>2];c[r>>2]=c[e>>2];c[j>>2]=c[q>>2];c[k>>2]=c[r>>2];c[d>>2]=av(b,j,k,f,g,h,6368,6400)|0;S=26;break;}case 72:{c[s>>2]=c[e>>2];c[k>>2]=c[s>>2];cv(b,h+8|0,d,k,g,O);S=26;break;}case 73:{c[t>>2]=c[e>>2];c[k>>2]=c[t>>2];dv(b,h+8|0,d,k,g,O);S=26;break;}case 106:{c[u>>2]=c[e>>2];c[k>>2]=c[u>>2];ev(b,h+28|0,d,k,g,O);S=26;break;}case 109:{c[v>>2]=c[e>>2];c[k>>2]=c[v>>2];fv(b,h+16|0,d,k,g,O);S=26;break;}case 77:{c[w>>2]=c[e>>2];c[k>>2]=c[w>>2];gv(b,h+4|0,d,k,g,O);S=26;break;}case 116:case 110:{c[x>>2]=c[e>>2];c[k>>2]=c[x>>2];hv(b,d,k,g,O);S=26;break;}case 112:{c[y>>2]=c[e>>2];c[k>>2]=c[y>>2];iv(b,h+8|0,d,k,g,O);S=26;break;}case 114:{c[z>>2]=c[d>>2];c[A>>2]=c[e>>2];c[j>>2]=c[z>>2];c[k>>2]=c[A>>2];c[d>>2]=av(b,j,k,f,g,h,6400,6444)|0;S=26;break;}case 82:{c[B>>2]=c[d>>2];c[C>>2]=c[e>>2];c[j>>2]=c[B>>2];c[k>>2]=c[C>>2];c[d>>2]=av(b,j,k,f,g,h,6448,6468)|0;S=26;break;}case 83:{c[D>>2]=c[e>>2];c[k>>2]=c[D>>2];jv(b,h,d,k,g,O);S=26;break;}case 84:{c[E>>2]=c[d>>2];c[F>>2]=c[e>>2];c[j>>2]=c[E>>2];c[k>>2]=c[F>>2];c[d>>2]=av(b,j,k,f,g,h,6480,6512)|0;S=26;break;}case 119:{c[G>>2]=c[e>>2];c[k>>2]=c[G>>2];kv(b,h+24|0,d,k,g,O);S=26;break;}case 120:{i=c[(c[b>>2]|0)+20>>2]|0;c[H>>2]=c[d>>2];c[I>>2]=c[e>>2];c[j>>2]=c[H>>2];c[k>>2]=c[I>>2];j=gc[i&63](b,j,k,f,g,h)|0;break;}case 88:{Q=b+8|0;Q=Yb[c[(c[Q>>2]|0)+24>>2]&127](Q)|0;c[J>>2]=c[d>>2];c[K>>2]=c[e>>2];S=a[Q+8+3>>0]|0;e=S<<24>>24<0;i=e?c[Q>>2]|0:Q;S=i+((e?c[Q+4>>2]|0:S&255)<<2)|0;c[j>>2]=c[J>>2];c[k>>2]=c[K>>2];c[d>>2]=av(b,j,k,f,g,h,i,S)|0;S=26;break;}case 121:{c[L>>2]=c[e>>2];c[k>>2]=c[L>>2];lv(b,h+20|0,d,k,g,O);S=26;break;}case 89:{c[M>>2]=c[e>>2];c[k>>2]=c[M>>2];mv(b,h+20|0,d,k,g,O);S=26;break;}case 37:{c[N>>2]=c[e>>2];c[k>>2]=c[N>>2];nv(b,d,k,g,O);S=26;break;}default:{c[g>>2]=c[g>>2]|4;S=26;}}}while(0);if((S|0)==26)j=c[d>>2]|0;Pb=R;return j|0;}function Pu(b){b=b|0;if((a[29208]|0)==0?eC(29208)|0:0){Zu();c[7642]=28640;}return c[7642]|0;}function Qu(b){b=b|0;if((a[29192]|0)==0?eC(29192)|0:0){Yu();c[7641]=28352;}return c[7641]|0;}function Ru(b){b=b|0;if((a[29176]|0)==0?eC(29176)|0:0){Xu();c[7640]=28064;}return c[7640]|0;}function Su(b){b=b|0;if((a[29168]|0)==0?eC(29168)|0:0){c[7637]=0;c[7638]=0;c[7639]=0;UA(30548,12704,Wu(12704)|0);}return 30548;}function Tu(b){b=b|0;if((a[29160]|0)==0?eC(29160)|0:0){c[7634]=0;c[7635]=0;c[7636]=0;UA(30536,12656,Wu(12656)|0);}return 30536;}function Uu(b){b=b|0;if((a[29152]|0)==0?eC(29152)|0:0){c[7631]=0;c[7632]=0;c[7633]=0;UA(30524,12620,Wu(12620)|0);}return 30524;}function Vu(b){b=b|0;if((a[29144]|0)==0?eC(29144)|0:0){c[7628]=0;c[7629]=0;c[7630]=0;UA(30512,12584,Wu(12584)|0);}return 30512;}function Wu(a){a=a|0;return Ao(a)|0;}function Xu(){var b=0,d=0;if((a[29184]|0)==0?eC(29184)|0:0){d=28064;do{c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[d+(b<<2)>>2]=0;b=b+1|0;}d=d+12|0;}while((d|0)!=28352);}aB(28064,12788)|0;aB(28076,12800)|0;return;}function Yu(){var b=0,d=0;if((a[29200]|0)==0?eC(29200)|0:0){d=28352;do{c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[d+(b<<2)>>2]=0;b=b+1|0;}d=d+12|0;}while((d|0)!=28640);}aB(28352,12812)|0;aB(28364,12844)|0;aB(28376,12880)|0;aB(28388,12904)|0;aB(28400,12928)|0;aB(28412,12944)|0;aB(28424,12964)|0;aB(28436,12984)|0;aB(28448,13012)|0;aB(28460,13052)|0;aB(28472,13084)|0;aB(28484,13120)|0;aB(28496,13156)|0;aB(28508,13172)|0;aB(28520,13188)|0;aB(28532,13204)|0;aB(28544,12928)|0;aB(28556,13220)|0;aB(28568,13236)|0;aB(28580,13252)|0;aB(28592,13268)|0;aB(28604,13284)|0;aB(28616,13300)|0;aB(28628,13316)|0;return;}function Zu(){var b=0,d=0;if((a[29216]|0)==0?eC(29216)|0:0){d=28640;do{c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[d+(b<<2)>>2]=0;b=b+1|0;}d=d+12|0;}while((d|0)!=28808);}aB(28640,13332)|0;aB(28652,13360)|0;aB(28664,13388)|0;aB(28676,13420)|0;aB(28688,13460)|0;aB(28700,13496)|0;aB(28712,13524)|0;aB(28724,13560)|0;aB(28736,13576)|0;aB(28748,13592)|0;aB(28760,13608)|0;aB(28772,13624)|0;aB(28784,13640)|0;aB(28796,13656)|0;return;}function _u(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=Pb;Pb=Pb+16|0;i=h+4|0;j=h;a=a+8|0;a=Yb[c[c[a>>2]>>2]&127](a)|0;c[j>>2]=c[e>>2];c[i>>2]=c[j>>2];a=(st(d,i,a,a+168|0,g,f,0)|0)-a|0;if((a|0)<168)c[b>>2]=((a|0)/12|0|0)%7|0;Pb=h;return;}function $u(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;h=Pb;Pb=Pb+16|0;i=h+4|0;j=h;a=a+8|0;a=Yb[c[(c[a>>2]|0)+4>>2]&127](a)|0;c[j>>2]=c[e>>2];c[i>>2]=c[j>>2];a=(st(d,i,a,a+288|0,g,f,0)|0)-a|0;if((a|0)<288)c[b>>2]=((a|0)/12|0|0)%12|0;Pb=h;return;}function av(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;v=Pb;Pb=Pb+16|0;q=v+12|0;p=v+8|0;s=v+4|0;t=v;zr(q,e);r=hs(q,30404)|0;is(q);c[f>>2]=0;k=0;a:while(1){j=c[b>>2]|0;if(!((h|0)!=(i|0)&(k|0)==0))break;l=j;if(j){k=c[j+12>>2]|0;if((k|0)==(c[j+16>>2]|0))k=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else k=er(c[k>>2]|0)|0;if(Ar(k,dr()|0)|0){c[b>>2]=0;j=0;m=1;o=0;}else{m=0;o=l;}}else{j=0;m=1;o=l;}n=c[d>>2]|0;k=n;do{if(n){l=c[n+12>>2]|0;if((l|0)==(c[n+16>>2]|0))l=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else l=er(c[l>>2]|0)|0;if(!(Ar(l,dr()|0)|0)){if(m)break;else{u=60;break a;}}else{c[d>>2]=0;k=0;u=15;break;}}else u=15;}while(0);if((u|0)==15){u=0;if(m){u=60;break;}else n=0;}b:do{if(($b[c[(c[r>>2]|0)+52>>2]&31](r,c[h>>2]|0,0)|0)<<24>>24==37){n=h+4|0;if((n|0)==(i|0)){u=60;break a;}l=$b[c[(c[r>>2]|0)+52>>2]&31](r,c[n>>2]|0,0)|0;switch(l<<24>>24){case 48:case 69:{h=h+8|0;if((h|0)==(i|0)){u=60;break a;}m=l;j=$b[c[(c[r>>2]|0)+52>>2]&31](r,c[h>>2]|0,0)|0;h=n;break;}default:{m=0;j=l;}}n=c[(c[a>>2]|0)+36>>2]|0;c[s>>2]=o;c[t>>2]=k;c[p>>2]=c[s>>2];c[q>>2]=c[t>>2];c[b>>2]=ic[n&15](a,p,q,e,f,g,j,m)|0;h=h+8|0;}else{if(!($b[c[(c[r>>2]|0)+12>>2]&31](r,8192,c[h>>2]|0)|0)){l=j+12|0;k=c[l>>2]|0;m=j+16|0;if((k|0)==(c[m>>2]|0))k=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else k=er(c[k>>2]|0)|0;o=_b[c[(c[r>>2]|0)+28>>2]&15](r,k)|0;if((o|0)!=(_b[c[(c[r>>2]|0)+28>>2]&15](r,c[h>>2]|0)|0)){c[f>>2]=4;break;}k=c[l>>2]|0;if((k|0)==(c[m>>2]|0))Yb[c[(c[j>>2]|0)+40>>2]&127](j)|0;else{c[l>>2]=k+4;er(c[k>>2]|0)|0;}h=h+4|0;break;}do{h=h+4|0;if((h|0)==(i|0)){h=i;break;}}while($b[c[(c[r>>2]|0)+12>>2]&31](r,8192,c[h>>2]|0)|0);while(1){if(j){k=c[j+12>>2]|0;if((k|0)==(c[j+16>>2]|0))k=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else k=er(c[k>>2]|0)|0;if(Ar(k,dr()|0)|0){c[b>>2]=0;j=0;l=1;}else l=0;}else{j=0;l=1;}do{if(n){k=c[n+12>>2]|0;if((k|0)==(c[n+16>>2]|0))k=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else k=er(c[k>>2]|0)|0;if(!(Ar(k,dr()|0)|0)){if(l)break;else break b;}else{c[d>>2]=0;u=40;break;}}else u=40;}while(0);if((u|0)==40){u=0;if(l)break b;else n=0;}l=j+12|0;k=c[l>>2]|0;m=j+16|0;if((k|0)==(c[m>>2]|0))k=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else k=er(c[k>>2]|0)|0;if(!($b[c[(c[r>>2]|0)+12>>2]&31](r,8192,k)|0))break b;k=c[l>>2]|0;if((k|0)==(c[m>>2]|0))Yb[c[(c[j>>2]|0)+40>>2]&127](j)|0;else{c[l>>2]=k+4;er(c[k>>2]|0)|0;}}}}while(0);k=c[f>>2]|0;}if((u|0)==60)c[f>>2]=4;if(j){h=c[j+12>>2]|0;if((h|0)==(c[j+16>>2]|0))h=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else h=er(c[h>>2]|0)|0;if(Ar(h,dr()|0)|0){c[b>>2]=0;j=0;l=1;}else l=0;}else{j=0;l=1;}h=c[d>>2]|0;do{if(h){k=c[h+12>>2]|0;if((k|0)==(c[h+16>>2]|0))h=Yb[c[(c[h>>2]|0)+36>>2]&127](h)|0;else h=er(c[k>>2]|0)|0;if(!(Ar(h,dr()|0)|0)){if(l)break;else{u=75;break;}}else{c[d>>2]=0;u=73;break;}}else u=73;}while(0);if((u|0)==73?l:0)u=75;if((u|0)==75)c[f>>2]=c[f>>2]|2;Pb=v;return j|0;}function bv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=Pb;Pb=Pb+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=ov(d,a,f,g,2)|0;d=c[f>>2]|0;if((a+-1|0)>>>0<31&(d&4|0)==0)c[b>>2]=a;else c[f>>2]=d|4;Pb=h;return;}function cv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=Pb;Pb=Pb+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=ov(d,a,f,g,2)|0;d=c[f>>2]|0;if((a|0)<24&(d&4|0)==0)c[b>>2]=a;else c[f>>2]=d|4;Pb=h;return;}function dv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=Pb;Pb=Pb+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=ov(d,a,f,g,2)|0;d=c[f>>2]|0;if((a+-1|0)>>>0<12&(d&4|0)==0)c[b>>2]=a;else c[f>>2]=d|4;Pb=h;return;}function ev(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=Pb;Pb=Pb+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=ov(d,a,f,g,3)|0;d=c[f>>2]|0;if((a|0)<366&(d&4|0)==0)c[b>>2]=a;else c[f>>2]=d|4;Pb=h;return;}function fv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=Pb;Pb=Pb+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=ov(d,a,f,g,2)|0;d=c[f>>2]|0;if((a|0)<13&(d&4|0)==0)c[b>>2]=a+-1;else c[f>>2]=d|4;Pb=h;return;}function gv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=Pb;Pb=Pb+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=ov(d,a,f,g,2)|0;d=c[f>>2]|0;if((a|0)<60&(d&4|0)==0)c[b>>2]=a;else c[f>>2]=d|4;Pb=h;return;}function hv(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;a:while(1){a=c[b>>2]|0;do{if(a){g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))a=Yb[c[(c[a>>2]|0)+36>>2]&127](a)|0;else a=er(c[g>>2]|0)|0;if(Ar(a,dr()|0)|0){c[b>>2]=0;h=1;break;}else{h=(c[b>>2]|0)==0;break;}}else h=1;}while(0);g=c[d>>2]|0;do{if(g){a=c[g+12>>2]|0;if((a|0)==(c[g+16>>2]|0))a=Yb[c[(c[g>>2]|0)+36>>2]&127](g)|0;else a=er(c[a>>2]|0)|0;if(!(Ar(a,dr()|0)|0)){if(h){h=g;break;}else{h=g;break a;}}else{c[d>>2]=0;i=15;break;}}else i=15;}while(0);if((i|0)==15){i=0;if(h){h=0;break;}else h=0;}a=c[b>>2]|0;g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))a=Yb[c[(c[a>>2]|0)+36>>2]&127](a)|0;else a=er(c[g>>2]|0)|0;if(!($b[c[(c[f>>2]|0)+12>>2]&31](f,8192,a)|0))break;a=c[b>>2]|0;g=a+12|0;h=c[g>>2]|0;if((h|0)==(c[a+16>>2]|0))Yb[c[(c[a>>2]|0)+40>>2]&127](a)|0;else{c[g>>2]=h+4;er(c[h>>2]|0)|0;}}a=c[b>>2]|0;do{if(a){g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))a=Yb[c[(c[a>>2]|0)+36>>2]&127](a)|0;else a=er(c[g>>2]|0)|0;if(Ar(a,dr()|0)|0){c[b>>2]=0;g=1;break;}else{g=(c[b>>2]|0)==0;break;}}else g=1;}while(0);do{if(h){a=c[h+12>>2]|0;if((a|0)==(c[h+16>>2]|0))a=Yb[c[(c[h>>2]|0)+36>>2]&127](h)|0;else a=er(c[a>>2]|0)|0;if(!(Ar(a,dr()|0)|0)){if(g)break;else{i=40;break;}}else{c[d>>2]=0;i=38;break;}}else i=38;}while(0);if((i|0)==38?g:0)i=40;if((i|0)==40)c[e>>2]=c[e>>2]|2;return;}function iv(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0;m=Pb;Pb=Pb+16|0;k=m+4|0;l=m;j=b+8|0;j=Yb[c[(c[j>>2]|0)+8>>2]&127](j)|0;b=a[j+8+3>>0]|0;if(b<<24>>24<0)i=c[j+4>>2]|0;else i=b&255;b=a[j+20+3>>0]|0;if(b<<24>>24<0)b=c[j+16>>2]|0;else b=b&255;do{if((i|0)!=(0-b|0)){c[l>>2]=c[f>>2];c[k>>2]=c[l>>2];b=(st(e,k,j,j+24|0,h,g,0)|0)-j|0;i=c[d>>2]|0;if((i|0)==12&(b|0)==0){c[d>>2]=0;break;}if((i|0)<12&(b|0)==12)c[d>>2]=i+12;}else c[g>>2]=c[g>>2]|4;}while(0);Pb=m;return;}function jv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=Pb;Pb=Pb+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=ov(d,a,f,g,2)|0;d=c[f>>2]|0;if((a|0)<61&(d&4|0)==0)c[b>>2]=a;else c[f>>2]=d|4;Pb=h;return;}function kv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=Pb;Pb=Pb+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=ov(d,a,f,g,1)|0;d=c[f>>2]|0;if((a|0)<7&(d&4|0)==0)c[b>>2]=a;else c[f>>2]=d|4;Pb=h;return;}function lv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=Pb;Pb=Pb+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=ov(d,a,f,g,4)|0;if(!(c[f>>2]&4)){if((a|0)<69)a=a+2e3|0;else a=(a|0)<100?a+1900|0:a;c[b>>2]=a+-1900;}Pb=h;return;}function mv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=Pb;Pb=Pb+16|0;a=h+4|0;i=h;c[i>>2]=c[e>>2];c[a>>2]=c[i>>2];a=ov(d,a,f,g,4)|0;if(!(c[f>>2]&4))c[b>>2]=a+-1900;Pb=h;return;}function nv(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;a=c[b>>2]|0;do{if(a){g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))a=Yb[c[(c[a>>2]|0)+36>>2]&127](a)|0;else a=er(c[g>>2]|0)|0;if(Ar(a,dr()|0)|0){c[b>>2]=0;h=1;break;}else{h=(c[b>>2]|0)==0;break;}}else h=1;}while(0);g=c[d>>2]|0;do{if(g){a=c[g+12>>2]|0;if((a|0)==(c[g+16>>2]|0))a=Yb[c[(c[g>>2]|0)+36>>2]&127](g)|0;else a=er(c[a>>2]|0)|0;if(!(Ar(a,dr()|0)|0)){if(h){i=g;j=17;break;}else{j=16;break;}}else{c[d>>2]=0;j=14;break;}}else j=14;}while(0);if((j|0)==14)if(h)j=16;else{i=0;j=17;}a:do{if((j|0)==16)c[e>>2]=c[e>>2]|6;else if((j|0)==17){a=c[b>>2]|0;g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))a=Yb[c[(c[a>>2]|0)+36>>2]&127](a)|0;else a=er(c[g>>2]|0)|0;if(($b[c[(c[f>>2]|0)+52>>2]&31](f,a,0)|0)<<24>>24!=37){c[e>>2]=c[e>>2]|4;break;}a=c[b>>2]|0;g=a+12|0;h=c[g>>2]|0;if((h|0)==(c[a+16>>2]|0))Yb[c[(c[a>>2]|0)+40>>2]&127](a)|0;else{c[g>>2]=h+4;er(c[h>>2]|0)|0;}a=c[b>>2]|0;do{if(a){g=c[a+12>>2]|0;if((g|0)==(c[a+16>>2]|0))a=Yb[c[(c[a>>2]|0)+36>>2]&127](a)|0;else a=er(c[g>>2]|0)|0;if(Ar(a,dr()|0)|0){c[b>>2]=0;g=1;break;}else{g=(c[b>>2]|0)==0;break;}}else g=1;}while(0);do{if(i){a=c[i+12>>2]|0;if((a|0)==(c[i+16>>2]|0))a=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else a=er(c[a>>2]|0)|0;if(!(Ar(a,dr()|0)|0)){if(g)break a;else break;}else{c[d>>2]=0;j=38;break;}}else j=38;}while(0);if((j|0)==38?!g:0)break;c[e>>2]=c[e>>2]|2;}}while(0);return;}function ov(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;g=c[a>>2]|0;do{if(g){h=c[g+12>>2]|0;if((h|0)==(c[g+16>>2]|0))g=Yb[c[(c[g>>2]|0)+36>>2]&127](g)|0;else g=er(c[h>>2]|0)|0;if(Ar(g,dr()|0)|0){c[a>>2]=0;i=1;break;}else{i=(c[a>>2]|0)==0;break;}}else i=1;}while(0);h=c[b>>2]|0;do{if(h){g=c[h+12>>2]|0;if((g|0)==(c[h+16>>2]|0))g=Yb[c[(c[h>>2]|0)+36>>2]&127](h)|0;else g=er(c[g>>2]|0)|0;if(!(Ar(g,dr()|0)|0)){if(i){n=17;break;}else{n=16;break;}}else{c[b>>2]=0;n=14;break;}}else n=14;}while(0);if((n|0)==14)if(i)n=16;else{h=0;n=17;}a:do{if((n|0)==16){c[d>>2]=c[d>>2]|6;g=0;}else if((n|0)==17){g=c[a>>2]|0;i=c[g+12>>2]|0;if((i|0)==(c[g+16>>2]|0))g=Yb[c[(c[g>>2]|0)+36>>2]&127](g)|0;else g=er(c[i>>2]|0)|0;if(!($b[c[(c[e>>2]|0)+12>>2]&31](e,2048,g)|0)){c[d>>2]=c[d>>2]|4;g=0;break;}g=($b[c[(c[e>>2]|0)+52>>2]&31](e,g,0)|0)<<24>>24;i=c[a>>2]|0;j=i+12|0;k=c[j>>2]|0;if((k|0)==(c[i+16>>2]|0))Yb[c[(c[i>>2]|0)+40>>2]&127](i)|0;else{c[j>>2]=k+4;er(c[k>>2]|0)|0;}l=h;k=h;while(1){g=g+-48|0;m=f+-1|0;h=c[a>>2]|0;do{if(h){i=c[h+12>>2]|0;if((i|0)==(c[h+16>>2]|0))h=Yb[c[(c[h>>2]|0)+36>>2]&127](h)|0;else h=er(c[i>>2]|0)|0;if(Ar(h,dr()|0)|0){c[a>>2]=0;j=1;break;}else{j=(c[a>>2]|0)==0;break;}}else j=1;}while(0);if(k){h=c[k+12>>2]|0;if((h|0)==(c[k+16>>2]|0))h=Yb[c[(c[k>>2]|0)+36>>2]&127](k)|0;else h=er(c[h>>2]|0)|0;if(Ar(h,dr()|0)|0){c[b>>2]=0;h=1;l=0;k=0;}else h=0;}else{h=1;k=0;}i=c[a>>2]|0;if(!((f|0)>1&(j^h)))break;h=c[i+12>>2]|0;if((h|0)==(c[i+16>>2]|0))h=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else h=er(c[h>>2]|0)|0;if(!($b[c[(c[e>>2]|0)+12>>2]&31](e,2048,h)|0))break a;g=(g*10|0)+(($b[c[(c[e>>2]|0)+52>>2]&31](e,h,0)|0)<<24>>24)|0;h=c[a>>2]|0;i=h+12|0;j=c[i>>2]|0;if((j|0)==(c[h+16>>2]|0))Yb[c[(c[h>>2]|0)+40>>2]&127](h)|0;else{c[i>>2]=j+4;er(c[j>>2]|0)|0;}f=m;}do{if(i){h=c[i+12>>2]|0;if((h|0)==(c[i+16>>2]|0))h=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else h=er(c[h>>2]|0)|0;if(Ar(h,dr()|0)|0){c[a>>2]=0;i=1;break;}else{i=(c[a>>2]|0)==0;break;}}else i=1;}while(0);do{if(l){h=c[l+12>>2]|0;if((h|0)==(c[l+16>>2]|0))h=Yb[c[(c[l>>2]|0)+36>>2]&127](l)|0;else h=er(c[h>>2]|0)|0;if(!(Ar(h,dr()|0)|0)){if(i)break a;else break;}else{c[b>>2]=0;n=61;break;}}else n=61;}while(0);if((n|0)==61?!i:0)break;c[d>>2]=c[d>>2]|2;}}while(0);return g|0;}function pv(a){a=a|0;uv(a+8|0);Or(a);return;}function qv(a){a=a|0;uv(a+8|0);Or(a);oA(a);return;}function rv(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;j=Pb;Pb=Pb+112|0;e=j;f=j+100|0;c[f>>2]=e+100;sv(b+8|0,e,f,g,h,i);i=c[f>>2]|0;h=e;e=c[d>>2]|0;while(1){if((h|0)==(i|0))break;f=a[h>>0]|0;if(!e)e=0;else{b=e+24|0;g=c[b>>2]|0;if((g|0)==(c[e+28>>2]|0)){d=c[(c[e>>2]|0)+52>>2]|0;f=Vc(f)|0;f=_b[d&15](e,f)|0;}else{c[b>>2]=g+1;a[g>>0]=f;f=Vc(f)|0;}d=id(f,ad()|0)|0;e=d?0:e;}h=h+1|0;}Pb=j;return e|0;}function sv(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0;l=Pb;Pb=Pb+16|0;i=l;a[i>>0]=37;j=i+1|0;a[j>>0]=g;k=i+2|0;a[k>>0]=h;a[i+3>>0]=0;if(h<<24>>24){a[j>>0]=h;a[k>>0]=g;}k=tv(d,c[e>>2]|0)|0;c[e>>2]=d+(Wa(d|0,k|0,i|0,f|0,c[b>>2]|0)|0);Pb=l;return;}function tv(a,b){a=a|0;b=b|0;return b-a|0;}function uv(a){a=a|0;var b=0;b=c[a>>2]|0;if((b|0)!=(ks()|0))Np(c[a>>2]|0);return;}function vv(a){a=a|0;uv(a+8|0);Or(a);return;}function wv(a){a=a|0;uv(a+8|0);Or(a);oA(a);return;}function xv(a,b,d,e,f,g,h){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0;i=Pb;Pb=Pb+416|0;d=i;e=i+400|0;c[e>>2]=d+400;yv(a+8|0,d,e,f,g,h);h=c[e>>2]|0;g=d;d=c[b>>2]|0;while(1){if((g|0)==(h|0))break;e=c[g>>2]|0;if(!d)d=0;else{a=d+24|0;f=c[a>>2]|0;if((f|0)==(c[d+28>>2]|0)){b=c[(c[d>>2]|0)+52>>2]|0;e=er(e)|0;e=_b[b&15](d,e)|0;}else{c[a>>2]=f+4;c[f>>2]=e;e=er(e)|0;}b=Ar(e,dr()|0)|0;d=b?0:d;}g=g+4|0;}Pb=i;return d|0;}function yv(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Pb;Pb=Pb+128|0;k=h;l=h+116|0;i=h+104|0;j=h+112|0;c[l>>2]=k+100;sv(a,k,l,e,f,g);e=i;c[e>>2]=0;c[e+4>>2]=0;c[j>>2]=k;e=zv(b,c[d>>2]|0)|0;a=_p(c[a>>2]|0)|0;e=dq(b,j,e,i)|0;if(a|0)_p(a)|0;if((e|0)==-1)Av(0);else{c[d>>2]=b+(e<<2);Pb=h;return;}}function zv(a,b){a=a|0;b=b|0;return b-a>>2|0;}function Av(a){a=a|0;Ha();}function Bv(a){a=a|0;Or(a);return;}function Cv(a){a=a|0;Or(a);oA(a);return;}function Dv(a){a=a|0;return 127;}function Ev(a){a=a|0;return 127;}function Fv(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0;}return;}function Gv(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0;}return;}function Hv(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0;}return;}function Iv(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;EA(a,1,45);return;}function Jv(a){a=a|0;return 0;}function Kv(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return;}function Lv(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return;}function Mv(a){a=a|0;Or(a);return;}function Nv(a){a=a|0;Or(a);oA(a);return;}function Ov(a){a=a|0;return 127;}function Pv(a){a=a|0;return 127;}function Qv(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0;}return;}function Rv(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0;}return;}function Sv(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0;}return;}function Tv(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;EA(a,1,45);return;}function Uv(a){a=a|0;return 0;}function Vv(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return;}function Wv(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return;}function Xv(a){a=a|0;Or(a);return;}function Yv(a){a=a|0;Or(a);oA(a);return;}function Zv(a){a=a|0;return 2147483647;}function _v(a){a=a|0;return 2147483647;}function $v(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0;}return;}function aw(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0;}return;}function bw(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0;}return;}function cw(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;VA(a,1,45);return;}function dw(a){a=a|0;return 0;}function ew(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return;}function fw(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return;}function gw(a){a=a|0;Or(a);return;}function hw(a){a=a|0;Or(a);oA(a);return;}function iw(a){a=a|0;return 2147483647;}function jw(a){a=a|0;return 2147483647;}function kw(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0;}return;}function lw(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0;}return;}function mw(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[a+(b<<2)>>2]=0;b=b+1|0;}return;}function nw(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;VA(a,1,45);return;}function ow(a){a=a|0;return 0;}function pw(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return;}function qw(b,c){b=b|0;c=c|0;a[b>>0]=2;a[b+1>>0]=3;a[b+2>>0]=0;a[b+3>>0]=4;return;}function rw(a){a=a|0;Or(a);return;}function sw(a){a=a|0;Or(a);oA(a);return;}function tw(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;v=Pb;Pb=Pb+256|0;n=v+240|0;q=v+216|0;m=v+112|0;u=v+232|0;p=v+228|0;s=v+224|0;j=v+250|0;w=v+220|0;o=v;c[u>>2]=m;c[u+4>>2]=158;zr(s,g);b=hs(s,30372)|0;a[j>>0]=0;c[w>>2]=c[e>>2];l=c[g+4>>2]|0;c[n>>2]=c[w>>2];if(ww(d,n,f,s,l,h,j,b,u,p,m+100|0)|0){bc[c[(c[b>>2]|0)+32>>2]&7](b,24652,24662,n)|0;l=c[p>>2]|0;f=c[u>>2]|0;b=l-f|0;if((b|0)>98){b=Bq(b+2|0)|0;if(!b)mA();else{k=b;r=b;}}else{k=o;r=0;}if(!(a[j>>0]|0))b=k;else{a[k>>0]=45;b=k+1|0;}k=n+10|0;m=n;j=f;g=b;b=l;while(1){if(j>>>0>=b>>>0)break;f=a[j>>0]|0;b=n;while(1){if((b|0)==(k|0)){b=k;break;}if((a[b>>0]|0)==f<<24>>24)break;b=b+1|0;}a[g>>0]=a[24652+(b-m)>>0]|0;j=j+1|0;g=g+1|0;b=c[p>>2]|0;}a[g>>0]=0;c[q>>2]=i;if((So(o,24663,q)|0)!=1)Av(0);if(r|0)Cq(r);}b=c[d>>2]|0;do{if(b){f=c[b+12>>2]|0;if((f|0)==(c[b+16>>2]|0))b=Yb[c[(c[b>>2]|0)+36>>2]&127](b)|0;else b=Vc(a[f>>0]|0)|0;if(id(b,ad()|0)|0){c[d>>2]=0;g=1;break;}else{g=(c[d>>2]|0)==0;break;}}else g=1;}while(0);b=c[e>>2]|0;do{if(b){f=c[b+12>>2]|0;if((f|0)==(c[b+16>>2]|0))b=Yb[c[(c[b>>2]|0)+36>>2]&127](b)|0;else b=Vc(a[f>>0]|0)|0;if(!(id(b,ad()|0)|0)){if(g)break;else{t=34;break;}}else{c[e>>2]=0;t=32;break;}}else t=32;}while(0);if((t|0)==32?g:0)t=34;if((t|0)==34)c[h>>2]=c[h>>2]|2;f=c[d>>2]|0;is(s);b=c[u>>2]|0;c[u>>2]=0;if(b|0)kc[c[u+4>>2]&255](b);Pb=v;return f|0;}function uw(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;s=Pb;Pb=Pb+128|0;j=s+120|0;b=s;r=s+112|0;m=s+108|0;p=s+100|0;k=s+124|0;n=s+104|0;c[r>>2]=b;c[r+4>>2]=158;zr(p,g);l=hs(p,30372)|0;a[k>>0]=0;o=c[e>>2]|0;c[n>>2]=o;g=c[g+4>>2]|0;c[j>>2]=c[n>>2];n=o;if(ww(d,j,f,p,g,h,k,l,r,m,b+100|0)|0){b=i+11|0;if((a[b>>0]|0)<0){f=c[i>>2]|0;a[j>>0]=0;Rc(f,j);c[i+4>>2]=0;}else{a[j>>0]=0;Rc(i,j);a[b>>0]=0;}if(a[k>>0]|0)RA(i,_b[c[(c[l>>2]|0)+28>>2]&15](l,45)|0);k=_b[c[(c[l>>2]|0)+28>>2]&15](l,48)|0;g=c[m>>2]|0;j=g+-1|0;b=c[r>>2]|0;while(1){if(b>>>0>=j>>>0)break;if((a[b>>0]|0)!=k<<24>>24)break;b=b+1|0;}xw(i,b,g)|0;}b=c[d>>2]|0;do{if(b){g=c[b+12>>2]|0;if((g|0)==(c[b+16>>2]|0))b=Yb[c[(c[b>>2]|0)+36>>2]&127](b)|0;else b=Vc(a[g>>0]|0)|0;if(id(b,ad()|0)|0){c[d>>2]=0;g=1;break;}else{g=(c[d>>2]|0)==0;break;}}else g=1;}while(0);do{if(o){b=c[n+12>>2]|0;if((b|0)==(c[n+16>>2]|0))b=Yb[c[(c[o>>2]|0)+36>>2]&127](n)|0;else b=Vc(a[b>>0]|0)|0;if(!(id(b,ad()|0)|0)){if(g)break;else{q=27;break;}}else{c[e>>2]=0;q=25;break;}}else q=25;}while(0);if((q|0)==25?g:0)q=27;if((q|0)==27)c[h>>2]=c[h>>2]|2;g=c[d>>2]|0;is(p);b=c[r>>2]|0;c[r>>2]=0;if(b|0)kc[c[r+4>>2]&255](b);Pb=s;return g|0;}function vw(a){a=a|0;return;}function Dm(a){a=+a;var b=0.0,d=0,e=0,f=0.0,h=0.0,i=0,j=0.0,k=0,l=0,m=0,n=0,o=0;Lm();if(c[7434]|0)Mm();b=+u(+a);j=a>0.0?1.0:-1.0;d=c[7428]|0;a:do{if((d|0)>0){n=c[7436]|0;k=c[7431]|0;l=c[7430]|0;m=c[7432]|0;while(1){i=d+-1|0;e=c[n+(i<<2)>>2]|0;a=+g[k+(e<<3)>>3];if(j*a>0.0){h=+u(+a);f=b-h*(+g[m+(e<<3)>>3]+ +(c[l+(e<<2)>>2]|0));a=h/.0866;if(f>a)b=f;else break;}if((d|0)>1)d=i;else{a=0.0;o=13;break a;}}b=b>a?a:b;a=(b-f)/h;if((d|0)>1){d=d+-2|0;while(1){k=c[n+(d<<2)>>2]|0;a=a+(+g[m+(k<<3)>>3]+ +(c[l+(k<<2)>>2]|0));if((d|0)>0)d=d+-1|0;else break;}}if(a>100.0){c[7435]=1;a=1.0;}else o=13;}else{a=0.0;o=13;}}while(0);if((o|0)==13){a=+Oa(+(a*.25));a=a/(+Bm(b)*3.14159265358979);}return+a;}function Em(a,b){a=+a;b=+b;var d=0.0,e=0.0,f=0.0,h=0,i=0,j=0,k=0,l=0,m=0,n=0.0,o=0,p=0.0,q=0.0;Lm();q=+g[3628]+b;q=q*+Bm(a);f=q*2.0;n=a*2.0;o=c[7428]|0;if((o|0)>0){k=c[7431]|0;l=c[7432]|0;m=c[7430]|0;j=0;p=0.0;e=0.0;b=0.0;h=0;do{d=+g[l+(j<<3)>>3];i=c[m+(j<<2)>>2]|0;a=+Bm(n*+g[k+(j<<3)>>3]);p=p+d*a/(a+1.0);d=+(i|0);if(a>1.0){e=e+ +A(+a)*d;h=i+h|0;b=b+ +Hm(a,1)*d;}else f=f+ +Hm(a,1)*d;j=j+1|0;}while((j|0)<(o|0));a=p*.5;}else{h=0;a=0.0;e=0.0;b=0.0;}d=b+f;b=-a;a=+Im(b-d*.25)/3.14159265358979;if(!h)b=1.0;else b=+Im(b-(e+f)*.25)/3.14159265358979*2.0/+(h|0);p=d>1.0?a*2.5:1.0;p=p<b?p:b;q=q*.5;q=!(q<=a)?a/q:1.0;return+(p<q?p:q);}function Fm(a,b){a=+a;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,h=0.0,i=0.0,j=0,k=0,l=0.0,m=0,n=0;m=Pb;Pb=Pb+16|0;j=m+8|0;k=m;d=+g[b>>3];l=(d>0.0?+g[3629]:+g[3630])*2.0;c=+g[3631];if(+Km(d/(d*l+1.0),k)>a){e=d;while(1){d=e*2.0;c=+g[k>>3];if(+Km(d/(l*d+1.0),k)>a)e=d;else{f=c;break;}}}else{f=c;e=0.0;}i=+g[3631];c=+g[k>>3];if((f-i)/(c-i)<.9){do{h=(d+e)*.5;n=+Km(h/(l*h+1.0),j)>a;i=+g[j>>3];if(n){f=i;e=h;}else{d=h;c=i;}i=+g[3631];}while((f-i)/(c-i)<.9);g[k>>3]=c;}g[b>>3]=d;Pb=m;return+c;}function Gm(a,b,d,e){a=a|0;b=+b;d=+d;e=e|0;var f=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0,o=0,p=0,q=0,r=0,s=0.0,t=0.0,v=0.0,w=0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0;s=b/3.14159265358979;if((a|0)>-1){t=+g[3625];v=+g[3628]*-.5;w=c[7428]|0;o=(w|0)>0;p=c[7430]|0;q=c[7431]|0;r=c[7432]|0;n=(e|0)==0;m=d*-.5;k=+g[3626];l=+g[3627];while(1){i=(+(a|0)+.5)*b;f=i*-2.0*t;h=+u(+f);j=+Bm(i);d=v*j;if(o){e=w;do{z=e;e=e+-1|0;E=c[p+(e<<2)>>2]|0;A=i*(+g[q+(e<<3)>>3]*2.0);D=+Bm(A);C=+(E|0);B=d-C*.25*+Hm(D,1);d=A*+g[r+(e<<3)>>3]/(D+1.0);C=+y(+A)*C+d;f=f+C;h=h+ +u(+C);d=B-A*.5*d;}while((z|0)>1);}d=s*+Im(d)/i;if(n)d=d*(1.0-+Im(m*j));k=k+ +x(+(f*.5))*d;l=h*.5*d+l;if((a|0)<=0)break;else a=a+-1|0;}g[3626]=k;g[3627]=l;}return;}function Hm(a,b){a=+a;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0;if(!(+u(+a)>.1)){f=a/(a+2.0);e=+Jm(f)*2.0;c=f*((b|0)==0?-a:2.0);f=+Bm(f);a=c+e/3.0;if(a!=c){c=3.0;while(1){c=c+2.0;e=f*e;d=a+e/c;if(!(d!=a))break;else a=d;}}else a=c;}else{f=+A(+(a+1.0));a=(b|0)==0?f-a:f;}return+a;}function Im(a){a=+a;var b=0.0;b=+z(+a);return+(a<-50.0?0.0:b);}function Jm(a){a=+a;return+(a*a*a);}function Km(a,b){a=+a;b=b|0;var d=0.0,e=0.0,f=0,h=0,i=0.0,j=0,k=0,l=0,m=0.0,n=0.0,o=0.0,p=0.0;Lm();e=+g[3628]*a;d=e*a;i=a*2.0;f=c[7428]|0;if((f|0)>0){j=c[7430]|0;k=c[7431]|0;h=c[7432]|0;a=e;do{l=f;f=f+-1|0;p=+g[k+(f<<3)>>3];n=+g[h+(f<<3)>>3];m=i*p;o=1.0-m;e=+(c[j+(f<<2)>>2]|0);a=a+p*(n/o+e)/o;n=d+n*+Bm(m/o);d=+Bm(m)/o;d=n+(d+ +Hm(-m,0))*e;}while((l|0)>1);}else a=e;g[b>>3]=a;return+ +Im(d*-.5);}function Lm(){var a=0;a=c[7433]|0;c[7433]=a+1;if((a|0)<(c[7429]|0))return;else Sa(27152,1);}function Mm(){var a=0,b=0,d=0.0,e=0,f=0,h=0,i=0,j=0;h=c[7428]|0;if((h|0)>0){i=c[7431]|0;j=c[7436]|0;f=0;do{d=+u(+ +g[i+(f<<3)>>3]);a:do{if(!f)a=-1;else{a=f;while(1){b=a;a=a+-1|0;e=c[j+(a<<2)>>2]|0;if(!(d>+u(+ +g[i+(e<<3)>>3])))break a;c[j+(b<<2)>>2]=e;if((b|0)<=1){a=-1;break;}}}}while(0);c[j+(a+1<<2)>>2]=f;f=f+1|0;}while((f|0)<(h|0));}c[7434]=0;return;}function Nm(){Om();return;}function Om(){Pm(0);return;}function Pm(a){a=a|0;Ba(Qm()|0,21561);ra(Rm()|0,21566,1,1,0);Sm();Tm();Um();Vm();Wm();Xm();Ym();Zm();_m();$m();an();za(bn()|0,21571);za(cn()|0,21583);Aa(dn()|0,4,21616);va(en()|0,21629);fn();gn(21645);hn(21682);jn(21721);kn(21752);ln(21792);mn(21821);nn();on();gn(21859);hn(21891);jn(21924);kn(21957);ln(21991);mn(22024);pn();qn();rn();return;}function Qm(){return qo()|0;}function Rm(){return po()|0;}function Sm(){xa(no()|0,22952,1,-128,127);return;}function Tm(){xa(lo()|0,22940,1,-128,127);return;}function Um(){xa(jo()|0,22926,1,0,255);return;}function Vm(){xa(ho()|0,22920,2,-32768,32767);return;}function Wm(){xa(fo()|0,22905,2,0,65535);return;}function Xm(){xa(co()|0,22901,4,-2147483648,2147483647);return;}function Ym(){xa(ao()|0,22888,4,0,-1);return;}function Zm(){xa(_n()|0,22883,4,-2147483648,2147483647);return;}function _m(){xa(Yn()|0,22869,4,0,-1);return;}function $m(){wa(Wn()|0,22863,4);return;}function an(){wa(Un()|0,22856,8);return;}function bn(){return Tn()|0;}function cn(){return Sn()|0;}function dn(){return Rn()|0;}function en(){return Qn()|0;}function fn(){ya(On()|0,0,22568);return;}function gn(a){a=a|0;ya(Mn()|0,0,a|0);return;}function hn(a){a=a|0;ya(Kn()|0,1,a|0);return;}function jn(a){a=a|0;ya(In()|0,2,a|0);return;}function kn(a){a=a|0;ya(Gn()|0,3,a|0);return;}function ln(a){a=a|0;ya(En()|0,4,a|0);return;}function mn(a){a=a|0;ya(Cn()|0,5,a|0);return;}function nn(){ya(An()|0,4,22321);return;}function on(){ya(yn()|0,5,22251);return;}function pn(){ya(wn()|0,6,22189);return;}function qn(){ya(un()|0,7,22126);return;}function rn(){ya(sn()|0,7,22058);return;}function sn(){return tn()|0;}function tn(){return 8696;}function un(){return vn()|0;}function vn(){return 8704;}function wn(){return xn()|0;}function xn(){return 8712;}function yn(){return zn()|0;}function zn(){return 8720;}function An(){return Bn()|0;}function Bn(){return 8728;}function Cn(){return Dn()|0;}function Dn(){return 8736;}function En(){return Fn()|0;}function Fn(){return 8744;}function Gn(){return Hn()|0;}function Hn(){return 8752;}function In(){return Jn()|0;}function Jn(){return 8760;}function Kn(){return Ln()|0;}function Ln(){return 8768;}function Mn(){return Nn()|0;}function Nn(){return 8776;}function On(){return Pn()|0;}function Pn(){return 8784;}function Qn(){return 6928;}function Rn(){return 8792;}function Sn(){return 8824;}function Tn(){return 8848;}function Un(){return Vn()|0;}function Vn(){return 10752;}function Wn(){return Xn()|0;}function Xn(){return 10744;}function Yn(){return Zn()|0;}function Zn(){return 10736;}function _n(){return $n()|0;}function $n(){return 10728;}function ao(){return bo()|0;}function bo(){return 10720;}function co(){return eo()|0;}function eo(){return 10712;}function fo(){return go()|0;}function go(){return 10704;}function ho(){return io()|0;}function io(){return 10696;}function jo(){return ko()|0;}function ko(){return 10680;}function lo(){return mo()|0;}function mo(){return 10688;}function no(){return oo()|0;}function oo(){return 10656;}function po(){return 10648;}function qo(){return 10632;}function ro(a){a=a|0;return Mp(c[a+4>>2]|0)|0;}function so(a){a=a|0;var b=0,d=0;b=Pb;Pb=Pb+16|0;d=b;c[d>>2]=xo(c[a+60>>2]|0)|0;a=vo(ma(6,d|0)|0)|0;Pb=b;return a|0;}function to(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;m=Pb;Pb=Pb+48|0;k=m+32|0;g=m+16|0;f=m;i=a+28|0;e=c[i>>2]|0;c[f>>2]=e;j=a+20|0;e=(c[j>>2]|0)-e|0;c[f+4>>2]=e;c[f+8>>2]=b;c[f+12>>2]=d;e=e+d|0;h=a+60|0;c[g>>2]=c[h>>2];c[g+4>>2]=f;c[g+8>>2]=2;g=vo(la(146,g|0)|0)|0;a:do{if((e|0)!=(g|0)){b=2;while(1){if((g|0)<0)break;e=e-g|0;o=c[f+4>>2]|0;n=g>>>0>o>>>0;f=n?f+8|0:f;b=b+(n<<31>>31)|0;o=g-(n?o:0)|0;c[f>>2]=(c[f>>2]|0)+o;n=f+4|0;c[n>>2]=(c[n>>2]|0)-o;c[k>>2]=c[h>>2];c[k+4>>2]=f;c[k+8>>2]=b;g=vo(la(146,k|0)|0)|0;if((e|0)==(g|0)){l=3;break a;}}c[a+16>>2]=0;c[i>>2]=0;c[j>>2]=0;c[a>>2]=c[a>>2]|32;if((b|0)==2)d=0;else d=d-(c[f+4>>2]|0)|0;}else l=3;}while(0);if((l|0)==3){o=c[a+44>>2]|0;c[a+16>>2]=o+(c[a+48>>2]|0);c[i>>2]=o;c[j>>2]=o;}Pb=m;return d|0;}function uo(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;g=Pb;Pb=Pb+32|0;h=g+8|0;f=g;c[h>>2]=c[a+60>>2];c[h+4>>2]=d;c[h+8>>2]=b;c[h+12>>2]=f;c[h+16>>2]=e;if((vo(ka(140,h|0)|0)|0)<0){a=f;c[a>>2]=-1;c[a+4>>2]=-1;a=-1;b=-1;}else{b=f;a=c[b+4>>2]|0;b=c[b>>2]|0;}F(a|0);Pb=g;return b|0;}function vo(a){a=a|0;if(a>>>0>4294963200){c[(wo()|0)>>2]=0-a;a=-1;}return a|0;}function wo(){return 29836;}function xo(a){a=a|0;return a|0;}function yo(){return 11632;}function zo(a){a=a|0;return(a+-48|0)>>>0<10|0;}function Ao(a){a=a|0;var b=0;b=a;while(1){if(!(c[b>>2]|0))break;else b=b+4|0;}return b-a>>2|0;}function Bo(){var a=0;a=(c[c[(Co()|0)+188>>2]>>2]|0)==0;return(a?1:4)|0;}function Co(){return Do()|0;}function Do(){return 11636;}function Eo(a){a=a|0;return(((a|32)+-97|0)>>>0<6|(zo(a)|0)!=0)&1|0;}function Fo(){return 11880;}function Go(b,c){b=b|0;c=c|0;var d=0,e=0;d=a[b>>0]|0;e=a[c>>0]|0;if(d<<24>>24==0?1:d<<24>>24!=e<<24>>24)b=e;else{do{b=b+1|0;c=c+1|0;d=a[b>>0]|0;e=a[c>>0]|0;}while(!(d<<24>>24==0?1:d<<24>>24!=e<<24>>24));b=e;}return(d&255)-(b&255)|0;}function Ho(a){a=a|0;return((a|0)==32|(a+-9|0)>>>0<5)&1|0;}function Io(){return 11884;}function Jo(b){b=b|0;var d=0,e=0,f=0;f=b;a:do{if(!(f&3))e=5;else{d=f;while(1){if(!(a[b>>0]|0)){b=d;break a;}b=b+1|0;d=b;if(!(d&3)){e=5;break;}}}}while(0);if((e|0)==5){while(1){d=c[b>>2]|0;if(!((d&-2139062144^-2139062144)&d+-16843009))b=b+4|0;else break;}if((d&255)<<24>>24)do{b=b+1|0;}while((a[b>>0]|0)!=0);}return b-f|0;}function Ko(b,e,f){b=b|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;j=Pb;Pb=Pb+16|0;g=j;a:do{if(!e)b=0;else{do{if(f|0){i=(b|0)==0?g:b;b=a[e>>0]|0;if(b<<24>>24>-1){c[i>>2]=b&255;b=b<<24>>24!=0&1;break a;}h=(c[c[(Lo()|0)+188>>2]>>2]|0)==0;b=a[e>>0]|0;if(h){c[i>>2]=b<<24>>24&57343;b=1;break a;}b=(b&255)+-194|0;if(b>>>0<=50){g=e+1|0;h=c[1328+(b<<2)>>2]|0;if(f>>>0<4?h&-2147483648>>>((f*6|0)+-6|0)|0:0)break;b=d[g>>0]|0;f=b>>>3;if((f+-16|f+(h>>26))>>>0<=7){b=b+-128|h<<6;if((b|0)>=0){c[i>>2]=b;b=2;break a;}g=(d[e+2>>0]|0)+-128|0;if(g>>>0<=63){g=g|b<<6;if((g|0)>=0){c[i>>2]=g;b=3;break a;}b=(d[e+3>>0]|0)+-128|0;if(b>>>0<=63){c[i>>2]=b|g<<6;b=4;break a;}}}}}}while(0);c[(wo()|0)>>2]=84;b=-1;}}while(0);Pb=j;return b|0;}function Lo(){return Do()|0;}function Mo(a){a=a|0;return;}function No(a){a=a|0;return 1;}function Oo(b,e){b=b|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=Pb;Pb=Pb+16|0;j=l;k=e&255;a[j>>0]=k;g=b+16|0;h=c[g>>2]|0;if(!h){if(!(Po(b)|0)){h=c[g>>2]|0;i=4;}else f=-1;}else i=4;do{if((i|0)==4){i=b+20|0;g=c[i>>2]|0;if(g>>>0<h>>>0?(f=e&255,(f|0)!=(a[b+75>>0]|0)):0){c[i>>2]=g+1;a[g>>0]=k;break;}if(($b[c[b+36>>2]&31](b,j,1)|0)==1)f=d[j>>0]|0;else f=-1;}}while(0);Pb=l;return f|0;}function Po(b){b=b|0;var d=0,e=0;d=b+74|0;e=a[d>>0]|0;a[d>>0]=e+255|e;d=c[b>>2]|0;if(!(d&8)){c[b+8>>2]=0;c[b+4>>2]=0;e=c[b+44>>2]|0;c[b+28>>2]=e;c[b+20>>2]=e;c[b+16>>2]=e+(c[b+48>>2]|0);b=0;}else{c[b>>2]=d|32;b=-1;}return b|0;}function Qo(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=e+16|0;g=c[f>>2]|0;if(!g){if(!(Po(e)|0)){g=c[f>>2]|0;h=5;}else f=0;}else h=5;a:do{if((h|0)==5){j=e+20|0;i=c[j>>2]|0;f=i;if((g-i|0)>>>0<d>>>0){f=$b[c[e+36>>2]&31](e,b,d)|0;break;}b:do{if((a[e+75>>0]|0)<0|(d|0)==0){h=0;g=b;}else{i=d;while(1){g=i+-1|0;if((a[b+g>>0]|0)==10)break;if(!g){h=0;g=b;break b;}else i=g;}f=$b[c[e+36>>2]&31](e,b,i)|0;if(f>>>0<i>>>0)break a;h=i;g=b+i|0;d=d-i|0;f=c[j>>2]|0;}}while(0);wC(f|0,g|0,d|0)|0;c[j>>2]=(c[j>>2]|0)+d;f=h+d|0;}}while(0);return f|0;}function Ro(b,d){b=b|0;d=d|0;var e=0,f=0,g=0;f=d&255;a:do{if(!f)b=b+(Jo(b)|0)|0;else{if(b&3){e=d&255;do{g=a[b>>0]|0;if(g<<24>>24==0?1:g<<24>>24==e<<24>>24)break a;b=b+1|0;}while((b&3|0)!=0);}f=C(f,16843009)|0;e=c[b>>2]|0;b:do{if(!((e&-2139062144^-2139062144)&e+-16843009))do{g=e^f;if((g&-2139062144^-2139062144)&g+-16843009|0)break b;b=b+4|0;e=c[b>>2]|0;}while(!((e&-2139062144^-2139062144)&e+-16843009|0));}while(0);e=d&255;while(1){g=a[b>>0]|0;if(g<<24>>24==0?1:g<<24>>24==e<<24>>24)break;else b=b+1|0;}}}while(0);return b|0;}function So(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=Pb;Pb=Pb+16|0;f=e;c[f>>2]=d;d=To(a,b,f)|0;Pb=e;return d|0;}function To(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=Pb;Pb=Pb+144|0;f=e;yC(f|0,0,144)|0;c[f+32>>2]=22;c[f+44>>2]=a;c[f+76>>2]=-1;c[f+84>>2]=a;d=Vo(f,b,d)|0;Pb=e;return d|0;}function Uo(a,b,c){a=a|0;b=b|0;c=c|0;return pp(a,b,c)|0;}function Vo(e,h,i){e=e|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0.0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;Q=Pb;Pb=Pb+288|0;K=Q+264|0;L=Q;M=Q+260|0;N=Q+272|0;if((c[e+76>>2]|0)>-1)P=No(e)|0;else P=0;j=a[h>>0]|0;a:do{if(j<<24>>24){B=e+4|0;C=e+104|0;D=e+120|0;E=e+8|0;F=L+10|0;H=L+33|0;I=L+46|0;J=L+94|0;A=K+4|0;m=h;h=0;k=0;l=j;j=0;u=0;v=0;b:while(1){c:do{if(!(Ho(l&255)|0)){n=(a[m>>0]|0)==37;d:do{if(n){l=m+1|0;o=a[l>>0]|0;e:do{switch(o<<24>>24){case 37:break d;case 42:{z=0;l=m+2|0;break;}default:{if(zo(o&255)|0?(a[m+2>>0]|0)==36:0){z=Yo(i,(d[l>>0]|0)+-48|0)|0;l=m+3|0;break e;}y=(c[i>>2]|0)+(4-1)&~(4-1);z=c[y>>2]|0;c[i>>2]=y+4;}}}while(0);if(!(zo(d[l>>0]|0)|0)){r=0;o=l;}else{m=0;do{m=(m*10|0)+-48+(d[l>>0]|0)|0;l=l+1|0;}while((zo(d[l>>0]|0)|0)!=0);r=m;o=l;}n=a[o>>0]|0;q=o+1|0;if(n<<24>>24==109){l=(z|0)!=0&1;k=0;m=q;o=o+2|0;n=a[q>>0]|0;j=0;}else{l=0;m=o;o=q;}switch(n<<24>>24){case 104:{y=(a[o>>0]|0)==104;n=y?-2:-1;m=y?m+2|0:o;break;}case 108:{y=(a[o>>0]|0)==108;n=y?3:1;m=y?m+2|0:o;break;}case 106:{n=3;m=o;break;}case 116:case 122:{n=1;m=o;break;}case 76:{n=2;m=o;break;}case 110:case 112:case 67:case 83:case 91:case 99:case 115:case 88:case 71:case 70:case 69:case 65:case 103:case 102:case 101:case 97:case 120:case 117:case 111:case 105:case 100:{n=0;break;}default:{O=143;break b;}}s=d[m>>0]|0;t=(s&47|0)==3;s=t?s|32:s;t=t?1:n;q=s&255;switch(q<<24>>24){case 99:{y=(r|0)>1?r:1;break;}case 91:{y=r;break;}case 110:{Zo(z,t,u,v);n=u;o=v;break c;}default:{Wo(e,0,0);do{n=c[B>>2]|0;if(n>>>0<(c[C>>2]|0)>>>0){c[B>>2]=n+1;n=d[n>>0]|0;}else n=Xo(e)|0;}while((Ho(n)|0)!=0);if(!(c[C>>2]|0))n=c[B>>2]|0;else{n=(c[B>>2]|0)+-1|0;c[B>>2]=n;}x=D;y=n-(c[E>>2]|0)|0;u=mC(c[x>>2]|0,c[x+4>>2]|0,u|0,v|0)|0;u=mC(u|0,G()|0,y|0,((y|0)<0)<<31>>31|0)|0;y=r;v=G()|0;}}x=((y|0)<0)<<31>>31;Wo(e,y,x);o=c[B>>2]|0;n=c[C>>2]|0;if(o>>>0<n>>>0)c[B>>2]=o+1;else{if((Xo(e)|0)<0){O=143;break b;}n=c[C>>2]|0;}if(n|0)c[B>>2]=(c[B>>2]|0)+-1;f:do{switch(q<<24>>24){case 91:case 99:case 115:{w=(s|0)==99;g:do{if((s|16|0)==115){yC(L|0,-1,257)|0;a[L>>0]=0;if((s|0)==115){a[H>>0]=0;b[F>>1]=0;b[F+2>>1]=0;a[F+4>>0]=0;}}else{s=m+1|0;r=(a[s>>0]|0)==94;n=r&1;m=r?m+2|0:s;yC(L|0,n|0,257)|0;a[L>>0]=0;switch(a[m>>0]|0){case 45:{q=(n^1)&255;a[I>>0]=q;m=m+1|0;break;}case 93:{q=(n^1)&255;a[J>>0]=q;m=m+1|0;break;}default:q=(n^1)&255;}while(1){n=a[m>>0]|0;h:do{switch(n<<24>>24){case 0:{O=143;break b;}case 93:break g;case 45:{o=m+1|0;n=a[o>>0]|0;switch(n<<24>>24){case 93:case 0:{n=45;break h;}default:{}}m=a[m+-1>>0]|0;if((m&255)<(n&255)){m=m&255;do{m=m+1|0;a[L+m>>0]=q;n=a[o>>0]|0;}while(m>>>0<(n&255)>>>0);m=o;}else m=o;break;}default:{}}}while(0);a[L+((n&255)+1)>>0]=q;m=m+1|0;}}}while(0);n=w?y+1|0:31;s=(t|0)==1;t=(l|0)!=0;i:do{if(s){if(t){j=Bq(n<<2)|0;if(!j){k=0;j=0;O=143;break b;}}else j=z;c[K>>2]=0;c[A>>2]=0;k=0;j:while(1){q=(j|0)==0;do{k:while(1){o=c[B>>2]|0;if(o>>>0<(c[C>>2]|0)>>>0){c[B>>2]=o+1;o=d[o>>0]|0;}else o=Xo(e)|0;if(!(a[L+(o+1)>>0]|0))break j;a[N>>0]=o;switch(_o(M,N,1,K)|0){case-1:{k=0;O=143;break b;}case-2:break;default:break k;}}if(!q){c[j+(k<<2)>>2]=c[M>>2];k=k+1|0;}}while(!(t&(k|0)==(n|0)));n=n<<1|1;o=Dq(j,n<<2)|0;if(!o){k=0;O=143;break b;}else j=o;}if(!($o(K)|0)){k=0;O=143;break b;}else{q=k;k=0;r=j;}}else{if(t){k=Bq(n)|0;if(!k){k=0;j=0;O=143;break b;}j=0;while(1){q=j;do{j=c[B>>2]|0;if(j>>>0<(c[C>>2]|0)>>>0){c[B>>2]=j+1;j=d[j>>0]|0;}else j=Xo(e)|0;if(!(a[L+(j+1)>>0]|0)){r=0;j=0;break i;}r=q;q=q+1|0;a[k+r>>0]=j;}while((q|0)!=(n|0));n=n<<1|1;o=Dq(k,n)|0;if(!o){j=0;O=143;break b;}else{j=q;k=o;}}}if(!z)while(1){j=c[B>>2]|0;if(j>>>0<(c[C>>2]|0)>>>0){c[B>>2]=j+1;j=d[j>>0]|0;}else j=Xo(e)|0;if(!(a[L+(j+1)>>0]|0)){q=0;k=0;r=0;j=0;break i;}}k=0;while(1){j=c[B>>2]|0;if(j>>>0<(c[C>>2]|0)>>>0){c[B>>2]=j+1;j=d[j>>0]|0;}else j=Xo(e)|0;if(!(a[L+(j+1)>>0]|0)){q=k;k=z;r=0;j=0;break i;}a[z+k>>0]=j;k=k+1|0;}}}while(0);if(!(c[C>>2]|0))n=c[B>>2]|0;else{n=(c[B>>2]|0)+-1|0;c[B>>2]=n;}o=D;n=n-(c[E>>2]|0)|0;n=mC(c[o>>2]|0,c[o+4>>2]|0,n|0,((n|0)<0)<<31>>31|0)|0;o=G()|0;if((n|0)==0&(o|0)==0)break b;if(!((n|0)==(y|0)&(o|0)==(x|0)|w^1))break b;do{if(t)if(s){c[z>>2]=r;break;}else{c[z>>2]=k;break;}}while(0);if(!w){if(r|0)c[r+(q<<2)>>2]=0;if(!k){k=0;break f;}a[k+q>>0]=0;}break;}case 120:case 88:case 112:{n=16;O=131;break;}case 111:{n=8;O=131;break;}case 117:case 100:{n=10;O=131;break;}case 105:{n=0;O=131;break;}case 71:case 103:case 70:case 102:case 69:case 101:case 65:case 97:{p=+bp(e,t,0);y=D;w=c[y>>2]|0;y=c[y+4>>2]|0;x=(c[B>>2]|0)-(c[E>>2]|0)|0;x=nC(0,0,x|0,((x|0)<0)<<31>>31|0)|0;if((w|0)==(x|0)&(y|0)==(G()|0))break b;if(z)switch(t|0){case 0:{f[z>>2]=p;break f;}case 1:{g[z>>3]=p;break f;}case 2:{g[z>>3]=p;break f;}default:break f;}break;}default:{}}}while(0);do{if((O|0)==131){O=0;n=ap(e,n,0,-1,-1)|0;o=G()|0;y=D;w=c[y>>2]|0;y=c[y+4>>2]|0;x=(c[B>>2]|0)-(c[E>>2]|0)|0;x=nC(0,0,x|0,((x|0)<0)<<31>>31|0)|0;if((w|0)==(x|0)&(y|0)==(G()|0))break b;if((z|0)!=0&(s|0)==112){c[z>>2]=n;break;}else{Zo(z,t,n,o);break;}}}while(0);o=D;n=(c[B>>2]|0)-(c[E>>2]|0)|0;o=mC(c[o>>2]|0,c[o+4>>2]|0,u|0,v|0)|0;n=mC(o|0,G()|0,n|0,((n|0)<0)<<31>>31|0)|0;h=h+((z|0)!=0&1)|0;o=G()|0;break c;}}while(0);m=m+(n&1)|0;Wo(e,0,0);l=c[B>>2]|0;if(l>>>0<(c[C>>2]|0)>>>0){c[B>>2]=l+1;l=d[l>>0]|0;}else l=Xo(e)|0;if((l|0)!=(d[m>>0]|0)){O=23;break b;}n=mC(u|0,v|0,1,0)|0;o=G()|0;}else{while(1){l=m+1|0;if(!(Ho(d[l>>0]|0)|0))break;else m=l;}Wo(e,0,0);do{l=c[B>>2]|0;if(l>>>0<(c[C>>2]|0)>>>0){c[B>>2]=l+1;l=d[l>>0]|0;}else l=Xo(e)|0;}while((Ho(l)|0)!=0);if(!(c[C>>2]|0))l=c[B>>2]|0;else{l=(c[B>>2]|0)+-1|0;c[B>>2]=l;}o=D;n=l-(c[E>>2]|0)|0;o=mC(c[o>>2]|0,c[o+4>>2]|0,u|0,v|0)|0;n=mC(o|0,G()|0,n|0,((n|0)<0)<<31>>31|0)|0;o=G()|0;}}while(0);m=m+1|0;l=a[m>>0]|0;if(!(l<<24>>24))break a;else{u=n;v=o;}}if((O|0)==23){if(c[C>>2]|0)c[B>>2]=(c[B>>2]|0)+-1;if((h|0)!=0|(l|0)>-1)break;else{l=0;h=k;O=144;}}else if((O|0)==143)if(!h){h=k;O=144;}if((O|0)==144){k=h;h=-1;}if(l){Cq(k);Cq(j);}}else h=0;}while(0);if(P|0)Mo(e);Pb=Q;return h|0;}function Wo(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;f=a+112|0;c[f>>2]=b;c[f+4>>2]=d;f=c[a+8>>2]|0;e=c[a+4>>2]|0;g=f-e|0;h=((g|0)<0)<<31>>31;i=a+120|0;c[i>>2]=g;c[i+4>>2]=h;if(((b|0)!=0|(d|0)!=0)&((h|0)>(d|0)|(h|0)==(d|0)&g>>>0>b>>>0))c[a+104>>2]=e+b;else c[a+104>>2]=f;return;}function Xo(b){b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;g=b+112|0;f=g;e=c[f>>2]|0;f=c[f+4>>2]|0;if(!((e|0)==0&(f|0)==0)?(i=b+120|0,h=c[i+4>>2]|0,!((h|0)<(f|0)|((h|0)==(f|0)?(c[i>>2]|0)>>>0<e>>>0:0))):0)j=4;else{e=np(b)|0;if((e|0)>=0){f=c[g>>2]|0;g=c[g+4>>2]|0;i=c[b+8>>2]|0;if(!((f|0)==0&(g|0)==0)){h=c[b+4>>2]|0;k=i-h|0;l=((k|0)<0)<<31>>31;m=b+120|0;f=nC(f|0,g|0,c[m>>2]|0,c[m+4>>2]|0)|0;m=G()|0;g=i;if((m|0)>(l|0)|(m|0)==(l|0)&f>>>0>k>>>0)j=9;else c[b+104>>2]=h+(f+-1);}else{g=i;j=9;}if((j|0)==9)c[b+104>>2]=i;f=b+4|0;if(!g)f=c[f>>2]|0;else{f=c[f>>2]|0;k=g+1-f|0;m=b+120|0;l=m;k=mC(c[l>>2]|0,c[l+4>>2]|0,k|0,((k|0)<0)<<31>>31|0)|0;l=G()|0;c[m>>2]=k;c[m+4>>2]=l;}f=f+-1|0;if((e|0)!=(d[f>>0]|0|0))a[f>>0]=e;}else j=4;}if((j|0)==4){c[b+104>>2]=0;e=-1;}return e|0;}function Yo(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;e=Pb;Pb=Pb+16|0;d=e;c[d>>2]=c[a>>2];while(1){f=(c[d>>2]|0)+(4-1)&~(4-1);a=c[f>>2]|0;c[d>>2]=f+4;if(b>>>0>1)b=b+-1|0;else break;}Pb=e;return a|0;}function Zo(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;a:do{if(d|0)switch(e|0){case-2:{a[d>>0]=f;break a;}case-1:{b[d>>1]=f;break a;}case 0:{c[d>>2]=f;break a;}case 1:{c[d>>2]=f;break a;}case 3:{e=d;c[e>>2]=f;c[e+4>>2]=g;break a;}default:break a;}}while(0);return;}function _o(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0;l=Pb;Pb=Pb+16|0;h=l;j=(g|0)==0?29840:g;g=c[j>>2]|0;a:do{if(!e){if(!g)g=0;else k=19;}else{i=(b|0)==0?h:b;if(!f)g=-2;else{if(!g){g=a[e>>0]|0;if(g<<24>>24>-1){c[i>>2]=g&255;g=g<<24>>24!=0&1;break;}h=(c[c[(mp()|0)+188>>2]>>2]|0)==0;g=a[e>>0]|0;if(h){c[i>>2]=g<<24>>24&57343;g=1;break;}g=(g&255)+-194|0;if(g>>>0>50){k=19;break;}g=c[1328+(g<<2)>>2]|0;h=f+-1|0;if(h){e=e+1|0;k=11;}}else{h=f;k=11;}b:do{if((k|0)==11){b=d[e>>0]|0;m=b>>>3;if((m+-16|m+(g>>26))>>>0>7){k=19;break a;}g=b+-128|g<<6;b=h+-1|0;if((g|0)<0)do{e=e+1|0;if(!b)break b;h=a[e>>0]|0;if((h&-64)<<24>>24!=-128){k=19;break a;}g=(h&255)+-128|g<<6;b=b+-1|0;}while((g|0)<0);c[j>>2]=0;c[i>>2]=g;g=f-b|0;break a;}}while(0);c[j>>2]=g;g=-2;}}}while(0);if((k|0)==19){c[j>>2]=0;c[(wo()|0)>>2]=84;g=-1;}Pb=l;return g|0;}function $o(a){a=a|0;if(!a)a=1;else a=(c[a>>2]|0)==0&1;return a|0;}function ap(b,e,f,g,h){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a:do{if(e>>>0>36){c[(wo()|0)>>2]=22;h=0;g=0;}else{r=b+4|0;q=b+104|0;do{i=c[r>>2]|0;if(i>>>0<(c[q>>2]|0)>>>0){c[r>>2]=i+1;i=d[i>>0]|0;}else i=Xo(b)|0;}while((Ho(i)|0)!=0);b:do{switch(i|0){case 43:case 45:{i=((i|0)==45)<<31>>31;j=c[r>>2]|0;if(j>>>0<(c[q>>2]|0)>>>0){c[r>>2]=j+1;p=i;i=d[j>>0]|0;break b;}else{p=i;i=Xo(b)|0;break b;}}default:p=0;}}while(0);j=(e|0)==0;do{if((e|16|0)==16&(i|0)==48){i=c[r>>2]|0;if(i>>>0<(c[q>>2]|0)>>>0){c[r>>2]=i+1;i=d[i>>0]|0;}else i=Xo(b)|0;if((i|32|0)!=120)if(j){o=8;n=47;break;}else{n=32;break;}i=c[r>>2]|0;if(i>>>0<(c[q>>2]|0)>>>0){c[r>>2]=i+1;i=d[i>>0]|0;}else i=Xo(b)|0;if((d[5409+i>>0]|0)>15){g=(c[q>>2]|0)==0;if(!g)c[r>>2]=(c[r>>2]|0)+-1;if(!f){Wo(b,0,0);h=0;g=0;break a;}if(g){h=0;g=0;break a;}c[r>>2]=(c[r>>2]|0)+-1;h=0;g=0;break a;}else{o=16;n=47;}}else{e=j?10:e;if(e>>>0>(d[5409+i>>0]|0)>>>0)n=32;else{if(c[q>>2]|0)c[r>>2]=(c[r>>2]|0)+-1;Wo(b,0,0);c[(wo()|0)>>2]=22;h=0;g=0;break a;}}}while(0);c:do{if((n|0)==32)if((e|0)==10){e=i+-48|0;if(e>>>0<10){i=0;do{i=(i*10|0)+e|0;e=c[r>>2]|0;if(e>>>0<(c[q>>2]|0)>>>0){c[r>>2]=e+1;j=d[e>>0]|0;}else j=Xo(b)|0;e=j+-48|0;}while(e>>>0<10&i>>>0<429496729);if(e>>>0<10){m=0;do{f=lC(i|0,m|0,10,0)|0;k=G()|0;l=((e|0)<0)<<31>>31;o=~l;if(k>>>0>o>>>0|(k|0)==(o|0)&f>>>0>~e>>>0){f=10;e=m;n=76;break c;}i=mC(f|0,k|0,e|0,l|0)|0;m=G()|0;e=c[r>>2]|0;if(e>>>0<(c[q>>2]|0)>>>0){c[r>>2]=e+1;j=d[e>>0]|0;}else j=Xo(b)|0;e=j+-48|0;}while(e>>>0<10&(m>>>0<429496729|(m|0)==429496729&i>>>0<2576980378));if(e>>>0>9){j=p;e=m;}else{f=10;e=m;n=76;}}else{j=p;e=0;}}else{j=p;e=0;i=0;}}else{o=e;n=47;}}while(0);d:do{if((n|0)==47){if(!(o+-1&o)){n=a[22966+((o*23|0)>>>5&7)>>0]|0;f=a[5409+i>>0]|0;e=f&255;if(o>>>0>e>>>0){i=0;do{i=e|i<<n;e=c[r>>2]|0;if(e>>>0<(c[q>>2]|0)>>>0){c[r>>2]=e+1;j=d[e>>0]|0;}else j=Xo(b)|0;f=a[5409+j>>0]|0;e=f&255;}while(i>>>0<134217728&o>>>0>e>>>0);k=e;e=0;}else{j=i;k=e;e=0;i=0;}l=rC(-1,-1,n|0)|0;m=G()|0;if(o>>>0<=k>>>0|(m>>>0<e>>>0|(m|0)==(e|0)&l>>>0<i>>>0)){f=o;n=76;break;}while(1){i=sC(i|0,e|0,n|0)|0;e=G()|0;i=i|f&255;j=c[r>>2]|0;if(j>>>0<(c[q>>2]|0)>>>0){c[r>>2]=j+1;j=d[j>>0]|0;}else j=Xo(b)|0;f=a[5409+j>>0]|0;if(o>>>0<=(f&255)>>>0|(e>>>0>m>>>0|(e|0)==(m|0)&i>>>0>l>>>0)){f=o;n=76;break d;}}}e=a[5409+i>>0]|0;f=e&255;if(o>>>0>f>>>0){i=0;do{i=f+(C(i,o)|0)|0;e=c[r>>2]|0;if(e>>>0<(c[q>>2]|0)>>>0){c[r>>2]=e+1;j=d[e>>0]|0;}else j=Xo(b)|0;e=a[5409+j>>0]|0;f=e&255;}while(i>>>0<119304647&o>>>0>f>>>0);k=e;e=0;}else{j=i;k=e;i=0;e=0;}if(o>>>0>f>>>0){m=qC(-1,-1,o|0,0)|0;n=G()|0;f=k;while(1){if(e>>>0>n>>>0|(e|0)==(n|0)&i>>>0>m>>>0){f=o;n=76;break d;}k=lC(i|0,e|0,o|0,0)|0;l=G()|0;f=f&255;if(l>>>0>4294967295|(l|0)==-1&k>>>0>~f>>>0){f=o;n=76;break d;}i=mC(k|0,l|0,f|0,0)|0;e=G()|0;j=c[r>>2]|0;if(j>>>0<(c[q>>2]|0)>>>0){c[r>>2]=j+1;j=d[j>>0]|0;}else j=Xo(b)|0;f=a[5409+j>>0]|0;if(o>>>0<=(f&255)>>>0){f=o;n=76;break;}}}else{f=o;n=76;}}}while(0);if((n|0)==76)if(f>>>0>(d[5409+j>>0]|0)>>>0){do{i=c[r>>2]|0;if(i>>>0<(c[q>>2]|0)>>>0){c[r>>2]=i+1;i=d[i>>0]|0;}else i=Xo(b)|0;}while(f>>>0>(d[5409+i>>0]|0)>>>0);c[(wo()|0)>>2]=34;j=(g&1|0)==0&0==0?p:0;e=h;i=g;}else j=p;if(c[q>>2]|0)c[r>>2]=(c[r>>2]|0)+-1;if(!(e>>>0<h>>>0|(e|0)==(h|0)&i>>>0<g>>>0)){if(!((g&1|0)!=0|0!=0|(j|0)!=0)){c[(wo()|0)>>2]=34;g=mC(g|0,h|0,-1,-1)|0;h=G()|0;break;}if(e>>>0>h>>>0|(e|0)==(h|0)&i>>>0>g>>>0){c[(wo()|0)>>2]=34;break;}}g=((j|0)<0)<<31>>31;g=nC(i^j|0,e^g|0,j|0,g|0)|0;h=G()|0;}}while(0);F(h|0);return g|0;}function bp(b,e,f){b=b|0;e=e|0;f=f|0;var g=0.0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;switch(e|0){case 0:{l=-149;m=24;j=4;break;}case 1:{l=-1074;m=53;j=4;break;}case 2:{l=-1074;m=53;j=4;break;}default:g=0.0;}a:do{if((j|0)==4){o=b+4|0;n=b+104|0;do{e=c[o>>2]|0;if(e>>>0<(c[n>>2]|0)>>>0){c[o>>2]=e+1;e=d[e>>0]|0;}else e=Xo(b)|0;}while((Ho(e)|0)!=0);b:do{switch(e|0){case 43:case 45:{i=1-(((e|0)==45&1)<<1)|0;e=c[o>>2]|0;if(e>>>0<(c[n>>2]|0)>>>0){c[o>>2]=e+1;h=d[e>>0]|0;break b;}else{h=Xo(b)|0;break b;}}default:{h=e;i=1;}}}while(0);e=0;while(1){if((h|32|0)!=(a[22957+e>>0]|0))break;do{if(e>>>0<7){h=c[o>>2]|0;if(h>>>0<(c[n>>2]|0)>>>0){c[o>>2]=h+1;h=d[h>>0]|0;break;}else{h=Xo(b)|0;break;}}}while(0);e=e+1|0;if(e>>>0>=8){e=8;break;}}c:do{switch(e&2147483647|0){case 8:break;case 3:{j=23;break;}default:{k=(f|0)!=0;if(k&e>>>0>3)if((e|0)==8)break c;else{j=23;break c;}d:do{if(!e){e=0;while(1){if((h|32|0)!=(a[23019+e>>0]|0))break d;do{if(e>>>0<2){h=c[o>>2]|0;if(h>>>0<(c[n>>2]|0)>>>0){c[o>>2]=h+1;h=d[h>>0]|0;break;}else{h=Xo(b)|0;break;}}}while(0);e=e+1|0;if(e>>>0>=3){e=3;break;}}}}while(0);switch(e|0){case 3:{e=c[o>>2]|0;if(e>>>0<(c[n>>2]|0)>>>0){c[o>>2]=e+1;e=d[e>>0]|0;}else e=Xo(b)|0;if((e|0)!=40){if(!(c[n>>2]|0)){g=r;break a;}c[o>>2]=(c[o>>2]|0)+-1;g=r;break a;}e=1;while(1){h=c[o>>2]|0;if(h>>>0<(c[n>>2]|0)>>>0){c[o>>2]=h+1;h=d[h>>0]|0;}else h=Xo(b)|0;if(!((h+-48|0)>>>0<10|(h+-65|0)>>>0<26)?!((h|0)==95|(h+-97|0)>>>0<26):0)break;e=e+1|0;}if((h|0)==41){g=r;break a;}h=(c[n>>2]|0)==0;if(!h)c[o>>2]=(c[o>>2]|0)+-1;if(!k){c[(wo()|0)>>2]=22;Wo(b,0,0);g=0.0;break a;}if(!e){g=r;break a;}while(1){e=e+-1|0;if(!h)c[o>>2]=(c[o>>2]|0)+-1;if(!e){g=r;break a;}}}case 0:{if((h|0)==48){e=c[o>>2]|0;if(e>>>0<(c[n>>2]|0)>>>0){c[o>>2]=e+1;e=d[e>>0]|0;}else e=Xo(b)|0;if((e|32|0)==120){g=+cp(b,m,l,i,f);break a;}if(!(c[n>>2]|0))e=48;else{c[o>>2]=(c[o>>2]|0)+-1;e=48;}}else e=h;g=+dp(b,e,m,l,i,f);break a;}default:{if(c[n>>2]|0)c[o>>2]=(c[o>>2]|0)+-1;c[(wo()|0)>>2]=22;Wo(b,0,0);g=0.0;break a;}}}}}while(0);if((j|0)==23){h=(c[n>>2]|0)==0;if(!h)c[o>>2]=(c[o>>2]|0)+-1;if((f|0)!=0&e>>>0>3)do{if(!h)c[o>>2]=(c[o>>2]|0)+-1;e=e+-1|0;}while(e>>>0>3);}g=+(i|0)*s;}}while(0);return+g;}function cp(a,b,e,f,g){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;var h=0.0,i=0,j=0,k=0.0,l=0,m=0,n=0.0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;y=a+4|0;i=c[y>>2]|0;x=a+104|0;if(i>>>0<(c[x>>2]|0)>>>0){c[y>>2]=i+1;i=d[i>>0]|0;}else i=Xo(a)|0;j=0;a:while(1){switch(i|0){case 46:{w=10;break a;}case 48:break;default:{p=0;m=j;l=0;j=0;break a;}}i=c[y>>2]|0;if(i>>>0<(c[x>>2]|0)>>>0){c[y>>2]=i+1;i=d[i>>0]|0;}else i=Xo(a)|0;j=1;}if((w|0)==10){i=c[y>>2]|0;if(i>>>0<(c[x>>2]|0)>>>0){c[y>>2]=i+1;i=d[i>>0]|0;}else i=Xo(a)|0;if((i|0)==48){l=0;j=0;do{i=c[y>>2]|0;if(i>>>0<(c[x>>2]|0)>>>0){c[y>>2]=i+1;i=d[i>>0]|0;}else i=Xo(a)|0;l=mC(l|0,j|0,-1,-1)|0;j=G()|0;}while((i|0)==48);p=1;m=1;}else{p=1;m=j;l=0;j=0;}}o=0;n=1.0;h=0.0;v=0;s=p;t=m;u=0;m=0;while(1){q=i+-48|0;p=i|32;if(q>>>0>=10){r=(i|0)==46;if(!(r|(p+-97|0)>>>0<6))break;if(r){if(!s){s=1;k=n;q=v;r=t;l=m;j=u;p=u;}else{i=46;break;}}else w=24;}else w=24;if((w|0)==24){w=0;i=(i|0)>57?p+-87|0:q;do{if(!((u|0)<0|(u|0)==0&m>>>0<8)){if((u|0)<0|(u|0)==0&m>>>0<14){n=n*.0625;k=n;h=h+n*+(i|0);i=v;break;}else{i=(o|0)!=0|(i|0)==0;o=i?o:1;k=n;h=i?h:h+n*.5;i=v;break;}}else{k=n;i=i+(v<<4)|0;}}while(0);m=mC(m|0,u|0,1,0)|0;q=i;r=1;p=G()|0;}i=c[y>>2]|0;if(i>>>0<(c[x>>2]|0)>>>0){c[y>>2]=i+1;i=d[i>>0]|0;}else i=Xo(a)|0;n=k;v=q;t=r;u=p;}do{if(!t){i=(c[x>>2]|0)==0;if(!i)c[y>>2]=(c[y>>2]|0)+-1;if(g){if(!i?(c[y>>2]=(c[y>>2]|0)+-1,!((s|0)==0|i)):0)c[y>>2]=(c[y>>2]|0)+-1;}else Wo(a,0,0);h=+(f|0)*0.0;}else{o=(s|0)==0;p=o?m:l;o=o?u:j;if((u|0)<0|(u|0)==0&m>>>0<8){j=v;l=u;do{j=j<<4;w=m;m=mC(m|0,l|0,1,0)|0;v=l;l=G()|0;}while((v|0)<0|(v|0)==0&w>>>0<7);m=j;}else m=v;if((i|32|0)==112){j=ep(a,g)|0;i=G()|0;if((j|0)==0&(i|0)==-2147483648){if(!g){Wo(a,0,0);h=0.0;break;}if(!(c[x>>2]|0)){j=0;i=0;}else{c[y>>2]=(c[y>>2]|0)+-1;j=0;i=0;}}}else if(!(c[x>>2]|0)){j=0;i=0;}else{c[y>>2]=(c[y>>2]|0)+-1;j=0;i=0;}l=sC(p|0,o|0,2)|0;l=mC(l|0,G()|0,-32,-1)|0;l=mC(l|0,G()|0,j|0,i|0)|0;i=G()|0;if(!m){h=+(f|0)*0.0;break;}y=0-e|0;g=((y|0)<0)<<31>>31;if((i|0)>(g|0)|(i|0)==(g|0)&l>>>0>y>>>0){c[(wo()|0)>>2]=34;h=+(f|0)*1797693134862315708145274.0e284*1797693134862315708145274.0e284;break;}y=e+-106|0;g=((y|0)<0)<<31>>31;if((i|0)<(g|0)|(i|0)==(g|0)&l>>>0<y>>>0){c[(wo()|0)>>2]=34;h=+(f|0)*2.2250738585072014e-308*2.2250738585072014e-308;break;}if((m|0)>-1){j=m;do{y=!(h>=.5);j=j<<1|(y^1)&1;h=h+(y?h:h+-1.0);l=mC(l|0,i|0,-1,-1)|0;i=G()|0;}while((j|0)>-1);n=h;m=j;}else n=h;y=((b|0)<0)<<31>>31;e=nC(32,0,e|0,((e|0)<0)<<31>>31|0)|0;i=mC(e|0,G()|0,l|0,i|0)|0;e=G()|0;if((e|0)<(y|0)|(e|0)==(y|0)&i>>>0<b>>>0){if((i|0)>0)w=65;else{j=0;i=84;w=67;}}else{i=b;w=65;}if((w|0)==65)if((i|0)<53){j=i;i=84-i|0;w=67;}else{k=0.0;h=+(f|0);}if((w|0)==67){h=+(f|0);k=+gp(+fp(1.0,i),h);i=j;}f=(m&1|0)==0&(n!=0.0&(i|0)<32);h=(f?0.0:n)*h+(k+h*+((m+(f&1)|0)>>>0))-k;if(!(h!=0.0))c[(wo()|0)>>2]=34;h=+ip(h,l);}}while(0);return+h;}function dp(a,b,e,f,g,h){a=a|0;b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0.0,j=0,k=0.0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0.0,s=0,t=0.0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,H=0,I=0,J=0.0;I=Pb;Pb=Pb+512|0;E=I;F=f+e|0;H=0-F|0;D=a+4|0;B=a+104|0;j=0;a:while(1){switch(b|0){case 46:{z=7;break a;}case 48:break;default:{v=0;p=j;j=0;o=0;break a;}}b=c[D>>2]|0;if(b>>>0<(c[B>>2]|0)>>>0){c[D>>2]=b+1;b=d[b>>0]|0;}else b=Xo(a)|0;j=1;}if((z|0)==7){b=c[D>>2]|0;if(b>>>0<(c[B>>2]|0)>>>0){c[D>>2]=b+1;b=d[b>>0]|0;}else b=Xo(a)|0;if((b|0)==48){j=0;b=0;while(1){j=mC(j|0,b|0,-1,-1)|0;o=G()|0;b=c[D>>2]|0;if(b>>>0<(c[B>>2]|0)>>>0){c[D>>2]=b+1;b=d[b>>0]|0;}else b=Xo(a)|0;if((b|0)==48)b=o;else{v=1;p=1;break;}}}else{v=1;p=j;j=0;o=0;}}c[E>>2]=0;n=b+-48|0;m=(b|0)==46;b:do{if(m|n>>>0<10){A=E+496|0;w=0;l=0;s=0;x=v;y=p;z=n;p=0;n=0;c:while(1){do{if(m){if(!x){x=1;j=p;o=n;}else break c;}else{p=mC(p|0,n|0,1,0)|0;n=G()|0;v=(b|0)!=48;if((l|0)>=125){if(!v)break;c[A>>2]=c[A>>2]|1;break;}m=E+(l<<2)|0;if(!w)b=z;else b=b+-48+((c[m>>2]|0)*10|0)|0;c[m>>2]=b;w=w+1|0;y=(w|0)==9;w=y?0:w;l=l+(y&1)|0;s=v?p:s;y=1;}}while(0);b=c[D>>2]|0;if(b>>>0<(c[B>>2]|0)>>>0){c[D>>2]=b+1;b=d[b>>0]|0;}else b=Xo(a)|0;z=b+-48|0;m=(b|0)==46;if(!(m|z>>>0<10)){v=x;m=y;z=31;break b;}}b=w;m=(y|0)!=0;z=39;}else{w=0;l=0;s=0;m=p;p=0;n=0;z=31;}}while(0);do{if((z|0)==31){A=(v|0)==0;j=A?p:j;o=A?n:o;m=(m|0)!=0;if(!(m&(b|32|0)==101))if((b|0)>-1){b=w;z=39;break;}else{b=w;z=41;break;}m=ep(a,h)|0;b=G()|0;if((m|0)==0&(b|0)==-2147483648){if(!h){Wo(a,0,0);i=0.0;break;}if(!(c[B>>2]|0)){m=0;b=0;}else{c[D>>2]=(c[D>>2]|0)+-1;m=0;b=0;}}j=mC(m|0,b|0,j|0,o|0)|0;b=w;o=G()|0;z=43;}}while(0);if((z|0)==39)if(c[B>>2]|0){c[D>>2]=(c[D>>2]|0)+-1;if(m)z=43;else z=42;}else z=41;if((z|0)==41)if(m)z=43;else z=42;do{if((z|0)==42){c[(wo()|0)>>2]=22;Wo(a,0,0);i=0.0;}else if((z|0)==43){m=c[E>>2]|0;if(!m){i=+(g|0)*0.0;break;}if(((n|0)<0|(n|0)==0&p>>>0<10)&((j|0)==(p|0)&(o|0)==(n|0))?(e|0)>30|(m>>>e|0)==0:0){i=+(g|0)*+(m>>>0);break;}a=(f|0)/-2|0;D=((a|0)<0)<<31>>31;if((o|0)>(D|0)|(o|0)==(D|0)&j>>>0>a>>>0){c[(wo()|0)>>2]=34;i=+(g|0)*1797693134862315708145274.0e284*1797693134862315708145274.0e284;break;}a=f+-106|0;D=((a|0)<0)<<31>>31;if((o|0)<(D|0)|(o|0)==(D|0)&j>>>0<a>>>0){c[(wo()|0)>>2]=34;i=+(g|0)*2.2250738585072014e-308*2.2250738585072014e-308;break;}if(b){if((b|0)<9){n=E+(l<<2)|0;m=c[n>>2]|0;while(1){m=m*10|0;if((b|0)>=8)break;else b=b+1|0;}c[n>>2]=m;}l=l+1|0;}if((s|0)<9?(s|0)<=(j|0)&(j|0)<18:0){if((j|0)==9){i=+(g|0)*+((c[E>>2]|0)>>>0);break;}if((j|0)<9){i=+(g|0)*+((c[E>>2]|0)>>>0)/+(c[5376+(8-j<<2)>>2]|0);break;}a=e+27+(C(j,-3)|0)|0;b=c[E>>2]|0;if((a|0)>30|(b>>>a|0)==0){i=+(g|0)*+(b>>>0)*+(c[5376+(j+-10<<2)>>2]|0);break;}}b=(j|0)%9|0;if(!b)m=0;else{s=(j|0)>-1?b:b+9|0;o=c[5376+(8-s<<2)>>2]|0;if(l){p=1e9/(o|0)|0;n=0;m=0;b=0;do{B=E+(b<<2)|0;D=c[B>>2]|0;a=(D>>>0)/(o>>>0)|0;D=D-(C(a,o)|0)|0;a=a+n|0;c[B>>2]=a;n=C(p,D)|0;a=(b|0)==(m|0)&(a|0)==0;j=a?j+-9|0:j;m=a?m+1&127:m;b=b+1|0;}while((b|0)!=(l|0));if(!n)b=l;else{c[E+(l<<2)>>2]=n;b=l+1|0;}}else{m=0;b=0;}l=b;j=9-s+j|0;}b=0;d:while(1){v=(j|0)<18;w=(j|0)==18;x=E+(m<<2)|0;while(1){if(!v){if(!w)break d;if((c[x>>2]|0)>>>0>=9007199){j=18;break d;}}n=0;y=l;l=l+127|0;while(1){p=l&127;o=E+(p<<2)|0;l=sC(c[o>>2]|0,0,29)|0;l=mC(l|0,G()|0,n|0,0)|0;n=G()|0;if(n>>>0>0|(n|0)==0&l>>>0>1e9){s=qC(l|0,n|0,1e9,0)|0;a=lC(s|0,G()|0,1e9,0)|0;l=nC(l|0,n|0,a|0,G()|0)|0;G()|0;}else s=0;c[o>>2]=l;a=(p|0)==(m|0);o=(p|0)!=(y+127&127|0)|a?y:(l|0)==0?p:y;if(a)break;else{n=s;y=o;l=p+-1|0;}}b=b+-29|0;if(!s)l=y;else break;}m=m+127&127;l=o+127&127;n=E+((o+126&127)<<2)|0;if((m|0)==(o|0))c[n>>2]=c[n>>2]|c[E+(l<<2)>>2];else l=y;c[E+(m<<2)>>2]=s;j=j+9|0;}e:while(1){w=l+1&127;x=E+((l+127&127)<<2)|0;while(1){p=(j|0)==18;v=(j|0)>27?9:1;y=m;while(1){o=0;while(1){m=o+y&127;if((m|0)==(l|0)){z=92;break;}m=c[E+(m<<2)>>2]|0;n=c[11888+(o<<2)>>2]|0;if(m>>>0<n>>>0){z=92;break;}if(m>>>0>n>>>0)break;if((o+1|0)>>>0<2)o=1;else{z=92;break;}}if((z|0)==92?(z=0,p):0)break e;b=v+b|0;if((y|0)==(l|0))y=l;else break;}p=(1<<v)+-1|0;s=1e9>>>v;o=0;m=y;n=y;do{B=E+(n<<2)|0;D=c[B>>2]|0;a=(D>>>v)+o|0;c[B>>2]=a;o=C(D&p,s)|0;a=(n|0)==(m|0)&(a|0)==0;j=a?j+-9|0:j;m=a?m+1&127:m;n=n+1&127;}while((n|0)!=(l|0));if(o|0){if((w|0)!=(m|0))break;c[x>>2]=c[x>>2]|1;}}c[E+(l<<2)>>2]=o;l=w;}i=0.0;j=l;m=0;do{n=m+y&127;l=j+1&127;if((n|0)==(j|0)){c[E+(l+-1<<2)>>2]=0;j=l;}i=i*1.0e9+ +((c[E+(n<<2)>>2]|0)>>>0);m=m+1|0;}while((m|0)!=2);t=+(g|0);k=i*t;n=b+53|0;o=n-f|0;p=(o|0)<(e|0);m=p?(o|0)>0?o:0:e;if((m|0)<53){J=+gp(+fp(1.0,105-m|0),k);q=+hp(k,+fp(1.0,53-m|0));r=J;i=q;q=J+(k-q);}else{r=0.0;i=0.0;q=k;}l=y+2&127;if((l|0)!=(j|0)){l=c[E+(l<<2)>>2]|0;do{if(l>>>0>=5e8){if((l|0)!=5e8){i=t*.75+i;break;}if((y+3&127|0)==(j|0)){i=t*.5+i;break;}else{i=t*.75+i;break;}}else{if((l|0)==0?(y+3&127|0)==(j|0):0)break;i=t*.25+i;}}while(0);if((53-m|0)>1?!(+hp(i,1.0)!=0.0):0)k=i+1.0;else k=i;}else k=i;i=q+k-r;do{if((n&2147483647|0)>(-2-F|0)){F=!(+u(+i)>=9007199254740992.0);b=b+((F^1)&1)|0;i=F?i:i*.5;if((b+50|0)<=(H|0)?!(k!=0.0&(p&((m|0)!=(o|0)|F))):0)break;c[(wo()|0)>>2]=34;}}while(0);i=+ip(i,b);}}while(0);Pb=I;return+i;}function ep(a,b){a=a|0;b=b|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;i=a+4|0;e=c[i>>2]|0;j=a+104|0;if(e>>>0<(c[j>>2]|0)>>>0){c[i>>2]=e+1;f=d[e>>0]|0;}else f=Xo(a)|0;switch(f|0){case 43:case 45:{g=(f|0)==45&1;e=c[i>>2]|0;if(e>>>0<(c[j>>2]|0)>>>0){c[i>>2]=e+1;e=d[e>>0]|0;}else e=Xo(a)|0;f=e+-48|0;if((b|0)!=0&f>>>0>9){if(!(c[j>>2]|0)){f=0;e=-2147483648;}else{c[i>>2]=(c[i>>2]|0)+-1;k=14;}}else k=12;break;}default:{g=0;e=f;f=f+-48|0;k=12;}}if((k|0)==12)if(f>>>0>9)k=14;else{f=0;do{f=e+-48+(f*10|0)|0;e=c[i>>2]|0;if(e>>>0<(c[j>>2]|0)>>>0){c[i>>2]=e+1;e=d[e>>0]|0;}else e=Xo(a)|0;b=e+-48|0;}while(b>>>0<10&(f|0)<214748364);h=((f|0)<0)<<31>>31;if(b>>>0<10){do{l=lC(f|0,h|0,10,0)|0;b=G()|0;e=mC(e|0,((e|0)<0)<<31>>31|0,-48,-1)|0;f=mC(e|0,G()|0,l|0,b|0)|0;h=G()|0;e=c[i>>2]|0;if(e>>>0<(c[j>>2]|0)>>>0){c[i>>2]=e+1;e=d[e>>0]|0;}else e=Xo(a)|0;b=e+-48|0;}while(b>>>0<10&((h|0)<21474836|(h|0)==21474836&f>>>0<2061584302));if(b>>>0<10){do{e=c[i>>2]|0;if(e>>>0<(c[j>>2]|0)>>>0){c[i>>2]=e+1;e=d[e>>0]|0;}else e=Xo(a)|0;}while((e+-48|0)>>>0<10);e=h;}else e=h;}else e=h;if(c[j>>2]|0)c[i>>2]=(c[i>>2]|0)+-1;j=(g|0)==0;i=nC(0,0,f|0,e|0)|0;l=G()|0;f=j?f:i;e=j?e:l;}if((k|0)==14)if(!(c[j>>2]|0)){f=0;e=-2147483648;}else{c[i>>2]=(c[i>>2]|0)+-1;f=0;e=-2147483648;}F(e|0);return f|0;}function fp(a,b){a=+a;b=b|0;var d=0,e=0;if((b|0)<=1023){if((b|0)<-1022){a=a*2.2250738585072014e-308;e=(b|0)<-2044;d=b+2044|0;a=e?a*2.2250738585072014e-308:a;b=e?(d|0)>-1022?d:-1022:b+1022|0;}}else{a=a*8988465674311579538646525.0e283;d=(b|0)>2046;e=b+-2046|0;a=d?a*8988465674311579538646525.0e283:a;b=d?(e|0)<1023?e:1023:b+-1023|0;}d=sC(b+1023|0,0,52)|0;e=G()|0;c[h>>2]=d;c[h+4>>2]=e;return+(a*+g[h>>3]);}function gp(a,b){a=+a;b=+b;return+ +lp(a,b);}function hp(a,b){a=+a;b=+b;return+ +jp(a,b);}function ip(a,b){a=+a;b=b|0;return+ +fp(a,b);}function jp(a,b){a=+a;b=+b;var d=0,e=0,f=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;g[h>>3]=a;j=c[h>>2]|0;l=c[h+4>>2]|0;g[h>>3]=b;n=c[h>>2]|0;o=c[h+4>>2]|0;e=rC(j|0,l|0,52)|0;G()|0;e=e&2047;m=rC(n|0,o|0,52)|0;G()|0;m=m&2047;p=l&-2147483648;i=sC(n|0,o|0,1)|0;k=G()|0;a:do{if(!((i|0)==0&(k|0)==0)?(f=kp(b)|0,d=(G()|0)&2147483647,!((e|0)==2047|(d>>>0>2146435072|(d|0)==2146435072&f>>>0>0))):0){d=sC(j|0,l|0,1)|0;f=G()|0;if(!(f>>>0>k>>>0|(f|0)==(k|0)&d>>>0>i>>>0))return+((d|0)==(i|0)&(f|0)==(k|0)?a*0.0:a);if(!e){d=sC(j|0,l|0,12)|0;f=G()|0;if((f|0)>-1|(f|0)==-1&d>>>0>4294967295){e=0;do{e=e+-1|0;d=sC(d|0,f|0,1)|0;f=G()|0;}while((f|0)>-1|(f|0)==-1&d>>>0>4294967295);}else e=0;j=sC(j|0,l|0,1-e|0)|0;i=G()|0;}else i=l&1048575|1048576;if(!m){f=sC(n|0,o|0,12)|0;k=G()|0;if((k|0)>-1|(k|0)==-1&f>>>0>4294967295){d=0;do{d=d+-1|0;f=sC(f|0,k|0,1)|0;k=G()|0;}while((k|0)>-1|(k|0)==-1&f>>>0>4294967295);}else d=0;n=sC(n|0,o|0,1-d|0)|0;m=d;l=G()|0;}else l=o&1048575|1048576;f=nC(j|0,i|0,n|0,l|0)|0;d=G()|0;k=(d|0)>-1|(d|0)==-1&f>>>0>4294967295;b:do{if((e|0)>(m|0)){while(1){if(k){if((f|0)==0&(d|0)==0)break;}else{f=j;d=i;}j=sC(f|0,d|0,1)|0;i=G()|0;e=e+-1|0;f=nC(j|0,i|0,n|0,l|0)|0;d=G()|0;k=(d|0)>-1|(d|0)==-1&f>>>0>4294967295;if((e|0)<=(m|0))break b;}b=a*0.0;break a;}}while(0);if(k){if((f|0)==0&(d|0)==0){b=a*0.0;break;}}else{d=i;f=j;}if(d>>>0<1048576|(d|0)==1048576&f>>>0<0)do{f=sC(f|0,d|0,1)|0;d=G()|0;e=e+-1|0;}while(d>>>0<1048576|(d|0)==1048576&f>>>0<0);if((e|0)>0){o=mC(f|0,d|0,0,-1048576)|0;d=G()|0;e=sC(e|0,0,52)|0;d=d|(G()|0);e=o|e;}else{e=rC(f|0,d|0,1-e|0)|0;d=G()|0;}c[h>>2]=e;c[h+4>>2]=d|p;b=+g[h>>3];}else q=3;}while(0);if((q|0)==3){b=a*b;b=b/b;}return+b;}function kp(a){a=+a;var b=0;g[h>>3]=a;b=c[h>>2]|0;F(c[h+4>>2]|0);return b|0;}function lp(a,b){a=+a;b=+b;var d=0,e=0;g[h>>3]=a;e=c[h>>2]|0;d=c[h+4>>2]|0;g[h>>3]=b;d=c[h+4>>2]&-2147483648|d&2147483647;c[h>>2]=e;c[h+4>>2]=d;return+ +g[h>>3];}function mp(){return Do()|0;}function np(a){a=a|0;var b=0,e=0;e=Pb;Pb=Pb+16|0;b=e;if((op(a)|0)==0?($b[c[a+32>>2]&31](a,b,1)|0)==1:0)a=d[b>>0]|0;else a=-1;Pb=e;return a|0;}function op(b){b=b|0;var d=0,e=0;d=b+74|0;e=a[d>>0]|0;a[d>>0]=e+255|e;d=b+20|0;e=b+28|0;if((c[d>>2]|0)>>>0>(c[e>>2]|0)>>>0)$b[c[b+36>>2]&31](b,0,0)|0;c[b+16>>2]=0;c[e>>2]=0;c[d>>2]=0;d=c[b>>2]|0;if(!(d&4)){e=(c[b+44>>2]|0)+(c[b+48>>2]|0)|0;c[b+8>>2]=e;c[b+4>>2]=e;d=d<<27>>31;}else{c[b>>2]=d|32;d=-1;}return d|0;}function pp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=a+84|0;g=c[e>>2]|0;h=d+256|0;f=qp(g,0,h)|0;f=(f|0)==0?h:f-g|0;d=f>>>0<d>>>0?f:d;wC(b|0,g|0,d|0)|0;c[a+4>>2]=g+d;b=g+f|0;c[a+8>>2]=b;c[e>>2]=b;return d|0;}function qp(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;h=d&255;f=(e|0)!=0;a:do{if(f&(b&3|0)!=0){g=d&255;while(1){if((a[b>>0]|0)==g<<24>>24){i=6;break a;}b=b+1|0;e=e+-1|0;f=(e|0)!=0;if(!(f&(b&3|0)!=0)){i=5;break;}}}else i=5;}while(0);if((i|0)==5)if(f)i=6;else i=16;b:do{if((i|0)==6){g=d&255;if((a[b>>0]|0)==g<<24>>24)if(!e){i=16;break;}else break;f=C(h,16843009)|0;c:do{if(e>>>0>3)while(1){h=c[b>>2]^f;if((h&-2139062144^-2139062144)&h+-16843009|0)break c;b=b+4|0;e=e+-4|0;if(e>>>0<=3){i=11;break;}}else i=11;}while(0);if((i|0)==11)if(!e){i=16;break;}while(1){if((a[b>>0]|0)==g<<24>>24)break b;e=e+-1|0;if(!e){i=16;break;}else b=b+1|0;}}}while(0);if((i|0)==16)b=0;return b|0;}function rp(a,b,c){a=a|0;b=b|0;c=c|0;return up(a,b,c,1,35)|0;}function sp(b,e,f,g,h,i){b=b|0;e=+e;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0.0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,D=0,E=0,F=0,H=0;H=Pb;Pb=Pb+560|0;l=H+32|0;u=H+536|0;F=H;E=F;m=H+540|0;c[u>>2]=0;D=m+12|0;Gp(e)|0;j=G()|0;if((j|0)<0){e=-e;Gp(e)|0;B=1;A=22992;j=G()|0;}else{B=(h&2049|0)!=0&1;A=(h&2048|0)==0?(h&1|0)==0?22993:22998:22995;}do{if(0==0&(j&2146435072|0)==2146435072){F=(i&32|0)!=0;j=B+3|0;Cp(b,32,f,j,h&-65537);wp(b,A,B);wp(b,e!=e|0.0!=0.0?F?23019:23023:F?23011:23015,3);Cp(b,32,f,j,h^8192);}else{q=+Hp(e,u)*2.0;j=q!=0.0;if(j)c[u>>2]=(c[u>>2]|0)+-1;t=i|32;if((t|0)==97){o=i&32;r=(o|0)==0?A:A+9|0;p=B|2;j=12-g|0;do{if(!(g>>>0>11|(j|0)==0)){e=8.0;do{j=j+-1|0;e=e*16.0;}while((j|0)!=0);if((a[r>>0]|0)==45){e=-(e+(-q-e));break;}else{e=q+e-e;break;}}else e=q;}while(0);k=c[u>>2]|0;j=(k|0)<0?0-k|0:k;j=Bp(j,((j|0)<0)<<31>>31,D)|0;if((j|0)==(D|0)){j=m+11|0;a[j>>0]=48;}a[j+-1>>0]=(k>>31&2)+43;n=j+-2|0;a[n>>0]=i+15;k=(g|0)<1;l=(h&8|0)==0;m=F;do{B=~~e;j=m+1|0;a[m>>0]=o|d[6144+B>>0];e=(e-+(B|0))*16.0;if((j-E|0)==1?!(l&(k&e==0.0)):0){a[j>>0]=46;m=m+2|0;}else m=j;}while(e!=0.0);if((g|0)!=0?(-2-E+m|0)<(g|0):0){k=D;l=n;j=g+2+k-l|0;}else{k=D;l=n;j=k-E-l+m|0;}D=j+p|0;Cp(b,32,f,D,h);wp(b,r,p);Cp(b,48,f,D,h^65536);E=m-E|0;wp(b,F,E);F=k-l|0;Cp(b,48,j-(E+F)|0,0,0);wp(b,n,F);Cp(b,32,f,D,h^8192);j=D;break;}k=(g|0)<0?6:g;if(j){j=(c[u>>2]|0)+-28|0;c[u>>2]=j;e=q*268435456.0;}else{e=q;j=c[u>>2]|0;}z=(j|0)<0?l:l+288|0;l=z;do{x=~~e>>>0;c[l>>2]=x;l=l+4|0;e=(e-+(x>>>0))*1.0e9;}while(e!=0.0);x=z;if((j|0)>0){o=z;while(1){n=(j|0)<29?j:29;j=l+-4|0;if(j>>>0>=o>>>0){m=0;do{s=sC(c[j>>2]|0,0,n|0)|0;s=mC(s|0,G()|0,m|0,0)|0;v=G()|0;m=qC(s|0,v|0,1e9,0)|0;w=lC(m|0,G()|0,1e9,0)|0;w=nC(s|0,v|0,w|0,G()|0)|0;G()|0;c[j>>2]=w;j=j+-4|0;}while(j>>>0>=o>>>0);if(m){w=o+-4|0;c[w>>2]=m;m=w;}else m=o;}else m=o;a:do{if(l>>>0>m>>>0){j=l;while(1){l=j+-4|0;if(c[l>>2]|0){l=j;break a;}if(l>>>0>m>>>0)j=l;else break;}}}while(0);j=(c[u>>2]|0)-n|0;c[u>>2]=j;if((j|0)>0)o=m;else break;}}else m=z;if((j|0)<0){g=((k+25|0)/9|0)+1|0;s=(t|0)==102;do{r=0-j|0;r=(r|0)<9?r:9;if(m>>>0<l>>>0){n=(1<<r)+-1|0;o=1e9>>>r;p=0;j=m;do{w=c[j>>2]|0;c[j>>2]=(w>>>r)+p;p=C(w&n,o)|0;j=j+4|0;}while(j>>>0<l>>>0);m=(c[m>>2]|0)==0?m+4|0:m;if(p){c[l>>2]=p;l=l+4|0;}}else m=(c[m>>2]|0)==0?m+4|0:m;j=s?z:m;l=(l-j>>2|0)>(g|0)?j+(g<<2)|0:l;j=(c[u>>2]|0)+r|0;c[u>>2]=j;}while((j|0)<0);s=m;}else s=m;if(s>>>0<l>>>0){j=(x-s>>2)*9|0;n=c[s>>2]|0;if(n>>>0>=10){m=10;do{m=m*10|0;j=j+1|0;}while(n>>>0>=m>>>0);}}else j=0;v=(t|0)==103;w=(k|0)!=0;m=k-((t|0)==102?0:j)+((w&v)<<31>>31)|0;if((m|0)<(((l-x>>2)*9|0)+-9|0)){u=m+9216|0;m=(u|0)/9|0;g=z+4+(m+-1024<<2)|0;m=u-(m*9|0)|0;if((m|0)<8){n=10;while(1){n=n*10|0;if((m|0)<7)m=m+1|0;else break;}}else n=10;p=c[g>>2]|0;m=(p>>>0)/(n>>>0)|0;r=p-(C(m,n)|0)|0;o=(g+4|0)==(l|0);if(!(o&(r|0)==0)){q=(m&1|0)==0?9007199254740992.0:9007199254740994.0;u=n>>>1;e=r>>>0<u>>>0?.5:o&(r|0)==(u|0)?1.0:1.5;if(B){u=(a[A>>0]|0)==45;e=u?-e:e;q=u?-q:q;}m=p-r|0;c[g>>2]=m;if(q+e!=q){u=m+n|0;c[g>>2]=u;if(u>>>0>999999999){n=g;j=s;while(1){m=n+-4|0;c[n>>2]=0;if(m>>>0<j>>>0){j=j+-4|0;c[j>>2]=0;}u=(c[m>>2]|0)+1|0;c[m>>2]=u;if(u>>>0>999999999)n=m;else{n=j;break;}}}else{m=g;n=s;}j=(x-n>>2)*9|0;p=c[n>>2]|0;if(p>>>0>=10){o=10;do{o=o*10|0;j=j+1|0;}while(p>>>0>=o>>>0);}}else{m=g;n=s;}}else{m=g;n=s;}u=m+4|0;l=l>>>0>u>>>0?u:l;}else n=s;g=0-j|0;b:do{if(l>>>0>n>>>0)while(1){m=l+-4|0;if(c[m>>2]|0){u=l;t=1;break b;}if(m>>>0>n>>>0)l=m;else{u=m;t=0;break;}}else{u=l;t=0;}}while(0);do{if(v){k=k+((w^1)&1)|0;if((k|0)>(j|0)&(j|0)>-5){o=i+-1|0;k=k+-1-j|0;}else{o=i+-2|0;k=k+-1|0;}if(!(h&8)){if(t?(y=c[u+-4>>2]|0,(y|0)!=0):0){if(!((y>>>0)%10|0)){m=0;l=10;do{l=l*10|0;m=m+1|0;}while(!((y>>>0)%(l>>>0)|0|0));}else m=0;}else m=9;l=((u-x>>2)*9|0)+-9|0;if((o|32|0)==102){i=l-m|0;i=(i|0)>0?i:0;k=(k|0)<(i|0)?k:i;break;}else{i=l+j-m|0;i=(i|0)>0?i:0;k=(k|0)<(i|0)?k:i;break;}}}else o=i;}while(0);s=(k|0)!=0;p=s?1:h>>>3&1;r=(o|32|0)==102;if(r){v=0;j=(j|0)>0?j:0;}else{l=(j|0)<0?g:j;l=Bp(l,((l|0)<0)<<31>>31,D)|0;m=D;if((m-l|0)<2)do{l=l+-1|0;a[l>>0]=48;}while((m-l|0)<2);a[l+-1>>0]=(j>>31&2)+43;j=l+-2|0;a[j>>0]=o;v=j;j=m-j|0;}j=B+1+k+p+j|0;Cp(b,32,f,j,h);wp(b,A,B);Cp(b,48,f,j,h^65536);if(r){p=n>>>0>z>>>0?z:n;r=F+9|0;n=r;o=F+8|0;m=p;do{l=Bp(c[m>>2]|0,0,r)|0;if((m|0)==(p|0)){if((l|0)==(r|0)){a[o>>0]=48;l=o;}}else if(l>>>0>F>>>0){yC(F|0,48,l-E|0)|0;do{l=l+-1|0;}while(l>>>0>F>>>0);}wp(b,l,n-l|0);m=m+4|0;}while(m>>>0<=z>>>0);if(!((h&8|0)==0&(s^1)))wp(b,23027,1);if(m>>>0<u>>>0&(k|0)>0)while(1){l=Bp(c[m>>2]|0,0,r)|0;if(l>>>0>F>>>0){yC(F|0,48,l-E|0)|0;do{l=l+-1|0;}while(l>>>0>F>>>0);}wp(b,l,(k|0)<9?k:9);m=m+4|0;l=k+-9|0;if(!(m>>>0<u>>>0&(k|0)>9)){k=l;break;}else k=l;}Cp(b,48,k+9|0,9,0);}else{u=t?u:n+4|0;if(n>>>0<u>>>0&(k|0)>-1){g=F+9|0;s=(h&8|0)==0;t=g;p=0-E|0;r=F+8|0;o=n;do{l=Bp(c[o>>2]|0,0,g)|0;if((l|0)==(g|0)){a[r>>0]=48;l=r;}do{if((o|0)==(n|0)){m=l+1|0;wp(b,l,1);if(s&(k|0)<1){l=m;break;}wp(b,23027,1);l=m;}else{if(l>>>0<=F>>>0)break;yC(F|0,48,l+p|0)|0;do{l=l+-1|0;}while(l>>>0>F>>>0);}}while(0);E=t-l|0;wp(b,l,(k|0)>(E|0)?E:k);k=k-E|0;o=o+4|0;}while(o>>>0<u>>>0&(k|0)>-1);}Cp(b,48,k+18|0,18,0);wp(b,v,D-v|0);}Cp(b,32,f,j,h^8192);}}while(0);Pb=H;return((j|0)<(f|0)?f:j)|0;}function tp(a,b){a=a|0;b=b|0;var d=0.0,e=0;e=(c[b>>2]|0)+(8-1)&~(8-1);d=+g[e>>3];c[b>>2]=e+8;g[a>>3]=d;return;}function up(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=Pb;Pb=Pb+224|0;p=t+208|0;q=t+160|0;r=t+80|0;s=t;h=q;i=h+40|0;do{c[h>>2]=0;h=h+4|0;}while((h|0)<(i|0));c[p>>2]=c[e>>2];if((vp(0,d,p,r,q,f,g)|0)<0)e=-1;else{if((c[b+76>>2]|0)>-1)o=No(b)|0;else o=0;e=c[b>>2]|0;n=e&32;if((a[b+74>>0]|0)<1)c[b>>2]=e&-33;h=b+48|0;if(!(c[h>>2]|0)){i=b+44|0;j=c[i>>2]|0;c[i>>2]=s;k=b+28|0;c[k>>2]=s;l=b+20|0;c[l>>2]=s;c[h>>2]=80;m=b+16|0;c[m>>2]=s+80;e=vp(b,d,p,r,q,f,g)|0;if(j){$b[c[b+36>>2]&31](b,0,0)|0;e=(c[l>>2]|0)==0?-1:e;c[i>>2]=j;c[h>>2]=0;c[m>>2]=0;c[k>>2]=0;c[l>>2]=0;}}else e=vp(b,d,p,r,q,f,g)|0;h=c[b>>2]|0;c[b>>2]=h|n;if(o|0)Mo(b);e=(h&32|0)==0?e:-1;}Pb=t;return e|0;}function vp(d,e,f,h,i,j,k){d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,H=0,I=0,J=0,K=0;J=Pb;Pb=Pb+64|0;F=J+56|0;I=J+40|0;A=J;C=J+48|0;D=J+60|0;c[F>>2]=e;x=(d|0)!=0;y=A+40|0;z=y;A=A+39|0;B=C+4|0;l=0;e=0;n=0;a:while(1){do{do{if((e|0)>-1)if((l|0)>(2147483647-e|0)){c[(wo()|0)>>2]=75;e=-1;break;}else{e=l+e|0;break;}}while(0);r=c[F>>2]|0;l=a[r>>0]|0;if(!(l<<24>>24)){w=92;break a;}m=r;b:while(1){switch(l<<24>>24){case 37:{w=10;break b;}case 0:{l=m;break b;}default:{}}v=m+1|0;c[F>>2]=v;l=a[v>>0]|0;m=v;}c:do{if((w|0)==10){w=0;l=m;do{if((a[m+1>>0]|0)!=37)break c;l=l+1|0;m=m+2|0;c[F>>2]=m;}while((a[m>>0]|0)==37);}}while(0);l=l-r|0;if(x)wp(d,r,l);}while((l|0)!=0);v=(zo(a[(c[F>>2]|0)+1>>0]|0)|0)==0;m=c[F>>2]|0;if(!v?(a[m+2>>0]|0)==36:0){t=(a[m+1>>0]|0)+-48|0;p=1;l=3;}else{t=-1;p=n;l=1;}l=m+l|0;c[F>>2]=l;m=a[l>>0]|0;n=(m<<24>>24)+-32|0;if(n>>>0>31|(1<<n&75913|0)==0)o=0;else{o=0;do{o=1<<n|o;l=l+1|0;c[F>>2]=l;m=a[l>>0]|0;n=(m<<24>>24)+-32|0;}while(!(n>>>0>31|(1<<n&75913|0)==0));}if(m<<24>>24==42){if((zo(a[l+1>>0]|0)|0)!=0?(H=c[F>>2]|0,(a[H+2>>0]|0)==36):0){l=H+1|0;c[i+((a[l>>0]|0)+-48<<2)>>2]=10;l=c[h+((a[l>>0]|0)+-48<<3)>>2]|0;n=1;m=H+3|0;}else{if(p|0){e=-1;break;}if(x){v=(c[f>>2]|0)+(4-1)&~(4-1);l=c[v>>2]|0;c[f>>2]=v+4;}else l=0;n=0;m=(c[F>>2]|0)+1|0;}c[F>>2]=m;v=(l|0)<0;u=v?0-l|0:l;o=v?o|8192:o;v=n;}else{l=xp(F)|0;if((l|0)<0){e=-1;break;}u=l;v=p;m=c[F>>2]|0;}do{if((a[m>>0]|0)==46){l=m+1|0;if((a[l>>0]|0)!=42){c[F>>2]=l;l=xp(F)|0;m=c[F>>2]|0;break;}if(zo(a[m+2>>0]|0)|0?(E=c[F>>2]|0,(a[E+3>>0]|0)==36):0){l=E+2|0;c[i+((a[l>>0]|0)+-48<<2)>>2]=10;l=c[h+((a[l>>0]|0)+-48<<3)>>2]|0;m=E+4|0;c[F>>2]=m;break;}if(v|0){e=-1;break a;}if(x){s=(c[f>>2]|0)+(4-1)&~(4-1);l=c[s>>2]|0;c[f>>2]=s+4;}else l=0;m=(c[F>>2]|0)+2|0;c[F>>2]=m;}else l=-1;}while(0);s=0;while(1){if(((a[m>>0]|0)+-65|0)>>>0>57){e=-1;break a;}n=m;m=m+1|0;c[F>>2]=m;n=a[(a[n>>0]|0)+-65+(5680+(s*58|0))>>0]|0;p=n&255;if((p+-1|0)>>>0>=8)break;else s=p;}if(!(n<<24>>24)){e=-1;break;}q=(t|0)>-1;do{if(n<<24>>24==19){if(q){e=-1;break a;}else w=54;}else{if(q){c[i+(t<<2)>>2]=p;q=h+(t<<3)|0;t=c[q+4>>2]|0;w=I;c[w>>2]=c[q>>2];c[w+4>>2]=t;w=54;break;}if(!x){e=0;break a;}yp(I,p,f,k);m=c[F>>2]|0;w=55;}}while(0);if((w|0)==54){w=0;if(x)w=55;else l=0;}d:do{if((w|0)==55){w=0;m=a[m+-1>>0]|0;m=(s|0)!=0&(m&15|0)==3?m&-33:m;n=o&-65537;t=(o&8192|0)==0?o:n;e:do{switch(m|0){case 110:switch((s&255)<<24>>24){case 0:{c[c[I>>2]>>2]=e;l=0;break d;}case 1:{c[c[I>>2]>>2]=e;l=0;break d;}case 2:{l=c[I>>2]|0;c[l>>2]=e;c[l+4>>2]=((e|0)<0)<<31>>31;l=0;break d;}case 3:{b[c[I>>2]>>1]=e;l=0;break d;}case 4:{a[c[I>>2]>>0]=e;l=0;break d;}case 6:{c[c[I>>2]>>2]=e;l=0;break d;}case 7:{l=c[I>>2]|0;c[l>>2]=e;c[l+4>>2]=((e|0)<0)<<31>>31;l=0;break d;}default:{l=0;break d;}}case 112:{m=120;l=l>>>0>8?l:8;n=t|8;w=67;break;}case 88:case 120:{n=t;w=67;break;}case 111:{q=I;q=Ap(c[q>>2]|0,c[q+4>>2]|0,y)|0;n=z-q|0;o=0;p=22975;l=(t&8|0)==0|(l|0)>(n|0)?l:n+1|0;n=t;w=73;break;}case 105:case 100:{n=I;m=c[n>>2]|0;n=c[n+4>>2]|0;if((n|0)<0){m=nC(0,0,m|0,n|0)|0;n=G()|0;o=I;c[o>>2]=m;c[o+4>>2]=n;o=1;p=22975;w=72;break e;}else{o=(t&2049|0)!=0&1;p=(t&2048|0)==0?(t&1|0)==0?22975:22977:22976;w=72;break e;}}case 117:{n=I;o=0;p=22975;m=c[n>>2]|0;n=c[n+4>>2]|0;w=72;break;}case 99:{a[A>>0]=c[I>>2];r=A;o=0;p=22975;q=1;m=n;l=z;break;}case 115:{s=c[I>>2]|0;s=(s|0)==0?22985:s;t=qp(s,0,l)|0;K=(t|0)==0;r=s;o=0;p=22975;q=K?l:t-s|0;m=n;l=K?s+l|0:t;break;}case 67:{c[C>>2]=c[I>>2];c[B>>2]=0;c[I>>2]=C;p=-1;w=79;break;}case 83:{if(!l){Cp(d,32,u,0,t);l=0;w=89;}else{p=l;w=79;}break;}case 65:case 71:case 70:case 69:case 97:case 103:case 102:case 101:{l=Zb[j&1](d,+g[I>>3],u,l,t,m)|0;break d;}default:{o=0;p=22975;q=l;m=t;l=z;}}}while(0);f:do{if((w|0)==67){q=I;q=zp(c[q>>2]|0,c[q+4>>2]|0,y,m&32)|0;p=I;p=(n&8|0)==0|(c[p>>2]|0)==0&(c[p+4>>2]|0)==0;o=p?0:2;p=p?22975:22975+(m>>>4)|0;w=73;}else if((w|0)==72){q=Bp(m,n,y)|0;n=t;w=73;}else if((w|0)==79){w=0;o=c[I>>2]|0;l=0;while(1){m=c[o>>2]|0;if(!m)break;m=Dp(D,m)|0;n=(m|0)<0;if(n|m>>>0>(p-l|0)>>>0){w=83;break;}l=m+l|0;if(p>>>0>l>>>0)o=o+4|0;else break;}if((w|0)==83){w=0;if(n){e=-1;break a;}}Cp(d,32,u,l,t);if(!l){l=0;w=89;}else{n=c[I>>2]|0;o=0;while(1){m=c[n>>2]|0;if(!m){w=89;break f;}m=Dp(D,m)|0;o=m+o|0;if((o|0)>(l|0)){w=89;break f;}wp(d,D,m);if(o>>>0>=l>>>0){w=89;break;}else n=n+4|0;}}}}while(0);if((w|0)==73){w=0;m=I;m=(c[m>>2]|0)!=0|(c[m+4>>2]|0)!=0;K=(l|0)!=0|m;m=z-q+((m^1)&1)|0;r=K?q:y;q=K?(l|0)>(m|0)?l:m:0;m=(l|0)>-1?n&-65537:n;l=z;}else if((w|0)==89){w=0;Cp(d,32,u,l,t^8192);l=(u|0)>(l|0)?u:l;break;}t=l-r|0;s=(q|0)<(t|0)?t:q;K=s+o|0;l=(u|0)<(K|0)?K:u;Cp(d,32,l,K,m);wp(d,p,o);Cp(d,48,l,K,m^65536);Cp(d,48,s,t,0);wp(d,r,t);Cp(d,32,l,K,m^8192);}}while(0);n=v;}g:do{if((w|0)==92)if(!d)if(!n)e=0;else{e=1;while(1){l=c[i+(e<<2)>>2]|0;if(!l)break;yp(h+(e<<3)|0,l,f,k);e=e+1|0;if(e>>>0>=10){e=1;break g;}}while(1){if(c[i+(e<<2)>>2]|0){e=-1;break g;}e=e+1|0;if(e>>>0>=10){e=1;break;}}}}while(0);Pb=J;return e|0;}function wp(a,b,d){a=a|0;b=b|0;d=d|0;if(!(c[a>>2]&32))Qo(b,d,a)|0;return;}function xp(b){b=b|0;var d=0,e=0;if(!(zo(a[c[b>>2]>>0]|0)|0))d=0;else{d=0;do{e=c[b>>2]|0;d=(d*10|0)+-48+(a[e>>0]|0)|0;e=e+1|0;c[b>>2]=e;}while((zo(a[e>>0]|0)|0)!=0);}return d|0;}function yp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0;a:do{if(b>>>0<=20)do{switch(b|0){case 9:{b=(c[d>>2]|0)+(4-1)&~(4-1);e=c[b>>2]|0;c[d>>2]=b+4;c[a>>2]=e;break a;}case 10:{e=(c[d>>2]|0)+(4-1)&~(4-1);b=c[e>>2]|0;c[d>>2]=e+4;e=a;c[e>>2]=b;c[e+4>>2]=((b|0)<0)<<31>>31;break a;}case 11:{e=(c[d>>2]|0)+(4-1)&~(4-1);b=c[e>>2]|0;c[d>>2]=e+4;e=a;c[e>>2]=b;c[e+4>>2]=0;break a;}case 12:{e=(c[d>>2]|0)+(8-1)&~(8-1);b=e;f=c[b>>2]|0;b=c[b+4>>2]|0;c[d>>2]=e+8;e=a;c[e>>2]=f;c[e+4>>2]=b;break a;}case 13:{f=(c[d>>2]|0)+(4-1)&~(4-1);e=c[f>>2]|0;c[d>>2]=f+4;e=(e&65535)<<16>>16;f=a;c[f>>2]=e;c[f+4>>2]=((e|0)<0)<<31>>31;break a;}case 14:{f=(c[d>>2]|0)+(4-1)&~(4-1);e=c[f>>2]|0;c[d>>2]=f+4;f=a;c[f>>2]=e&65535;c[f+4>>2]=0;break a;}case 15:{f=(c[d>>2]|0)+(4-1)&~(4-1);e=c[f>>2]|0;c[d>>2]=f+4;e=(e&255)<<24>>24;f=a;c[f>>2]=e;c[f+4>>2]=((e|0)<0)<<31>>31;break a;}case 16:{f=(c[d>>2]|0)+(4-1)&~(4-1);e=c[f>>2]|0;c[d>>2]=f+4;f=a;c[f>>2]=e&255;c[f+4>>2]=0;break a;}case 17:{f=(c[d>>2]|0)+(8-1)&~(8-1);h=+g[f>>3];c[d>>2]=f+8;g[a>>3]=h;break a;}case 18:{nc[e&63](a,d);break a;}default:break a;}}while(0);}while(0);return;}function zp(b,c,e,f){b=b|0;c=c|0;e=e|0;f=f|0;if(!((b|0)==0&(c|0)==0))do{e=e+-1|0;a[e>>0]=d[6144+(b&15)>>0]|0|f;b=rC(b|0,c|0,4)|0;c=G()|0;}while(!((b|0)==0&(c|0)==0));return e|0;}function Ap(b,c,d){b=b|0;c=c|0;d=d|0;if(!((b|0)==0&(c|0)==0))do{d=d+-1|0;a[d>>0]=b&7|48;b=rC(b|0,c|0,3)|0;c=G()|0;}while(!((b|0)==0&(c|0)==0));return d|0;}function Bp(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;if(c>>>0>0|(c|0)==0&b>>>0>4294967295){do{e=b;b=qC(b|0,c|0,10,0)|0;f=c;c=G()|0;g=lC(b|0,c|0,10,0)|0;g=nC(e|0,f|0,g|0,G()|0)|0;G()|0;d=d+-1|0;a[d>>0]=g&255|48;}while(f>>>0>9|(f|0)==9&e>>>0>4294967295);c=b;}else c=b;if(c)do{g=c;c=(c>>>0)/10|0;d=d+-1|0;a[d>>0]=g-(c*10|0)|48;}while(g>>>0>=10);return d|0;}function Cp(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;g=Pb;Pb=Pb+256|0;f=g;if((c|0)>(d|0)&(e&73728|0)==0){e=c-d|0;yC(f|0,b<<24>>24|0,(e>>>0<256?e:256)|0)|0;if(e>>>0>255){b=c-d|0;do{wp(a,f,256);e=e+-256|0;}while(e>>>0>255);e=b&255;}wp(a,f,e);}Pb=g;return;}function Dp(a,b){a=a|0;b=b|0;if(!a)a=0;else a=Ep(a,b,0)|0;return a|0;}function Ep(b,d,e){b=b|0;d=d|0;e=e|0;do{if(b){if(d>>>0<128){a[b>>0]=d;b=1;break;}if(!(c[c[(Fp()|0)+188>>2]>>2]|0))if((d&-128|0)==57216){a[b>>0]=d;b=1;break;}else{c[(wo()|0)>>2]=84;b=-1;break;}if(d>>>0<2048){a[b>>0]=d>>>6|192;a[b+1>>0]=d&63|128;b=2;break;}if(d>>>0<55296|(d&-8192|0)==57344){a[b>>0]=d>>>12|224;a[b+1>>0]=d>>>6&63|128;a[b+2>>0]=d&63|128;b=3;break;}if((d+-65536|0)>>>0<1048576){a[b>>0]=d>>>18|240;a[b+1>>0]=d>>>12&63|128;a[b+2>>0]=d>>>6&63|128;a[b+3>>0]=d&63|128;b=4;break;}else{c[(wo()|0)>>2]=84;b=-1;break;}}else b=1;}while(0);return b|0;}function Fp(){return Do()|0;}function Gp(a){a=+a;var b=0;g[h>>3]=a;b=c[h>>2]|0;F(c[h+4>>2]|0);return b|0;}function Hp(a,b){a=+a;b=b|0;var d=0,e=0,f=0;g[h>>3]=a;d=c[h>>2]|0;e=c[h+4>>2]|0;f=rC(d|0,e|0,52)|0;G()|0;switch(f&2047){case 0:{if(a!=0.0){a=+Hp(a*18446744073709551616.0,b);d=(c[b>>2]|0)+-64|0;}else d=0;c[b>>2]=d;break;}case 2047:break;default:{c[b>>2]=(f&2047)+-1022;c[h>>2]=d;c[h+4>>2]=e&-2146435073|1071644672;a=+g[h>>3];}}return+a;}function Ip(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0;a:do{if(!d)b=0;else{while(1){e=a[b>>0]|0;f=a[c>>0]|0;if(e<<24>>24!=f<<24>>24)break;d=d+-1|0;if(!d){b=0;break a;}else{b=b+1|0;c=c+1|0;}}b=(e&255)-(f&255)|0;}}while(0);return b|0;}function Jp(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=Pb;Pb=Pb+16|0;g=f;c[g>>2]=e;e=Kp(a,b,d,g)|0;Pb=f;return e|0;}function Kp(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;j=Pb;Pb=Pb+160|0;g=j+144|0;i=j;wC(i|0,9016,144)|0;if((d+-1|0)>>>0>2147483646){if(!d){b=g;d=1;h=4;}else{c[(wo()|0)>>2]=75;d=-1;}}else h=4;if((h|0)==4){h=-2-b|0;h=d>>>0>h>>>0?h:d;c[i+48>>2]=h;g=i+20|0;c[g>>2]=b;c[i+44>>2]=b;d=b+h|0;b=i+16|0;c[b>>2]=d;c[i+28>>2]=d;d=rp(i,e,f)|0;if(h){i=c[g>>2]|0;a[i+(((i|0)==(c[b>>2]|0))<<31>>31)>>0]=0;}}Pb=j;return d|0;}function Lp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=a+20|0;f=c[e>>2]|0;a=(c[a+16>>2]|0)-f|0;a=a>>>0>d>>>0?d:a;wC(f|0,b|0,a|0)|0;c[e>>2]=(c[e>>2]|0)+a;return d|0;}function Mp(a){a=a|0;var b=0,c=0;b=(Jo(a)|0)+1|0;c=Bq(b)|0;if(!c)a=0;else a=wC(c|0,a|0,b|0)|0;return a|0;}function Np(a){a=a|0;if(Op(a)|0)Cq(a);return;}function Op(a){a=a|0;return(a|0)!=11604&((a|0)!=0&(a|0)!=29748)&1|0;}function Pp(a,b){a=a|0;b=b|0;return zo(a)|0;}function Qp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=Pb;Pb=Pb+32|0;i=j;a:do{if(!(Op(d)|0)){h=(d|0)!=0;f=0;g=0;do{e=1<<g&a;if(h&(e|0)==0)e=c[d+(g<<2)>>2]|0;else e=Rp(g,(e|0)==0?30825:b)|0;f=f+((e|0)!=0&1)|0;c[i+(g<<2)>>2]=e;g=g+1|0;}while((g|0)!=6);switch(f&2147483647|0){case 0:{d=29748;break a;}case 1:{if((c[i>>2]|0)==11576){d=11604;break a;}break;}default:{}}}else{e=0;do{if(1<<e&a|0)c[d+(e<<2)>>2]=Rp(e,b)|0;e=e+1|0;}while((e|0)!=6);}}while(0);Pb=j;return d|0;}function Rp(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=Pb;Pb=Pb+272|0;m=o;n=o+256|0;do{if(!(a[d>>0]|0)){d=Ma(23029)|0;if(d|0?a[d>>0]|0:0)break;d=Ma(6160+(b*12|0)|0)|0;if(d|0?a[d>>0]|0:0)break;d=Ma(23036)|0;if(d|0?a[d>>0]|0:0)break;d=23041;}}while(0);e=0;a:while(1){switch(a[d+e>>0]|0){case 47:case 0:break a;default:{}}e=e+1|0;if(e>>>0>=15){e=15;break;}}f=a[d>>0]|0;if(f<<24>>24!=46?(a[d+e>>0]|0)==0:0){if(f<<24>>24==67)l=15;else{k=d;l=16;}}else{d=23041;l=15;}if((l|0)==15)if(!(a[d+1>>0]|0))l=18;else{k=d;l=16;}b:do{if((l|0)==16)if((Go(k,23041)|0)!=0?(Go(k,23049)|0)!=0:0){d=c[7461]|0;if(d|0)do{if(!(Go(k,d+8|0)|0))break b;d=c[d+24>>2]|0;}while((d|0)!=0);ga(29848);d=c[7461]|0;c:do{if(d|0){while(1){if(!(Go(k,d+8|0)|0))break;d=c[d+24>>2]|0;if(!d)break c;}oa(29848);break b;}}while(0);d:do{if(((c[7445]|0)==0?(g=Ma(23055)|0,(g|0)!=0):0)?(a[g>>0]|0)!=0:0){i=254-e|0;j=e+1|0;f=g;while(1){h=Ro(f,58)|0;d=a[h>>0]|0;g=h-f+((d<<24>>24!=0)<<31>>31)|0;if(g>>>0<i>>>0){wC(m|0,f|0,g|0)|0;f=m+g|0;a[f>>0]=47;wC(f+1|0,k|0,e|0)|0;a[m+(j+g)>>0]=0;f=ha(m|0,n|0)|0;if(f|0)break;d=a[h>>0]|0;}f=h+(d<<24>>24!=0&1)|0;if(!(a[f>>0]|0)){l=41;break d;}}d=Bq(28)|0;if(!d){Sp(f,c[n>>2]|0)|0;l=41;break;}else{c[d>>2]=f;c[d+4>>2]=c[n>>2];n=d+8|0;wC(n|0,k|0,e|0)|0;a[n+e>>0]=0;c[d+24>>2]=c[7461];c[7461]=d;break;}}else l=41;}while(0);if((l|0)==41){d=Bq(28)|0;if(d){c[d>>2]=c[2894];c[d+4>>2]=c[2895];n=d+8|0;wC(n|0,k|0,e|0)|0;a[n+e>>0]=0;c[d+24>>2]=c[7461];c[7461]=d;}}oa(29848);d=(b|0)==0&(d|0)==0?11576:d;}else{d=k;l=18;}}while(0);do{if((l|0)==18){if((b|0)==0?(a[d+1>>0]|0)==46:0){d=11576;break;}d=0;}}while(0);Pb=o;return d|0;}function Sp(a,b){a=a|0;b=b|0;var d=0,e=0;d=Pb;Pb=Pb+16|0;e=d;c[e>>2]=a;c[e+4>>2]=b;b=vo(na(91,e|0)|0)|0;Pb=d;return b|0;}function Tp(){return;}function Up(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;j=Pb;Pb=Pb+144|0;h=j;c[h>>2]=0;i=h+4|0;c[i>>2]=a;c[h+44>>2]=a;g=h+8|0;c[g>>2]=(a|0)<0?-1:a+2147483647|0;c[h+76>>2]=-1;Wo(h,0,0);d=ap(h,d,1,e,f)|0;e=G()|0;if(b|0)c[b>>2]=a+((c[i>>2]|0)+(c[h+120>>2]|0)-(c[g>>2]|0));F(e|0);Pb=j;return d|0;}function Vp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return d|0;}function Wp(a){a=a|0;return 0;}function Xp(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if(d|0){e=a;while(1){d=d+-1|0;c[e>>2]=c[b>>2];if(!d)break;else{b=b+4|0;e=e+4|0;}}}return a|0;}function Yp(a,b){a=a|0;b=b|0;return Eo(a)|0;}function Zp(a,b){a=a|0;b=b|0;return-1|0;}function _p(a){a=a|0;var b=0,d=0;b=($p()|0)+188|0;d=c[b>>2]|0;if(a|0)c[b>>2]=(a|0)==(-1|0)?29812:a;return((d|0)==29812?-1:d)|0;}function $p(){return Do()|0;}function aq(a){a=+a;var b=0,d=0,e=0.0,f=0.0,i=0.0,j=0,k=0,l=0.0;g[h>>3]=a;d=c[h+4>>2]|0;b=d&2147483647;d=rC(c[h>>2]|0,d|0,63)|0;G()|0;do{if(b>>>0>1078159481){j=bq(a)|0;b=(G()|0)&2147483647;if(!(b>>>0>2146435072|(b|0)==2146435072&j>>>0>0))if(!d){if(a>709.782712893384)a=a*8988465674311579538646525.0e283;else k=11;}else a=-1.0;}else{if(b>>>0<=1071001154)if(b>>>0<1016070144)break;else{i=0.0;j=0;k=14;break;}if(b>>>0<1072734898){if(!d){b=1;e=a+-.6931471803691238;f=1.9082149292705877e-10;k=12;break;}else{b=-1;e=a+.6931471803691238;f=-1.9082149292705877e-10;k=12;break;}}else k=11;}}while(0);if((k|0)==11){b=~~(a*1.4426950408889634+((d|0)==0?.5:-.5));f=+(b|0);e=a-f*.6931471803691238;f=f*1.9082149292705877e-10;k=12;}if((k|0)==12){i=e-f;a=i;i=e-i-f;j=b;k=14;}a:do{if((k|0)==14){f=a*.5;e=a*f;l=e*(e*(e*(e*(4.008217827329362e-06-e*2.0109921818362437e-07)+-7.93650757867488e-05)+1.5873015872548146e-03)+-.03333333333333313)+1.0;f=3.0-f*l;f=e*((l-f)/(6.0-a*f));if(!j){a=a-(a*f-e);break;}f=a*(f-i)-i-e;switch(j|0){case-1:{a=(a-f)*.5+-.5;break a;}case 1:if(a<-.25){a=(f-(a+.5))*-2.0;break a;}else{a=(a-f)*2.0+1.0;break a;}default:{d=sC(j+1023|0,0,52)|0;k=G()|0;c[h>>2]=d;c[h+4>>2]=k;i=+g[h>>3];if(j>>>0>56){a=a-f+1.0;a=((j|0)==1024?a*2.0*8988465674311579538646525.0e283:a*i)+-1.0;break a;}b=sC(1023-j|0,0,52)|0;d=G()|0;if((j|0)<20){c[h>>2]=b;c[h+4>>2]=d;e=1.0-+g[h>>3];a=a-f;}else{c[h>>2]=b;c[h+4>>2]=d;e=a-(f+ +g[h>>3]);a=1.0;}a=(e+a)*i;break a;}}}}while(0);return+a;}function bq(a){a=+a;var b=0;g[h>>3]=a;b=c[h>>2]|0;F(c[h+4>>2]|0);return b|0;}function cq(a,b,c){a=a|0;b=b|0;c=c|0;c=Up(a,b,c,-1,-1)|0;F(G()|0);return c|0;}function dq(b,e,f,g){b=b|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=c[e>>2]|0;if((g|0)!=0?(i=c[g>>2]|0,(i|0)!=0):0){if(!b){j=h;g=f;l=26;}else{c[g>>2]=0;k=f;j=h;l=48;}}else l=5;a:do{if((l|0)==5){g=(b|0)!=0;if(c[c[(eq()|0)+188>>2]>>2]|0)if(g){g=f;l=33;break;}else{g=f;l=15;break;}if(!g){f=Jo(h)|0;l=63;break;}b:do{if(f){g=f;while(1){i=a[h>>0]|0;if(!(i<<24>>24))break;h=h+1|0;c[b>>2]=i<<24>>24&57343;g=g+-1|0;if(!g)break b;else b=b+4|0;}c[b>>2]=0;c[e>>2]=0;f=f-g|0;l=63;break a;}}while(0);c[e>>2]=h;l=63;}}while(0);c:while(1){d:do{if((l|0)==15){while(1){i=a[h>>0]|0;if(((i&255)+-1|0)>>>0<127?(h&3|0)==0:0){l=c[h>>2]|0;i=l&255;if(!((l+-16843009|l)&-2139062144)){do{h=h+4|0;g=g+-4|0;i=c[h>>2]|0;}while(!((i+-16843009|i)&-2139062144|0));i=i&255;}}i=i&255;if((i+-1|0)>>>0>=127)break;g=g+-1|0;h=h+1|0;}i=i+-194|0;if(i>>>0>50)l=57;else{i=c[1328+(i<<2)>>2]|0;j=h+1|0;l=26;continue c;}}else if((l|0)==26){l=(d[j>>0]|0)>>>3;if((l+-16|l+(i>>26))>>>0>7){h=j;l=56;}else{h=j+1|0;if(i&33554432){if((a[h>>0]&-64)<<24>>24!=-128){h=j;l=56;break;}h=j+2|0;if(i&524288){if((a[h>>0]&-64)<<24>>24!=-128){h=j;l=56;break;}h=j+3|0;}}g=g+-1|0;l=15;continue c;}}else if((l|0)==33){l=0;e:do{if(g){while(1){i=d[h>>0]|0;j=i+-1|0;if(j>>>0<127){if((h&3|0)==0&g>>>0>4){while(1){i=c[h>>2]|0;if((i+-16843009|i)&-2139062144|0){l=42;break;}c[b>>2]=i&255;c[b+4>>2]=d[h+1>>0];c[b+8>>2]=d[h+2>>0];j=h+4|0;i=b+16|0;c[b+12>>2]=d[h+3>>0];g=g+-4|0;if(g>>>0>4){b=i;h=j;}else{l=41;break;}}if((l|0)==41){b=i;h=j;i=a[j>>0]|0;}else if((l|0)==42)i=i&255;i=i&255;j=i+-1|0;l=44;}}else l=44;if((l|0)==44){l=0;if(j>>>0>=127)break;}h=h+1|0;c[b>>2]=i;g=g+-1|0;if(!g)break e;else b=b+4|0;}i=i+-194|0;if(i>>>0>50){l=57;break d;}i=c[1328+(i<<2)>>2]|0;k=g;j=h+1|0;l=48;continue c;}}while(0);c[e>>2]=h;l=63;continue c;}else if((l|0)==48){l=0;g=d[j>>0]|0;h=g>>>3;if((h+-16|h+(i>>26))>>>0>7){h=j;g=k;l=56;}else{h=j+1|0;g=g+-128|i<<6;do{if((g|0)<0){i=(d[h>>0]|0)+-128|0;if(i>>>0<=63){h=j+2|0;g=i|g<<6;if((g|0)>=0)break;i=(d[h>>0]|0)+-128|0;if(i>>>0<=63){h=j+3|0;g=i|g<<6;break;}}c[(wo()|0)>>2]=84;h=j+-1|0;break d;}}while(0);c[b>>2]=g;b=b+4|0;g=k+-1|0;l=33;continue c;}}else if((l|0)==63)return f|0;}while(0);if((l|0)==56){h=h+-1|0;if(!i)l=57;else{f=b;l=61;}}if((l|0)==57)if(!(a[h>>0]|0)){if(b|0){c[b>>2]=0;c[e>>2]=0;}f=f-g|0;l=63;continue;}else{f=b;l=61;}if((l|0)==61){c[(wo()|0)>>2]=84;if(!f){f=-1;l=63;continue;}}c[e>>2]=h;f=-1;l=63;}return 0;}function eq(){return Do()|0;}function fq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=cq(a,b,c)|0;F(G()|0);return d|0;}function gq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=hq(a,b,c)|0;F(G()|0);return d|0;}function hq(a,b,c){a=a|0;b=b|0;c=c|0;c=Up(a,b,c,0,-2147483648)|0;F(G()|0);return c|0;}function iq(a){a=+a;return+ +aq(a);}function jq(a){a=+a;var b=0,d=0,e=0;g[h>>3]=a;b=c[h>>2]|0;d=c[h+4>>2]|0;e=rC(b|0,d|0,52)|0;G()|0;switch(e&2047){case 0:{b=(b|0)==0&(d&2147483647|0)==0?2:3;break;}case 2047:{b=(b|0)==0&(d&1048575|0)==0&1;break;}default:b=4;}return b|0;}function kq(a){a=+a;var b=0.0,d=0,e=0.0,f=0,i=0,j=0.0,k=0.0,l=0.0,m=0.0;g[h>>3]=a;d=c[h+4>>2]|0;do{if((d|0)<0|d>>>0<1071284858){if(d>>>0<=3220176895){i=sC(d|0,0,1)|0;G()|0;if(i>>>0<2034237440)break;if(d>>>0<3218259653){e=0.0;b=0.0;f=11;break;}else{f=8;break;}}else{if(a==-1.0){a=-s;break;}a=(a-a)/0.0;break;}}else if(d>>>0<=2146435071)f=8;}while(0);if((f|0)==8){b=a+1.0;g[h>>3]=b;d=(c[h+4>>2]|0)+614242|0;if(d>>>0<1129316352)b=(d>>>0>1074790399?1.0-(b-a):a-(b+-1.0))/b;else b=0.0;c[h>>2]=c[h>>2];c[h+4>>2]=(d&1048575)+1072079006;e=+((d>>>20)+-1023|0);a=+g[h>>3]+-1.0;f=11;}if((f|0)==11){j=a*(a*.5);m=a/(a+2.0);l=m*m;k=l*l;a=e*.6931471803691238+(a+(b+e*1.9082149292705877e-10+m*(j+(k*(k*(k*.15313837699209373+.22222198432149784)+.3999999999940942)+l*(k*(k*(k*.14798198605116586+.1818357216161805)+.2857142874366239)+.6666666666666735)))-j));}return+a;}function lq(a){a=+a;return+ +kq(a);}function mq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;h=Pb;Pb=Pb+16|0;e=h;c[e>>2]=c[d>>2];e=Kp(0,0,b,e)|0;if((e|0)>=0?(f=e+1|0,g=Bq(f)|0,c[a>>2]=g,(g|0)!=0):0)a=Kp(g,f,b,d)|0;else a=-1;Pb=h;return a|0;}function nq(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;j=Pb;Pb=Pb+16|0;i=j;a:do{if(!b){e=c[d>>2]|0;f=c[e>>2]|0;if(!f)e=0;else{b=e;e=0;do{if(f>>>0>127){f=Ep(i,f,0)|0;if((f|0)==-1){e=-1;break a;}}else f=1;e=f+e|0;b=b+4|0;f=c[b>>2]|0;}while((f|0)!=0);}}else{b:do{if(e>>>0>3){f=e;g=c[d>>2]|0;while(1){h=c[g>>2]|0;if((h+-1|0)>>>0>126){if(!h)break;h=Ep(b,h,0)|0;if((h|0)==-1){e=-1;break a;}b=b+h|0;f=f-h|0;}else{a[b>>0]=h;b=b+1|0;f=f+-1|0;g=c[d>>2]|0;}g=g+4|0;c[d>>2]=g;if(f>>>0<=3)break b;}a[b>>0]=0;c[d>>2]=0;e=e-f|0;break a;}else f=e;}while(0);if(f){g=c[d>>2]|0;while(1){h=c[g>>2]|0;if((h+-1|0)>>>0>126){if(!h){g=20;break;}h=Ep(i,h,0)|0;if((h|0)==-1){e=-1;break a;}if(f>>>0<h>>>0){g=23;break;}Ep(b,c[g>>2]|0,0)|0;b=b+h|0;f=f-h|0;}else{a[b>>0]=h;b=b+1|0;f=f+-1|0;g=c[d>>2]|0;}g=g+4|0;c[d>>2]=g;if(!f)break a;}if((g|0)==20){a[b>>0]=0;c[d>>2]=0;e=e-f|0;break;}else if((g|0)==23){e=e-f|0;break;}}}}while(0);Pb=j;return e|0;}function oq(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;if((c[d+76>>2]|0)>=0?(No(d)|0)!=0:0){f=b&255;e=b&255;if((e|0)!=(a[d+75>>0]|0)?(i=d+20|0,j=c[i>>2]|0,j>>>0<(c[d+16>>2]|0)>>>0):0){c[i>>2]=j+1;a[j>>0]=f;}else e=Oo(d,b)|0;Mo(d);}else k=3;do{if((k|0)==3){f=b&255;e=b&255;if((e|0)!=(a[d+75>>0]|0)?(g=d+20|0,h=c[g>>2]|0,h>>>0<(c[d+16>>2]|0)>>>0):0){c[g>>2]=h+1;a[h>>0]=f;break;}e=Oo(d,b)|0;}}while(0);return e|0;}function pq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=Pb;Pb=Pb+1040|0;k=n;l=n+1024|0;j=c[b>>2]|0;c[l>>2]=j;m=(a|0)!=0;h=m?e:256;i=m?a:k;g=j;a:do{if((h|0)!=0&(j|0)!=0){e=0;j=i;while(1){a=d>>>2;i=a>>>0>=h>>>0;if(!(d>>>0>131|i)){i=j;break a;}a=i?h:a;d=d-a|0;a=dq(j,l,a,f)|0;if((a|0)==-1)break;i=(j|0)==(k|0);h=h-(i?0:a)|0;i=i?j:j+(a<<2)|0;e=a+e|0;g=c[l>>2]|0;if((h|0)!=0&(g|0)!=0)j=i;else break a;}e=-1;i=j;h=0;g=c[l>>2]|0;}else e=0;}while(0);b:do{if((g|0)!=0?(h|0)!=0&(d|0)!=0:0){while(1){a=_o(i,g,d,f)|0;if((a+2|0)>>>0<3)break;g=(c[l>>2]|0)+a|0;c[l>>2]=g;d=d-a|0;h=h+-1|0;e=e+1|0;if(!((h|0)!=0&(d|0)!=0))break b;else i=i+4|0;}switch(a|0){case-1:{e=a;break b;}case 0:{c[l>>2]=0;break b;}default:{c[f>>2]=0;break b;}}}}while(0);if(m)c[b>>2]=c[l>>2];Pb=n;return e|0;}function qq(a,b){a=a|0;b=b|0;return+ +rq(a,b,0);}function rq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0.0,g=0,h=0,i=0;g=Pb;Pb=Pb+144|0;e=g;yC(e|0,0,144)|0;i=e+4|0;c[i>>2]=a;h=e+8|0;c[h>>2]=-1;c[e+44>>2]=a;c[e+76>>2]=-1;Wo(e,0,0);f=+bp(e,d,1);e=e+120|0;d=(c[i>>2]|0)-(c[h>>2]|0)|0;d=mC(c[e>>2]|0,c[e+4>>2]|0,d|0,((d|0)<0)<<31>>31|0)|0;e=G()|0;if(b|0)c[b>>2]=(d|0)==0&(e|0)==0?a:a+d|0;Pb=g;return+f;}function sq(a,b){a=a|0;b=b|0;return+ +rq(a,b,1);}function tq(a,b){a=a|0;b=b|0;return+ +rq(a,b,2);}function uq(a,b,c){a=a|0;b=b|0;c=c|0;return+ +qq(a,b);}function vq(a,b,c){a=a|0;b=b|0;c=c|0;return+ +sq(a,b);}function wq(a,b,c){a=a|0;b=b|0;c=c|0;return+ +tq(a,b);}function xq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if(d|0){e=a;while(1){d=d+-1|0;c[e>>2]=b;if(!d)break;else e=e+4|0;}}return a|0;}function yq(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;if(a-b>>2>>>0>=d>>>0){if(d|0){e=a;while(1){d=d+-1|0;c[e>>2]=c[b>>2];if(!d)break;else{b=b+4|0;e=e+4|0;}}}}else do{d=d+-1|0;c[a+(d<<2)>>2]=c[b+(d<<2)>>2];}while((d|0)!=0);return a|0;}function zq(a,b,c){a=a|0;b=b|0;c=c|0;return _o(0,a,b,(c|0)==0?29856:c)|0;}function Aq(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;l=Pb;Pb=Pb+272|0;i=l;j=l+256|0;f=c[b>>2]|0;c[j>>2]=f;k=(a|0)!=0;g=k?e:256;h=k?a:i;e=f;a:do{if((g|0)!=0&(f|0)!=0){f=0;a=e;while(1){e=d>>>0>=g>>>0;if(!(e|d>>>0>32)){e=a;break a;}e=e?g:d;d=d-e|0;e=nq(h,j,e,0)|0;if((e|0)==-1)break;a=(h|0)==(i|0);g=g-(a?0:e)|0;h=a?h:h+e|0;f=e+f|0;e=c[j>>2]|0;if((g|0)!=0&(e|0)!=0)a=e;else break a;}f=-1;g=0;e=c[j>>2]|0;}else f=0;}while(0);b:do{if((e|0)!=0?(g|0)!=0&(d|0)!=0:0){while(1){a=Ep(h,c[e>>2]|0,0)|0;if((a+1|0)>>>0<2)break;e=(c[j>>2]|0)+4|0;c[j>>2]=e;d=d+-1|0;g=g-a|0;f=a+f|0;if(!((g|0)!=0&(d|0)!=0))break b;else h=h+a|0;}if(!a)c[j>>2]=0;else f=-1;}}while(0);if(k)c[b>>2]=c[j>>2];Pb=l;return f|0;}function Bq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;w=Pb;Pb=Pb+16|0;n=w;do{if(a>>>0<245){k=a>>>0<11?16:a+11&-8;a=k>>>3;m=c[7465]|0;d=m>>>a;if(d&3|0){b=(d&1^1)+a|0;a=29900+(b<<1<<2)|0;d=a+8|0;e=c[d>>2]|0;f=e+8|0;g=c[f>>2]|0;if((g|0)==(a|0))c[7465]=m&~(1<<b);else{c[g+12>>2]=a;c[d>>2]=g;}v=b<<3;c[e+4>>2]=v|3;v=e+v+4|0;c[v>>2]=c[v>>2]|1;v=f;Pb=w;return v|0;}l=c[7467]|0;if(k>>>0>l>>>0){if(d|0){b=2<<a;b=d<<a&(b|0-b);b=(b&0-b)+-1|0;i=b>>>12&16;b=b>>>i;d=b>>>5&8;b=b>>>d;g=b>>>2&4;b=b>>>g;a=b>>>1&2;b=b>>>a;e=b>>>1&1;e=(d|i|g|a|e)+(b>>>e)|0;b=29900+(e<<1<<2)|0;a=b+8|0;g=c[a>>2]|0;i=g+8|0;d=c[i>>2]|0;if((d|0)==(b|0)){a=m&~(1<<e);c[7465]=a;}else{c[d+12>>2]=b;c[a>>2]=d;a=m;}v=e<<3;h=v-k|0;c[g+4>>2]=k|3;f=g+k|0;c[f+4>>2]=h|1;c[g+v>>2]=h;if(l|0){e=c[7470]|0;b=l>>>3;d=29900+(b<<1<<2)|0;b=1<<b;if(!(a&b)){c[7465]=a|b;b=d;a=d+8|0;}else{a=d+8|0;b=c[a>>2]|0;}c[a>>2]=e;c[b+12>>2]=e;c[e+8>>2]=b;c[e+12>>2]=d;}c[7467]=h;c[7470]=f;v=i;Pb=w;return v|0;}g=c[7466]|0;if(g){d=(g&0-g)+-1|0;f=d>>>12&16;d=d>>>f;e=d>>>5&8;d=d>>>e;h=d>>>2&4;d=d>>>h;i=d>>>1&2;d=d>>>i;j=d>>>1&1;j=c[30164+((e|f|h|i|j)+(d>>>j)<<2)>>2]|0;d=j;i=j;j=(c[j+4>>2]&-8)-k|0;while(1){a=c[d+16>>2]|0;if(!a){a=c[d+20>>2]|0;if(!a)break;}h=(c[a+4>>2]&-8)-k|0;f=h>>>0<j>>>0;d=a;i=f?a:i;j=f?h:j;}h=i+k|0;if(h>>>0>i>>>0){f=c[i+24>>2]|0;b=c[i+12>>2]|0;do{if((b|0)==(i|0)){a=i+20|0;b=c[a>>2]|0;if(!b){a=i+16|0;b=c[a>>2]|0;if(!b){d=0;break;}}while(1){e=b+20|0;d=c[e>>2]|0;if(!d){e=b+16|0;d=c[e>>2]|0;if(!d)break;else{b=d;a=e;}}else{b=d;a=e;}}c[a>>2]=0;d=b;}else{d=c[i+8>>2]|0;c[d+12>>2]=b;c[b+8>>2]=d;d=b;}}while(0);do{if(f|0){b=c[i+28>>2]|0;a=30164+(b<<2)|0;if((i|0)==(c[a>>2]|0)){c[a>>2]=d;if(!d){c[7466]=g&~(1<<b);break;}}else{v=f+16|0;c[((c[v>>2]|0)==(i|0)?v:f+20|0)>>2]=d;if(!d)break;}c[d+24>>2]=f;b=c[i+16>>2]|0;if(b|0){c[d+16>>2]=b;c[b+24>>2]=d;}b=c[i+20>>2]|0;if(b|0){c[d+20>>2]=b;c[b+24>>2]=d;}}}while(0);if(j>>>0<16){v=j+k|0;c[i+4>>2]=v|3;v=i+v+4|0;c[v>>2]=c[v>>2]|1;}else{c[i+4>>2]=k|3;c[h+4>>2]=j|1;c[h+j>>2]=j;if(l|0){e=c[7470]|0;b=l>>>3;d=29900+(b<<1<<2)|0;b=1<<b;if(!(b&m)){c[7465]=b|m;b=d;a=d+8|0;}else{a=d+8|0;b=c[a>>2]|0;}c[a>>2]=e;c[b+12>>2]=e;c[e+8>>2]=b;c[e+12>>2]=d;}c[7467]=j;c[7470]=h;}v=i+8|0;Pb=w;return v|0;}else m=k;}else m=k;}else m=k;}else if(a>>>0<=4294967231){a=a+11|0;k=a&-8;e=c[7466]|0;if(e){f=0-k|0;a=a>>>8;if(a){if(k>>>0>16777215)j=31;else{m=(a+1048320|0)>>>16&8;q=a<<m;i=(q+520192|0)>>>16&4;q=q<<i;j=(q+245760|0)>>>16&2;j=14-(i|m|j)+(q<<j>>>15)|0;j=k>>>(j+7|0)&1|j<<1;}}else j=0;d=c[30164+(j<<2)>>2]|0;a:do{if(!d){d=0;a=0;q=61;}else{a=0;i=k<<((j|0)==31?0:25-(j>>>1)|0);g=0;while(1){h=(c[d+4>>2]&-8)-k|0;if(h>>>0<f>>>0)if(!h){a=d;f=0;q=65;break a;}else{a=d;f=h;}q=c[d+20>>2]|0;d=c[d+16+(i>>>31<<2)>>2]|0;g=(q|0)==0|(q|0)==(d|0)?g:q;if(!d){d=g;q=61;break;}else i=i<<1;}}}while(0);if((q|0)==61){if((d|0)==0&(a|0)==0){a=2<<j;a=(a|0-a)&e;if(!a){m=k;break;}m=(a&0-a)+-1|0;h=m>>>12&16;m=m>>>h;g=m>>>5&8;m=m>>>g;i=m>>>2&4;m=m>>>i;j=m>>>1&2;m=m>>>j;d=m>>>1&1;a=0;d=c[30164+((g|h|i|j|d)+(m>>>d)<<2)>>2]|0;}if(!d){i=a;h=f;}else q=65;}if((q|0)==65){g=d;while(1){m=(c[g+4>>2]&-8)-k|0;d=m>>>0<f>>>0;f=d?m:f;a=d?g:a;d=c[g+16>>2]|0;if(!d)d=c[g+20>>2]|0;if(!d){i=a;h=f;break;}else g=d;}}if(((i|0)!=0?h>>>0<((c[7467]|0)-k|0)>>>0:0)?(l=i+k|0,l>>>0>i>>>0):0){g=c[i+24>>2]|0;b=c[i+12>>2]|0;do{if((b|0)==(i|0)){a=i+20|0;b=c[a>>2]|0;if(!b){a=i+16|0;b=c[a>>2]|0;if(!b){b=0;break;}}while(1){f=b+20|0;d=c[f>>2]|0;if(!d){f=b+16|0;d=c[f>>2]|0;if(!d)break;else{b=d;a=f;}}else{b=d;a=f;}}c[a>>2]=0;}else{v=c[i+8>>2]|0;c[v+12>>2]=b;c[b+8>>2]=v;}}while(0);do{if(g){a=c[i+28>>2]|0;d=30164+(a<<2)|0;if((i|0)==(c[d>>2]|0)){c[d>>2]=b;if(!b){e=e&~(1<<a);c[7466]=e;break;}}else{v=g+16|0;c[((c[v>>2]|0)==(i|0)?v:g+20|0)>>2]=b;if(!b)break;}c[b+24>>2]=g;a=c[i+16>>2]|0;if(a|0){c[b+16>>2]=a;c[a+24>>2]=b;}a=c[i+20>>2]|0;if(a){c[b+20>>2]=a;c[a+24>>2]=b;}}}while(0);b:do{if(h>>>0<16){v=h+k|0;c[i+4>>2]=v|3;v=i+v+4|0;c[v>>2]=c[v>>2]|1;}else{c[i+4>>2]=k|3;c[l+4>>2]=h|1;c[l+h>>2]=h;b=h>>>3;if(h>>>0<256){d=29900+(b<<1<<2)|0;a=c[7465]|0;b=1<<b;if(!(a&b)){c[7465]=a|b;b=d;a=d+8|0;}else{a=d+8|0;b=c[a>>2]|0;}c[a>>2]=l;c[b+12>>2]=l;c[l+8>>2]=b;c[l+12>>2]=d;break;}b=h>>>8;if(b){if(h>>>0>16777215)d=31;else{u=(b+1048320|0)>>>16&8;v=b<<u;t=(v+520192|0)>>>16&4;v=v<<t;d=(v+245760|0)>>>16&2;d=14-(t|u|d)+(v<<d>>>15)|0;d=h>>>(d+7|0)&1|d<<1;}}else d=0;b=30164+(d<<2)|0;c[l+28>>2]=d;a=l+16|0;c[a+4>>2]=0;c[a>>2]=0;a=1<<d;if(!(e&a)){c[7466]=e|a;c[b>>2]=l;c[l+24>>2]=b;c[l+12>>2]=l;c[l+8>>2]=l;break;}b=c[b>>2]|0;c:do{if((c[b+4>>2]&-8|0)!=(h|0)){e=h<<((d|0)==31?0:25-(d>>>1)|0);while(1){d=b+16+(e>>>31<<2)|0;a=c[d>>2]|0;if(!a)break;if((c[a+4>>2]&-8|0)==(h|0)){b=a;break c;}else{e=e<<1;b=a;}}c[d>>2]=l;c[l+24>>2]=b;c[l+12>>2]=l;c[l+8>>2]=l;break b;}}while(0);u=b+8|0;v=c[u>>2]|0;c[v+12>>2]=l;c[u>>2]=l;c[l+8>>2]=v;c[l+12>>2]=b;c[l+24>>2]=0;}}while(0);v=i+8|0;Pb=w;return v|0;}else m=k;}else m=k;}else m=-1;}while(0);d=c[7467]|0;if(d>>>0>=m>>>0){b=d-m|0;a=c[7470]|0;if(b>>>0>15){v=a+m|0;c[7470]=v;c[7467]=b;c[v+4>>2]=b|1;c[a+d>>2]=b;c[a+4>>2]=m|3;}else{c[7467]=0;c[7470]=0;c[a+4>>2]=d|3;v=a+d+4|0;c[v>>2]=c[v>>2]|1;}v=a+8|0;Pb=w;return v|0;}h=c[7468]|0;if(h>>>0>m>>>0){t=h-m|0;c[7468]=t;v=c[7471]|0;u=v+m|0;c[7471]=u;c[u+4>>2]=t|1;c[v+4>>2]=m|3;v=v+8|0;Pb=w;return v|0;}if(!(c[7583]|0)){c[7585]=4096;c[7584]=4096;c[7586]=-1;c[7587]=-1;c[7588]=0;c[7576]=0;c[7583]=n&-16^1431655768;a=4096;}else a=c[7585]|0;i=m+48|0;j=m+47|0;g=a+j|0;f=0-a|0;k=g&f;if(k>>>0<=m>>>0){v=0;Pb=w;return v|0;}a=c[7575]|0;if(a|0?(l=c[7573]|0,n=l+k|0,n>>>0<=l>>>0|n>>>0>a>>>0):0){v=0;Pb=w;return v|0;}d:do{if(!(c[7576]&4)){d=c[7471]|0;e:do{if(d){e=30308;while(1){n=c[e>>2]|0;if(n>>>0<=d>>>0?(n+(c[e+4>>2]|0)|0)>>>0>d>>>0:0)break;a=c[e+8>>2]|0;if(!a){q=128;break e;}else e=a;}b=g-h&f;if(b>>>0<2147483647){a=AC(b|0)|0;if((a|0)==((c[e>>2]|0)+(c[e+4>>2]|0)|0)){if((a|0)!=(-1|0)){h=b;g=a;q=145;break d;}}else{e=a;q=136;}}else b=0;}else q=128;}while(0);do{if((q|0)==128){d=AC(0)|0;if((d|0)!=(-1|0)?(b=d,o=c[7584]|0,p=o+-1|0,b=((p&b|0)==0?0:(p+b&0-o)-b|0)+k|0,o=c[7573]|0,p=b+o|0,b>>>0>m>>>0&b>>>0<2147483647):0){n=c[7575]|0;if(n|0?p>>>0<=o>>>0|p>>>0>n>>>0:0){b=0;break;}a=AC(b|0)|0;if((a|0)==(d|0)){h=b;g=d;q=145;break d;}else{e=a;q=136;}}else b=0;}}while(0);do{if((q|0)==136){d=0-b|0;if(!(i>>>0>b>>>0&(b>>>0<2147483647&(e|0)!=(-1|0))))if((e|0)==(-1|0)){b=0;break;}else{h=b;g=e;q=145;break d;}a=c[7585]|0;a=j-b+a&0-a;if(a>>>0>=2147483647){h=b;g=e;q=145;break d;}if((AC(a|0)|0)==(-1|0)){AC(d|0)|0;b=0;break;}else{h=a+b|0;g=e;q=145;break d;}}}while(0);c[7576]=c[7576]|4;q=143;}else{b=0;q=143;}}while(0);if(((q|0)==143?k>>>0<2147483647:0)?(t=AC(k|0)|0,p=AC(0)|0,r=p-t|0,s=r>>>0>(m+40|0)>>>0,!((t|0)==(-1|0)|s^1|t>>>0<p>>>0&((t|0)!=(-1|0)&(p|0)!=(-1|0))^1)):0){h=s?r:b;g=t;q=145;}if((q|0)==145){b=(c[7573]|0)+h|0;c[7573]=b;if(b>>>0>(c[7574]|0)>>>0)c[7574]=b;j=c[7471]|0;f:do{if(j){b=30308;while(1){a=c[b>>2]|0;d=c[b+4>>2]|0;if((g|0)==(a+d|0)){q=154;break;}e=c[b+8>>2]|0;if(!e)break;else b=e;}if(((q|0)==154?(u=b+4|0,(c[b+12>>2]&8|0)==0):0)?g>>>0>j>>>0&a>>>0<=j>>>0:0){c[u>>2]=d+h;v=(c[7468]|0)+h|0;t=j+8|0;t=(t&7|0)==0?0:0-t&7;u=j+t|0;t=v-t|0;c[7471]=u;c[7468]=t;c[u+4>>2]=t|1;c[j+v+4>>2]=40;c[7472]=c[7587];break;}if(g>>>0<(c[7469]|0)>>>0)c[7469]=g;d=g+h|0;b=30308;while(1){if((c[b>>2]|0)==(d|0)){q=162;break;}a=c[b+8>>2]|0;if(!a)break;else b=a;}if((q|0)==162?(c[b+12>>2]&8|0)==0:0){c[b>>2]=g;l=b+4|0;c[l>>2]=(c[l>>2]|0)+h;l=g+8|0;l=g+((l&7|0)==0?0:0-l&7)|0;b=d+8|0;b=d+((b&7|0)==0?0:0-b&7)|0;k=l+m|0;i=b-l-m|0;c[l+4>>2]=m|3;g:do{if((j|0)==(b|0)){v=(c[7468]|0)+i|0;c[7468]=v;c[7471]=k;c[k+4>>2]=v|1;}else{if((c[7470]|0)==(b|0)){v=(c[7467]|0)+i|0;c[7467]=v;c[7470]=k;c[k+4>>2]=v|1;c[k+v>>2]=v;break;}a=c[b+4>>2]|0;if((a&3|0)==1){h=a&-8;e=a>>>3;h:do{if(a>>>0<256){a=c[b+8>>2]|0;d=c[b+12>>2]|0;if((d|0)==(a|0)){c[7465]=c[7465]&~(1<<e);break;}else{c[a+12>>2]=d;c[d+8>>2]=a;break;}}else{g=c[b+24>>2]|0;a=c[b+12>>2]|0;do{if((a|0)==(b|0)){d=b+16|0;e=d+4|0;a=c[e>>2]|0;if(!a){a=c[d>>2]|0;if(!a){a=0;break;}}else d=e;while(1){f=a+20|0;e=c[f>>2]|0;if(!e){f=a+16|0;e=c[f>>2]|0;if(!e)break;else{a=e;d=f;}}else{a=e;d=f;}}c[d>>2]=0;}else{v=c[b+8>>2]|0;c[v+12>>2]=a;c[a+8>>2]=v;}}while(0);if(!g)break;d=c[b+28>>2]|0;e=30164+(d<<2)|0;do{if((c[e>>2]|0)!=(b|0)){v=g+16|0;c[((c[v>>2]|0)==(b|0)?v:g+20|0)>>2]=a;if(!a)break h;}else{c[e>>2]=a;if(a|0)break;c[7466]=c[7466]&~(1<<d);break h;}}while(0);c[a+24>>2]=g;d=b+16|0;e=c[d>>2]|0;if(e|0){c[a+16>>2]=e;c[e+24>>2]=a;}d=c[d+4>>2]|0;if(!d)break;c[a+20>>2]=d;c[d+24>>2]=a;}}while(0);b=b+h|0;f=h+i|0;}else f=i;b=b+4|0;c[b>>2]=c[b>>2]&-2;c[k+4>>2]=f|1;c[k+f>>2]=f;b=f>>>3;if(f>>>0<256){d=29900+(b<<1<<2)|0;a=c[7465]|0;b=1<<b;if(!(a&b)){c[7465]=a|b;b=d;a=d+8|0;}else{a=d+8|0;b=c[a>>2]|0;}c[a>>2]=k;c[b+12>>2]=k;c[k+8>>2]=b;c[k+12>>2]=d;break;}b=f>>>8;do{if(!b)e=0;else{if(f>>>0>16777215){e=31;break;}u=(b+1048320|0)>>>16&8;v=b<<u;t=(v+520192|0)>>>16&4;v=v<<t;e=(v+245760|0)>>>16&2;e=14-(t|u|e)+(v<<e>>>15)|0;e=f>>>(e+7|0)&1|e<<1;}}while(0);b=30164+(e<<2)|0;c[k+28>>2]=e;a=k+16|0;c[a+4>>2]=0;c[a>>2]=0;a=c[7466]|0;d=1<<e;if(!(a&d)){c[7466]=a|d;c[b>>2]=k;c[k+24>>2]=b;c[k+12>>2]=k;c[k+8>>2]=k;break;}b=c[b>>2]|0;i:do{if((c[b+4>>2]&-8|0)!=(f|0)){e=f<<((e|0)==31?0:25-(e>>>1)|0);while(1){d=b+16+(e>>>31<<2)|0;a=c[d>>2]|0;if(!a)break;if((c[a+4>>2]&-8|0)==(f|0)){b=a;break i;}else{e=e<<1;b=a;}}c[d>>2]=k;c[k+24>>2]=b;c[k+12>>2]=k;c[k+8>>2]=k;break g;}}while(0);u=b+8|0;v=c[u>>2]|0;c[v+12>>2]=k;c[u>>2]=k;c[k+8>>2]=v;c[k+12>>2]=b;c[k+24>>2]=0;}}while(0);v=l+8|0;Pb=w;return v|0;}b=30308;while(1){a=c[b>>2]|0;if(a>>>0<=j>>>0?(v=a+(c[b+4>>2]|0)|0,v>>>0>j>>>0):0)break;b=c[b+8>>2]|0;}f=v+-47|0;a=f+8|0;a=f+((a&7|0)==0?0:0-a&7)|0;f=j+16|0;a=a>>>0<f>>>0?j:a;b=a+8|0;d=h+-40|0;t=g+8|0;t=(t&7|0)==0?0:0-t&7;u=g+t|0;t=d-t|0;c[7471]=u;c[7468]=t;c[u+4>>2]=t|1;c[g+d+4>>2]=40;c[7472]=c[7587];d=a+4|0;c[d>>2]=27;c[b>>2]=c[7577];c[b+4>>2]=c[7578];c[b+8>>2]=c[7579];c[b+12>>2]=c[7580];c[7577]=g;c[7578]=h;c[7580]=0;c[7579]=b;b=a+24|0;do{u=b;b=b+4|0;c[b>>2]=7;}while((u+8|0)>>>0<v>>>0);if((a|0)!=(j|0)){g=a-j|0;c[d>>2]=c[d>>2]&-2;c[j+4>>2]=g|1;c[a>>2]=g;b=g>>>3;if(g>>>0<256){d=29900+(b<<1<<2)|0;a=c[7465]|0;b=1<<b;if(!(a&b)){c[7465]=a|b;b=d;a=d+8|0;}else{a=d+8|0;b=c[a>>2]|0;}c[a>>2]=j;c[b+12>>2]=j;c[j+8>>2]=b;c[j+12>>2]=d;break;}b=g>>>8;if(b){if(g>>>0>16777215)e=31;else{u=(b+1048320|0)>>>16&8;v=b<<u;t=(v+520192|0)>>>16&4;v=v<<t;e=(v+245760|0)>>>16&2;e=14-(t|u|e)+(v<<e>>>15)|0;e=g>>>(e+7|0)&1|e<<1;}}else e=0;d=30164+(e<<2)|0;c[j+28>>2]=e;c[j+20>>2]=0;c[f>>2]=0;b=c[7466]|0;a=1<<e;if(!(b&a)){c[7466]=b|a;c[d>>2]=j;c[j+24>>2]=d;c[j+12>>2]=j;c[j+8>>2]=j;break;}b=c[d>>2]|0;j:do{if((c[b+4>>2]&-8|0)!=(g|0)){e=g<<((e|0)==31?0:25-(e>>>1)|0);while(1){d=b+16+(e>>>31<<2)|0;a=c[d>>2]|0;if(!a)break;if((c[a+4>>2]&-8|0)==(g|0)){b=a;break j;}else{e=e<<1;b=a;}}c[d>>2]=j;c[j+24>>2]=b;c[j+12>>2]=j;c[j+8>>2]=j;break f;}}while(0);u=b+8|0;v=c[u>>2]|0;c[v+12>>2]=j;c[u>>2]=j;c[j+8>>2]=v;c[j+12>>2]=b;c[j+24>>2]=0;}}else{v=c[7469]|0;if((v|0)==0|g>>>0<v>>>0)c[7469]=g;c[7577]=g;c[7578]=h;c[7580]=0;c[7474]=c[7583];c[7473]=-1;c[7478]=29900;c[7477]=29900;c[7480]=29908;c[7479]=29908;c[7482]=29916;c[7481]=29916;c[7484]=29924;c[7483]=29924;c[7486]=29932;c[7485]=29932;c[7488]=29940;c[7487]=29940;c[7490]=29948;c[7489]=29948;c[7492]=29956;c[7491]=29956;c[7494]=29964;c[7493]=29964;c[7496]=29972;c[7495]=29972;c[7498]=29980;c[7497]=29980;c[7500]=29988;c[7499]=29988;c[7502]=29996;c[7501]=29996;c[7504]=30004;c[7503]=30004;c[7506]=30012;c[7505]=30012;c[7508]=30020;c[7507]=30020;c[7510]=30028;c[7509]=30028;c[7512]=30036;c[7511]=30036;c[7514]=30044;c[7513]=30044;c[7516]=30052;c[7515]=30052;c[7518]=30060;c[7517]=30060;c[7520]=30068;c[7519]=30068;c[7522]=30076;c[7521]=30076;c[7524]=30084;c[7523]=30084;c[7526]=30092;c[7525]=30092;c[7528]=30100;c[7527]=30100;c[7530]=30108;c[7529]=30108;c[7532]=30116;c[7531]=30116;c[7534]=30124;c[7533]=30124;c[7536]=30132;c[7535]=30132;c[7538]=30140;c[7537]=30140;c[7540]=30148;c[7539]=30148;v=h+-40|0;t=g+8|0;t=(t&7|0)==0?0:0-t&7;u=g+t|0;t=v-t|0;c[7471]=u;c[7468]=t;c[u+4>>2]=t|1;c[g+v+4>>2]=40;c[7472]=c[7587];}}while(0);b=c[7468]|0;if(b>>>0>m>>>0){t=b-m|0;c[7468]=t;v=c[7471]|0;u=v+m|0;c[7471]=u;c[u+4>>2]=t|1;c[v+4>>2]=m|3;v=v+8|0;Pb=w;return v|0;}}c[(wo()|0)>>2]=12;v=0;Pb=w;return v|0;}function Cq(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;if(!a)return;d=a+-8|0;f=c[7469]|0;a=c[a+-4>>2]|0;b=a&-8;j=d+b|0;do{if(!(a&1)){e=c[d>>2]|0;if(!(a&3))return;h=d+(0-e)|0;g=e+b|0;if(h>>>0<f>>>0)return;if((c[7470]|0)==(h|0)){a=j+4|0;b=c[a>>2]|0;if((b&3|0)!=3){i=h;b=g;break;}c[7467]=g;c[a>>2]=b&-2;c[h+4>>2]=g|1;c[h+g>>2]=g;return;}d=e>>>3;if(e>>>0<256){a=c[h+8>>2]|0;b=c[h+12>>2]|0;if((b|0)==(a|0)){c[7465]=c[7465]&~(1<<d);i=h;b=g;break;}else{c[a+12>>2]=b;c[b+8>>2]=a;i=h;b=g;break;}}f=c[h+24>>2]|0;a=c[h+12>>2]|0;do{if((a|0)==(h|0)){b=h+16|0;d=b+4|0;a=c[d>>2]|0;if(!a){a=c[b>>2]|0;if(!a){a=0;break;}}else b=d;while(1){e=a+20|0;d=c[e>>2]|0;if(!d){e=a+16|0;d=c[e>>2]|0;if(!d)break;else{a=d;b=e;}}else{a=d;b=e;}}c[b>>2]=0;}else{i=c[h+8>>2]|0;c[i+12>>2]=a;c[a+8>>2]=i;}}while(0);if(f){b=c[h+28>>2]|0;d=30164+(b<<2)|0;if((c[d>>2]|0)==(h|0)){c[d>>2]=a;if(!a){c[7466]=c[7466]&~(1<<b);i=h;b=g;break;}}else{i=f+16|0;c[((c[i>>2]|0)==(h|0)?i:f+20|0)>>2]=a;if(!a){i=h;b=g;break;}}c[a+24>>2]=f;b=h+16|0;d=c[b>>2]|0;if(d|0){c[a+16>>2]=d;c[d+24>>2]=a;}b=c[b+4>>2]|0;if(b){c[a+20>>2]=b;c[b+24>>2]=a;i=h;b=g;}else{i=h;b=g;}}else{i=h;b=g;}}else{i=d;h=d;}}while(0);if(h>>>0>=j>>>0)return;a=j+4|0;e=c[a>>2]|0;if(!(e&1))return;if(!(e&2)){if((c[7471]|0)==(j|0)){j=(c[7468]|0)+b|0;c[7468]=j;c[7471]=i;c[i+4>>2]=j|1;if((i|0)!=(c[7470]|0))return;c[7470]=0;c[7467]=0;return;}if((c[7470]|0)==(j|0)){j=(c[7467]|0)+b|0;c[7467]=j;c[7470]=h;c[i+4>>2]=j|1;c[h+j>>2]=j;return;}f=(e&-8)+b|0;d=e>>>3;do{if(e>>>0<256){b=c[j+8>>2]|0;a=c[j+12>>2]|0;if((a|0)==(b|0)){c[7465]=c[7465]&~(1<<d);break;}else{c[b+12>>2]=a;c[a+8>>2]=b;break;}}else{g=c[j+24>>2]|0;a=c[j+12>>2]|0;do{if((a|0)==(j|0)){b=j+16|0;d=b+4|0;a=c[d>>2]|0;if(!a){a=c[b>>2]|0;if(!a){d=0;break;}}else b=d;while(1){e=a+20|0;d=c[e>>2]|0;if(!d){e=a+16|0;d=c[e>>2]|0;if(!d)break;else{a=d;b=e;}}else{a=d;b=e;}}c[b>>2]=0;d=a;}else{d=c[j+8>>2]|0;c[d+12>>2]=a;c[a+8>>2]=d;d=a;}}while(0);if(g|0){a=c[j+28>>2]|0;b=30164+(a<<2)|0;if((c[b>>2]|0)==(j|0)){c[b>>2]=d;if(!d){c[7466]=c[7466]&~(1<<a);break;}}else{e=g+16|0;c[((c[e>>2]|0)==(j|0)?e:g+20|0)>>2]=d;if(!d)break;}c[d+24>>2]=g;a=j+16|0;b=c[a>>2]|0;if(b|0){c[d+16>>2]=b;c[b+24>>2]=d;}a=c[a+4>>2]|0;if(a|0){c[d+20>>2]=a;c[a+24>>2]=d;}}}}while(0);c[i+4>>2]=f|1;c[h+f>>2]=f;if((i|0)==(c[7470]|0)){c[7467]=f;return;}}else{c[a>>2]=e&-2;c[i+4>>2]=b|1;c[h+b>>2]=b;f=b;}a=f>>>3;if(f>>>0<256){d=29900+(a<<1<<2)|0;b=c[7465]|0;a=1<<a;if(!(b&a)){c[7465]=b|a;a=d;b=d+8|0;}else{b=d+8|0;a=c[b>>2]|0;}c[b>>2]=i;c[a+12>>2]=i;c[i+8>>2]=a;c[i+12>>2]=d;return;}a=f>>>8;if(a){if(f>>>0>16777215)e=31;else{h=(a+1048320|0)>>>16&8;j=a<<h;g=(j+520192|0)>>>16&4;j=j<<g;e=(j+245760|0)>>>16&2;e=14-(g|h|e)+(j<<e>>>15)|0;e=f>>>(e+7|0)&1|e<<1;}}else e=0;a=30164+(e<<2)|0;c[i+28>>2]=e;c[i+20>>2]=0;c[i+16>>2]=0;b=c[7466]|0;d=1<<e;a:do{if(!(b&d)){c[7466]=b|d;c[a>>2]=i;c[i+24>>2]=a;c[i+12>>2]=i;c[i+8>>2]=i;}else{a=c[a>>2]|0;b:do{if((c[a+4>>2]&-8|0)!=(f|0)){e=f<<((e|0)==31?0:25-(e>>>1)|0);while(1){d=a+16+(e>>>31<<2)|0;b=c[d>>2]|0;if(!b)break;if((c[b+4>>2]&-8|0)==(f|0)){a=b;break b;}else{e=e<<1;a=b;}}c[d>>2]=i;c[i+24>>2]=a;c[i+12>>2]=i;c[i+8>>2]=i;break a;}}while(0);h=a+8|0;j=c[h>>2]|0;c[j+12>>2]=i;c[h>>2]=i;c[i+8>>2]=j;c[i+12>>2]=a;c[i+24>>2]=0;}}while(0);j=(c[7473]|0)+-1|0;c[7473]=j;if(j|0)return;a=30316;while(1){a=c[a>>2]|0;if(!a)break;else a=a+8|0;}c[7473]=-1;return;}function Dq(a,b){a=a|0;b=b|0;var d=0,e=0;if(!a){b=Bq(b)|0;return b|0;}if(b>>>0>4294967231){c[(wo()|0)>>2]=12;b=0;return b|0;}d=Eq(a+-8|0,b>>>0<11?16:b+11&-8)|0;if(d|0){b=d+8|0;return b|0;}d=Bq(b)|0;if(!d){b=0;return b|0;}e=c[a+-4>>2]|0;e=(e&-8)-((e&3|0)==0?8:4)|0;wC(d|0,a|0,(e>>>0<b>>>0?e:b)|0)|0;Cq(a);b=d;return b|0;}function Eq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=a+4|0;m=c[l>>2]|0;d=m&-8;i=a+d|0;if(!(m&3)){if(b>>>0<256){a=0;return a|0;}if(d>>>0>=(b+4|0)>>>0?(d-b|0)>>>0<=c[7585]<<1>>>0:0)return a|0;a=0;return a|0;}if(d>>>0>=b>>>0){d=d-b|0;if(d>>>0<=15)return a|0;k=a+b|0;c[l>>2]=m&1|b|2;c[k+4>>2]=d|3;m=i+4|0;c[m>>2]=c[m>>2]|1;Fq(k,d);return a|0;}if((c[7471]|0)==(i|0)){k=(c[7468]|0)+d|0;d=k-b|0;e=a+b|0;if(k>>>0<=b>>>0){a=0;return a|0;}c[l>>2]=m&1|b|2;c[e+4>>2]=d|1;c[7471]=e;c[7468]=d;return a|0;}if((c[7470]|0)==(i|0)){e=(c[7467]|0)+d|0;if(e>>>0<b>>>0){a=0;return a|0;}d=e-b|0;if(d>>>0>15){k=a+b|0;e=a+e|0;c[l>>2]=m&1|b|2;c[k+4>>2]=d|1;c[e>>2]=d;e=e+4|0;c[e>>2]=c[e>>2]&-2;e=k;}else{c[l>>2]=m&1|e|2;e=a+e+4|0;c[e>>2]=c[e>>2]|1;e=0;d=0;}c[7467]=d;c[7470]=e;return a|0;}e=c[i+4>>2]|0;if(e&2|0){a=0;return a|0;}j=(e&-8)+d|0;if(j>>>0<b>>>0){a=0;return a|0;}k=j-b|0;f=e>>>3;do{if(e>>>0<256){e=c[i+8>>2]|0;d=c[i+12>>2]|0;if((d|0)==(e|0)){c[7465]=c[7465]&~(1<<f);break;}else{c[e+12>>2]=d;c[d+8>>2]=e;break;}}else{h=c[i+24>>2]|0;d=c[i+12>>2]|0;do{if((d|0)==(i|0)){e=i+16|0;f=e+4|0;d=c[f>>2]|0;if(!d){d=c[e>>2]|0;if(!d){f=0;break;}}else e=f;while(1){g=d+20|0;f=c[g>>2]|0;if(!f){g=d+16|0;f=c[g>>2]|0;if(!f)break;else{d=f;e=g;}}else{d=f;e=g;}}c[e>>2]=0;f=d;}else{f=c[i+8>>2]|0;c[f+12>>2]=d;c[d+8>>2]=f;f=d;}}while(0);if(h|0){d=c[i+28>>2]|0;e=30164+(d<<2)|0;if((c[e>>2]|0)==(i|0)){c[e>>2]=f;if(!f){c[7466]=c[7466]&~(1<<d);break;}}else{g=h+16|0;c[((c[g>>2]|0)==(i|0)?g:h+20|0)>>2]=f;if(!f)break;}c[f+24>>2]=h;d=i+16|0;e=c[d>>2]|0;if(e|0){c[f+16>>2]=e;c[e+24>>2]=f;}d=c[d+4>>2]|0;if(d|0){c[f+20>>2]=d;c[d+24>>2]=f;}}}}while(0);if(k>>>0<16){c[l>>2]=m&1|j|2;m=a+j+4|0;c[m>>2]=c[m>>2]|1;return a|0;}else{i=a+b|0;c[l>>2]=m&1|b|2;c[i+4>>2]=k|3;m=a+j+4|0;c[m>>2]=c[m>>2]|1;Fq(i,k);return a|0;}return 0;}function Fq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0;i=a+b|0;d=c[a+4>>2]|0;do{if(!(d&1)){f=c[a>>2]|0;if(!(d&3))return;h=a+(0-f)|0;b=f+b|0;if((c[7470]|0)==(h|0)){a=i+4|0;d=c[a>>2]|0;if((d&3|0)!=3)break;c[7467]=b;c[a>>2]=d&-2;c[h+4>>2]=b|1;c[i>>2]=b;return;}e=f>>>3;if(f>>>0<256){a=c[h+8>>2]|0;d=c[h+12>>2]|0;if((d|0)==(a|0)){c[7465]=c[7465]&~(1<<e);break;}else{c[a+12>>2]=d;c[d+8>>2]=a;break;}}g=c[h+24>>2]|0;a=c[h+12>>2]|0;do{if((a|0)==(h|0)){d=h+16|0;e=d+4|0;a=c[e>>2]|0;if(!a){a=c[d>>2]|0;if(!a){a=0;break;}}else d=e;while(1){f=a+20|0;e=c[f>>2]|0;if(!e){f=a+16|0;e=c[f>>2]|0;if(!e)break;else{a=e;d=f;}}else{a=e;d=f;}}c[d>>2]=0;}else{f=c[h+8>>2]|0;c[f+12>>2]=a;c[a+8>>2]=f;}}while(0);if(g){d=c[h+28>>2]|0;e=30164+(d<<2)|0;if((c[e>>2]|0)==(h|0)){c[e>>2]=a;if(!a){c[7466]=c[7466]&~(1<<d);break;}}else{f=g+16|0;c[((c[f>>2]|0)==(h|0)?f:g+20|0)>>2]=a;if(!a)break;}c[a+24>>2]=g;d=h+16|0;e=c[d>>2]|0;if(e|0){c[a+16>>2]=e;c[e+24>>2]=a;}d=c[d+4>>2]|0;if(d){c[a+20>>2]=d;c[d+24>>2]=a;}}}else h=a;}while(0);a=i+4|0;e=c[a>>2]|0;if(!(e&2)){if((c[7471]|0)==(i|0)){i=(c[7468]|0)+b|0;c[7468]=i;c[7471]=h;c[h+4>>2]=i|1;if((h|0)!=(c[7470]|0))return;c[7470]=0;c[7467]=0;return;}if((c[7470]|0)==(i|0)){i=(c[7467]|0)+b|0;c[7467]=i;c[7470]=h;c[h+4>>2]=i|1;c[h+i>>2]=i;return;}f=(e&-8)+b|0;d=e>>>3;do{if(e>>>0<256){a=c[i+8>>2]|0;b=c[i+12>>2]|0;if((b|0)==(a|0)){c[7465]=c[7465]&~(1<<d);break;}else{c[a+12>>2]=b;c[b+8>>2]=a;break;}}else{g=c[i+24>>2]|0;b=c[i+12>>2]|0;do{if((b|0)==(i|0)){a=i+16|0;d=a+4|0;b=c[d>>2]|0;if(!b){b=c[a>>2]|0;if(!b){d=0;break;}}else a=d;while(1){e=b+20|0;d=c[e>>2]|0;if(!d){e=b+16|0;d=c[e>>2]|0;if(!d)break;else{b=d;a=e;}}else{b=d;a=e;}}c[a>>2]=0;d=b;}else{d=c[i+8>>2]|0;c[d+12>>2]=b;c[b+8>>2]=d;d=b;}}while(0);if(g|0){b=c[i+28>>2]|0;a=30164+(b<<2)|0;if((c[a>>2]|0)==(i|0)){c[a>>2]=d;if(!d){c[7466]=c[7466]&~(1<<b);break;}}else{e=g+16|0;c[((c[e>>2]|0)==(i|0)?e:g+20|0)>>2]=d;if(!d)break;}c[d+24>>2]=g;b=i+16|0;a=c[b>>2]|0;if(a|0){c[d+16>>2]=a;c[a+24>>2]=d;}b=c[b+4>>2]|0;if(b|0){c[d+20>>2]=b;c[b+24>>2]=d;}}}}while(0);c[h+4>>2]=f|1;c[h+f>>2]=f;if((h|0)==(c[7470]|0)){c[7467]=f;return;}}else{c[a>>2]=e&-2;c[h+4>>2]=b|1;c[h+b>>2]=b;f=b;}b=f>>>3;if(f>>>0<256){d=29900+(b<<1<<2)|0;a=c[7465]|0;b=1<<b;if(!(a&b)){c[7465]=a|b;b=d;a=d+8|0;}else{a=d+8|0;b=c[a>>2]|0;}c[a>>2]=h;c[b+12>>2]=h;c[h+8>>2]=b;c[h+12>>2]=d;return;}b=f>>>8;if(b){if(f>>>0>16777215)e=31;else{g=(b+1048320|0)>>>16&8;i=b<<g;d=(i+520192|0)>>>16&4;i=i<<d;e=(i+245760|0)>>>16&2;e=14-(d|g|e)+(i<<e>>>15)|0;e=f>>>(e+7|0)&1|e<<1;}}else e=0;b=30164+(e<<2)|0;c[h+28>>2]=e;c[h+20>>2]=0;c[h+16>>2]=0;a=c[7466]|0;d=1<<e;if(!(a&d)){c[7466]=a|d;c[b>>2]=h;c[h+24>>2]=b;c[h+12>>2]=h;c[h+8>>2]=h;return;}b=c[b>>2]|0;a:do{if((c[b+4>>2]&-8|0)!=(f|0)){e=f<<((e|0)==31?0:25-(e>>>1)|0);while(1){d=b+16+(e>>>31<<2)|0;a=c[d>>2]|0;if(!a)break;if((c[a+4>>2]&-8|0)==(f|0)){b=a;break a;}else{e=e<<1;b=a;}}c[d>>2]=h;c[h+24>>2]=b;c[h+12>>2]=h;c[h+8>>2]=h;return;}}while(0);g=b+8|0;i=c[g>>2]|0;c[i+12>>2]=h;c[g>>2]=h;c[h+8>>2]=i;c[h+12>>2]=b;c[h+24>>2]=0;return;}function Gq(a){a=a|0;return 0;}function Hq(a){a=a|0;return 0;}function Iq(a,b){a=a|0;b=b|0;if(!a){b=22;return b|0;}b=Bq(8)|0;c[b>>2]=0;c[b+4>>2]=38177486;c[a>>2]=b;b=0;return b|0;}function Jq(a){a=a|0;if((c[a+4>>2]|0)!=38177486){a=0;return a|0;}a=c[a>>2]|0;return a|0;}function Kq(a,b){a=a|0;b=b|0;if((c[a+4>>2]|0)!=38177486){b=22;return b|0;}c[a>>2]=b;b=0;return b|0;}function Lq(a,b){a=a|0;b=b|0;if((c[a>>2]|0)==324508639)return 0;jc[b&3]();c[a>>2]=324508639;return 0;}function Mq(a){a=a|0;Nq(a);return;}function Nq(a){a=a|0;c[a>>2]=11904;Oq(a,0);is(a+28|0);Cq(c[a+32>>2]|0);Cq(c[a+36>>2]|0);Cq(c[a+48>>2]|0);Cq(c[a+60>>2]|0);return;}function Oq(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;e=a+32|0;f=a+36|0;d=c[a+40>>2]|0;while(1){if(!d)break;g=d+-1|0;pc[c[(c[e>>2]|0)+(g<<2)>>2]&3](b,a,c[(c[f>>2]|0)+(g<<2)>>2]|0);d=g;}return;}function Pq(a){a=a|0;Nq(a);oA(a);return;}function Qq(a){a=a|0;c[a>>2]=11920;is(a+4|0);return;}function Rq(a){a=a|0;Qq(a);oA(a);return;}function Sq(a,b){a=a|0;b=b|0;return;}function Tq(a,b,c){a=a|0;b=b|0;c=c|0;return a|0;}function Uq(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;g=a;c[g>>2]=0;c[g+4>>2]=0;g=a+8|0;c[g>>2]=-1;c[g+4>>2]=-1;return;}function Vq(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=a;c[e>>2]=0;c[e+4>>2]=0;e=a+8|0;c[e>>2]=-1;c[e+4>>2]=-1;return;}function Wq(a){a=a|0;return 0;}function Xq(a){a=a|0;return 0;}function Yq(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;ad()|0;i=b+12|0;j=b+16|0;h=0;while(1){if((h|0)>=(e|0))break;f=c[i>>2]|0;g=c[j>>2]|0;if(f>>>0<g>>>0){g=g-f|0;k=e-h|0;g=(k|0)<(g|0)?k:g;cr(d,f,g)|0;c[i>>2]=(c[i>>2]|0)+g;d=d+g|0;f=g;}else{f=Yb[c[(c[b>>2]|0)+40>>2]&127](b)|0;if((f|0)==-1)break;a[d>>0]=ld(f)|0;d=d+1|0;f=1;}h=f+h|0;}return h|0;}function Zq(a){a=a|0;return ad()|0;}function _q(b){b=b|0;var d=0;d=Yb[c[(c[b>>2]|0)+36>>2]&127](b)|0;if((d|0)==(ad()|0))b=ad()|0;else{d=b+12|0;b=c[d>>2]|0;c[d>>2]=b+1;b=Vc(a[b>>0]|0)|0;}return b|0;}function $q(a,b){a=a|0;b=b|0;return ad()|0;}function ar(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;i=ad()|0;j=b+24|0;k=b+28|0;f=0;while(1){if((f|0)>=(e|0))break;g=c[j>>2]|0;h=c[k>>2]|0;if(g>>>0<h>>>0){h=h-g|0;l=e-f|0;h=(l|0)<(h|0)?l:h;cr(g,d,h)|0;c[j>>2]=(c[j>>2]|0)+h;d=d+h|0;f=h+f|0;}else{h=c[(c[b>>2]|0)+52>>2]|0;l=Vc(a[d>>0]|0)|0;if((_b[h&15](b,l)|0)==(i|0))break;d=d+1|0;f=f+1|0;}}return f|0;}function br(a,b){a=a|0;b=b|0;return ad()|0;}function cr(a,b,c){a=a|0;b=b|0;c=c|0;if(c|0)wC(a|0,b|0,c|0)|0;return a|0;}function dr(){return-1;}function er(a){a=a|0;return a|0;}function fr(a,b,c){a=a|0;b=b|0;c=c|0;if(c)Xp(a,b,c)|0;return a|0;}function gr(a){a=a|0;kr(a,12016);Mq(a+8|0);return;}function hr(a){a=a|0;gr(a);oA(a);return;}function ir(a){a=a|0;gr(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return;}function jr(a){a=a|0;hr(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return;}function kr(a,b){a=a|0;b=b|0;return;}function lr(a){a=a|0;pr(a,12024);Mq(a+4|0);return;}function mr(a){a=a|0;lr(a);oA(a);return;}function nr(a){a=a|0;lr(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return;}function or(a){a=a|0;mr(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return;}function pr(a,b){a=a|0;b=b|0;return;}function qr(a){a=a|0;wr(a,12092);Mq(a+12|0);return;}function rr(a){a=a|0;qr(a);oA(a);return;}function sr(a){a=a|0;qr(a+-8|0);return;}function tr(a){a=a|0;rr(a+-8|0);return;}function ur(a){a=a|0;qr(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return;}function vr(a){a=a|0;rr(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return;}function wr(a,b){a=a|0;b=b|0;pr(a+8|0,b+12|0);kr(a,b+4|0);return;}function xr(a,b){a=a|0;b=b|0;c[a+16>>2]=(c[a+24>>2]|0)==0|b;return;}function yr(a,b){a=a|0;b=b|0;var d=0;c[a+24>>2]=b;c[a+16>>2]=(b|0)==0&1;c[a+20>>2]=0;c[a+4>>2]=4098;c[a+12>>2]=0;c[a+8>>2]=6;d=a+28|0;b=a+32|0;a=b+40|0;do{c[b>>2]=0;b=b+4|0;}while((b|0)<(a|0));jA(d);return;}function zr(a,b){a=a|0;b=b|0;hA(a,b+28|0);return;}function Ar(a,b){a=a|0;b=b|0;return(a|0)==(b|0)|0;}function Br(a){a=a|0;c[a>>2]=11920;jA(a+4|0);a=a+8|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=0;c[a+20>>2]=0;return;}function Cr(b){b=b|0;var d=0,e=0,f=0;e=Pb;Pb=Pb+16|0;d=e;if(c[b+(c[(c[b>>2]|0)+-12>>2]|0)+24>>2]|0){Dr(d,b);if(a[d>>0]|0?(f=c[b+(c[(c[b>>2]|0)+-12>>2]|0)+24>>2]|0,(Yb[c[(c[f>>2]|0)+24>>2]&127](f)|0)==-1):0){f=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;xr(f,c[f+16>>2]|1);}Er(d);}Pb=e;return b|0;}function Dr(b,d){b=b|0;d=d|0;a[b>>0]=0;c[b+4>>2]=d;d=d+(c[(c[d>>2]|0)+-12>>2]|0)|0;if(!(c[d+16>>2]|0)){d=c[d+72>>2]|0;if(d|0)Cr(d)|0;a[b>>0]=1;}return;}function Er(a){a=a|0;var b=0;a=a+4|0;b=c[a>>2]|0;b=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;if((((c[b+24>>2]|0?(c[b+16>>2]|0)==0:0)?c[b+4>>2]&8192|0:0)?!(fB()|0):0)?(b=c[a>>2]|0,b=c[b+(c[(c[b>>2]|0)+-12>>2]|0)+24>>2]|0,(Yb[c[(c[b>>2]|0)+24>>2]&127](b)|0)==-1):0){b=c[a>>2]|0;b=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;xr(b,c[b+16>>2]|1);}return;}function Fr(b,d){b=b|0;d=+d;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=Pb;Pb=Pb+16|0;f=l+12|0;j=l+8|0;k=l;Dr(k,b);if(a[k>>0]|0){zr(f,b+(c[(c[b>>2]|0)+-12>>2]|0)|0);g=hs(f,30428)|0;is(f);h=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;i=c[h+24>>2]|0;m=ad()|0;e=h+76|0;if(id(m,c[e>>2]|0)|0){zr(f,h);m=hs(f,30372)|0;m=_b[c[(c[m>>2]|0)+28>>2]&15](m,32)|0;is(f);m=m<<24>>24;c[e>>2]=m;e=m;}else e=c[e>>2]|0;m=c[(c[g>>2]|0)+32>>2]|0;c[j>>2]=i;c[f>>2]=c[j>>2];if(!(cc[m&7](g,f,h,e&255,d)|0)){m=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;xr(m,c[m+16>>2]|5);}}Er(k);Pb=l;return b|0;}function Gr(b,d){b=b|0;d=+d;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;l=Pb;Pb=Pb+16|0;f=l+12|0;j=l+8|0;k=l;Dr(k,b);if(a[k>>0]|0){zr(f,b+(c[(c[b>>2]|0)+-12>>2]|0)|0);g=hs(f,30428)|0;is(f);h=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;i=c[h+24>>2]|0;m=ad()|0;e=h+76|0;if(id(m,c[e>>2]|0)|0){zr(f,h);m=hs(f,30372)|0;m=_b[c[(c[m>>2]|0)+28>>2]&15](m,32)|0;is(f);m=m<<24>>24;c[e>>2]=m;e=m;}else e=c[e>>2]|0;m=c[(c[g>>2]|0)+36>>2]|0;c[j>>2]=i;c[f>>2]=c[j>>2];if(!(cc[m&7](g,f,h,e&255,d)|0)){m=b+(c[(c[b>>2]|0)+-12>>2]|0)|0;xr(m,c[m+16>>2]|5);}}Er(k);Pb=l;return b|0;}function Hr(a){a=a|0;Or(a);return;}function Ir(a){a=a|0;Hr(a);oA(a);return;}function Jr(a){a=a|0;if(a|0)kc[c[(c[a>>2]|0)+4>>2]&255](a);return;}function Kr(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;b=c;while(1){if((e|0)==(f|0)){h=7;break;}if((b|0)==(d|0)){b=-1;break;}c=a[b>>0]|0;g=a[e>>0]|0;if(c<<24>>24<g<<24>>24){b=-1;break;}if(g<<24>>24<c<<24>>24){b=1;break;}e=e+1|0;b=b+1|0;}if((h|0)==7)b=(b|0)!=(d|0)&1;return b|0;}function Lr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;Nr(a,d,e);return;}function Mr(b,c,d){b=b|0;c=c|0;d=d|0;var e=0,f=0;b=0;while(1){if((c|0)==(d|0))break;e=(b<<4)+(a[c>>0]|0)|0;f=e&-268435456;b=(f>>>24|f)^e;c=c+1|0;}return b|0;}function Nr(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;j=Pb;Pb=Pb+16|0;g=d;i=j;f=e-g|0;if(f>>>0>4294967279)AA(b);if(f>>>0<11){a[b+11>>0]=f;h=b;}else{k=f+16&-16;h=nA(k)|0;c[b>>2]=h;c[b+8>>2]=k|-2147483648;c[b+4>>2]=f;}f=e-g|0;b=h;while(1){if((d|0)==(e|0))break;Rc(b,d);d=d+1|0;b=b+1|0;}a[i>>0]=0;Rc(h+f|0,i);Pb=j;return;}function Or(a){a=a|0;return;}function Pr(a){a=a|0;Or(a);return;}function Qr(a){a=a|0;Pr(a);oA(a);return;}function Rr(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;a=b;while(1){if((e|0)==(f|0)){h=7;break;}if((a|0)==(d|0)){a=-1;break;}b=c[a>>2]|0;g=c[e>>2]|0;if((b|0)<(g|0)){a=-1;break;}if((g|0)<(b|0)){a=1;break;}e=e+4|0;a=a+4|0;}if((h|0)==7)a=(a|0)!=(d|0)&1;return a|0;}function Sr(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;Ur(a,d,e);return;}function Tr(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;a=0;while(1){if((b|0)==(d|0))break;e=(c[b>>2]|0)+(a<<4)|0;f=e&-268435456;a=(f>>>24|f)^e;b=b+4|0;}return a|0;}function Ur(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;j=Pb;Pb=Pb+16|0;i=j;h=e-d>>2;if(h>>>0>1073741807)AA(b);do{if(h>>>0>=2){g=h+4&-4;if(g>>>0>1073741823)Ha();else{f=nA(g<<2)|0;c[b>>2]=f;c[b+8>>2]=g|-2147483648;c[b+4>>2]=h;break;}}else{a[b+8+3>>0]=h;f=b;}}while(0);while(1){if((d|0)==(e|0))break;Vr(f,d);d=d+4|0;f=f+4|0;}c[i>>2]=0;Vr(f,i);Pb=j;return;}function Vr(a,b){a=a|0;b=b|0;c[a>>2]=c[b>>2];return;}function Wr(a){a=a|0;Or(a);return;}function Xr(a){a=a|0;Or(a);oA(a);return;}function Yr(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=Pb;Pb=Pb+48|0;i=o+40|0;n=o;j=o+32|0;k=o+36|0;l=o+28|0;m=o+24|0;if(!(c[f+4>>2]&1)){c[j>>2]=-1;m=c[(c[b>>2]|0)+16>>2]|0;c[k>>2]=c[d>>2];c[l>>2]=c[e>>2];c[n>>2]=c[k>>2];c[i>>2]=c[l>>2];c[d>>2]=gc[m&63](b,n,i,f,g,j)|0;switch(c[j>>2]|0){case 0:{a[h>>0]=0;break;}case 1:{a[h>>0]=1;break;}default:{a[h>>0]=1;c[g>>2]=4;}}i=c[d>>2]|0;}else{zr(i,f);l=hs(i,30372)|0;is(i);zr(i,f);b=hs(i,30388)|0;is(i);nc[c[(c[b>>2]|0)+24>>2]&63](n,b);nc[c[(c[b>>2]|0)+28>>2]&63](n+12|0,b);c[m>>2]=c[e>>2];b=n+24|0;c[i>>2]=c[m>>2];a[h>>0]=(Rs(d,i,n,b,l,g,1)|0)==(n|0)&1;i=c[d>>2]|0;do{b=b+-12|0;GA(b);}while((b|0)!=(n|0));}Pb=o;return i|0;}function Zr(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Pb;Pb=Pb+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];g=Ps(a,j,i,e,f,g)|0;Pb=h;return g|0;}function _r(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Pb;Pb=Pb+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];g=Ns(a,j,i,e,f,g)|0;Pb=h;return g|0;}function $r(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Pb;Pb=Pb+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];g=Ls(a,j,i,e,f,g)|0;Pb=h;return g|0;}function as(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Pb;Pb=Pb+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];g=Js(a,j,i,e,f,g)|0;Pb=h;return g|0;}function bs(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Pb;Pb=Pb+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];g=Hs(a,j,i,e,f,g)|0;Pb=h;return g|0;}function cs(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Pb;Pb=Pb+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];g=Bs(a,j,i,e,f,g)|0;Pb=h;return g|0;}function ds(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Pb;Pb=Pb+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];g=zs(a,j,i,e,f,g)|0;Pb=h;return g|0;}function es(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Pb;Pb=Pb+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];g=xs(a,j,i,e,f,g)|0;Pb=h;return g|0;}function fs(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0;h=Pb;Pb=Pb+16|0;i=h+12|0;j=h+8|0;l=h+4|0;k=h;c[l>>2]=c[b>>2];c[k>>2]=c[d>>2];c[j>>2]=c[l>>2];c[i>>2]=c[k>>2];g=ss(a,j,i,e,f,g)|0;Pb=h;return g|0;}function gs(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;y=Pb;Pb=Pb+240|0;v=y+192|0;t=y+160|0;w=y+220|0;x=y+208|0;u=y+204|0;q=y;r=y+200|0;s=y+196|0;c[w>>2]=0;c[w+4>>2]=0;c[w+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[w+(b<<2)>>2]=0;b=b+1|0;}zr(x,f);b=hs(x,30372)|0;bc[c[(c[b>>2]|0)+32>>2]&7](b,6288,6314,t)|0;is(x);c[x>>2]=0;c[x+4>>2]=0;c[x+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[x+(b<<2)>>2]=0;b=b+1|0;}p=x+11|0;o=x+8|0;if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;MA(x,b,0);b=(a[p>>0]|0)<0?c[x>>2]|0:x;c[u>>2]=b;c[r>>2]=q;c[s>>2]=0;n=x+4|0;j=c[d>>2]|0;i=j;a:while(1){if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Vc(a[f>>0]|0)|0;if(id(f,ad()|0)|0){c[d>>2]=0;m=0;k=1;j=0;}else{m=i;k=0;}}else{m=0;k=1;j=0;}i=c[e>>2]|0;do{if(i){f=c[i+12>>2]|0;if((f|0)==(c[i+16>>2]|0))f=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else f=Vc(a[f>>0]|0)|0;if(!(id(f,ad()|0)|0)){if(k)break;else break a;}else{c[e>>2]=0;z=22;break;}}else z=22;}while(0);if((z|0)==22){z=0;if(k){i=0;break;}else i=0;}f=a[p>>0]|0;f=f<<24>>24<0?c[n>>2]|0:f&255;if((c[u>>2]|0)==(b+f|0)){MA(x,f<<1,0);if((a[p>>0]|0)<0)b=(c[o>>2]&2147483647)+-1|0;else b=10;MA(x,b,0);b=(a[p>>0]|0)<0?c[x>>2]|0:x;c[u>>2]=b+f;}k=j+12|0;f=c[k>>2]|0;l=j+16|0;if((f|0)==(c[l>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Vc(a[f>>0]|0)|0;if(js(f&255,16,b,u,s,0,w,q,r,t)|0)break;f=c[k>>2]|0;if((f|0)==(c[l>>2]|0))Yb[c[(c[j>>2]|0)+40>>2]&127](j)|0;else{c[k>>2]=f+1;Vc(a[f>>0]|0)|0;}i=m;}MA(x,(c[u>>2]|0)-b|0,0);t=(a[p>>0]|0)<0?c[x>>2]|0:x;u=ks()|0;c[v>>2]=h;if((ls(t,u,23381,v)|0)!=1)c[g>>2]=4;if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=Yb[c[(c[m>>2]|0)+36>>2]&127](j)|0;else b=Vc(a[b>>0]|0)|0;if(id(b,ad()|0)|0){c[d>>2]=0;f=1;}else f=0;}else f=1;do{if(i){b=c[i+12>>2]|0;if((b|0)==(c[i+16>>2]|0))b=Yb[c[(c[i>>2]|0)+36>>2]&127](i)|0;else b=Vc(a[b>>0]|0)|0;if(!(id(b,ad()|0)|0)){if(f)break;else{z=52;break;}}else{c[e>>2]=0;z=50;break;}}else z=50;}while(0);if((z|0)==50?f:0)z=52;if((z|0)==52)c[g>>2]=c[g>>2]|2;z=c[d>>2]|0;GA(x);GA(w);Pb=y;return z|0;}function hs(a,b){a=a|0;b=b|0;a=c[a>>2]|0;return ns(a,ms(b)|0)|0;}function is(a){a=a|0;var b=0,d=0;a=c[a>>2]|0;d=a+4|0;b=c[d>>2]|0;c[d>>2]=b+-1;if(!b)kc[c[(c[a>>2]|0)+8>>2]&255](a);return;}function js(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0;o=c[f>>2]|0;p=(o|0)==(e|0);do{if(p){m=(a[l+24>>0]|0)==b<<24>>24;if(!m?(a[l+25>>0]|0)!=b<<24>>24:0){n=5;break;}c[f>>2]=e+1;a[e>>0]=m?43:45;c[g>>2]=0;m=0;}else n=5;}while(0);a:do{if((n|0)==5){n=a[i+11>>0]|0;if(b<<24>>24==h<<24>>24?((n<<24>>24<0?c[i+4>>2]|0:n&255)|0)!=0:0){m=c[k>>2]|0;if((m-j|0)>=160){m=0;break;}f=c[g>>2]|0;c[k>>2]=m+4;c[m>>2]=f;c[g>>2]=0;m=0;break;}i=l+26|0;h=0;while(1){m=l+h|0;if((h|0)==26){m=i;break;}if((a[m>>0]|0)==b<<24>>24)break;else h=h+1|0;}m=m-l|0;if((m|0)>23)m=-1;else{switch(d|0){case 10:case 8:{if((m|0)>=(d|0)){m=-1;break a;}break;}case 16:{if((m|0)>=22){if(p){m=-1;break a;}if((o-e|0)>=3){m=-1;break a;}if((a[o+-1>>0]|0)!=48){m=-1;break a;}c[g>>2]=0;m=a[6288+m>>0]|0;c[f>>2]=o+1;a[o>>0]=m;m=0;break a;}break;}default:{}}m=a[6288+m>>0]|0;c[f>>2]=o+1;a[o>>0]=m;c[g>>2]=(c[g>>2]|0)+1;m=0;}}}while(0);return m|0;}function ks(){if((a[29056]|0)==0?eC(29056)|0:0)c[7595]=Qp(2147483647,23384,0)|0;return c[7595]|0;}function ls(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;f=Pb;Pb=Pb+16|0;g=f;c[g>>2]=e;e=_p(b)|0;b=To(a,d,g)|0;if(e|0)_p(e)|0;Pb=f;return b|0;}function ms(a){a=a|0;var b=0,d=0,e=0,f=0,g=0;f=Pb;Pb=Pb+48|0;b=f+32|0;d=f+24|0;e=f;g=f+16|0;c[g>>2]=156;c[g+4>>2]=0;c[b>>2]=c[g>>2];c[b+4>>2]=c[g+4>>2];ps(e,b,a);if((c[a>>2]|0)!=-1){c[b>>2]=e;c[d>>2]=b;lA(a,d,157);}Pb=f;return(c[a+4>>2]|0)+-1|0;}function ns(a,b){a=a|0;b=b|0;return c[(c[a+8>>2]|0)+(b<<2)>>2]|0;}function os(a){a=a|0;var b=0;b=c[7596]|0;c[7596]=b+1;c[a+4>>2]=b+1;return;}function ps(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=c[b>>2]|0;b=c[b+4>>2]|0;c[a>>2]=d;c[a+4>>2]=e;c[a+8>>2]=b;return;}function qs(a){a=a|0;rs(c[c[a>>2]>>2]|0);return;}function rs(a){a=a|0;var b=0,d=0,e=0;b=c[a+4>>2]|0;e=c[a+8>>2]|0;d=(c[a>>2]|0)+(e>>1)|0;if(!(e&1))a=b;else a=c[(c[d>>2]|0)+b>>2]|0;kc[a&255](d);return;}function ss(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;D=Pb;Pb=Pb+240|0;s=D+160|0;t=D+231|0;u=D+230|0;C=D+216|0;B=D+204|0;v=D+200|0;w=D;x=D+196|0;y=D+192|0;z=D+229|0;r=D+228|0;ts(C,f,s,t,u);c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[B+(b<<2)>>2]=0;b=b+1|0;}p=B+11|0;q=B+8|0;if((a[p>>0]|0)<0)b=(c[q>>2]&2147483647)+-1|0;else b=10;MA(B,b,0);b=(a[p>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b;c[x>>2]=w;c[y>>2]=0;a[z>>0]=1;a[r>>0]=69;o=B+4|0;k=c[d>>2]|0;j=k;a:while(1){if(k){f=c[k+12>>2]|0;if((f|0)==(c[k+16>>2]|0))f=Yb[c[(c[k>>2]|0)+36>>2]&127](k)|0;else f=Vc(a[f>>0]|0)|0;if(id(f,ad()|0)|0){c[d>>2]=0;n=0;l=1;k=0;}else{n=j;l=0;}}else{n=0;l=1;k=0;}j=c[e>>2]|0;do{if(j){f=c[j+12>>2]|0;if((f|0)==(c[j+16>>2]|0))f=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else f=Vc(a[f>>0]|0)|0;if(!(id(f,ad()|0)|0)){if(l)break;else break a;}else{c[e>>2]=0;E=19;break;}}else E=19;}while(0);if((E|0)==19){E=0;if(l){j=0;break;}else j=0;}f=a[p>>0]|0;f=f<<24>>24<0?c[o>>2]|0:f&255;if((c[v>>2]|0)==(b+f|0)){MA(B,f<<1,0);if((a[p>>0]|0)<0)b=(c[q>>2]&2147483647)+-1|0;else b=10;MA(B,b,0);b=(a[p>>0]|0)<0?c[B>>2]|0:B;c[v>>2]=b+f;}l=k+12|0;f=c[l>>2]|0;m=k+16|0;if((f|0)==(c[m>>2]|0))f=Yb[c[(c[k>>2]|0)+36>>2]&127](k)|0;else f=Vc(a[f>>0]|0)|0;if(us(f&255,z,r,b,v,a[t>>0]|0,a[u>>0]|0,C,w,x,y,s)|0)break;f=c[l>>2]|0;if((f|0)==(c[m>>2]|0))Yb[c[(c[k>>2]|0)+40>>2]&127](k)|0;else{c[l>>2]=f+1;Vc(a[f>>0]|0)|0;}j=n;}u=a[C+11>>0]|0;if(!((a[z>>0]|0)==0?1:((u<<24>>24<0?c[C+4>>2]|0:u&255)|0)==0)?(A=c[x>>2]|0,(A-w|0)<160):0){z=c[y>>2]|0;c[x>>2]=A+4;c[A>>2]=z;}g[i>>3]=+vs(b,c[v>>2]|0,h);ws(C,w,c[x>>2]|0,h);if(k){b=c[k+12>>2]|0;if((b|0)==(c[k+16>>2]|0))b=Yb[c[(c[n>>2]|0)+36>>2]&127](k)|0;else b=Vc(a[b>>0]|0)|0;if(id(b,ad()|0)|0){c[d>>2]=0;f=1;}else f=0;}else f=1;do{if(j){b=c[j+12>>2]|0;if((b|0)==(c[j+16>>2]|0))b=Yb[c[(c[j>>2]|0)+36>>2]&127](j)|0;else b=Vc(a[b>>0]|0)|0;if(!(id(b,ad()|0)|0)){if(f)break;else{E=50;break;}}else{c[e>>2]=0;E=48;break;}}else E=48;}while(0);if((E|0)==48?f:0)E=50;if((E|0)==50)c[h>>2]=c[h>>2]|2;E=c[d>>2]|0;GA(B);GA(C);Pb=D;return E|0;}function ts(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=Pb;Pb=Pb+16|0;i=h;zr(i,d);d=hs(i,30372)|0;bc[c[(c[d>>2]|0)+32>>2]&7](d,6288,6320,e)|0;e=hs(i,30388)|0;a[f>>0]=Yb[c[(c[e>>2]|0)+12>>2]&127](e)|0;a[g>>0]=Yb[c[(c[e>>2]|0)+16>>2]&127](e)|0;nc[c[(c[e>>2]|0)+20>>2]&63](b,e);is(i);Pb=h;return;}function us(b,d,e,f,g,h,i,j,k,l,m,n){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0;a:do{if(b<<24>>24==h<<24>>24){if(a[d>>0]|0){a[d>>0]=0;e=c[g>>2]|0;c[g>>2]=e+1;a[e>>0]=46;g=a[j+11>>0]|0;if(((g<<24>>24<0?c[j+4>>2]|0:g&255)|0)!=0?(o=c[l>>2]|0,(o-k|0)<160):0){k=c[m>>2]|0;c[l>>2]=o+4;c[o>>2]=k;o=0;}else o=0;}else o=-1;}else{if(b<<24>>24==i<<24>>24?(i=a[j+11>>0]|0,(i<<24>>24<0?c[j+4>>2]|0:i&255)|0):0){if(!(a[d>>0]|0)){o=-1;break;}o=c[l>>2]|0;if((o-k|0)>=160){o=0;break;}k=c[m>>2]|0;c[l>>2]=o+4;c[o>>2]=k;c[m>>2]=0;o=0;break;}i=n+32|0;h=0;while(1){o=n+h|0;if((h|0)==32){o=i;break;}if((a[o>>0]|0)==b<<24>>24)break;else h=h+1|0;}h=o-n|0;if((h|0)>31)o=-1;else{i=a[6288+h>>0]|0;switch(h|0){case 24:case 25:{o=c[g>>2]|0;if((o|0)!=(f|0)?(a[o+-1>>0]&95)!=(a[e>>0]&127):0){o=-1;break a;}c[g>>2]=o+1;a[o>>0]=i;o=0;break a;}case 23:case 22:{a[e>>0]=80;o=c[g>>2]|0;c[g>>2]=o+1;a[o>>0]=i;o=0;break a;}default:{o=i&95;if((((o|0)==(a[e>>0]|0)?(a[e>>0]=o|128,a[d>>0]|0):0)?(a[d>>0]=0,e=a[j+11>>0]|0,(e<<24>>24<0?c[j+4>>2]|0:e&255)|0):0)?(p=c[l>>2]|0,(p-k|0)<160):0){k=c[m>>2]|0;c[l>>2]=p+4;c[p>>2]=k;}l=c[g>>2]|0;c[g>>2]=l+1;a[l>>0]=i;if((h|0)>21){o=0;break a;}c[m>>2]=(c[m>>2]|0)+1;o=0;break a;}}}}}while(0);return o|0;}function vs(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0,g=0,h=0,i=0;i=Pb;Pb=Pb+16|0;f=i;if((a|0)==(b|0)){c[d>>2]=4;e=0.0;}else{g=c[(wo()|0)>>2]|0;c[(wo()|0)>>2]=0;e=+wq(a,f,ks()|0);a=c[(wo()|0)>>2]|0;if(!a)c[(wo()|0)>>2]=g;if((c[f>>2]|0)==(b|0)){if((a|0)==34)h=6;}else{e=0.0;h=6;}if((h|0)==6)c[d>>2]=4;}Pb=i;return+e;}function ws(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0;j=b+11|0;h=a[j>>0]|0;k=b+4|0;g=c[k>>2]|0;i=h&255;do{if((h<<24>>24<0?g:i)|0){if((d|0)!=(e|0)){g=e;h=d;while(1){g=g+-4|0;if(h>>>0>=g>>>0)break;i=c[h>>2]|0;c[h>>2]=c[g>>2];c[g>>2]=i;h=h+4|0;}h=a[j>>0]|0;i=h&255;g=c[k>>2]|0;}j=h<<24>>24<0;b=j?c[b>>2]|0:b;k=e+-4|0;j=b+(j?g:i)|0;g=b;while(1){h=a[g>>0]|0;i=h<<24>>24>0&h<<24>>24!=127;if(d>>>0>=k>>>0)break;if(i?(c[d>>2]|0)!=(h<<24>>24|0):0){l=11;break;}d=d+4|0;g=(j-g|0)>1?g+1|0:g;}if((l|0)==11){c[f>>2]=4;break;}if(i?((c[k>>2]|0)+-1|0)>>>0>=h<<24>>24>>>0:0)c[f>>2]=4;}}while(0);return;}function ww(e,f,g,h,i,j,k,l,m,n,o){e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;var p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0;Y=Pb;Pb=Pb+512|0;I=Y+488|0;O=Y;X=Y+480|0;Q=Y+472|0;J=Y+468|0;K=Y+496|0;L=Y+493|0;M=Y+492|0;S=Y+456|0;T=Y+444|0;U=Y+432|0;V=Y+420|0;W=Y+408|0;N=Y+404|0;R=Y+400|0;c[I>>2]=o;c[X>>2]=O;c[X+4>>2]=158;c[Q>>2]=O;c[J>>2]=O+400;c[S>>2]=0;c[S+4>>2]=0;c[S+8>>2]=0;o=0;while(1){if((o|0)==3)break;c[S+(o<<2)>>2]=0;o=o+1|0;}c[T>>2]=0;c[T+4>>2]=0;c[T+8>>2]=0;o=0;while(1){if((o|0)==3)break;c[T+(o<<2)>>2]=0;o=o+1|0;}c[U>>2]=0;c[U+4>>2]=0;c[U+8>>2]=0;o=0;while(1){if((o|0)==3)break;c[U+(o<<2)>>2]=0;o=o+1|0;}c[V>>2]=0;c[V+4>>2]=0;c[V+8>>2]=0;o=0;while(1){if((o|0)==3)break;c[V+(o<<2)>>2]=0;o=o+1|0;}c[W>>2]=0;c[W+4>>2]=0;c[W+8>>2]=0;o=0;while(1){if((o|0)==3)break;c[W+(o<<2)>>2]=0;o=o+1|0;}zw(g,h,K,L,M,S,T,U,V,N);c[n>>2]=c[m>>2];B=l+8|0;C=U+11|0;D=U+4|0;E=V+11|0;F=V+4|0;G=S+11|0;H=S+4|0;v=(i&512|0)!=0;w=T+11|0;x=K+3|0;y=T+4|0;z=W+11|0;A=W+4|0;O=0;u=0;a:while(1){if(u>>>0>=4){P=243;break;}o=c[e>>2]|0;do{if(o){g=c[o+12>>2]|0;if((g|0)==(c[o+16>>2]|0))o=Yb[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Vc(a[g>>0]|0)|0;if(id(o,ad()|0)|0){c[e>>2]=0;h=1;break;}else{h=(c[e>>2]|0)==0;break;}}else h=1;}while(0);g=c[f>>2]|0;do{if(g){o=c[g+12>>2]|0;if((o|0)==(c[g+16>>2]|0))o=Yb[c[(c[g>>2]|0)+36>>2]&127](g)|0;else o=Vc(a[o>>0]|0)|0;if(!(id(o,ad()|0)|0)){if(h){t=g;break;}else{P=243;break a;}}else{c[f>>2]=0;P=31;break;}}else P=31;}while(0);if((P|0)==31){P=0;if(h){P=243;break;}else t=0;}b:do{switch(a[K+u>>0]|0){case 1:{if((u|0)==3)o=O;else{o=c[e>>2]|0;g=c[o+12>>2]|0;if((g|0)==(c[o+16>>2]|0))o=Yb[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Vc(a[g>>0]|0)|0;if((o&255)<<24>>24<=-1){P=45;break a;}if(!(b[(c[B>>2]|0)+(o<<24>>24<<1)>>1]&8192)){P=45;break a;}o=c[e>>2]|0;g=o+12|0;h=c[g>>2]|0;if((h|0)==(c[o+16>>2]|0))o=Yb[c[(c[o>>2]|0)+40>>2]&127](o)|0;else{c[g>>2]=h+1;o=Vc(a[h>>0]|0)|0;}RA(W,o&255);P=47;}break;}case 0:{if((u|0)==3)o=O;else P=47;break;}case 3:{o=a[C>>0]|0;o=o<<24>>24<0?c[D>>2]|0:o&255;l=a[E>>0]|0;l=l<<24>>24<0?c[F>>2]|0:l&255;if((o|0)==(0-l|0))o=O;else{i=(o|0)==0;o=c[e>>2]|0;g=c[o+12>>2]|0;h=(g|0)==(c[o+16>>2]|0);if(i|(l|0)==0){if(h)o=Yb[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Vc(a[g>>0]|0)|0;o=o&255;if(i){if((a[((a[E>>0]|0)<0?c[V>>2]|0:V)>>0]|0)!=o<<24>>24){o=O;break b;}o=c[e>>2]|0;g=o+12|0;h=c[g>>2]|0;if((h|0)==(c[o+16>>2]|0))Yb[c[(c[o>>2]|0)+40>>2]&127](o)|0;else{c[g>>2]=h+1;Vc(a[h>>0]|0)|0;}a[k>>0]=1;o=a[E>>0]|0;o=(o<<24>>24<0?c[F>>2]|0:o&255)>>>0>1?V:O;break b;}if((a[((a[C>>0]|0)<0?c[U>>2]|0:U)>>0]|0)!=o<<24>>24){a[k>>0]=1;o=O;break b;}o=c[e>>2]|0;g=o+12|0;h=c[g>>2]|0;if((h|0)==(c[o+16>>2]|0))Yb[c[(c[o>>2]|0)+40>>2]&127](o)|0;else{c[g>>2]=h+1;Vc(a[h>>0]|0)|0;}o=a[C>>0]|0;o=(o<<24>>24<0?c[D>>2]|0:o&255)>>>0>1?U:O;break b;}if(h)o=Yb[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Vc(a[g>>0]|0)|0;g=c[e>>2]|0;h=g+12|0;l=c[h>>2]|0;i=(l|0)==(c[g+16>>2]|0);if((a[((a[C>>0]|0)<0?c[U>>2]|0:U)>>0]|0)==(o&255)<<24>>24){if(i)Yb[c[(c[g>>2]|0)+40>>2]&127](g)|0;else{c[h>>2]=l+1;Vc(a[l>>0]|0)|0;}o=a[C>>0]|0;o=(o<<24>>24<0?c[D>>2]|0:o&255)>>>0>1?U:O;break b;}if(i)o=Yb[c[(c[g>>2]|0)+36>>2]&127](g)|0;else o=Vc(a[l>>0]|0)|0;if((a[((a[E>>0]|0)<0?c[V>>2]|0:V)>>0]|0)!=(o&255)<<24>>24){P=105;break a;}o=c[e>>2]|0;g=o+12|0;h=c[g>>2]|0;if((h|0)==(c[o+16>>2]|0))Yb[c[(c[o>>2]|0)+40>>2]&127](o)|0;else{c[g>>2]=h+1;Vc(a[h>>0]|0)|0;}a[k>>0]=1;o=a[E>>0]|0;o=(o<<24>>24<0?c[F>>2]|0:o&255)>>>0>1?V:O;}break;}case 2:{if(u>>>0<2|(O|0)!=0){o=a[w>>0]|0;h=o<<24>>24<0;g=c[T>>2]|0;l=h?g:T;i=l;if(!u)h=i;else{s=i;P=110;}}else{if(!(v|(u|0)==2&(a[x>>0]|0)!=0)){o=0;break b;}o=a[w>>0]|0;h=o<<24>>24<0;g=c[T>>2]|0;s=h?g:T;l=s;P=110;}c:do{if((P|0)==110){P=0;if((d[K+(u+-1)>>0]|0)<2){i=l+(h?c[y>>2]|0:o&255)|0;h=s;while(1){p=h;if((i|0)==(p|0))break;q=a[p>>0]|0;if(q<<24>>24<=-1)break;if(!(b[(c[B>>2]|0)+(q<<24>>24<<1)>>1]&8192))break;h=p+1|0;}q=h-s|0;p=a[z>>0]|0;r=p<<24>>24<0;i=c[A>>2]|0;p=p&255;if(q>>>0<=(r?i:p)>>>0){Z=(c[W>>2]|0)+i|0;i=W+p|0;p=r?Z:i;i=r?Z+(0-q)|0:i+(0-q)|0;while(1){if((i|0)==(p|0))break c;if((a[i>>0]|0)!=(a[l>>0]|0)){h=s;break c;}l=l+1|0;i=i+1|0;}}else h=s;}else h=s;}}while(0);i=h;h=t;d:while(1){Z=o<<24>>24<0;if((i|0)==((Z?g:T)+(Z?c[y>>2]|0:o&255)|0))break;o=c[e>>2]|0;do{if(o){g=c[o+12>>2]|0;if((g|0)==(c[o+16>>2]|0))o=Yb[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Vc(a[g>>0]|0)|0;if(id(o,ad()|0)|0){c[e>>2]=0;g=1;break;}else{g=(c[e>>2]|0)==0;break;}}else g=1;}while(0);do{if(h){o=c[h+12>>2]|0;if((o|0)==(c[h+16>>2]|0))o=Yb[c[(c[h>>2]|0)+36>>2]&127](h)|0;else o=Vc(a[o>>0]|0)|0;if(!(id(o,ad()|0)|0)){if(g){l=h;break;}else break d;}else{c[f>>2]=0;P=136;break;}}else P=136;}while(0);if((P|0)==136){P=0;if(g)break;else l=0;}o=c[e>>2]|0;g=c[o+12>>2]|0;if((g|0)==(c[o+16>>2]|0))o=Yb[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Vc(a[g>>0]|0)|0;if((a[i>>0]|0)!=(o&255)<<24>>24)break;o=c[e>>2]|0;g=o+12|0;h=c[g>>2]|0;if((h|0)==(c[o+16>>2]|0))Yb[c[(c[o>>2]|0)+40>>2]&127](o)|0;else{c[g>>2]=h+1;Vc(a[h>>0]|0)|0;}i=i+1|0;o=a[w>>0]|0;g=c[T>>2]|0;h=l;}if(v?(Z=a[w>>0]|0,t=Z<<24>>24<0,(i|0)!=((t?c[T>>2]|0:T)+(t?c[y>>2]|0:Z&255)|0)):0){P=148;break a;}else o=O;break;}case 4:{i=0;l=t;o=t;e:while(1){g=c[e>>2]|0;do{if(g){h=c[g+12>>2]|0;if((h|0)==(c[g+16>>2]|0))g=Yb[c[(c[g>>2]|0)+36>>2]&127](g)|0;else g=Vc(a[h>>0]|0)|0;if(id(g,ad()|0)|0){c[e>>2]=0;h=1;break;}else{h=(c[e>>2]|0)==0;break;}}else h=1;}while(0);do{if(l){g=c[l+12>>2]|0;if((g|0)==(c[l+16>>2]|0))g=Yb[c[(c[l>>2]|0)+36>>2]&127](l)|0;else g=Vc(a[g>>0]|0)|0;if(!(id(g,ad()|0)|0)){if(h){p=l;break;}else{l=o;break e;}}else{c[f>>2]=0;o=0;P=162;break;}}else P=162;}while(0);if((P|0)==162){P=0;if(h){l=o;break;}else p=0;}g=c[e>>2]|0;h=c[g+12>>2]|0;if((h|0)==(c[g+16>>2]|0))g=Yb[c[(c[g>>2]|0)+36>>2]&127](g)|0;else g=Vc(a[h>>0]|0)|0;h=g&255;if(h<<24>>24>-1?(b[(c[B>>2]|0)+(g<<24>>24<<1)>>1]&2048)!=0:0){g=c[n>>2]|0;if((g|0)==(c[I>>2]|0)){Aw(m,n,I);g=c[n>>2]|0;}c[n>>2]=g+1;a[g>>0]=h;g=i+1|0;}else{Z=a[G>>0]|0;if(!((a[M>>0]|0)==h<<24>>24&(i|0?((Z<<24>>24<0?c[H>>2]|0:Z&255)|0)!=0:0))){l=o;break;}g=c[Q>>2]|0;if((g|0)==(c[J>>2]|0)){Bw(X,Q,J);g=c[Q>>2]|0;}c[Q>>2]=g+4;c[g>>2]=i;g=0;}h=c[e>>2]|0;l=h+12|0;i=c[l>>2]|0;if((i|0)==(c[h+16>>2]|0))Yb[c[(c[h>>2]|0)+40>>2]&127](h)|0;else{c[l>>2]=i+1;Vc(a[i>>0]|0)|0;}i=g;l=p;}o=c[Q>>2]|0;if(i|0?(c[X>>2]|0)!=(o|0):0){if((o|0)==(c[J>>2]|0)){Bw(X,Q,J);o=c[Q>>2]|0;}c[Q>>2]=o+4;c[o>>2]=i;}f:do{if((c[N>>2]|0)>0){o=c[e>>2]|0;do{if(o){g=c[o+12>>2]|0;if((g|0)==(c[o+16>>2]|0))o=Yb[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Vc(a[g>>0]|0)|0;if(id(o,ad()|0)|0){c[e>>2]=0;g=1;break;}else{g=(c[e>>2]|0)==0;break;}}else g=1;}while(0);do{if(l){o=c[l+12>>2]|0;if((o|0)==(c[l+16>>2]|0))o=Yb[c[(c[l>>2]|0)+36>>2]&127](l)|0;else o=Vc(a[o>>0]|0)|0;if(!(id(o,ad()|0)|0)){if(g)break;else{P=204;break a;}}else{c[f>>2]=0;P=198;break;}}else P=198;}while(0);if((P|0)==198){P=0;if(g){P=204;break a;}else l=0;}o=c[e>>2]|0;g=c[o+12>>2]|0;if((g|0)==(c[o+16>>2]|0))o=Yb[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Vc(a[g>>0]|0)|0;if((a[L>>0]|0)!=(o&255)<<24>>24){P=204;break a;}o=c[e>>2]|0;g=o+12|0;h=c[g>>2]|0;if((h|0)==(c[o+16>>2]|0))Yb[c[(c[o>>2]|0)+40>>2]&127](o)|0;else{c[g>>2]=h+1;Vc(a[h>>0]|0)|0;}h=l;while(1){if((c[N>>2]|0)<=0)break f;o=c[e>>2]|0;do{if(o){g=c[o+12>>2]|0;if((g|0)==(c[o+16>>2]|0))o=Yb[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Vc(a[g>>0]|0)|0;if(id(o,ad()|0)|0){c[e>>2]=0;g=1;break;}else{g=(c[e>>2]|0)==0;break;}}else g=1;}while(0);do{if(h){o=c[h+12>>2]|0;if((o|0)==(c[h+16>>2]|0))o=Yb[c[(c[h>>2]|0)+36>>2]&127](h)|0;else o=Vc(a[o>>0]|0)|0;if(!(id(o,ad()|0)|0)){if(g){l=h;break;}else{P=230;break a;}}else{c[f>>2]=0;P=223;break;}}else P=223;}while(0);if((P|0)==223){P=0;if(g){P=230;break a;}else l=0;}o=c[e>>2]|0;g=c[o+12>>2]|0;if((g|0)==(c[o+16>>2]|0))o=Yb[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Vc(a[g>>0]|0)|0;if((o&255)<<24>>24<=-1){P=230;break a;}if(!(b[(c[B>>2]|0)+(o<<24>>24<<1)>>1]&2048)){P=230;break a;}if((c[n>>2]|0)==(c[I>>2]|0))Aw(m,n,I);o=c[e>>2]|0;g=c[o+12>>2]|0;if((g|0)==(c[o+16>>2]|0))o=Yb[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Vc(a[g>>0]|0)|0;g=c[n>>2]|0;c[n>>2]=g+1;a[g>>0]=o;c[N>>2]=(c[N>>2]|0)+-1;o=c[e>>2]|0;g=o+12|0;h=c[g>>2]|0;if((h|0)==(c[o+16>>2]|0))Yb[c[(c[o>>2]|0)+40>>2]&127](o)|0;else{c[g>>2]=h+1;Vc(a[h>>0]|0)|0;}h=l;}}}while(0);if((c[n>>2]|0)==(c[m>>2]|0)){P=241;break a;}else o=O;break;}default:o=O;}}while(0);g:do{if((P|0)==47){P=0;h=t;while(1){o=c[e>>2]|0;do{if(o){g=c[o+12>>2]|0;if((g|0)==(c[o+16>>2]|0))o=Yb[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Vc(a[g>>0]|0)|0;if(id(o,ad()|0)|0){c[e>>2]=0;g=1;break;}else{g=(c[e>>2]|0)==0;break;}}else g=1;}while(0);do{if(h){o=c[h+12>>2]|0;if((o|0)==(c[h+16>>2]|0))o=Yb[c[(c[h>>2]|0)+36>>2]&127](h)|0;else o=Vc(a[o>>0]|0)|0;if(!(id(o,ad()|0)|0)){if(g){l=h;break;}else{o=O;break g;}}else{c[f>>2]=0;P=61;break;}}else P=61;}while(0);if((P|0)==61){P=0;if(g){o=O;break g;}else l=0;}o=c[e>>2]|0;g=c[o+12>>2]|0;if((g|0)==(c[o+16>>2]|0))o=Yb[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Vc(a[g>>0]|0)|0;if((o&255)<<24>>24<=-1){o=O;break g;}if(!(b[(c[B>>2]|0)+(o<<24>>24<<1)>>1]&8192)){o=O;break g;}o=c[e>>2]|0;g=o+12|0;h=c[g>>2]|0;if((h|0)==(c[o+16>>2]|0))o=Yb[c[(c[o>>2]|0)+40>>2]&127](o)|0;else{c[g>>2]=h+1;o=Vc(a[h>>0]|0)|0;}RA(W,o&255);h=l;}}}while(0);O=o;u=u+1|0;}h:do{if((P|0)==45){c[j>>2]=c[j>>2]|4;g=0;}else if((P|0)==105){c[j>>2]=c[j>>2]|4;g=0;}else if((P|0)==148){c[j>>2]=c[j>>2]|4;g=0;}else if((P|0)==204){c[j>>2]=c[j>>2]|4;g=0;}else if((P|0)==230){c[j>>2]=c[j>>2]|4;g=0;}else if((P|0)==241){c[j>>2]=c[j>>2]|4;g=0;}else if((P|0)==243){i:do{if(O|0){i=O+11|0;p=O+4|0;l=1;j:while(1){o=a[i>>0]|0;if(o<<24>>24<0)o=c[p>>2]|0;else o=o&255;if(l>>>0>=o>>>0)break i;o=c[e>>2]|0;do{if(o){g=c[o+12>>2]|0;if((g|0)==(c[o+16>>2]|0))o=Yb[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Vc(a[g>>0]|0)|0;if(id(o,ad()|0)|0){c[e>>2]=0;h=1;break;}else{h=(c[e>>2]|0)==0;break;}}else h=1;}while(0);o=c[f>>2]|0;do{if(o){g=c[o+12>>2]|0;if((g|0)==(c[o+16>>2]|0))o=Yb[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Vc(a[g>>0]|0)|0;if(!(id(o,ad()|0)|0)){if(h)break;else break j;}else{c[f>>2]=0;P=262;break;}}else P=262;}while(0);if((P|0)==262?(P=0,h):0)break;o=c[e>>2]|0;g=c[o+12>>2]|0;if((g|0)==(c[o+16>>2]|0))o=Yb[c[(c[o>>2]|0)+36>>2]&127](o)|0;else o=Vc(a[g>>0]|0)|0;if((a[i>>0]|0)<0)g=c[O>>2]|0;else g=O;if((a[g+l>>0]|0)!=(o&255)<<24>>24)break;o=c[e>>2]|0;g=o+12|0;h=c[g>>2]|0;if((h|0)==(c[o+16>>2]|0))Yb[c[(c[o>>2]|0)+40>>2]&127](o)|0;else{c[g>>2]=h+1;Vc(a[h>>0]|0)|0;}l=l+1|0;}c[j>>2]=c[j>>2]|4;g=0;break h;}}while(0);g=c[X>>2]|0;o=c[Q>>2]|0;if((g|0)!=(o|0)){c[R>>2]=0;ws(S,g,o,R);if(!(c[R>>2]|0)){g=1;break;}else{c[j>>2]=c[j>>2]|4;g=0;break;}}else g=1;}}while(0);GA(W);GA(V);GA(U);GA(T);GA(S);o=c[X>>2]|0;c[X>>2]=0;if(o|0)kc[c[X+4>>2]&255](o);Pb=Y;return g|0;}function xw(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=Pb;Pb=Pb+16|0;j=d;m=o;n=b+11|0;h=a[n>>0]|0;f=h<<24>>24<0;if(f){i=(c[b+8>>2]&2147483647)+-1|0;l=c[b+4>>2]|0;}else{i=10;l=h&255;}k=e-j|0;do{if(k|0){if(f){g=c[b>>2]|0;f=c[b+4>>2]|0;}else{g=b;f=h&255;}if(yw(d,g,g+f|0)|0){c[m>>2]=0;c[m+4>>2]=0;c[m+8>>2]=0;nd(m,d,e);n=a[m+11>>0]|0;l=n<<24>>24<0;PA(b,l?c[m>>2]|0:m,l?c[m+4>>2]|0:n&255)|0;GA(m);break;}if((i-l|0)>>>0<k>>>0)OA(b,i,l+k-i|0,l,l,0,0);if((a[n>>0]|0)<0)h=c[b>>2]|0;else h=b;g=e+(l-j)|0;f=h+l|0;while(1){if((d|0)==(e|0))break;Rc(f,d);f=f+1|0;d=d+1|0;}a[m>>0]=0;Rc(h+g|0,m);d=l+k|0;if((a[n>>0]|0)<0){c[b+4>>2]=d;break;}else{a[n>>0]=d;break;}}}while(0);Pb=o;return b|0;}function yw(a,b,c){a=a|0;b=b|0;c=c|0;return b>>>0<=a>>>0&a>>>0<c>>>0|0;}function zw(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0;o=Pb;Pb=Pb+16|0;m=o+12|0;n=o;if(b){d=hs(d,30604)|0;nc[c[(c[d>>2]|0)+44>>2]&63](m,d);b=c[m>>2]|0;a[e>>0]=b;a[e+1>>0]=b>>8;a[e+2>>0]=b>>16;a[e+3>>0]=b>>24;nc[c[(c[d>>2]|0)+32>>2]&63](n,d);b=k+11|0;if((a[b>>0]|0)<0){b=c[k>>2]|0;a[m>>0]=0;Rc(b,m);c[k+4>>2]=0;b=k;}else{a[m>>0]=0;Rc(k,m);a[b>>0]=0;b=k;}KA(k,0);c[b>>2]=c[n>>2];c[b+4>>2]=c[n+4>>2];c[b+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}GA(n);nc[c[(c[d>>2]|0)+28>>2]&63](n,d);b=j+11|0;if((a[b>>0]|0)<0){b=c[j>>2]|0;a[m>>0]=0;Rc(b,m);c[j+4>>2]=0;b=j;}else{a[m>>0]=0;Rc(j,m);a[b>>0]=0;b=j;}KA(j,0);c[b>>2]=c[n>>2];c[b+4>>2]=c[n+4>>2];c[b+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}GA(n);a[f>>0]=Yb[c[(c[d>>2]|0)+12>>2]&127](d)|0;a[g>>0]=Yb[c[(c[d>>2]|0)+16>>2]&127](d)|0;nc[c[(c[d>>2]|0)+20>>2]&63](n,d);b=h+11|0;if((a[b>>0]|0)<0){b=c[h>>2]|0;a[m>>0]=0;Rc(b,m);c[h+4>>2]=0;b=h;}else{a[m>>0]=0;Rc(h,m);a[b>>0]=0;b=h;}KA(h,0);c[b>>2]=c[n>>2];c[b+4>>2]=c[n+4>>2];c[b+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}GA(n);nc[c[(c[d>>2]|0)+24>>2]&63](n,d);b=i+11|0;if((a[b>>0]|0)<0){b=c[i>>2]|0;a[m>>0]=0;Rc(b,m);c[i+4>>2]=0;b=i;}else{a[m>>0]=0;Rc(i,m);a[b>>0]=0;b=i;}KA(i,0);c[b>>2]=c[n>>2];c[b+4>>2]=c[n+4>>2];c[b+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}GA(n);b=Yb[c[(c[d>>2]|0)+36>>2]&127](d)|0;}else{d=hs(d,30596)|0;nc[c[(c[d>>2]|0)+44>>2]&63](m,d);b=c[m>>2]|0;a[e>>0]=b;a[e+1>>0]=b>>8;a[e+2>>0]=b>>16;a[e+3>>0]=b>>24;nc[c[(c[d>>2]|0)+32>>2]&63](n,d);b=k+11|0;if((a[b>>0]|0)<0){b=c[k>>2]|0;a[m>>0]=0;Rc(b,m);c[k+4>>2]=0;b=k;}else{a[m>>0]=0;Rc(k,m);a[b>>0]=0;b=k;}KA(k,0);c[b>>2]=c[n>>2];c[b+4>>2]=c[n+4>>2];c[b+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}GA(n);nc[c[(c[d>>2]|0)+28>>2]&63](n,d);b=j+11|0;if((a[b>>0]|0)<0){b=c[j>>2]|0;a[m>>0]=0;Rc(b,m);c[j+4>>2]=0;b=j;}else{a[m>>0]=0;Rc(j,m);a[b>>0]=0;b=j;}KA(j,0);c[b>>2]=c[n>>2];c[b+4>>2]=c[n+4>>2];c[b+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}GA(n);a[f>>0]=Yb[c[(c[d>>2]|0)+12>>2]&127](d)|0;a[g>>0]=Yb[c[(c[d>>2]|0)+16>>2]&127](d)|0;nc[c[(c[d>>2]|0)+20>>2]&63](n,d);b=h+11|0;if((a[b>>0]|0)<0){b=c[h>>2]|0;a[m>>0]=0;Rc(b,m);c[h+4>>2]=0;b=h;}else{a[m>>0]=0;Rc(h,m);a[b>>0]=0;b=h;}KA(h,0);c[b>>2]=c[n>>2];c[b+4>>2]=c[n+4>>2];c[b+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}GA(n);nc[c[(c[d>>2]|0)+24>>2]&63](n,d);b=i+11|0;if((a[b>>0]|0)<0){b=c[i>>2]|0;a[m>>0]=0;Rc(b,m);c[i+4>>2]=0;b=i;}else{a[m>>0]=0;Rc(i,m);a[b>>0]=0;b=i;}KA(i,0);c[b>>2]=c[n>>2];c[b+4>>2]=c[n+4>>2];c[b+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}GA(n);b=Yb[c[(c[d>>2]|0)+36>>2]&127](d)|0;}c[l>>2]=b;Pb=o;return;}function Aw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;i=a+4|0;f=(c[i>>2]|0)!=158;e=c[a>>2]|0;h=e;j=(c[d>>2]|0)-h|0;g=j<<1;g=j>>>0<2147483647?(g|0)==0?1:g:-1;h=(c[b>>2]|0)-h|0;e=Dq(f?e:0,g)|0;if(!e)mA();if(!f){f=c[a>>2]|0;c[a>>2]=e;if(f){kc[c[i>>2]&255](f);e=c[a>>2]|0;}}else c[a>>2]=e;c[i>>2]=155;c[b>>2]=e+h;c[d>>2]=(c[a>>2]|0)+g;return;}function Bw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;i=a+4|0;f=(c[i>>2]|0)!=158;e=c[a>>2]|0;h=e;j=(c[d>>2]|0)-h|0;g=j<<1;g=j>>>0<2147483647?(g|0)==0?4:g:-1;h=(c[b>>2]|0)-h>>2;e=Dq(f?e:0,g)|0;if(!e)mA();if(!f){f=c[a>>2]|0;c[a>>2]=e;if(f){kc[c[i>>2]&255](f);e=c[a>>2]|0;}}else c[a>>2]=e;c[i>>2]=155;c[b>>2]=e+(h<<2);c[d>>2]=(c[a>>2]|0)+(g>>>2<<2);return;}function Cw(a){a=a|0;Or(a);return;}function Dw(a){a=a|0;Or(a);oA(a);return;}function Ew(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;v=Pb;Pb=Pb+592|0;n=v+512|0;q=v+552|0;m=v+112|0;u=v+568|0;p=v+564|0;s=v+560|0;j=v+576|0;w=v+556|0;o=v;c[u>>2]=m;c[u+4>>2]=158;zr(s,g);b=hs(s,30404)|0;a[j>>0]=0;c[w>>2]=c[e>>2];l=c[g+4>>2]|0;c[n>>2]=c[w>>2];if(Gw(d,n,f,s,l,h,j,b,u,p,m+400|0)|0){bc[c[(c[b>>2]|0)+48>>2]&7](b,24762,24772,n)|0;l=c[p>>2]|0;f=c[u>>2]|0;b=l-f|0;if((b|0)>392){b=Bq((b>>>2)+2|0)|0;if(!b)mA();else{k=b;r=b;}}else{k=o;r=0;}if(!(a[j>>0]|0))b=k;else{a[k>>0]=45;b=k+1|0;}k=n+40|0;m=n;j=f;g=b;b=l;while(1){if(j>>>0>=b>>>0)break;f=c[j>>2]|0;b=n;while(1){if((b|0)==(k|0)){b=k;break;}if((c[b>>2]|0)==(f|0))break;b=b+4|0;}a[g>>0]=a[24762+(b-m>>2)>>0]|0;j=j+4|0;g=g+1|0;b=c[p>>2]|0;}a[g>>0]=0;c[q>>2]=i;if((So(o,24663,q)|0)!=1)Av(0);if(r|0)Cq(r);}b=c[d>>2]|0;do{if(b){f=c[b+12>>2]|0;if((f|0)==(c[b+16>>2]|0))b=Yb[c[(c[b>>2]|0)+36>>2]&127](b)|0;else b=er(c[f>>2]|0)|0;if(Ar(b,dr()|0)|0){c[d>>2]=0;g=1;break;}else{g=(c[d>>2]|0)==0;break;}}else g=1;}while(0);b=c[e>>2]|0;do{if(b){f=c[b+12>>2]|0;if((f|0)==(c[b+16>>2]|0))b=Yb[c[(c[b>>2]|0)+36>>2]&127](b)|0;else b=er(c[f>>2]|0)|0;if(!(Ar(b,dr()|0)|0)){if(g)break;else{t=34;break;}}else{c[e>>2]=0;t=32;break;}}else t=32;}while(0);if((t|0)==32?g:0)t=34;if((t|0)==34)c[h>>2]=c[h>>2]|2;f=c[d>>2]|0;is(s);b=c[u>>2]|0;c[u>>2]=0;if(b|0)kc[c[u+4>>2]&255](b);Pb=v;return f|0;}function Fw(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;s=Pb;Pb=Pb+432|0;j=s+424|0;b=s;r=s+416|0;m=s+408|0;p=s+400|0;k=s+428|0;n=s+404|0;c[r>>2]=b;c[r+4>>2]=158;zr(p,g);l=hs(p,30404)|0;a[k>>0]=0;o=c[e>>2]|0;c[n>>2]=o;g=c[g+4>>2]|0;c[j>>2]=c[n>>2];n=o;if(Gw(d,j,f,p,g,h,k,l,r,m,b+400|0)|0){b=i+8+3|0;if((a[b>>0]|0)<0){f=c[i>>2]|0;c[j>>2]=0;Vr(f,j);c[i+4>>2]=0;}else{c[j>>2]=0;Vr(i,j);a[b>>0]=0;}if(a[k>>0]|0)dB(i,_b[c[(c[l>>2]|0)+44>>2]&15](l,45)|0);k=_b[c[(c[l>>2]|0)+44>>2]&15](l,48)|0;g=c[m>>2]|0;j=g+-4|0;b=c[r>>2]|0;while(1){if(b>>>0>=j>>>0)break;if((c[b>>2]|0)!=(k|0))break;b=b+4|0;}Hw(i,b,g)|0;}b=c[d>>2]|0;do{if(b){g=c[b+12>>2]|0;if((g|0)==(c[b+16>>2]|0))b=Yb[c[(c[b>>2]|0)+36>>2]&127](b)|0;else b=er(c[g>>2]|0)|0;if(Ar(b,dr()|0)|0){c[d>>2]=0;g=1;break;}else{g=(c[d>>2]|0)==0;break;}}else g=1;}while(0);do{if(o){b=c[n+12>>2]|0;if((b|0)==(c[n+16>>2]|0))b=Yb[c[(c[o>>2]|0)+36>>2]&127](n)|0;else b=er(c[b>>2]|0)|0;if(!(Ar(b,dr()|0)|0)){if(g)break;else{q=27;break;}}else{c[e>>2]=0;q=25;break;}}else q=25;}while(0);if((q|0)==25?g:0)q=27;if((q|0)==27)c[h>>2]=c[h>>2]|2;g=c[d>>2]|0;is(p);b=c[r>>2]|0;c[r>>2]=0;if(b|0)kc[c[r+4>>2]&255](b);Pb=s;return g|0;}function Gw(b,e,f,g,h,i,j,k,l,m,n){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;var o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;X=Pb;Pb=Pb+512|0;H=X+496|0;N=X;W=X+488|0;P=X+480|0;I=X+476|0;J=X+500|0;K=X+472|0;L=X+468|0;R=X+456|0;S=X+444|0;T=X+432|0;U=X+420|0;V=X+408|0;M=X+404|0;Q=X+400|0;c[H>>2]=n;c[W>>2]=N;c[W+4>>2]=158;c[P>>2]=N;c[I>>2]=N+400;c[R>>2]=0;c[R+4>>2]=0;c[R+8>>2]=0;n=0;while(1){if((n|0)==3)break;c[R+(n<<2)>>2]=0;n=n+1|0;}c[S>>2]=0;c[S+4>>2]=0;c[S+8>>2]=0;n=0;while(1){if((n|0)==3)break;c[S+(n<<2)>>2]=0;n=n+1|0;}c[T>>2]=0;c[T+4>>2]=0;c[T+8>>2]=0;n=0;while(1){if((n|0)==3)break;c[T+(n<<2)>>2]=0;n=n+1|0;}c[U>>2]=0;c[U+4>>2]=0;c[U+8>>2]=0;n=0;while(1){if((n|0)==3)break;c[U+(n<<2)>>2]=0;n=n+1|0;}c[V>>2]=0;c[V+4>>2]=0;c[V+8>>2]=0;n=0;while(1){if((n|0)==3)break;c[V+(n<<2)>>2]=0;n=n+1|0;}Kw(f,g,J,K,L,R,S,T,U,M);c[m>>2]=c[l>>2];B=T+8+3|0;C=T+4|0;D=U+8+3|0;E=U+4|0;F=R+11|0;G=R+4|0;v=(h&512|0)!=0;w=S+8+3|0;x=J+3|0;y=S+4|0;z=V+8+3|0;A=V+4|0;N=0;u=0;a:while(1){if(u>>>0>=4){O=239;break;}n=c[b>>2]|0;do{if(n){f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=er(c[f>>2]|0)|0;if(Ar(n,dr()|0)|0){c[b>>2]=0;g=1;break;}else{g=(c[b>>2]|0)==0;break;}}else g=1;}while(0);f=c[e>>2]|0;do{if(f){n=c[f+12>>2]|0;if((n|0)==(c[f+16>>2]|0))n=Yb[c[(c[f>>2]|0)+36>>2]&127](f)|0;else n=er(c[n>>2]|0)|0;if(!(Ar(n,dr()|0)|0)){if(g){t=f;break;}else{O=239;break a;}}else{c[e>>2]=0;O=31;break;}}else O=31;}while(0);if((O|0)==31){O=0;if(g){O=239;break;}else t=0;}b:do{switch(a[J+u>>0]|0){case 1:{if((u|0)==3)n=N;else{n=c[b>>2]|0;f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=er(c[f>>2]|0)|0;if(!($b[c[(c[k>>2]|0)+12>>2]&31](k,8192,n)|0)){O=44;break a;}n=c[b>>2]|0;f=n+12|0;g=c[f>>2]|0;if((g|0)==(c[n+16>>2]|0))n=Yb[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[f>>2]=g+4;n=er(c[g>>2]|0)|0;}dB(V,n);O=46;}break;}case 0:{if((u|0)==3)n=N;else O=46;break;}case 3:{n=a[B>>0]|0;n=n<<24>>24<0?c[C>>2]|0:n&255;h=a[D>>0]|0;h=h<<24>>24<0?c[E>>2]|0:h&255;if((n|0)==(0-h|0))n=N;else{o=(n|0)==0;n=c[b>>2]|0;f=c[n+12>>2]|0;g=(f|0)==(c[n+16>>2]|0);if(o|(h|0)==0){if(g)n=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=er(c[f>>2]|0)|0;if(o){if((n|0)!=(c[((a[D>>0]|0)<0?c[U>>2]|0:U)>>2]|0)){n=N;break b;}n=c[b>>2]|0;f=n+12|0;g=c[f>>2]|0;if((g|0)==(c[n+16>>2]|0))Yb[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[f>>2]=g+4;er(c[g>>2]|0)|0;}a[j>>0]=1;n=a[D>>0]|0;n=(n<<24>>24<0?c[E>>2]|0:n&255)>>>0>1?U:N;break b;}if((n|0)!=(c[((a[B>>0]|0)<0?c[T>>2]|0:T)>>2]|0)){a[j>>0]=1;n=N;break b;}n=c[b>>2]|0;f=n+12|0;g=c[f>>2]|0;if((g|0)==(c[n+16>>2]|0))Yb[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[f>>2]=g+4;er(c[g>>2]|0)|0;}n=a[B>>0]|0;n=(n<<24>>24<0?c[C>>2]|0:n&255)>>>0>1?T:N;break b;}if(g)n=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=er(c[f>>2]|0)|0;f=c[b>>2]|0;g=f+12|0;h=c[g>>2]|0;o=(h|0)==(c[f+16>>2]|0);if((n|0)==(c[((a[B>>0]|0)<0?c[T>>2]|0:T)>>2]|0)){if(o)Yb[c[(c[f>>2]|0)+40>>2]&127](f)|0;else{c[g>>2]=h+4;er(c[h>>2]|0)|0;}n=a[B>>0]|0;n=(n<<24>>24<0?c[C>>2]|0:n&255)>>>0>1?T:N;break b;}if(o)n=Yb[c[(c[f>>2]|0)+36>>2]&127](f)|0;else n=er(c[h>>2]|0)|0;if((n|0)!=(c[((a[D>>0]|0)<0?c[U>>2]|0:U)>>2]|0)){O=103;break a;}n=c[b>>2]|0;f=n+12|0;g=c[f>>2]|0;if((g|0)==(c[n+16>>2]|0))Yb[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[f>>2]=g+4;er(c[g>>2]|0)|0;}a[j>>0]=1;n=a[D>>0]|0;n=(n<<24>>24<0?c[E>>2]|0:n&255)>>>0>1?U:N;}break;}case 2:{if(u>>>0<2|(N|0)!=0){f=a[w>>0]|0;g=c[S>>2]|0;n=f<<24>>24<0?g:S;if(u)O=108;}else{if(!(v|(u|0)==2&(a[x>>0]|0)!=0)){n=0;break b;}f=a[w>>0]|0;g=c[S>>2]|0;n=f<<24>>24<0?g:S;O=108;}c:do{if((O|0)==108){O=0;if((d[J+(u+-1)>>0]|0)<2){h=f;while(1){s=h<<24>>24<0;f=n;if(((s?g:S)+((s?c[y>>2]|0:h&255)<<2)|0)==(f|0)){f=h;break;}if(!($b[c[(c[k>>2]|0)+12>>2]&31](k,8192,c[f>>2]|0)|0)){O=112;break;}n=f+4|0;h=a[w>>0]|0;g=c[S>>2]|0;}if((O|0)==112){O=0;f=a[w>>0]|0;g=c[S>>2]|0;}o=f<<24>>24<0?g:S;s=o;q=n-s>>2;p=a[z>>0]|0;r=p<<24>>24<0;h=c[A>>2]|0;p=p&255;if(q>>>0>(r?h:p)>>>0)n=s;else{Y=(c[V>>2]|0)+(h<<2)|0;h=V+(p<<2)|0;p=r?Y:h;h=(r?Y:h)+(0-q<<2)|0;while(1){if((h|0)==(p|0))break c;if((c[h>>2]|0)!=(c[o>>2]|0)){n=s;break c;}o=o+4|0;h=h+4|0;}}}}}while(0);o=n;h=t;d:while(1){Y=f<<24>>24<0;if((o|0)==((Y?g:S)+((Y?c[y>>2]|0:f&255)<<2)|0))break;n=c[b>>2]|0;do{if(n){f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=er(c[f>>2]|0)|0;if(Ar(n,dr()|0)|0){c[b>>2]=0;f=1;break;}else{f=(c[b>>2]|0)==0;break;}}else f=1;}while(0);do{if(h){n=c[h+12>>2]|0;if((n|0)==(c[h+16>>2]|0))n=Yb[c[(c[h>>2]|0)+36>>2]&127](h)|0;else n=er(c[n>>2]|0)|0;if(!(Ar(n,dr()|0)|0)){if(f)break;else break d;}else{c[e>>2]=0;O=134;break;}}else O=134;}while(0);if((O|0)==134){O=0;if(f)break;else h=0;}n=c[b>>2]|0;f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=er(c[f>>2]|0)|0;if((n|0)!=(c[o>>2]|0))break;n=c[b>>2]|0;f=n+12|0;g=c[f>>2]|0;if((g|0)==(c[n+16>>2]|0))Yb[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[f>>2]=g+4;er(c[g>>2]|0)|0;}o=o+4|0;f=a[w>>0]|0;g=c[S>>2]|0;}if(v?(Y=a[w>>0]|0,t=Y<<24>>24<0,(o|0)!=((t?c[S>>2]|0:S)+((t?c[y>>2]|0:Y&255)<<2)|0)):0){O=146;break a;}else n=N;break;}case 4:{o=0;h=t;n=t;e:while(1){f=c[b>>2]|0;do{if(f){g=c[f+12>>2]|0;if((g|0)==(c[f+16>>2]|0))f=Yb[c[(c[f>>2]|0)+36>>2]&127](f)|0;else f=er(c[g>>2]|0)|0;if(Ar(f,dr()|0)|0){c[b>>2]=0;g=1;break;}else{g=(c[b>>2]|0)==0;break;}}else g=1;}while(0);do{if(h){f=c[h+12>>2]|0;if((f|0)==(c[h+16>>2]|0))f=Yb[c[(c[h>>2]|0)+36>>2]&127](h)|0;else f=er(c[f>>2]|0)|0;if(!(Ar(f,dr()|0)|0)){if(g){p=h;break;}else{h=n;break e;}}else{c[e>>2]=0;n=0;O=160;break;}}else O=160;}while(0);if((O|0)==160){O=0;if(g){h=n;break;}else p=0;}f=c[b>>2]|0;g=c[f+12>>2]|0;if((g|0)==(c[f+16>>2]|0))g=Yb[c[(c[f>>2]|0)+36>>2]&127](f)|0;else g=er(c[g>>2]|0)|0;if($b[c[(c[k>>2]|0)+12>>2]&31](k,2048,g)|0){f=c[m>>2]|0;if((f|0)==(c[H>>2]|0)){Lw(l,m,H);f=c[m>>2]|0;}c[m>>2]=f+4;c[f>>2]=g;f=o+1|0;}else{Y=a[F>>0]|0;if(!((g|0)==(c[L>>2]|0)&(o|0?((Y<<24>>24<0?c[G>>2]|0:Y&255)|0)!=0:0))){h=n;break;}f=c[P>>2]|0;if((f|0)==(c[I>>2]|0)){Bw(W,P,I);f=c[P>>2]|0;}c[P>>2]=f+4;c[f>>2]=o;f=0;}g=c[b>>2]|0;h=g+12|0;o=c[h>>2]|0;if((o|0)==(c[g+16>>2]|0))Yb[c[(c[g>>2]|0)+40>>2]&127](g)|0;else{c[h>>2]=o+4;er(c[o>>2]|0)|0;}o=f;h=p;}n=c[P>>2]|0;if(o|0?(c[W>>2]|0)!=(n|0):0){if((n|0)==(c[I>>2]|0)){Bw(W,P,I);n=c[P>>2]|0;}c[P>>2]=n+4;c[n>>2]=o;}f:do{if((c[M>>2]|0)>0){n=c[b>>2]|0;do{if(n){f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=er(c[f>>2]|0)|0;if(Ar(n,dr()|0)|0){c[b>>2]=0;f=1;break;}else{f=(c[b>>2]|0)==0;break;}}else f=1;}while(0);do{if(h){n=c[h+12>>2]|0;if((n|0)==(c[h+16>>2]|0))n=Yb[c[(c[h>>2]|0)+36>>2]&127](h)|0;else n=er(c[n>>2]|0)|0;if(!(Ar(n,dr()|0)|0)){if(f)break;else{O=201;break a;}}else{c[e>>2]=0;O=195;break;}}else O=195;}while(0);if((O|0)==195){O=0;if(f){O=201;break a;}else h=0;}n=c[b>>2]|0;f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=er(c[f>>2]|0)|0;if((n|0)!=(c[K>>2]|0)){O=201;break a;}n=c[b>>2]|0;f=n+12|0;g=c[f>>2]|0;if((g|0)==(c[n+16>>2]|0))Yb[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[f>>2]=g+4;er(c[g>>2]|0)|0;}g=h;while(1){if((c[M>>2]|0)<=0)break f;n=c[b>>2]|0;do{if(n){f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=er(c[f>>2]|0)|0;if(Ar(n,dr()|0)|0){c[b>>2]=0;f=1;break;}else{f=(c[b>>2]|0)==0;break;}}else f=1;}while(0);do{if(g){n=c[g+12>>2]|0;if((n|0)==(c[g+16>>2]|0))n=Yb[c[(c[g>>2]|0)+36>>2]&127](g)|0;else n=er(c[n>>2]|0)|0;if(!(Ar(n,dr()|0)|0)){if(f){h=g;break;}else{O=226;break a;}}else{c[e>>2]=0;O=220;break;}}else O=220;}while(0);if((O|0)==220){O=0;if(f){O=226;break a;}else h=0;}n=c[b>>2]|0;f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=er(c[f>>2]|0)|0;if(!($b[c[(c[k>>2]|0)+12>>2]&31](k,2048,n)|0)){O=226;break a;}if((c[m>>2]|0)==(c[H>>2]|0))Lw(l,m,H);n=c[b>>2]|0;f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=er(c[f>>2]|0)|0;f=c[m>>2]|0;c[m>>2]=f+4;c[f>>2]=n;c[M>>2]=(c[M>>2]|0)+-1;n=c[b>>2]|0;f=n+12|0;g=c[f>>2]|0;if((g|0)==(c[n+16>>2]|0))Yb[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[f>>2]=g+4;er(c[g>>2]|0)|0;}g=h;}}}while(0);if((c[m>>2]|0)==(c[l>>2]|0)){O=237;break a;}else n=N;break;}default:n=N;}}while(0);g:do{if((O|0)==46){O=0;g=t;while(1){n=c[b>>2]|0;do{if(n){f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=er(c[f>>2]|0)|0;if(Ar(n,dr()|0)|0){c[b>>2]=0;f=1;break;}else{f=(c[b>>2]|0)==0;break;}}else f=1;}while(0);do{if(g){n=c[g+12>>2]|0;if((n|0)==(c[g+16>>2]|0))n=Yb[c[(c[g>>2]|0)+36>>2]&127](g)|0;else n=er(c[n>>2]|0)|0;if(!(Ar(n,dr()|0)|0)){if(f){h=g;break;}else{n=N;break g;}}else{c[e>>2]=0;O=60;break;}}else O=60;}while(0);if((O|0)==60){O=0;if(f){n=N;break g;}else h=0;}n=c[b>>2]|0;f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=er(c[f>>2]|0)|0;if(!($b[c[(c[k>>2]|0)+12>>2]&31](k,8192,n)|0)){n=N;break g;}n=c[b>>2]|0;f=n+12|0;g=c[f>>2]|0;if((g|0)==(c[n+16>>2]|0))n=Yb[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[f>>2]=g+4;n=er(c[g>>2]|0)|0;}dB(V,n);g=h;}}}while(0);N=n;u=u+1|0;}h:do{if((O|0)==44){c[i>>2]=c[i>>2]|4;f=0;}else if((O|0)==103){c[i>>2]=c[i>>2]|4;f=0;}else if((O|0)==146){c[i>>2]=c[i>>2]|4;f=0;}else if((O|0)==201){c[i>>2]=c[i>>2]|4;f=0;}else if((O|0)==226){c[i>>2]=c[i>>2]|4;f=0;}else if((O|0)==237){c[i>>2]=c[i>>2]|4;f=0;}else if((O|0)==239){i:do{if(N|0){o=N+8+3|0;p=N+4|0;h=1;j:while(1){n=a[o>>0]|0;if(n<<24>>24<0)n=c[p>>2]|0;else n=n&255;if(h>>>0>=n>>>0)break i;n=c[b>>2]|0;do{if(n){f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=er(c[f>>2]|0)|0;if(Ar(n,dr()|0)|0){c[b>>2]=0;g=1;break;}else{g=(c[b>>2]|0)==0;break;}}else g=1;}while(0);n=c[e>>2]|0;do{if(n){f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=er(c[f>>2]|0)|0;if(!(Ar(n,dr()|0)|0)){if(g)break;else break j;}else{c[e>>2]=0;O=258;break;}}else O=258;}while(0);if((O|0)==258?(O=0,g):0)break;n=c[b>>2]|0;f=c[n+12>>2]|0;if((f|0)==(c[n+16>>2]|0))n=Yb[c[(c[n>>2]|0)+36>>2]&127](n)|0;else n=er(c[f>>2]|0)|0;if((a[o>>0]|0)<0)f=c[N>>2]|0;else f=N;if((n|0)!=(c[f+(h<<2)>>2]|0))break;n=c[b>>2]|0;f=n+12|0;g=c[f>>2]|0;if((g|0)==(c[n+16>>2]|0))Yb[c[(c[n>>2]|0)+40>>2]&127](n)|0;else{c[f>>2]=g+4;er(c[g>>2]|0)|0;}h=h+1|0;}c[i>>2]=c[i>>2]|4;f=0;break h;}}while(0);f=c[W>>2]|0;n=c[P>>2]|0;if((f|0)!=(n|0)){c[Q>>2]=0;ws(R,f,n,Q);if(!(c[Q>>2]|0)){f=1;break;}else{c[i>>2]=c[i>>2]|4;f=0;break;}}else f=1;}}while(0);XA(V);XA(U);XA(T);XA(S);GA(R);n=c[W>>2]|0;c[W>>2]=0;if(n|0)kc[c[W+4>>2]&255](n);Pb=X;return f|0;}function Hw(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;n=Pb;Pb=Pb+16|0;l=n;f=b+8|0;m=f+3|0;i=a[m>>0]|0;g=i<<24>>24<0;if(g){h=(c[f>>2]&2147483647)+-1|0;k=c[b+4>>2]|0;}else{h=1;k=i&255;}f=e-d|0;j=f>>2;do{if(f|0){if(g){g=c[b>>2]|0;f=c[b+4>>2]|0;}else{g=b;f=i&255;}if(Iw(d,g,g+(f<<2)|0)|0){c[l>>2]=0;c[l+4>>2]=0;c[l+8>>2]=0;Jw(l,d,e);m=a[l+8+3>>0]|0;e=m<<24>>24<0;cB(b,e?c[l>>2]|0:l,e?c[l+4>>2]|0:m&255)|0;XA(l);break;}if((h-k|0)>>>0<j>>>0)bB(b,h,k+j-h|0,k,k,0,0);if((a[m>>0]|0)<0)f=c[b>>2]|0;else f=b;f=f+(k<<2)|0;while(1){if((d|0)==(e|0))break;Vr(f,d);f=f+4|0;d=d+4|0;}c[l>>2]=0;Vr(f,l);d=k+j|0;if((a[m>>0]|0)<0){c[b+4>>2]=d;break;}else{a[m>>0]=d;break;}}}while(0);Pb=n;return b|0;}function Iw(a,b,c){a=a|0;b=b|0;c=c|0;return b>>>0<=a>>>0&a>>>0<c>>>0|0;}function Jw(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;j=Pb;Pb=Pb+16|0;i=j;h=e-d>>2;if(h>>>0>1073741807)AA(b);do{if(h>>>0>=2){g=h+4&-4;if(g>>>0>1073741823)Ha();else{f=nA(g<<2)|0;c[b>>2]=f;c[b+8>>2]=g|-2147483648;c[b+4>>2]=h;break;}}else{a[b+8+3>>0]=h;f=b;}}while(0);while(1){if((d|0)==(e|0))break;Vr(f,d);d=d+4|0;f=f+4|0;}c[i>>2]=0;Vr(f,i);Pb=j;return;}function Kw(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0;o=Pb;Pb=Pb+16|0;m=o+12|0;n=o;if(b){d=hs(d,30620)|0;nc[c[(c[d>>2]|0)+44>>2]&63](m,d);b=c[m>>2]|0;a[e>>0]=b;a[e+1>>0]=b>>8;a[e+2>>0]=b>>16;a[e+3>>0]=b>>24;nc[c[(c[d>>2]|0)+32>>2]&63](n,d);b=k+8+3|0;if((a[b>>0]|0)<0){e=c[k>>2]|0;c[m>>2]=0;Vr(e,m);c[k+4>>2]=0;}else{c[m>>2]=0;Vr(k,m);a[b>>0]=0;}$A(k,0);c[k>>2]=c[n>>2];c[k+4>>2]=c[n+4>>2];c[k+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}XA(n);nc[c[(c[d>>2]|0)+28>>2]&63](n,d);b=j+8+3|0;if((a[b>>0]|0)<0){k=c[j>>2]|0;c[m>>2]=0;Vr(k,m);c[j+4>>2]=0;}else{c[m>>2]=0;Vr(j,m);a[b>>0]=0;}$A(j,0);c[j>>2]=c[n>>2];c[j+4>>2]=c[n+4>>2];c[j+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}XA(n);c[f>>2]=Yb[c[(c[d>>2]|0)+12>>2]&127](d)|0;c[g>>2]=Yb[c[(c[d>>2]|0)+16>>2]&127](d)|0;nc[c[(c[d>>2]|0)+20>>2]&63](n,d);b=h+11|0;if((a[b>>0]|0)<0){b=c[h>>2]|0;a[m>>0]=0;Rc(b,m);c[h+4>>2]=0;b=h;}else{a[m>>0]=0;Rc(h,m);a[b>>0]=0;b=h;}KA(h,0);c[b>>2]=c[n>>2];c[b+4>>2]=c[n+4>>2];c[b+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}GA(n);nc[c[(c[d>>2]|0)+24>>2]&63](n,d);b=i+8+3|0;if((a[b>>0]|0)<0){h=c[i>>2]|0;c[m>>2]=0;Vr(h,m);c[i+4>>2]=0;}else{c[m>>2]=0;Vr(i,m);a[b>>0]=0;}$A(i,0);c[i>>2]=c[n>>2];c[i+4>>2]=c[n+4>>2];c[i+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}XA(n);b=Yb[c[(c[d>>2]|0)+36>>2]&127](d)|0;}else{d=hs(d,30612)|0;nc[c[(c[d>>2]|0)+44>>2]&63](m,d);b=c[m>>2]|0;a[e>>0]=b;a[e+1>>0]=b>>8;a[e+2>>0]=b>>16;a[e+3>>0]=b>>24;nc[c[(c[d>>2]|0)+32>>2]&63](n,d);b=k+8+3|0;if((a[b>>0]|0)<0){e=c[k>>2]|0;c[m>>2]=0;Vr(e,m);c[k+4>>2]=0;}else{c[m>>2]=0;Vr(k,m);a[b>>0]=0;}$A(k,0);c[k>>2]=c[n>>2];c[k+4>>2]=c[n+4>>2];c[k+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}XA(n);nc[c[(c[d>>2]|0)+28>>2]&63](n,d);b=j+8+3|0;if((a[b>>0]|0)<0){k=c[j>>2]|0;c[m>>2]=0;Vr(k,m);c[j+4>>2]=0;}else{c[m>>2]=0;Vr(j,m);a[b>>0]=0;}$A(j,0);c[j>>2]=c[n>>2];c[j+4>>2]=c[n+4>>2];c[j+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}XA(n);c[f>>2]=Yb[c[(c[d>>2]|0)+12>>2]&127](d)|0;c[g>>2]=Yb[c[(c[d>>2]|0)+16>>2]&127](d)|0;nc[c[(c[d>>2]|0)+20>>2]&63](n,d);b=h+11|0;if((a[b>>0]|0)<0){b=c[h>>2]|0;a[m>>0]=0;Rc(b,m);c[h+4>>2]=0;b=h;}else{a[m>>0]=0;Rc(h,m);a[b>>0]=0;b=h;}KA(h,0);c[b>>2]=c[n>>2];c[b+4>>2]=c[n+4>>2];c[b+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}GA(n);nc[c[(c[d>>2]|0)+24>>2]&63](n,d);b=i+8+3|0;if((a[b>>0]|0)<0){h=c[i>>2]|0;c[m>>2]=0;Vr(h,m);c[i+4>>2]=0;}else{c[m>>2]=0;Vr(i,m);a[b>>0]=0;}$A(i,0);c[i>>2]=c[n>>2];c[i+4>>2]=c[n+4>>2];c[i+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}XA(n);b=Yb[c[(c[d>>2]|0)+36>>2]&127](d)|0;}c[l>>2]=b;Pb=o;return;}function Lw(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;i=a+4|0;f=(c[i>>2]|0)!=158;e=c[a>>2]|0;h=e;j=(c[d>>2]|0)-h|0;g=j<<1;g=j>>>0<2147483647?(g|0)==0?4:g:-1;h=(c[b>>2]|0)-h>>2;e=Dq(f?e:0,g)|0;if(!e)mA();if(!f){f=c[a>>2]|0;c[a>>2]=e;if(f){kc[c[i>>2]&255](f);e=c[a>>2]|0;}}else c[a>>2]=e;c[i>>2]=155;c[b>>2]=e+(h<<2);c[d>>2]=(c[a>>2]|0)+(g>>>2<<2);return;}function Mw(a){a=a|0;Or(a);return;}function Nw(a){a=a|0;Or(a);oA(a);return;}function Ow(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=+i;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;E=Pb;Pb=Pb+416|0;q=E+336|0;k=E+328|0;b=E+224|0;l=E+400|0;j=E+112|0;D=E+396|0;r=E+408|0;s=E+405|0;t=E+404|0;A=E+384|0;B=E+372|0;C=E+360|0;o=E+356|0;p=E;u=E+352|0;v=E+348|0;w=E+344|0;c[l>>2]=b;g[q>>3]=i;b=Jp(b,100,24868,q)|0;if(b>>>0>99){b=ks()|0;g[k>>3]=i;b=Ht(l,b,24868,k)|0;j=c[l>>2]|0;if(!j)mA();k=Bq(b)|0;if(!k)mA();else{x=k;z=b;G=k;H=j;}}else{x=j;z=b;G=0;H=0;}zr(D,f);n=hs(D,30372)|0;m=c[l>>2]|0;bc[c[(c[n>>2]|0)+32>>2]&7](n,m,m+z|0,x)|0;if(!z)m=0;else m=(a[c[l>>2]>>0]|0)==45;c[A>>2]=0;c[A+4>>2]=0;c[A+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[A+(b<<2)>>2]=0;b=b+1|0;}c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[B+(b<<2)>>2]=0;b=b+1|0;}c[C>>2]=0;c[C+4>>2]=0;c[C+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[C+(b<<2)>>2]=0;b=b+1|0;}Qw(e,m,D,r,s,t,A,B,C,o);l=c[o>>2]|0;if((z|0)>(l|0)){k=a[C+11>>0]|0;b=a[B+11>>0]|0;b=b<<24>>24<0?c[B+4>>2]|0:b&255;j=l+1+(z-l<<1)|0;k=k<<24>>24<0?c[C+4>>2]|0:k&255;}else{k=a[C+11>>0]|0;b=a[B+11>>0]|0;b=b<<24>>24<0?c[B+4>>2]|0:b&255;j=l+2|0;k=k<<24>>24<0?c[C+4>>2]|0:k&255;}b=j+k+b|0;if(b>>>0>100){b=Bq(b)|0;if(!b)mA();else{y=b;F=b;}}else{y=p;F=0;}Rw(y,u,v,c[f+4>>2]|0,x,x+z|0,n,m,r,a[s>>0]|0,a[t>>0]|0,A,B,C,l);c[w>>2]=c[d>>2];d=c[u>>2]|0;b=c[v>>2]|0;c[q>>2]=c[w>>2];b=Ft(q,y,d,b,f,h)|0;if(F|0)Cq(F);GA(C);GA(B);GA(A);is(D);if(G|0)Cq(G);if(H|0)Cq(H);Pb=E;return b|0;}function Pw(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;C=Pb;Pb=Pb+176|0;p=C+156|0;B=C+152|0;u=C+164|0;v=C+161|0;w=C+160|0;y=C+140|0;z=C+128|0;A=C+116|0;l=C+112|0;n=C;q=C+108|0;r=C+104|0;s=C+100|0;zr(B,f);t=hs(B,30372)|0;i=h+11|0;o=a[i>>0]|0;b=o<<24>>24<0;j=h+4|0;if(!((b?c[j>>2]|0:o&255)|0))o=0;else{o=a[(b?c[h>>2]|0:h)>>0]|0;o=o<<24>>24==(_b[c[(c[t>>2]|0)+28>>2]&15](t,45)|0)<<24>>24;};c[y>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[y+(b<<2)>>2]=0;b=b+1|0;}c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[z+(b<<2)>>2]=0;b=b+1|0;}c[A>>2]=0;c[A+4>>2]=0;c[A+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[A+(b<<2)>>2]=0;b=b+1|0;}Qw(e,o,B,u,v,w,y,z,A,l);k=a[i>>0]|0;m=k<<24>>24<0;k=m?c[j>>2]|0:k&255;j=c[l>>2]|0;if((k|0)>(j|0)){e=a[A+11>>0]|0;b=a[z+11>>0]|0;b=b<<24>>24<0?c[z+4>>2]|0:b&255;i=j+1+(k-j<<1)|0;e=e<<24>>24<0?c[A+4>>2]|0:e&255;}else{e=a[A+11>>0]|0;b=a[z+11>>0]|0;b=b<<24>>24<0?c[z+4>>2]|0:b&255;i=j+2|0;e=e<<24>>24<0?c[A+4>>2]|0:e&255;}b=i+e+b|0;if(b>>>0>100){b=Bq(b)|0;if(!b)mA();else{x=b;D=b;}}else{x=n;D=0;}h=m?c[h>>2]|0:h;Rw(x,q,r,c[f+4>>2]|0,h,h+k|0,t,o,u,a[v>>0]|0,a[w>>0]|0,y,z,A,j);c[s>>2]=c[d>>2];h=c[q>>2]|0;b=c[r>>2]|0;c[p>>2]=c[s>>2];b=Ft(p,x,h,b,f,g)|0;if(D|0)Cq(D);GA(A);GA(z);GA(y);is(B);Pb=C;return b|0;}function Qw(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0;p=Pb;Pb=Pb+16|0;n=p+12|0;o=p;if(b){m=hs(e,30604)|0;if(d){nc[c[(c[m>>2]|0)+44>>2]&63](n,m);b=c[n>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;nc[c[(c[m>>2]|0)+32>>2]&63](o,m);b=k+11|0;if((a[b>>0]|0)<0){b=c[k>>2]|0;a[n>>0]=0;Rc(b,n);c[k+4>>2]=0;b=k;}else{a[n>>0]=0;Rc(k,n);a[b>>0]=0;b=k;}KA(k,0);c[b>>2]=c[o>>2];c[b+4>>2]=c[o+4>>2];c[b+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0;}GA(o);e=m;}else{nc[c[(c[m>>2]|0)+40>>2]&63](n,m);b=c[n>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;nc[c[(c[m>>2]|0)+28>>2]&63](o,m);b=k+11|0;if((a[b>>0]|0)<0){b=c[k>>2]|0;a[n>>0]=0;Rc(b,n);c[k+4>>2]=0;b=k;}else{a[n>>0]=0;Rc(k,n);a[b>>0]=0;b=k;}KA(k,0);c[b>>2]=c[o>>2];c[b+4>>2]=c[o+4>>2];c[b+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0;}GA(o);e=m;}a[g>>0]=Yb[c[(c[m>>2]|0)+12>>2]&127](m)|0;a[h>>0]=Yb[c[(c[m>>2]|0)+16>>2]&127](m)|0;nc[c[(c[e>>2]|0)+20>>2]&63](o,m);b=i+11|0;if((a[b>>0]|0)<0){b=c[i>>2]|0;a[n>>0]=0;Rc(b,n);c[i+4>>2]=0;b=i;}else{a[n>>0]=0;Rc(i,n);a[b>>0]=0;b=i;}KA(i,0);c[b>>2]=c[o>>2];c[b+4>>2]=c[o+4>>2];c[b+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0;}GA(o);nc[c[(c[e>>2]|0)+24>>2]&63](o,m);b=j+11|0;if((a[b>>0]|0)<0){b=c[j>>2]|0;a[n>>0]=0;Rc(b,n);c[j+4>>2]=0;b=j;}else{a[n>>0]=0;Rc(j,n);a[b>>0]=0;b=j;}KA(j,0);c[b>>2]=c[o>>2];c[b+4>>2]=c[o+4>>2];c[b+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0;}GA(o);b=Yb[c[(c[m>>2]|0)+36>>2]&127](m)|0;}else{m=hs(e,30596)|0;if(d){nc[c[(c[m>>2]|0)+44>>2]&63](n,m);b=c[n>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;nc[c[(c[m>>2]|0)+32>>2]&63](o,m);b=k+11|0;if((a[b>>0]|0)<0){b=c[k>>2]|0;a[n>>0]=0;Rc(b,n);c[k+4>>2]=0;b=k;}else{a[n>>0]=0;Rc(k,n);a[b>>0]=0;b=k;}KA(k,0);c[b>>2]=c[o>>2];c[b+4>>2]=c[o+4>>2];c[b+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0;}GA(o);e=m;}else{nc[c[(c[m>>2]|0)+40>>2]&63](n,m);b=c[n>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;nc[c[(c[m>>2]|0)+28>>2]&63](o,m);b=k+11|0;if((a[b>>0]|0)<0){b=c[k>>2]|0;a[n>>0]=0;Rc(b,n);c[k+4>>2]=0;b=k;}else{a[n>>0]=0;Rc(k,n);a[b>>0]=0;b=k;}KA(k,0);c[b>>2]=c[o>>2];c[b+4>>2]=c[o+4>>2];c[b+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0;}GA(o);e=m;}a[g>>0]=Yb[c[(c[m>>2]|0)+12>>2]&127](m)|0;a[h>>0]=Yb[c[(c[m>>2]|0)+16>>2]&127](m)|0;nc[c[(c[e>>2]|0)+20>>2]&63](o,m);b=i+11|0;if((a[b>>0]|0)<0){b=c[i>>2]|0;a[n>>0]=0;Rc(b,n);c[i+4>>2]=0;b=i;}else{a[n>>0]=0;Rc(i,n);a[b>>0]=0;b=i;}KA(i,0);c[b>>2]=c[o>>2];c[b+4>>2]=c[o+4>>2];c[b+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0;}GA(o);nc[c[(c[e>>2]|0)+24>>2]&63](o,m);b=j+11|0;if((a[b>>0]|0)<0){b=c[j>>2]|0;a[n>>0]=0;Rc(b,n);c[j+4>>2]=0;b=j;}else{a[n>>0]=0;Rc(j,n);a[b>>0]=0;b=j;}KA(j,0);c[b>>2]=c[o>>2];c[b+4>>2]=c[o+4>>2];c[b+8>>2]=c[o+8>>2];b=0;while(1){if((b|0)==3)break;c[o+(b<<2)>>2]=0;b=b+1|0;}GA(o);b=Yb[c[(c[m>>2]|0)+36>>2]&127](m)|0;}c[l>>2]=b;Pb=p;return;}function Rw(d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;r=r|0;var s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;c[f>>2]=d;y=q+11|0;G=q+4|0;z=p+11|0;A=p+4|0;B=(g&512|0)==0;C=j+8|0;D=(r|0)>0;E=o+11|0;F=o+4|0;x=0;while(1){if((x|0)==4)break;a:do{switch(a[l+x>>0]|0){case 0:{c[e>>2]=c[f>>2];break;}case 1:{c[e>>2]=c[f>>2];v=_b[c[(c[j>>2]|0)+28>>2]&15](j,32)|0;w=c[f>>2]|0;c[f>>2]=w+1;a[w>>0]=v;break;}case 3:{w=a[y>>0]|0;s=w<<24>>24<0;if((s?c[G>>2]|0:w&255)|0){v=a[(s?c[q>>2]|0:q)>>0]|0;w=c[f>>2]|0;c[f>>2]=w+1;a[w>>0]=v;}break;}case 2:{t=a[z>>0]|0;s=t<<24>>24<0;t=s?c[A>>2]|0:t&255;if(!(B|(t|0)==0)){w=s?c[p>>2]|0:p;u=w+t|0;s=c[f>>2]|0;t=w;while(1){if((t|0)==(u|0))break;a[s>>0]=a[t>>0]|0;s=s+1|0;t=t+1|0;}c[f>>2]=s;}break;}case 4:{t=c[f>>2]|0;h=k?h+1|0:h;u=h;while(1){if(u>>>0>=i>>>0)break;s=a[u>>0]|0;if(s<<24>>24<=-1)break;if(!(b[(c[C>>2]|0)+(s<<24>>24<<1)>>1]&2048))break;u=u+1|0;}if(D){v=r;while(1){s=(v|0)>0;if(!(u>>>0>h>>>0&s))break;w=u+-1|0;H=a[w>>0]|0;s=c[f>>2]|0;c[f>>2]=s+1;a[s>>0]=H;v=v+-1|0;u=w;}if(s)w=_b[c[(c[j>>2]|0)+28>>2]&15](j,48)|0;else w=0;s=v;while(1){v=c[f>>2]|0;c[f>>2]=v+1;if((s|0)<=0)break;a[v>>0]=w;s=s+-1|0;}a[v>>0]=m;}b:do{if((u|0)==(h|0)){w=_b[c[(c[j>>2]|0)+28>>2]&15](j,48)|0;H=c[f>>2]|0;c[f>>2]=H+1;a[H>>0]=w;}else{H=a[E>>0]|0;s=H<<24>>24<0;if(!((s?c[F>>2]|0:H&255)|0))s=-1;else s=a[(s?c[o>>2]|0:o)>>0]|0;v=0;w=0;while(1){if((u|0)==(h|0))break b;if((w|0)==(s|0)){H=c[f>>2]|0;c[f>>2]=H+1;a[H>>0]=n;v=v+1|0;H=a[E>>0]|0;s=H<<24>>24<0;if(v>>>0<(s?c[F>>2]|0:H&255)>>>0){s=a[(s?c[o>>2]|0:o)+v>>0]|0;s=s<<24>>24==127?-1:s<<24>>24;w=0;}else{s=w;w=0;}}H=u+-1|0;J=a[H>>0]|0;I=c[f>>2]|0;c[f>>2]=I+1;a[I>>0]=J;w=w+1|0;u=H;}}}while(0);s=c[f>>2]|0;if((t|0)!=(s|0))while(1){s=s+-1|0;if(t>>>0>=s>>>0)break a;J=a[t>>0]|0;a[t>>0]=a[s>>0]|0;a[s>>0]=J;t=t+1|0;}break;}default:{}}}while(0);x=x+1|0;}h=a[y>>0]|0;s=h<<24>>24<0;h=s?c[G>>2]|0:h&255;if(h>>>0>1){J=s?c[q>>2]|0:q;t=J+h|0;s=c[f>>2]|0;h=J;while(1){h=h+1|0;if((h|0)==(t|0))break;a[s>>0]=a[h>>0]|0;s=s+1|0;}c[f>>2]=s;}switch((g&176)<<24>>24){case 32:{c[e>>2]=c[f>>2];break;}case 16:break;default:c[e>>2]=d;}return;}function Sw(a){a=a|0;Or(a);return;}function Tw(a){a=a|0;Or(a);oA(a);return;}function Uw(b,d,e,f,h,i){b=b|0;d=d|0;e=e|0;f=f|0;h=h|0;i=+i;var j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;E=Pb;Pb=Pb+992|0;q=E+912|0;k=E+904|0;b=E+800|0;l=E+984|0;j=E+400|0;D=E+980|0;r=E+988|0;s=E+976|0;t=E+972|0;A=E+960|0;B=E+948|0;C=E+936|0;o=E+932|0;p=E;u=E+928|0;v=E+924|0;w=E+920|0;c[l>>2]=b;g[q>>3]=i;b=Jp(b,100,24868,q)|0;if(b>>>0>99){b=ks()|0;g[k>>3]=i;b=Ht(l,b,24868,k)|0;j=c[l>>2]|0;if(!j)mA();k=Bq(b<<2)|0;if(!k)mA();else{x=k;z=b;G=k;H=j;}}else{x=j;z=b;G=0;H=0;}zr(D,f);n=hs(D,30404)|0;m=c[l>>2]|0;bc[c[(c[n>>2]|0)+48>>2]&7](n,m,m+z|0,x)|0;if(!z)m=0;else m=(a[c[l>>2]>>0]|0)==45;c[A>>2]=0;c[A+4>>2]=0;c[A+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[A+(b<<2)>>2]=0;b=b+1|0;}c[B>>2]=0;c[B+4>>2]=0;c[B+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[B+(b<<2)>>2]=0;b=b+1|0;}c[C>>2]=0;c[C+4>>2]=0;c[C+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[C+(b<<2)>>2]=0;b=b+1|0;}Ww(e,m,D,r,s,t,A,B,C,o);l=c[o>>2]|0;if((z|0)>(l|0)){k=a[C+8+3>>0]|0;b=a[B+8+3>>0]|0;b=b<<24>>24<0?c[B+4>>2]|0:b&255;j=l+1+(z-l<<1)|0;k=k<<24>>24<0?c[C+4>>2]|0:k&255;}else{k=a[C+8+3>>0]|0;b=a[B+8+3>>0]|0;b=b<<24>>24<0?c[B+4>>2]|0:b&255;j=l+2|0;k=k<<24>>24<0?c[C+4>>2]|0:k&255;}b=j+k+b|0;if(b>>>0>100){b=Bq(b<<2)|0;if(!b)mA();else{y=b;F=b;}}else{y=p;F=0;}Xw(y,u,v,c[f+4>>2]|0,x,x+(z<<2)|0,n,m,r,c[s>>2]|0,c[t>>2]|0,A,B,C,l);c[w>>2]=c[d>>2];d=c[u>>2]|0;b=c[v>>2]|0;c[q>>2]=c[w>>2];b=Vt(q,y,d,b,f,h)|0;if(F|0)Cq(F);XA(C);XA(B);GA(A);is(D);if(G|0)Cq(G);if(H|0)Cq(H);Pb=E;return b|0;}function Vw(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;C=Pb;Pb=Pb+480|0;p=C+464|0;B=C+460|0;u=C+468|0;v=C+456|0;w=C+452|0;y=C+440|0;z=C+428|0;A=C+416|0;l=C+412|0;n=C;q=C+408|0;r=C+404|0;s=C+400|0;zr(B,f);t=hs(B,30404)|0;i=h+8+3|0;o=a[i>>0]|0;b=o<<24>>24<0;j=h+4|0;if(!((b?c[j>>2]|0:o&255)|0))o=0;else{o=c[(b?c[h>>2]|0:h)>>2]|0;o=(o|0)==(_b[c[(c[t>>2]|0)+44>>2]&15](t,45)|0);};c[y>>2]=0;c[y+4>>2]=0;c[y+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[y+(b<<2)>>2]=0;b=b+1|0;}c[z>>2]=0;c[z+4>>2]=0;c[z+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[z+(b<<2)>>2]=0;b=b+1|0;}c[A>>2]=0;c[A+4>>2]=0;c[A+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[A+(b<<2)>>2]=0;b=b+1|0;}Ww(e,o,B,u,v,w,y,z,A,l);k=a[i>>0]|0;m=k<<24>>24<0;k=m?c[j>>2]|0:k&255;j=c[l>>2]|0;if((k|0)>(j|0)){e=a[A+8+3>>0]|0;b=a[z+8+3>>0]|0;b=b<<24>>24<0?c[z+4>>2]|0:b&255;i=j+1+(k-j<<1)|0;e=e<<24>>24<0?c[A+4>>2]|0:e&255;}else{e=a[A+8+3>>0]|0;b=a[z+8+3>>0]|0;b=b<<24>>24<0?c[z+4>>2]|0:b&255;i=j+2|0;e=e<<24>>24<0?c[A+4>>2]|0:e&255;}b=i+e+b|0;if(b>>>0>100){b=Bq(b<<2)|0;if(!b)mA();else{x=b;D=b;}}else{x=n;D=0;}h=m?c[h>>2]|0:h;Xw(x,q,r,c[f+4>>2]|0,h,h+(k<<2)|0,t,o,u,c[v>>2]|0,c[w>>2]|0,y,z,A,j);c[s>>2]=c[d>>2];h=c[q>>2]|0;b=c[r>>2]|0;c[p>>2]=c[s>>2];b=Vt(p,x,h,b,f,g)|0;if(D|0)Cq(D);XA(A);XA(z);GA(y);is(B);Pb=C;return b|0;}function Ww(b,d,e,f,g,h,i,j,k,l){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0;o=Pb;Pb=Pb+16|0;m=o+12|0;n=o;if(b){e=hs(e,30620)|0;if(d){nc[c[(c[e>>2]|0)+44>>2]&63](m,e);b=c[m>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;nc[c[(c[e>>2]|0)+32>>2]&63](n,e);b=k+8+3|0;if((a[b>>0]|0)<0){f=c[k>>2]|0;c[m>>2]=0;Vr(f,m);c[k+4>>2]=0;}else{c[m>>2]=0;Vr(k,m);a[b>>0]=0;}$A(k,0);c[k>>2]=c[n>>2];c[k+4>>2]=c[n+4>>2];c[k+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}XA(n);}else{nc[c[(c[e>>2]|0)+40>>2]&63](m,e);b=c[m>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;nc[c[(c[e>>2]|0)+28>>2]&63](n,e);b=k+8+3|0;if((a[b>>0]|0)<0){f=c[k>>2]|0;c[m>>2]=0;Vr(f,m);c[k+4>>2]=0;}else{c[m>>2]=0;Vr(k,m);a[b>>0]=0;}$A(k,0);c[k>>2]=c[n>>2];c[k+4>>2]=c[n+4>>2];c[k+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}XA(n);}c[g>>2]=Yb[c[(c[e>>2]|0)+12>>2]&127](e)|0;c[h>>2]=Yb[c[(c[e>>2]|0)+16>>2]&127](e)|0;nc[c[(c[e>>2]|0)+20>>2]&63](n,e);b=i+11|0;if((a[b>>0]|0)<0){b=c[i>>2]|0;a[m>>0]=0;Rc(b,m);c[i+4>>2]=0;b=i;}else{a[m>>0]=0;Rc(i,m);a[b>>0]=0;b=i;}KA(i,0);c[b>>2]=c[n>>2];c[b+4>>2]=c[n+4>>2];c[b+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}GA(n);nc[c[(c[e>>2]|0)+24>>2]&63](n,e);b=j+8+3|0;if((a[b>>0]|0)<0){i=c[j>>2]|0;c[m>>2]=0;Vr(i,m);c[j+4>>2]=0;}else{c[m>>2]=0;Vr(j,m);a[b>>0]=0;}$A(j,0);c[j>>2]=c[n>>2];c[j+4>>2]=c[n+4>>2];c[j+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}XA(n);b=Yb[c[(c[e>>2]|0)+36>>2]&127](e)|0;}else{e=hs(e,30612)|0;if(d){nc[c[(c[e>>2]|0)+44>>2]&63](m,e);b=c[m>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;nc[c[(c[e>>2]|0)+32>>2]&63](n,e);b=k+8+3|0;if((a[b>>0]|0)<0){f=c[k>>2]|0;c[m>>2]=0;Vr(f,m);c[k+4>>2]=0;}else{c[m>>2]=0;Vr(k,m);a[b>>0]=0;}$A(k,0);c[k>>2]=c[n>>2];c[k+4>>2]=c[n+4>>2];c[k+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}XA(n);}else{nc[c[(c[e>>2]|0)+40>>2]&63](m,e);b=c[m>>2]|0;a[f>>0]=b;a[f+1>>0]=b>>8;a[f+2>>0]=b>>16;a[f+3>>0]=b>>24;nc[c[(c[e>>2]|0)+28>>2]&63](n,e);b=k+8+3|0;if((a[b>>0]|0)<0){f=c[k>>2]|0;c[m>>2]=0;Vr(f,m);c[k+4>>2]=0;}else{c[m>>2]=0;Vr(k,m);a[b>>0]=0;}$A(k,0);c[k>>2]=c[n>>2];c[k+4>>2]=c[n+4>>2];c[k+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}XA(n);}c[g>>2]=Yb[c[(c[e>>2]|0)+12>>2]&127](e)|0;c[h>>2]=Yb[c[(c[e>>2]|0)+16>>2]&127](e)|0;nc[c[(c[e>>2]|0)+20>>2]&63](n,e);b=i+11|0;if((a[b>>0]|0)<0){b=c[i>>2]|0;a[m>>0]=0;Rc(b,m);c[i+4>>2]=0;b=i;}else{a[m>>0]=0;Rc(i,m);a[b>>0]=0;b=i;}KA(i,0);c[b>>2]=c[n>>2];c[b+4>>2]=c[n+4>>2];c[b+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}GA(n);nc[c[(c[e>>2]|0)+24>>2]&63](n,e);b=j+8+3|0;if((a[b>>0]|0)<0){i=c[j>>2]|0;c[m>>2]=0;Vr(i,m);c[j+4>>2]=0;}else{c[m>>2]=0;Vr(j,m);a[b>>0]=0;}$A(j,0);c[j>>2]=c[n>>2];c[j+4>>2]=c[n+4>>2];c[j+8>>2]=c[n+8>>2];b=0;while(1){if((b|0)==3)break;c[n+(b<<2)>>2]=0;b=b+1|0;}XA(n);b=Yb[c[(c[e>>2]|0)+36>>2]&127](e)|0;}c[l>>2]=b;Pb=o;return;}function Xw(b,d,e,f,g,h,i,j,k,l,m,n,o,p,q){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;m=m|0;n=n|0;o=o|0;p=p|0;q=q|0;var r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;c[e>>2]=b;z=p+8+3|0;G=p+4|0;A=o+8+3|0;B=o+4|0;C=(f&512|0)==0;D=(q|0)>0;E=n+11|0;F=n+4|0;y=0;while(1){if((y|0)==4)break;a:do{switch(a[k+y>>0]|0){case 0:{c[d>>2]=c[e>>2];break;}case 1:{c[d>>2]=c[e>>2];w=_b[c[(c[i>>2]|0)+44>>2]&15](i,32)|0;x=c[e>>2]|0;c[e>>2]=x+4;c[x>>2]=w;break;}case 3:{x=a[z>>0]|0;r=x<<24>>24<0;if((r?c[G>>2]|0:x&255)|0){w=c[(r?c[p>>2]|0:p)>>2]|0;x=c[e>>2]|0;c[e>>2]=x+4;c[x>>2]=w;}break;}case 2:{v=a[A>>0]|0;r=v<<24>>24<0;v=r?c[B>>2]|0:v&255;if(!(C|(v|0)==0)){u=r?c[o>>2]|0:o;s=u+(v<<2)|0;t=c[e>>2]|0;r=t;while(1){if((u|0)==(s|0))break;c[r>>2]=c[u>>2];r=r+4|0;u=u+4|0;}c[e>>2]=t+(v<<2);}break;}case 4:{s=c[e>>2]|0;g=j?g+4|0:g;r=g;while(1){if(r>>>0>=h>>>0)break;if(!($b[c[(c[i>>2]|0)+12>>2]&31](i,2048,c[r>>2]|0)|0))break;r=r+4|0;}if(D){u=q;while(1){t=(u|0)>0;if(!(r>>>0>g>>>0&t))break;x=r+-4|0;v=c[x>>2]|0;w=c[e>>2]|0;c[e>>2]=w+4;c[w>>2]=v;u=u+-1|0;r=x;}if(t)w=_b[c[(c[i>>2]|0)+44>>2]&15](i,48)|0;else w=0;v=c[e>>2]|0;while(1){t=v+4|0;if((u|0)<=0)break;c[v>>2]=w;u=u+-1|0;v=t;}c[e>>2]=t;c[v>>2]=l;t=r;}else t=r;if((t|0)==(g|0)){w=_b[c[(c[i>>2]|0)+44>>2]&15](i,48)|0;x=c[e>>2]|0;r=x+4|0;c[e>>2]=r;c[x>>2]=w;}else{x=a[E>>0]|0;r=x<<24>>24<0;if(!((r?c[F>>2]|0:x&255)|0))r=-1;else r=a[(r?c[n>>2]|0:n)>>0]|0;u=0;v=0;x=t;while(1){if((x|0)==(g|0))break;t=c[e>>2]|0;if((v|0)==(r|0)){w=t+4|0;c[e>>2]=w;c[t>>2]=m;t=u+1|0;u=a[E>>0]|0;r=u<<24>>24<0;if(t>>>0<(r?c[F>>2]|0:u&255)>>>0){r=a[(r?c[n>>2]|0:n)+t>>0]|0;r=r<<24>>24==127?-1:r<<24>>24;u=t;v=0;t=w;}else{r=v;u=t;v=0;t=w;}}w=x+-4|0;H=c[w>>2]|0;c[e>>2]=t+4;c[t>>2]=H;v=v+1|0;x=w;}r=c[e>>2]|0;}if((s|0)!=(r|0))while(1){r=r+-4|0;if(s>>>0>=r>>>0)break a;H=c[s>>2]|0;c[s>>2]=c[r>>2];c[r>>2]=H;s=s+4|0;}break;}default:{}}}while(0);y=y+1|0;}r=a[z>>0]|0;g=r<<24>>24<0;r=g?c[G>>2]|0:r&255;if(r>>>0>1){s=c[p>>2]|0;u=g?s+4|0:G;r=(g?s:p)+(r<<2)|0;s=c[e>>2]|0;t=r-u|0;g=s;while(1){if((u|0)==(r|0))break;c[g>>2]=c[u>>2];g=g+4|0;u=u+4|0;}c[e>>2]=s+(t>>>2<<2);}switch((f&176)<<24>>24){case 32:{c[d>>2]=c[e>>2];break;}case 16:break;default:c[d>>2]=b;}return;}function Yw(a){a=a|0;Or(a);return;}function Zw(a){a=a|0;Or(a);oA(a);return;}function _w(b,d,e){b=b|0;d=d|0;e=e|0;e=Zp((a[d+11>>0]|0)<0?c[d>>2]|0:d,1)|0;return e>>>((e|0)!=(-1|0)&1)|0;}function $w(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0;j=Pb;Pb=Pb+16|0;i=j;c[i>>2]=0;c[i+4>>2]=0;c[i+8>>2]=0;d=0;while(1){if((d|0)==3)break;c[i+(d<<2)>>2]=0;d=d+1|0;}k=a[h+11>>0]|0;l=k<<24>>24<0;d=l?c[h>>2]|0:h;h=d+(l?c[h+4>>2]|0:k&255)|0;while(1){if(d>>>0>=h>>>0)break;RA(i,a[d>>0]|0);d=d+1|0;}d=(a[i+11>>0]|0)<0?c[i>>2]|0:i;e=Vp((e|0)==-1?-1:e<<1,f,g,d)|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;h=0;while(1){if((h|0)==3)break;c[b+(h<<2)>>2]=0;h=h+1|0;}h=d+(Jo(e)|0)|0;while(1){if(d>>>0>=h>>>0)break;RA(b,a[d>>0]|0);d=d+1|0;}GA(i);Pb=j;return;}function ax(a,b){a=a|0;b=b|0;return;}function bx(a){a=a|0;Or(a);return;}function cx(a){a=a|0;Or(a);oA(a);return;}function dx(b,d,e){b=b|0;d=d|0;e=e|0;e=Zp((a[d+11>>0]|0)<0?c[d>>2]|0:d,1)|0;return e>>>((e|0)!=(-1|0)&1)|0;}function ex(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=Pb;Pb=Pb+176|0;p=t+168|0;q=t;r=t+164|0;s=t+160|0;n=t+128|0;l=t+152|0;o=t+144|0;c[n>>2]=0;c[n+4>>2]=0;c[n+8>>2]=0;d=0;while(1){if((d|0)==3)break;c[n+(d<<2)>>2]=0;d=d+1|0;}c[l+4>>2]=0;c[l>>2]=14128;j=a[h+8+3>>0]|0;k=j<<24>>24<0;d=k?c[h>>2]|0:h;j=d+((k?c[h+4>>2]|0:j&255)<<2)|0;k=q+32|0;h=d;d=0;while(1){if(!((d|0)!=2&h>>>0<j>>>0))break;c[s>>2]=h;i=ic[c[(c[l>>2]|0)+12>>2]&15](l,p,h,j,s,q,k,r)|0;if((i|0)==2?1:(c[s>>2]|0)==(h|0)){m=8;break;}d=q;while(1){if(d>>>0>=(c[r>>2]|0)>>>0)break;RA(n,a[d>>0]|0);d=d+1|0;}h=c[s>>2]|0;d=i;}if((m|0)==8)Av(0);Or(l);i=(a[n+11>>0]|0)<0?c[n>>2]|0:n;h=Vp((e|0)==-1?-1:e<<1,f,g,i)|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;d=0;while(1){if((d|0)==3)break;c[b+(d<<2)>>2]=0;d=d+1|0;}c[o+4>>2]=0;c[o>>2]=14176;j=i+(Jo(h)|0)|0;k=j;l=q+128|0;h=i;d=0;while(1){if(!((d|0)!=2&h>>>0<j>>>0)){m=23;break;}c[s>>2]=h;i=ic[c[(c[o>>2]|0)+16>>2]&15](o,p,h,(k-h|0)>32?h+32|0:j,s,q,l,r)|0;if((i|0)==2?1:(c[s>>2]|0)==(h|0)){m=19;break;}d=q;while(1){if(d>>>0>=(c[r>>2]|0)>>>0)break;dB(b,c[d>>2]|0);d=d+4|0;}h=c[s>>2]|0;d=i;}if((m|0)==19)Av(0);else if((m|0)==23){Or(o);GA(n);Pb=t;return;}}function fx(a,b){a=a|0;b=b|0;return;}function gx(a){a=a|0;Or(a);oA(a);return;}function hx(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;b=Pb;Pb=Pb+16|0;j=b+4|0;a=b;c[j>>2]=d;c[a>>2]=g;h=qx(d,e,j,g,h,a,1114111,0)|0;c[f>>2]=c[j>>2];c[i>>2]=c[a>>2];Pb=b;return h|0;}function ix(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;b=Pb;Pb=Pb+16|0;j=b+4|0;a=b;c[j>>2]=d;c[a>>2]=g;h=px(d,e,j,g,h,a,1114111,0)|0;c[f>>2]=c[j>>2];c[i>>2]=c[a>>2];Pb=b;return h|0;}function jx(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3;}function kx(a){a=a|0;return 0;}function lx(a){a=a|0;return 0;}function mx(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return ox(c,d,e,1114111,0)|0;}function nx(a){a=a|0;return 4;}function ox(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=c;if((((g&4|0)!=0?(o-b|0)>2:0)?(a[b>>0]|0)==-17:0)?(a[b+1>>0]|0)==-69:0)g=(a[b+2>>0]|0)==-65?b+3|0:b;else g=b;n=0;a:while(1){if(!(n>>>0<e>>>0&g>>>0<c>>>0))break;k=a[g>>0]|0;m=k&255;do{if(k<<24>>24<=-1){if((k&255)<194)break a;if((k&255)<224){if((o-g|0)<2)break a;h=d[g+1>>0]|0;if((h&192|0)!=128)break a;if((h&63|m<<6&1984)>>>0>f>>>0)break a;g=g+2|0;break;}if((k&255)<240){if((o-g|0)<3)break a;i=a[g+1>>0]|0;h=a[g+2>>0]|0;switch(k<<24>>24){case-32:{if((i&-32)<<24>>24!=-96)break a;break;}case-19:{if((i&-32)<<24>>24!=-128)break a;break;}default:if((i&-64)<<24>>24!=-128)break a;}h=h&255;if((h&192|0)!=128)break a;if(((i&63)<<6|m<<12&61440|h&63)>>>0>f>>>0)break a;else{g=g+3|0;break;}}if((k&255)>=245)break a;if((o-g|0)<4)break a;l=a[g+1>>0]|0;h=a[g+2>>0]|0;j=a[g+3>>0]|0;switch(k<<24>>24){case-16:{if((l+112&255)>=48)break a;break;}case-12:{if((l&-16)<<24>>24!=-128)break a;break;}default:if((l&-64)<<24>>24!=-128)break a;}i=h&255;if((i&192|0)!=128)break a;h=j&255;if((h&192|0)!=128)break a;if(((l&63)<<12|m<<18&1835008|i<<6&4032|h&63)>>>0>f>>>0)break a;else g=g+4|0;}else{if(m>>>0>f>>>0)break a;g=g+1|0;}}while(0);n=n+1|0;}return g-b|0;}function px(b,e,f,g,h,i,j,k){b=b|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;var l=0,m=0,n=0,o=0,p=0,q=0;c[f>>2]=b;c[i>>2]=g;if(k&4){b=c[f>>2]|0;g=e;if((((g-b|0)>2?(a[b>>0]|0)==-17:0)?(a[b+1>>0]|0)==-69:0)?(a[b+2>>0]|0)==-65:0)c[f>>2]=b+3;}else g=e;a:while(1){p=c[f>>2]|0;if(p>>>0>=e>>>0){b=0;break;}q=c[i>>2]|0;if(q>>>0>=h>>>0){b=1;break;}n=a[p>>0]|0;b=n&255;do{if(n<<24>>24>-1){if(b>>>0>j>>>0){b=2;break a;}else k=1;}else{if((n&255)<194){b=2;break a;}if((n&255)<224){if((g-p|0)<2){b=1;break a;}k=d[p+1>>0]|0;if((k&192|0)!=128){b=2;break a;}b=k&63|b<<6&1984;if(b>>>0>j>>>0){b=2;break a;}else{k=2;break;}}if((n&255)<240){if((g-p|0)<3){b=1;break a;}l=a[p+1>>0]|0;k=a[p+2>>0]|0;switch(n<<24>>24){case-32:{if((l&-32)<<24>>24!=-96){b=2;break a;}break;}case-19:{if((l&-32)<<24>>24!=-128){b=2;break a;}break;}default:if((l&-64)<<24>>24!=-128){b=2;break a;}}k=k&255;if((k&192|0)!=128){b=2;break a;}b=(l&63)<<6|b<<12&61440|k&63;if(b>>>0>j>>>0){b=2;break a;}else{k=3;break;}}if((n&255)>=245){b=2;break a;}if((g-p|0)<4){b=1;break a;}o=a[p+1>>0]|0;k=a[p+2>>0]|0;m=a[p+3>>0]|0;switch(n<<24>>24){case-16:{if((o+112&255)>=48){b=2;break a;}break;}case-12:{if((o&-16)<<24>>24!=-128){b=2;break a;}break;}default:if((o&-64)<<24>>24!=-128){b=2;break a;}}l=k&255;if((l&192|0)!=128){b=2;break a;}k=m&255;if((k&192|0)!=128){b=2;break a;}b=(o&63)<<12|b<<18&1835008|l<<6&4032|k&63;if(b>>>0>j>>>0){b=2;break a;}else k=4;}}while(0);c[q>>2]=b;c[f>>2]=p+k;c[i>>2]=(c[i>>2]|0)+4;}return b|0;}function qx(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0;c[e>>2]=b;c[h>>2]=f;l=g;if(j&2){if((l-f|0)<3)b=1;else{c[h>>2]=f+1;a[f>>0]=-17;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=-69;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=-65;k=4;}}else k=4;a:do{if((k|0)==4){b=c[e>>2]|0;while(1){if(b>>>0>=d>>>0){b=0;break a;}f=c[b>>2]|0;if(f>>>0>i>>>0|(f&-2048|0)==55296){b=2;break a;}do{if(f>>>0>=128){if(f>>>0<2048){b=c[h>>2]|0;if((l-b|0)<2){b=1;break a;}c[h>>2]=b+1;a[b>>0]=f>>>6|192;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=f&63|128;break;}b=c[h>>2]|0;g=l-b|0;if(f>>>0<65536){if((g|0)<3){b=1;break a;}c[h>>2]=b+1;a[b>>0]=f>>>12|224;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=f>>>6&63|128;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=f&63|128;break;}else{if((g|0)<4){b=1;break a;}c[h>>2]=b+1;a[b>>0]=f>>>18|240;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=f>>>12&63|128;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=f>>>6&63|128;k=c[h>>2]|0;c[h>>2]=k+1;a[k>>0]=f&63|128;break;}}else{b=c[h>>2]|0;if((l-b|0)<1){b=1;break a;}c[h>>2]=b+1;a[b>>0]=f;}}while(0);b=(c[e>>2]|0)+4|0;c[e>>2]=b;}}}while(0);return b|0;}function rx(a){a=a|0;Or(a);oA(a);return;}function sx(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3;}function tx(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;c[f>>2]=d;c[i>>2]=g;return 3;}function ux(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3;}function vx(a){a=a|0;return 1;}function wx(a){a=a|0;return 1;}function xx(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;d=d-c|0;return(d>>>0<e>>>0?d:e)|0;}function yx(a){a=a|0;return 1;}function zx(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;q=Pb;Pb=Pb+16|0;p=q;n=q+8|0;k=e;while(1){if((k|0)==(f|0)){k=f;break;}if(!(c[k>>2]|0))break;k=k+4|0;}c[j>>2]=h;c[g>>2]=e;m=i;o=b+8|0;a:while(1){if((h|0)==(i|0)|(e|0)==(f|0)){k=36;break;}r=d;l=c[r+4>>2]|0;b=p;c[b>>2]=c[r>>2];c[b+4>>2]=l;b=_p(c[o>>2]|0)|0;l=Aq(h,g,k-e>>2,m-h|0,d)|0;if(b|0)_p(b)|0;switch(l|0){case-1:{k=10;break a;}case 0:{e=1;k=33;break a;}default:{}}h=(c[j>>2]|0)+l|0;c[j>>2]=h;if((h|0)==(i|0)){k=34;break;}if((k|0)==(f|0)){k=f;e=c[g>>2]|0;}else{h=_p(c[o>>2]|0)|0;e=Ep(n,0,d)|0;if(h|0)_p(h)|0;if((e|0)==-1){e=2;k=32;break;}if(e>>>0>(m-(c[j>>2]|0)|0)>>>0){e=1;k=32;break;}h=n;while(1){if(!e)break;l=a[h>>0]|0;r=c[j>>2]|0;c[j>>2]=r+1;a[r>>0]=l;h=h+1|0;e=e+-1|0;}e=(c[g>>2]|0)+4|0;c[g>>2]=e;k=e;while(1){if((k|0)==(f|0)){k=f;break;}if(!(c[k>>2]|0))break;k=k+4|0;}h=c[j>>2]|0;}}if((k|0)==10){c[j>>2]=h;while(1){if((e|0)==(c[g>>2]|0))break;r=c[e>>2]|0;k=_p(c[o>>2]|0)|0;h=Ep(h,r,p)|0;if(k|0)_p(k)|0;if((h|0)==-1)break;h=(c[j>>2]|0)+h|0;c[j>>2]=h;e=e+4|0;}c[g>>2]=e;e=2;k=33;}else if((k|0)==32)k=33;else if((k|0)==34){e=c[g>>2]|0;k=36;}if((k|0)!=33)if((k|0)==36)e=(e|0)!=(f|0)&1;Pb=q;return e|0;}function Ax(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0;p=Pb;Pb=Pb+16|0;o=p;k=e;while(1){if((k|0)==(f|0)){k=f;break;}if(!(a[k>>0]|0))break;k=k+1|0;}c[j>>2]=h;c[g>>2]=e;m=i;n=b+8|0;while(1){if((h|0)==(i|0)|(e|0)==(f|0)){b=33;break;}q=d;l=c[q+4>>2]|0;b=o;c[b>>2]=c[q>>2];c[b+4>>2]=l;b=_p(c[n>>2]|0)|0;l=pq(h,g,k-e|0,m-h>>2,d)|0;if(b|0)_p(b)|0;if((l|0)==-1){b=10;break;}h=(c[j>>2]|0)+(l<<2)|0;c[j>>2]=h;if((h|0)==(i|0)){b=30;break;}e=c[g>>2]|0;if((k|0)==(f|0))k=f;else{k=_p(c[n>>2]|0)|0;e=_o(h,e,1,d)|0;if(k|0)_p(k)|0;if(e|0){e=2;b=29;break;}c[j>>2]=(c[j>>2]|0)+4;e=(c[g>>2]|0)+1|0;c[g>>2]=e;k=e;while(1){if((k|0)==(f|0)){k=f;break;}if(!(a[k>>0]|0))break;k=k+1|0;}h=c[j>>2]|0;}}do{if((b|0)==10){a:while(1){c[j>>2]=h;if((e|0)==(c[g>>2]|0)){b=19;break;}b=_p(c[n>>2]|0)|0;h=_o(h,e,k-e|0,o)|0;if(b|0)_p(b)|0;switch(h|0){case-1:{b=15;break a;}case-2:{b=16;break a;}case 0:{h=1;break;}default:{}}e=e+h|0;h=(c[j>>2]|0)+4|0;}if((b|0)==15){c[g>>2]=e;e=2;b=29;break;}else if((b|0)==16){c[g>>2]=e;e=1;b=29;break;}else if((b|0)==19){c[g>>2]=e;e=(e|0)!=(f|0)&1;b=29;break;}}else if((b|0)==30){e=c[g>>2]|0;b=33;}}while(0);if((b|0)!=29)if((b|0)==33)e=(e|0)!=(f|0)&1;Pb=p;return e|0;}function Bx(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;i=Pb;Pb=Pb+16|0;h=i;c[g>>2]=e;e=_p(c[b+8>>2]|0)|0;b=Ep(h,0,d)|0;if(e|0)_p(e)|0;a:do{if((b+1|0)>>>0>=2){b=b+-1|0;if(b>>>0>(f-(c[g>>2]|0)|0)>>>0)b=1;else while(1){if(!b){b=0;break a;}d=a[h>>0]|0;f=c[g>>2]|0;c[g>>2]=f+1;a[f>>0]=d;h=h+1|0;b=b+-1|0;}}else b=2;}while(0);Pb=i;return b|0;}function Cx(a){a=a|0;var b=0,d=0;a=a+8|0;b=_p(c[a>>2]|0)|0;d=Ko(0,0,4)|0;if(b|0)_p(b)|0;if(!d){a=c[a>>2]|0;if(!a)a=1;else{b=_p(a)|0;a=Bo()|0;if(b|0)_p(b)|0;return(a|0)==1|0;}}else a=-1;return a|0;}function Dx(a){a=a|0;return 0;}function Ex(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0;k=e;j=a+8|0;h=0;i=0;a:while(1){if((d|0)==(e|0)|h>>>0>=f>>>0)break;g=_p(c[j>>2]|0)|0;a=zq(d,k-d|0,b)|0;if(g|0)_p(g)|0;switch(a|0){case-2:case-1:break a;case 0:{a=1;break;}default:{}}h=h+1|0;i=a+i|0;d=d+a|0;}return i|0;}function Fx(a){a=a|0;var b=0;a=c[a+8>>2]|0;if(a){b=_p(a)|0;a=Bo()|0;if(b)_p(b)|0;}else a=1;return a|0;}function Gx(a){a=a|0;var b=0,d=0;c[a>>2]=14224;b=a+8|0;d=c[b>>2]|0;if((d|0)!=(ks()|0))Np(c[b>>2]|0);Or(a);return;}function Hx(a){a=a|0;Gx(a);oA(a);return;}function Ix(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;b=Pb;Pb=Pb+16|0;j=b+4|0;a=b;c[j>>2]=d;c[a>>2]=g;h=Rx(d,e,j,g,h,a,1114111,0)|0;c[f>>2]=c[j>>2];c[i>>2]=c[a>>2];Pb=b;return h|0;}function Jx(a,b,d,e,f,g,h,i){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0;b=Pb;Pb=Pb+16|0;j=b+4|0;a=b;c[j>>2]=d;c[a>>2]=g;h=Qx(d,e,j,g,h,a,1114111,0)|0;c[f>>2]=c[j>>2];c[i>>2]=c[a>>2];Pb=b;return h|0;}function Kx(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;c[f>>2]=d;return 3;}function Lx(a){a=a|0;return 0;}function Mx(a){a=a|0;return 0;}function Nx(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return Px(c,d,e,1114111,0)|0;}function Ox(a){a=a|0;return 4;}function Px(b,c,e,f,g){b=b|0;c=c|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=c;if((((g&4|0)!=0?(o-b|0)>2:0)?(a[b>>0]|0)==-17:0)?(a[b+1>>0]|0)==-69:0)g=(a[b+2>>0]|0)==-65?b+3|0:b;else g=b;h=0;a:while(1){if(!(h>>>0<e>>>0&g>>>0<c>>>0))break;l=a[g>>0]|0;n=l&255;if(n>>>0>f>>>0)break;do{if(l<<24>>24<=-1){if((l&255)<194)break a;if((l&255)<224){if((o-g|0)<2)break a;i=d[g+1>>0]|0;if((i&192|0)!=128)break a;if((i&63|n<<6&1984)>>>0>f>>>0)break a;else{g=g+2|0;break;}}if((l&255)<240){if((o-g|0)<3)break a;j=a[g+1>>0]|0;i=a[g+2>>0]|0;switch(l<<24>>24){case-32:{if((j&-32)<<24>>24!=-96)break a;break;}case-19:{if((j&-32)<<24>>24!=-128)break a;break;}default:if((j&-64)<<24>>24!=-128)break a;}i=i&255;if((i&192|0)!=128)break a;if(((j&63)<<6|n<<12&61440|i&63)>>>0>f>>>0)break a;else{g=g+3|0;break;}}if((l&255)>=245)break a;if((e-h|0)>>>0<2|(o-g|0)<4)break a;m=a[g+1>>0]|0;i=a[g+2>>0]|0;k=a[g+3>>0]|0;switch(l<<24>>24){case-16:{if((m+112&255)>=48)break a;break;}case-12:{if((m&-16)<<24>>24!=-128)break a;break;}default:if((m&-64)<<24>>24!=-128)break a;}j=i&255;if((j&192|0)!=128)break a;i=k&255;if((i&192|0)!=128)break a;if(((m&63)<<12|n<<18&1835008|j<<6&4032|i&63)>>>0>f>>>0)break a;else{h=h+1|0;g=g+4|0;}}else g=g+1|0;}while(0);h=h+1|0;}return g-b|0;}function Qx(e,f,g,h,i,j,k,l){e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0,o=0,p=0,q=0,r=0,s=0;c[g>>2]=e;c[j>>2]=h;if(l&4){e=c[g>>2]|0;h=f;if((((h-e|0)>2?(a[e>>0]|0)==-17:0)?(a[e+1>>0]|0)==-69:0)?(a[e+2>>0]|0)==-65:0)c[g>>2]=e+3;}else h=f;s=i;a:while(1){n=c[g>>2]|0;if(n>>>0>=f>>>0){e=0;break;}r=c[j>>2]|0;if(r>>>0>=i>>>0){e=1;break;}m=a[n>>0]|0;q=m&255;if(q>>>0>k>>>0){e=2;break;}do{if(m<<24>>24>-1){b[r>>1]=m&255;e=n+1|0;}else{if((m&255)<194){e=2;break a;}if((m&255)<224){if((h-n|0)<2){e=1;break a;}e=d[n+1>>0]|0;if((e&192|0)!=128){e=2;break a;}e=e&63|q<<6&1984;if(e>>>0>k>>>0){e=2;break a;}b[r>>1]=e;e=n+2|0;break;}if((m&255)<240){if((h-n|0)<3){e=1;break a;}l=a[n+1>>0]|0;e=a[n+2>>0]|0;switch(m<<24>>24){case-32:{if((l&-32)<<24>>24!=-96){e=2;break a;}break;}case-19:{if((l&-32)<<24>>24!=-128){e=2;break a;}break;}default:if((l&-64)<<24>>24!=-128){e=2;break a;}}e=e&255;if((e&192|0)!=128){e=2;break a;}e=(l&63)<<6|q<<12|e&63;if((e&65535)>>>0>k>>>0){e=2;break a;}b[r>>1]=e;e=n+3|0;break;}if((m&255)>=245){e=2;break a;}if((h-n|0)<4){e=1;break a;}o=a[n+1>>0]|0;e=a[n+2>>0]|0;l=a[n+3>>0]|0;switch(m<<24>>24){case-16:{if((o+112&255)>=48){e=2;break a;}break;}case-12:{if((o&-16)<<24>>24!=-128){e=2;break a;}break;}default:if((o&-64)<<24>>24!=-128){e=2;break a;}}p=e&255;if((p&192|0)!=128){e=2;break a;}e=l&255;if((e&192|0)!=128){e=2;break a;}if((s-r|0)<4){e=1;break a;}n=q&7;l=o&255;m=p<<6;e=e&63;if((l<<12&258048|n<<18|m&4032|e)>>>0>k>>>0){e=2;break a;}b[r>>1]=l<<2&60|p>>>4&3|((l>>>4&3|n<<2)<<6)+16320|55296;r=r+2|0;c[j>>2]=r;b[r>>1]=e|m&960|56320;e=(c[g>>2]|0)+4|0;}}while(0);c[g>>2]=e;c[j>>2]=(c[j>>2]|0)+2;}return e|0;}function Rx(d,f,g,h,i,j,k,l){d=d|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;l=l|0;var m=0,n=0;c[g>>2]=d;c[j>>2]=h;if(l&2){if((i-h|0)<3)d=1;else{c[j>>2]=h+1;a[h>>0]=-17;m=c[j>>2]|0;c[j>>2]=m+1;a[m>>0]=-69;m=c[j>>2]|0;c[j>>2]=m+1;a[m>>0]=-65;m=4;}}else m=4;a:do{if((m|0)==4){n=f;d=c[g>>2]|0;while(1){if(d>>>0>=f>>>0){d=0;break a;}h=b[d>>1]|0;m=h&65535;if(m>>>0>k>>>0){d=2;break a;}do{if((h&65535)<128){d=c[j>>2]|0;if((i-d|0)<1){d=1;break a;}c[j>>2]=d+1;a[d>>0]=h;}else{if((h&65535)<2048){d=c[j>>2]|0;if((i-d|0)<2){d=1;break a;}c[j>>2]=d+1;a[d>>0]=m>>>6|192;l=c[j>>2]|0;c[j>>2]=l+1;a[l>>0]=m&63|128;break;}if((h&65535)<55296){d=c[j>>2]|0;if((i-d|0)<3){d=1;break a;}c[j>>2]=d+1;a[d>>0]=m>>>12|224;l=c[j>>2]|0;c[j>>2]=l+1;a[l>>0]=m>>>6&63|128;l=c[j>>2]|0;c[j>>2]=l+1;a[l>>0]=m&63|128;break;}if((h&65535)>=56320){if((h&65535)<57344){d=2;break a;}d=c[j>>2]|0;if((i-d|0)<3){d=1;break a;}c[j>>2]=d+1;a[d>>0]=m>>>12|224;l=c[j>>2]|0;c[j>>2]=l+1;a[l>>0]=m>>>6&63|128;l=c[j>>2]|0;c[j>>2]=l+1;a[l>>0]=m&63|128;break;}if((n-d|0)<4){d=1;break a;}d=d+2|0;h=e[d>>1]|0;if((h&64512|0)!=56320){d=2;break a;}if((i-(c[j>>2]|0)|0)<4){d=1;break a;}l=m&960;if(((l<<10)+65536|m<<10&64512|h&1023)>>>0>k>>>0){d=2;break a;}c[g>>2]=d;d=(l>>>6)+1|0;l=c[j>>2]|0;c[j>>2]=l+1;a[l>>0]=d>>>2|240;l=c[j>>2]|0;c[j>>2]=l+1;a[l>>0]=m>>>2&15|d<<4&48|128;l=c[j>>2]|0;c[j>>2]=l+1;a[l>>0]=m<<4&48|h>>>6&15|128;m=c[j>>2]|0;c[j>>2]=m+1;a[m>>0]=h&63|128;}}while(0);d=(c[g>>2]|0)+2|0;c[g>>2]=d;}}}while(0);return d|0;}function Sx(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0;c[a>>2]=14272;e=a+8|0;f=a+12|0;d=0;while(1){b=c[e>>2]|0;if(d>>>0>=(c[f>>2]|0)-b>>2>>>0)break;b=c[b+(d<<2)>>2]|0;if(b|0?(h=b+4|0,g=c[h>>2]|0,c[h>>2]=g+-1,(g|0)==0):0)kc[c[(c[b>>2]|0)+8>>2]&255](b);d=d+1|0;}GA(a+144|0);Ux(e);Or(a);return;}function Tx(a){a=a|0;Sx(a);oA(a);return;}function Ux(b){b=b|0;var d=0;d=c[b>>2]|0;do{if(d|0){c[b+4>>2]=d;if((d|0)==(b+16|0)){a[b+128>>0]=0;break;}else{oA(d);break;}}}while(0);return;}function Vx(b){b=b|0;var d=0;c[b>>2]=14292;d=c[b+8>>2]|0;if(d|0?a[b+12>>0]|0:0)pA(d);Or(b);return;}function Wx(a){a=a|0;Vx(a);oA(a);return;}function Xx(a,b){a=a|0;b=b|0;if(b<<24>>24>-1)b=c[(ey()|0)+((b&255)<<2)>>2]&255;return b|0;}function Yx(b,d,e){b=b|0;d=d|0;e=e|0;while(1){if((d|0)==(e|0))break;b=a[d>>0]|0;if(b<<24>>24>-1){b=ey()|0;b=c[b+(a[d>>0]<<2)>>2]&255;}a[d>>0]=b;d=d+1|0;}return e|0;}function Zx(a,b){a=a|0;b=b|0;if(b<<24>>24>-1)b=c[(dy()|0)+(b<<24>>24<<2)>>2]&255;return b|0;}function _x(b,d,e){b=b|0;d=d|0;e=e|0;while(1){if((d|0)==(e|0))break;b=a[d>>0]|0;if(b<<24>>24>-1){b=dy()|0;b=c[b+(a[d>>0]<<2)>>2]&255;}a[d>>0]=b;d=d+1|0;}return e|0;}function $x(a,b){a=a|0;b=b|0;return b|0;}function ay(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;while(1){if((c|0)==(d|0))break;a[e>>0]=a[c>>0]|0;e=e+1|0;c=c+1|0;}return d|0;}function by(a,b,c){a=a|0;b=b|0;c=c|0;return(b<<24>>24>-1?b:c)|0;}function cy(b,c,d,e,f){b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;while(1){if((c|0)==(d|0))break;b=a[c>>0]|0;a[f>>0]=b<<24>>24>-1?b:e;f=f+1|0;c=c+1|0;}return d|0;}function dy(){return c[(yo()|0)>>2]|0;}function ey(){return c[(Io()|0)>>2]|0;}function fy(){return c[(Fo()|0)>>2]|0;}function gy(a){a=a|0;c[a>>2]=14344;GA(a+12|0);Or(a);return;}function hy(a){a=a|0;gy(a);oA(a);return;}function iy(b){b=b|0;return a[b+8>>0]|0;}function jy(b){b=b|0;return a[b+9>>0]|0;}function ky(a,b){a=a|0;b=b|0;CA(a,b+12|0);return;}function ly(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;DA(a,25445,Qc(25445)|0);return;}function my(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;DA(a,25439,Qc(25439)|0);return;}function ny(a){a=a|0;c[a>>2]=14384;GA(a+16|0);Or(a);return;}function oy(a){a=a|0;ny(a);oA(a);return;}function py(a){a=a|0;return c[a+8>>2]|0;}function qy(a){a=a|0;return c[a+12>>2]|0;}function ry(a,b){a=a|0;b=b|0;CA(a,b+16|0);return;}function sy(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;UA(a,14440,Wu(14440)|0);return;}function ty(a,b){a=a|0;b=b|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;UA(a,14416,Wu(14416)|0);return;}function uy(a){a=a|0;Or(a);oA(a);return;}function vy(a){a=a|0;Or(a);oA(a);return;}function wy(a,c,d){a=a|0;c=c|0;d=d|0;if(d>>>0<128)a=(b[(fy()|0)+(d<<1)>>1]&c)<<16>>16!=0;else a=0;return a|0;}function xy(a,d,f,g){a=a|0;d=d|0;f=f|0;g=g|0;while(1){if((d|0)==(f|0))break;if((c[d>>2]|0)>>>0<128){a=fy()|0;a=e[a+(c[d>>2]<<1)>>1]|0;}else a=0;b[g>>1]=a;g=g+2|0;d=d+4|0;}return f|0;}function yy(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;while(1){if((e|0)==(f|0)){e=f;break;}if((c[e>>2]|0)>>>0<128?(a=fy()|0,(b[a+(c[e>>2]<<1)>>1]&d)<<16>>16):0)break;e=e+4|0;}return e|0;}function zy(a,d,e,f){a=a|0;d=d|0;e=e|0;f=f|0;while(1){if((e|0)==(f|0)){e=f;break;}if((c[e>>2]|0)>>>0>=128)break;a=fy()|0;if(!((b[a+(c[e>>2]<<1)>>1]&d)<<16>>16))break;e=e+4|0;}return e|0;}function Ay(a,b){a=a|0;b=b|0;if(b>>>0<128)b=c[(ey()|0)+(b<<2)>>2]|0;return b|0;}function By(a,b,d){a=a|0;b=b|0;d=d|0;while(1){if((b|0)==(d|0))break;a=c[b>>2]|0;if(a>>>0<128){a=ey()|0;a=c[a+(c[b>>2]<<2)>>2]|0;}c[b>>2]=a;b=b+4|0;}return d|0;}function Cy(a,b){a=a|0;b=b|0;if(b>>>0<128)b=c[(dy()|0)+(b<<2)>>2]|0;return b|0;}function Dy(a,b,d){a=a|0;b=b|0;d=d|0;while(1){if((b|0)==(d|0))break;a=c[b>>2]|0;if(a>>>0<128){a=dy()|0;a=c[a+(c[b>>2]<<2)>>2]|0;}c[b>>2]=a;b=b+4|0;}return d|0;}function Ey(a,b){a=a|0;b=b|0;return b<<24>>24|0;}function Fy(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;while(1){if((d|0)==(e|0))break;c[f>>2]=a[d>>0];f=f+4|0;d=d+1|0;}return e|0;}function Gy(a,b,c){a=a|0;b=b|0;c=c|0;return(b>>>0<128?b&255:c)|0;}function Hy(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;h=(e-d|0)>>>2;b=g;g=d;while(1){if((g|0)==(e|0))break;i=c[g>>2]|0;a[b>>0]=i>>>0<128?i&255:f;b=b+1|0;g=g+4|0;}return d+(h<<2)|0;}function Iy(a){a=a|0;Or(a);oA(a);return;}function Jy(a){a=a|0;Or(a);oA(a);return;}function Ky(a){a=a|0;Or(a);oA(a);return;}function Ly(a){a=a|0;c[a>>2]=14700;return;}function My(a){a=a|0;c[a>>2]=14736;return;}function Ny(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;c[b+4>>2]=f+-1;c[b>>2]=14292;f=b+8|0;c[f>>2]=d;a[b+12>>0]=e&1;if(!d)c[f>>2]=fy()|0;return;}function Oy(a,b){a=a|0;b=b|0;var d=0;c[a+4>>2]=b+-1;c[a>>2]=14272;b=a+8|0;Py(b,28);d=a+144|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;DA(d,23384,Qc(23384)|0);c[a+12>>2]=c[b>>2];Qy();Ry(a,29224);Sy();Ty(a,29232);Uy();Vy(a,29240);Wy();Xy(a,29256);Yy();Zy(a,29264);_y();$y(a,29272);az();bz(a,29288);cz();dz(a,29296);ez();fz(a,29304);gz();hz(a,29328);iz();jz(a,29360);kz();lz(a,29368);mz();nz(a,29376);oz();pz(a,29384);qz();rz(a,29392);sz();tz(a,29400);uz();vz(a,29408);wz();xz(a,29416);yz();zz(a,29424);Az();Bz(a,29432);Cz();Dz(a,29440);Ez();Fz(a,29448);Gz();Hz(a,29456);Iz();Jz(a,29472);Kz();Lz(a,29488);Mz();Nz(a,29504);Oz();Pz(a,29520);Qz();Rz(a,29528);return;}function Py(b,d){b=b|0;d=d|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;a[b+128>>0]=0;if(d|0){cA(b,d);Vz(b,d);}return;}function Qy(){c[7307]=0;c[7306]=12128;return;}function Ry(a,b){a=a|0;b=b|0;Sz(a,b,ms(30356)|0);return;}function Sy(){c[7309]=0;c[7308]=12160;return;}function Ty(a,b){a=a|0;b=b|0;Sz(a,b,ms(30364)|0);return;}function Uy(){Ny(29240,0,0,1);return;}function Vy(a,b){a=a|0;b=b|0;Sz(a,b,ms(30372)|0);return;}function Wy(){c[7315]=0;c[7314]=14488;return;}function Xy(a,b){a=a|0;b=b|0;Sz(a,b,ms(30404)|0);return;}function Yy(){c[7317]=0;c[7316]=14556;return;}function Zy(a,b){a=a|0;b=b|0;Sz(a,b,ms(30676)|0);return;}function _y(){bA(29272,1);return;}function $y(a,b){a=a|0;b=b|0;Sz(a,b,ms(30684)|0);return;}function az(){c[7323]=0;c[7322]=14604;return;}function bz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30692)|0);return;}function cz(){c[7325]=0;c[7324]=14652;return;}function dz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30700)|0);return;}function ez(){aA(29304,1);return;}function fz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30388)|0);return;}function gz(){$z(29328,1);return;}function hz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30412)|0);return;}function iz(){c[7341]=0;c[7340]=12192;return;}function jz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30396)|0);return;}function kz(){c[7343]=0;c[7342]=12256;return;}function lz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30420)|0);return;}function mz(){c[7345]=0;c[7344]=12320;return;}function nz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30428)|0);return;}function oz(){c[7347]=0;c[7346]=12372;return;}function pz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30436)|0);return;}function qz(){c[7349]=0;c[7348]=13728;return;}function rz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30596)|0);return;}function sz(){c[7351]=0;c[7350]=13784;return;}function tz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30604)|0);return;}function uz(){c[7353]=0;c[7352]=13840;return;}function vz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30612)|0);return;}function wz(){c[7355]=0;c[7354]=13896;return;}function xz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30620)|0);return;}function yz(){c[7357]=0;c[7356]=13952;return;}function zz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30628)|0);return;}function Az(){c[7359]=0;c[7358]=13980;return;}function Bz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30636)|0);return;}function Cz(){c[7361]=0;c[7360]=14008;return;}function Dz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30644)|0);return;}function Ez(){c[7363]=0;c[7362]=14036;return;}function Fz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30652)|0);return;}function Gz(){c[7365]=0;c[7364]=14468;Ly(29464);c[7364]=12424;c[7366]=12472;return;}function Hz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30504)|0);return;}function Iz(){c[7369]=0;c[7368]=14468;My(29480);c[7368]=12508;c[7370]=12556;return;}function Jz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30572)|0);return;}function Kz(){c[7373]=0;c[7372]=14468;c[7374]=ks()|0;c[7372]=13680;return;}function Lz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30580)|0);return;}function Mz(){c[7377]=0;c[7376]=14468;c[7378]=ks()|0;c[7376]=13704;return;}function Nz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30588)|0);return;}function Oz(){c[7381]=0;c[7380]=14064;return;}function Pz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30660)|0);return;}function Qz(){c[7383]=0;c[7382]=14096;return;}function Rz(a,b){a=a|0;b=b|0;Sz(a,b,ms(30668)|0);return;}function Sz(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;f=b+4|0;c[f>>2]=(c[f>>2]|0)+1;f=a+8|0;e=c[f>>2]|0;if((c[a+12>>2]|0)-e>>2>>>0>d>>>0)a=f;else{Tz(f,d+1|0);a=f;e=c[f>>2]|0;}e=c[e+(d<<2)>>2]|0;if(e|0?(g=e+4|0,f=c[g>>2]|0,c[g>>2]=f+-1,(f|0)==0):0)kc[c[(c[e>>2]|0)+8>>2]&255](e);c[(c[a>>2]|0)+(d<<2)>>2]=b;return;}function Tz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=a+4|0;f=c[a>>2]|0;e=(c[d>>2]|0)-f>>2;if(e>>>0>=b>>>0){if(e>>>0>b>>>0)c[d>>2]=f+(b<<2);}else Uz(a,b-e|0);return;}function Uz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0;i=Pb;Pb=Pb+32|0;f=i;g=a+8|0;h=a+4|0;d=c[h>>2]|0;do{if((c[g>>2]|0)-d>>2>>>0<b>>>0){d=(d-(c[a>>2]|0)>>2)+b|0;e=Wz(a)|0;if(e>>>0<d>>>0)eB(a);else{j=c[a>>2]|0;k=(c[g>>2]|0)-j|0;g=k>>1;Xz(f,k>>2>>>0<e>>>1>>>0?g>>>0<d>>>0?d:g:e,(c[h>>2]|0)-j>>2,a+16|0);Yz(f,b);Zz(a,f);_z(f);break;}}else Vz(a,b);}while(0);Pb=i;return;}function Vz(a,b){a=a|0;b=b|0;var d=0;d=a+4|0;a=b;b=c[d>>2]|0;do{c[b>>2]=0;b=(c[d>>2]|0)+4|0;c[d>>2]=b;a=a+-1|0;}while((a|0)!=0);return;}function Wz(a){a=a|0;return 1073741823;}function Xz(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;h=b+12|0;c[h>>2]=0;c[b+16>>2]=f;do{if(d){g=f+112|0;if(d>>>0<29&(a[g>>0]|0)==0){a[g>>0]=1;break;}else{f=nA(d<<2)|0;break;}}else f=0;}while(0);c[b>>2]=f;e=f+(e<<2)|0;c[b+8>>2]=e;c[b+4>>2]=e;c[h>>2]=f+(d<<2);return;}function Yz(a,b){a=a|0;b=b|0;var d=0;d=a+8|0;a=b;b=c[d>>2]|0;do{c[b>>2]=0;b=(c[d>>2]|0)+4|0;c[d>>2]=b;a=a+-1|0;}while((a|0)!=0);return;}function Zz(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;e=c[a>>2]|0;h=a+4|0;g=b+4|0;f=(c[h>>2]|0)-e|0;d=(c[g>>2]|0)+(0-(f>>2)<<2)|0;c[g>>2]=d;if((f|0)>0){wC(d|0,e|0,f|0)|0;e=g;d=c[g>>2]|0;}else e=g;g=c[a>>2]|0;c[a>>2]=d;c[e>>2]=g;g=b+8|0;f=c[h>>2]|0;c[h>>2]=c[g>>2];c[g>>2]=f;g=a+8|0;h=b+12|0;a=c[g>>2]|0;c[g>>2]=c[h>>2];c[h>>2]=a;c[b>>2]=c[e>>2];return;}function _z(b){b=b|0;var d=0,e=0,f=0,g=0;d=c[b+4>>2]|0;e=b+8|0;f=c[e>>2]|0;while(1){if((f|0)==(d|0))break;g=f+-4|0;c[e>>2]=g;f=g;}e=c[b>>2]|0;do{if(e|0){d=c[b+16>>2]|0;if((e|0)==(d|0)){a[d+112>>0]=0;break;}else{oA(e);break;}}}while(0);return;}function $z(a,b){a=a|0;b=b|0;c[a+4>>2]=b+-1;c[a>>2]=14384;c[a+8>>2]=46;c[a+12>>2]=44;b=a+16|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;a=0;while(1){if((a|0)==3)break;c[b+(a<<2)>>2]=0;a=a+1|0;}return;}function aA(b,d){b=b|0;d=d|0;c[b+4>>2]=d+-1;c[b>>2]=14344;a[b+8>>0]=46;a[b+9>>0]=44;d=b+12|0;c[d>>2]=0;c[d+4>>2]=0;c[d+8>>2]=0;b=0;while(1){if((b|0)==3)break;c[d+(b<<2)>>2]=0;b=b+1|0;}return;}function bA(a,b){a=a|0;b=b|0;c[a+4>>2]=b+-1;c[a>>2]=14224;c[a+8>>2]=ks()|0;return;}function cA(b,d){b=b|0;d=d|0;var e=0;if((Wz(b)|0)>>>0<d>>>0)eB(b);e=b+128|0;if(d>>>0<29&(a[e>>0]|0)==0){a[e>>0]=1;e=b+16|0;}else e=nA(d<<2)|0;c[b+4>>2]=e;c[b>>2]=e;c[b+8>>2]=e+(d<<2);return;}function dA(){if((a[29536]|0)==0?eC(29536)|0:0){eA()|0;c[7678]=30708;}return c[7678]|0;}function eA(){fA();c[7677]=29544;return 30708;}function fA(){Oy(29544,1);return;}function gA(){hA(30716,dA()|0);return 30716;}function hA(a,b){a=a|0;b=b|0;b=c[b>>2]|0;c[a>>2]=b;b=b+4|0;c[b>>2]=(c[b>>2]|0)+1;return;}function iA(){if((a[29704]|0)==0?eC(29704)|0:0){gA()|0;c[7680]=30716;}return c[7680]|0;}function jA(a){a=a|0;var b=0;b=c[(iA()|0)>>2]|0;c[a>>2]=b;a=b+4|0;c[a>>2]=(c[a>>2]|0)+1;return;}function kA(a){a=a|0;return;}function lA(a,b,d){a=a|0;b=b|0;d=d|0;Gq(30724)|0;while(1){if((c[a>>2]|0)!=1)break;Ta(30752,30724)|0;}if(!(c[a>>2]|0)){c[a>>2]=1;Hq(30724)|0;kc[d&255](b);Gq(30724)|0;c[a>>2]=-1;Hq(30724)|0;zC(30752)|0;}else Hq(30724)|0;return;}function mA(){Ha();}function nA(a){a=a|0;var b=0;b=(a|0)==0?1:a;while(1){a=Bq(b)|0;if(a|0)break;a=hC()|0;if(!a){a=0;break;}jc[a&3]();}return a|0;}function oA(a){a=a|0;Cq(a);return;}function pA(a){a=a|0;oA(a);return;}function qA(b,d){b=b|0;d=d|0;c[b>>2]=14856;rA(b+4|0,(a[d+11>>0]|0)<0?c[d>>2]|0:d);return;}function rA(a,b){a=a|0;b=b|0;var d=0,e=0;e=Jo(b)|0;d=nA(e+13|0)|0;c[d>>2]=e;c[d+4>>2]=e;c[d+8>>2]=0;d=sA(d)|0;wC(d|0,b|0,e+1|0)|0;c[a>>2]=d;return;}function sA(a){a=a|0;return a+12|0;}function tA(a,b){a=a|0;b=b|0;c[a>>2]=14856;rA(a+4|0,b);return;}function uA(a,b){a=a|0;b=b|0;c[a>>2]=14856;vA(a+4|0,b+4|0);return;}function vA(a,b){a=a|0;b=b|0;c[a>>2]=c[b>>2];if(wA(a)|0){b=(xA(c[a>>2]|0)|0)+8|0;c[b>>2]=(c[b>>2]|0)+1;}return;}function wA(a){a=a|0;return 1;}function xA(a){a=a|0;return a+-12|0;}function yA(b,d){b=b|0;d=d|0;c[b>>2]=14876;rA(b+4|0,(a[d+11>>0]|0)<0?c[d>>2]|0:d);return;}function zA(a,b){a=a|0;b=b|0;c[a>>2]=14876;vA(a+4|0,b+4|0);return;}function AA(a){a=a|0;Ha();}function BA(a){a=a|0;Ha();}function CA(b,d){b=b|0;d=d|0;c[b>>2]=0;c[b+4>>2]=0;c[b+8>>2]=0;if((a[d+11>>0]|0)<0)DA(b,c[d>>2]|0,c[d+4>>2]|0);else{c[b>>2]=c[d>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2];}return;}function DA(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;g=Pb;Pb=Pb+16|0;f=g;if(e>>>0>4294967279)AA(b);if(e>>>0<11)a[b+11>>0]=e;else{i=e+16&-16;h=nA(i)|0;c[b>>2]=h;c[b+8>>2]=i|-2147483648;c[b+4>>2]=e;b=h;}cr(b,d,e)|0;a[f>>0]=0;Rc(b+e|0,f);Pb=g;return;}function EA(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;g=Pb;Pb=Pb+16|0;f=g;if(d>>>0>4294967279)AA(b);if(d>>>0<11)a[b+11>>0]=d;else{i=d+16&-16;h=nA(i)|0;c[b>>2]=h;c[b+8>>2]=i|-2147483648;c[b+4>>2]=d;b=h;}FA(b,d,e)|0;a[f>>0]=0;Rc(b+d|0,f);Pb=g;return;}function FA(a,b,c){a=a|0;b=b|0;c=c|0;if(b|0)yC(a|0,(Vc(c)|0)&255|0,b|0)|0;return a|0;}function GA(b){b=b|0;if((a[b+11>>0]|0)<0)oA(c[b>>2]|0);return;}function HA(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;k=Pb;Pb=Pb+16|0;i=k;j=b+11|0;f=a[j>>0]|0;g=f<<24>>24<0;if(g)h=(c[b+8>>2]&2147483647)+-1|0;else h=10;do{if(h>>>0>=e>>>0){if(g)f=c[b>>2]|0;else f=b;IA(f,d,e)|0;a[i>>0]=0;Rc(f+e|0,i);if((a[j>>0]|0)<0){c[b+4>>2]=e;break;}else{a[j>>0]=e;break;}}else{if(g)f=c[b+4>>2]|0;else f=f&255;JA(b,h,e-h|0,f,0,f,e,d);}}while(0);Pb=k;return b|0;}function IA(a,b,c){a=a|0;b=b|0;c=c|0;if(c|0)xC(a|0,b|0,c|0)|0;return a|0;}function JA(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0;o=Pb;Pb=Pb+16|0;n=o;if((-18-d|0)>>>0<e>>>0)AA(b);if((a[b+11>>0]|0)<0)m=c[b>>2]|0;else m=b;if(d>>>0<2147483623){k=e+d|0;l=d<<1;k=k>>>0<l>>>0?l:k;k=k>>>0<11?11:k+16&-16;}else k=-17;l=nA(k)|0;if(g|0)cr(l,m,g)|0;if(i|0)cr(l+g|0,j,i)|0;e=f-h|0;f=e-g|0;if(f|0)cr(l+g+i|0,m+g+h|0,f)|0;if((d|0)!=10)oA(m);c[b>>2]=l;c[b+8>>2]=k|-2147483648;i=e+i|0;c[b+4>>2]=i;a[n>>0]=0;Rc(l+i|0,n);Pb=o;return;}function KA(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;if(d>>>0>4294967279)AA(b);i=b+11|0;g=a[i>>0]|0;h=g<<24>>24<0;if(h){k=c[b+4>>2]|0;e=(c[b+8>>2]&2147483647)+-1|0;}else{k=g&255;e=10;}j=k>>>0>d>>>0?k:d;d=j>>>0<11;j=d?10:(j+16&-16)+-1|0;do{if((j|0)!=(e|0)){do{if(d){d=c[b>>2]|0;if(h){g=0;e=d;f=b;h=13;}else{cr(b,d,(g&255)+1|0)|0;oA(d);h=16;}}else{e=j+1|0;f=nA(e)|0;if(h){g=1;e=c[b>>2]|0;h=13;break;}else{cr(f,b,(g&255)+1|0)|0;d=b+4|0;h=15;break;}}}while(0);if((h|0)==13){d=b+4|0;cr(f,e,(c[d>>2]|0)+1|0)|0;oA(e);if(g){e=j+1|0;h=15;}else h=16;}if((h|0)==15){c[b+8>>2]=e|-2147483648;c[d>>2]=k;c[b>>2]=f;break;}else if((h|0)==16){a[i>>0]=k;break;}}}while(0);return;}function LA(a,b){a=a|0;b=b|0;return HA(a,b,Qc(b)|0)|0;}function MA(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;j=Pb;Pb=Pb+16|0;g=j;h=b+11|0;f=a[h>>0]|0;i=f<<24>>24<0;if(i)f=c[b+4>>2]|0;else f=f&255;do{if(f>>>0>=d>>>0){if(i){i=(c[b>>2]|0)+d|0;a[g>>0]=0;Rc(i,g);c[b+4>>2]=d;break;}else{a[g>>0]=0;Rc(b+d|0,g);a[h>>0]=d;break;}}else NA(b,d-f|0,e)|0;}while(0);Pb=j;return;}function NA(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;k=Pb;Pb=Pb+16|0;i=k;if(d|0){j=b+11|0;f=a[j>>0]|0;if(f<<24>>24<0){g=(c[b+8>>2]&2147483647)+-1|0;h=c[b+4>>2]|0;}else{g=10;h=f&255;}if((g-h|0)>>>0<d>>>0){OA(b,g,h+d-g|0,h,h,0,0);f=a[j>>0]|0;}if(f<<24>>24<0)g=c[b>>2]|0;else g=b;FA(g+h|0,d,e)|0;f=h+d|0;if((a[j>>0]|0)<0)c[b+4>>2]=f;else a[j>>0]=f;a[i>>0]=0;Rc(g+f|0,i);}Pb=k;return b|0;}function OA(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0;if((-17-d|0)>>>0<e>>>0)AA(b);if((a[b+11>>0]|0)<0)l=c[b>>2]|0;else l=b;if(d>>>0<2147483623){j=e+d|0;k=d<<1;j=j>>>0<k>>>0?k:j;j=j>>>0<11?11:j+16&-16;}else j=-17;k=nA(j)|0;if(g|0)cr(k,l,g)|0;e=f-h-g|0;if(e|0)cr(k+g+i|0,l+g+h|0,e)|0;if((d|0)!=10)oA(l);c[b>>2]=k;c[b+8>>2]=j|-2147483648;return;}function PA(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;k=Pb;Pb=Pb+16|0;i=k;j=b+11|0;f=a[j>>0]|0;h=f<<24>>24<0;if(h){g=(c[b+8>>2]&2147483647)+-1|0;f=c[b+4>>2]|0;}else{g=10;f=f&255;}if((g-f|0)>>>0>=e>>>0){if(e|0){if(h)g=c[b>>2]|0;else g=b;cr(g+f|0,d,e)|0;f=f+e|0;if((a[j>>0]|0)<0)c[b+4>>2]=f;else a[j>>0]=f;a[i>>0]=0;Rc(g+f|0,i);}}else JA(b,g,f+e-g|0,f,f,0,e,d);Pb=k;return b|0;}function QA(a,b){a=a|0;b=b|0;return PA(a,b,Qc(b)|0)|0;}function RA(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=Pb;Pb=Pb+16|0;h=j;i=j+1|0;a[h>>0]=d;g=b+11|0;d=a[g>>0]|0;e=d<<24>>24<0;if(e){f=c[b+4>>2]|0;d=(c[b+8>>2]&2147483647)+-1|0;}else{f=d&255;d=10;}if((f|0)==(d|0)){OA(b,d,1,d,d,0,0);if((a[g>>0]|0)<0)e=8;else e=7;}else if(e)e=8;else e=7;if((e|0)==7){a[g>>0]=f+1;d=b;}else if((e|0)==8){d=c[b>>2]|0;c[b+4>>2]=f+1;}b=d+f|0;Rc(b,h);a[i>>0]=0;Rc(b+1|0,i);Pb=j;return;}function SA(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=Pb;Pb=Pb+16|0;n=p;o=b+11|0;h=a[o>>0]|0;j=h<<24>>24<0;if(j)m=c[b+4>>2]|0;else m=h&255;if(m>>>0<d>>>0)BA(b);i=m-d|0;h=i>>>0<e>>>0?i:e;if(j)e=(c[b+8>>2]&2147483647)+-1|0;else e=10;if((h-m+e|0)>>>0<g>>>0)JA(b,e,m+g-h-e|0,m,d,h,g,f);else{if(j)l=c[b>>2]|0;else l=b;do{if((h|0)!=(g|0)){j=i-h|0;if(!j){e=f;k=21;}else{e=l+d|0;if(h>>>0>g>>>0){IA(e,f,g)|0;IA(e+g|0,e+h|0,j)|0;break;}do{if(e>>>0<f>>>0&(l+m|0)>>>0>f>>>0){if((e+h|0)>>>0>f>>>0){IA(e,f,h)|0;e=h+d|0;d=e;i=f+g|0;g=g-h|0;h=0;e=l+e|0;break;}else{i=f+(g-h)|0;break;}}else i=f;}while(0);IA(e+g|0,e+h|0,j)|0;e=i;k=21;}}else{h=g;e=f;k=21;}}while(0);if((k|0)==21)IA(l+d|0,e,g)|0;g=g-h+m|0;if((a[o>>0]|0)<0)c[b+4>>2]=g;else a[o>>0]=g;a[n>>0]=0;Rc(l+g|0,n);}Pb=p;return b|0;}function TA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return SA(a,b,c,d,Qc(d)|0)|0;}function UA(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;i=Pb;Pb=Pb+16|0;h=i;if(e>>>0>1073741807)AA(b);do{if(e>>>0>=2){g=e+4&-4;if(g>>>0>1073741823)Ha();else{f=nA(g<<2)|0;c[b>>2]=f;c[b+8>>2]=g|-2147483648;c[b+4>>2]=e;break;}}else{a[b+8+3>>0]=e;f=b;}}while(0);fr(f,d,e)|0;c[h>>2]=0;Vr(f+(e<<2)|0,h);Pb=i;return;}function VA(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;i=Pb;Pb=Pb+16|0;h=i;if(d>>>0>1073741807)AA(b);do{if(d>>>0>=2){g=d+4&-4;if(g>>>0>1073741823)Ha();else{f=nA(g<<2)|0;c[b>>2]=f;c[b+8>>2]=g|-2147483648;c[b+4>>2]=d;break;}}else{a[b+8+3>>0]=d;f=b;}}while(0);WA(f,d,e)|0;c[h>>2]=0;Vr(f+(d<<2)|0,h);Pb=i;return;}function WA(a,b,c){a=a|0;b=b|0;c=c|0;if(b)xq(a,c,b)|0;return a|0;}function XA(b){b=b|0;if((a[b+8+3>>0]|0)<0)oA(c[b>>2]|0);return;}function YA(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=Pb;Pb=Pb+16|0;j=l;f=b+8|0;k=f+3|0;h=a[k>>0]|0;i=h<<24>>24<0;if(i)g=(c[f>>2]&2147483647)+-1|0;else g=1;do{if(g>>>0>=e>>>0){if(i)f=c[b>>2]|0;else f=b;ZA(f,d,e)|0;c[j>>2]=0;Vr(f+(e<<2)|0,j);if((a[k>>0]|0)<0){c[b+4>>2]=e;break;}else{a[k>>0]=e;break;}}else{if(i)f=c[b+4>>2]|0;else f=h&255;_A(b,g,e-g|0,f,0,f,e,d);}}while(0);Pb=l;return b|0;}function ZA(a,b,c){a=a|0;b=b|0;c=c|0;if(c)yq(a,b,c)|0;return a|0;}function _A(b,d,e,f,g,h,i,j){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var k=0,l=0,m=0,n=0,o=0,p=0;p=Pb;Pb=Pb+16|0;o=p;if((1073741806-d|0)>>>0<e>>>0)AA(b);l=b+8|0;if((a[l+3>>0]|0)<0)n=c[b>>2]|0;else n=b;if(d>>>0<536870887){e=e+d|0;k=d<<1;e=e>>>0<k>>>0?k:e;e=e>>>0<2?2:e+4&-4;if(e>>>0>1073741823)Ha();else m=e;}else m=1073741807;k=nA(m<<2)|0;if(g|0)fr(k,n,g)|0;if(i|0)fr(k+(g<<2)|0,j,i)|0;e=f-h|0;f=e-g|0;if(f|0)fr(k+(g<<2)+(i<<2)|0,n+(g<<2)+(h<<2)|0,f)|0;if((d|0)!=1)oA(n);c[b>>2]=k;c[l>>2]=m|-2147483648;i=e+i|0;c[b+4>>2]=i;c[o>>2]=0;Vr(k+(i<<2)|0,o);Pb=p;return;}function $A(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0;if(d>>>0>1073741807)AA(b);l=b+8|0;i=l+3|0;g=a[i>>0]|0;h=g<<24>>24<0;if(h){k=c[b+4>>2]|0;e=(c[l>>2]&2147483647)+-1|0;}else{k=g&255;e=1;}j=k>>>0>d>>>0?k:d;d=j>>>0<2;j=d?1:(j+4&-4)+-1|0;do{if((j|0)!=(e|0)){do{if(d){d=c[b>>2]|0;if(h){g=0;e=d;f=b;h=15;}else{fr(b,d,(g&255)+1|0)|0;oA(d);h=18;}}else{e=j+1|0;if(e>>>0>1073741823)Ha();f=nA(e<<2)|0;if(h){g=1;e=c[b>>2]|0;h=15;break;}else{fr(f,b,(g&255)+1|0)|0;d=b+4|0;h=17;break;}}}while(0);if((h|0)==15){d=b+4|0;fr(f,e,(c[d>>2]|0)+1|0)|0;oA(e);if(g){e=j+1|0;h=17;}else h=18;}if((h|0)==17){c[l>>2]=e|-2147483648;c[d>>2]=k;c[b>>2]=f;break;}else if((h|0)==18){a[i>>0]=k;break;}}}while(0);return;}function aB(a,b){a=a|0;b=b|0;return YA(a,b,Wu(b)|0)|0;}function bB(b,d,e,f,g,h,i){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,k=0,l=0,m=0;if((1073741807-d|0)>>>0<e>>>0)AA(b);m=b+8|0;if((a[m+3>>0]|0)<0)l=c[b>>2]|0;else l=b;if(d>>>0<536870887){e=e+d|0;j=d<<1;e=e>>>0<j>>>0?j:e;e=e>>>0<2?2:e+4&-4;if(e>>>0>1073741823)Ha();else k=e;}else k=1073741807;j=nA(k<<2)|0;if(g|0)fr(j,l,g)|0;e=f-h-g|0;if(e|0)fr(j+(g<<2)+(i<<2)|0,l+(g<<2)+(h<<2)|0,e)|0;if((d|0)!=1)oA(l);c[b>>2]=j;c[m>>2]=k|-2147483648;return;}function cB(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0;l=Pb;Pb=Pb+16|0;j=l;f=b+8|0;k=f+3|0;g=a[k>>0]|0;i=g<<24>>24<0;if(i){f=(c[f>>2]&2147483647)+-1|0;h=c[b+4>>2]|0;}else{f=1;h=g&255;}if((f-h|0)>>>0>=e>>>0){if(e|0){if(i)g=c[b>>2]|0;else g=b;fr(g+(h<<2)|0,d,e)|0;f=h+e|0;if((a[k>>0]|0)<0)c[b+4>>2]=f;else a[k>>0]=f;c[j>>2]=0;Vr(g+(f<<2)|0,j);}}else _A(b,f,h+e-f|0,h,h,0,e,d);Pb=l;return b|0;}function dB(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;k=Pb;Pb=Pb+16|0;i=k;j=k+4|0;c[i>>2]=d;e=b+8|0;h=e+3|0;d=a[h>>0]|0;f=d<<24>>24<0;if(f){g=c[b+4>>2]|0;d=(c[e>>2]&2147483647)+-1|0;}else{g=d&255;d=1;}if((g|0)==(d|0)){bB(b,d,1,d,d,0,0);if((a[h>>0]|0)<0)e=8;else e=7;}else if(f)e=8;else e=7;if((e|0)==7){a[h>>0]=g+1;d=b;}else if((e|0)==8){d=c[b>>2]|0;c[b+4>>2]=g+1;}b=d+(g<<2)|0;Vr(b,i);c[j>>2]=0;Vr(b+4|0,j);Pb=k;return;}function eB(a){a=a|0;Ha();}function fB(){return(gB()|0)>0|0;}function gB(){return(ea()|0)&1|0;}function hB(){var a=0,b=0,d=0,e=0,f=0,g=0,h=0,i=0;f=Pb;Pb=Pb+48|0;h=f+32|0;d=f+24|0;i=f+16|0;g=f;f=f+36|0;a=iB()|0;if(a|0?(e=c[a>>2]|0,e|0):0){a=e+48|0;b=c[a>>2]|0;a=c[a+4>>2]|0;if(!((b&-256|0)==1126902528&(a|0)==1129074247)){c[d>>2]=25653;jB(25603,d);}if((b|0)==1126902529&(a|0)==1129074247)a=c[e+44>>2]|0;else a=e+80|0;c[f>>2]=a;e=c[e>>2]|0;a=c[e+4>>2]|0;if($b[c[(c[2610]|0)+16>>2]&31](10440,e,f)|0){i=c[f>>2]|0;i=Yb[c[(c[i>>2]|0)+8>>2]&127](i)|0;c[g>>2]=25653;c[g+4>>2]=a;c[g+8>>2]=i;jB(25517,g);}else{c[i>>2]=25653;c[i+4>>2]=a;jB(25562,i);}}jB(25641,h);}function iB(){var a=0,b=0;a=Pb;Pb=Pb+16|0;if(!(Lq(30800,3)|0)){b=Jq(c[7701]|0)|0;Pb=a;return b|0;}else jB(25792,a);return 0;}function jB(a,b){a=a|0;b=b|0;var d=0;d=Pb;Pb=Pb+16|0;c[d>>2]=b;b=c[2907]|0;rp(b,a,d)|0;oq(10,b)|0;Ha();}function kB(a){a=a|0;return;}function lB(a){a=a|0;kB(a);oA(a);return;}function mB(a){a=a|0;return;}function nB(a){a=a|0;return;}function oB(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0;h=Pb;Pb=Pb+64|0;f=h;if(!(sB(a,b,0)|0)){if((b|0)!=0?(g=wB(b,10464,10448,0)|0,(g|0)!=0):0){b=f+4|0;e=b+52|0;do{c[b>>2]=0;b=b+4|0;}while((b|0)<(e|0));c[f>>2]=g;c[f+8>>2]=a;c[f+12>>2]=-1;c[f+48>>2]=1;rc[c[(c[g>>2]|0)+28>>2]&7](g,f,c[d>>2]|0,1);if((c[f+24>>2]|0)==1){c[d>>2]=c[f+16>>2];b=1;}else b=0;}else b=0;}else b=1;Pb=h;return b|0;}function pB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if(sB(a,c[b+8>>2]|0,g)|0)vB(0,b,d,e,f);return;}function qB(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0;do{if(!(sB(b,c[d+8>>2]|0,g)|0)){if(sB(b,c[d>>2]|0,g)|0){if((c[d+16>>2]|0)!=(e|0)?(h=d+20|0,(c[h>>2]|0)!=(e|0)):0){c[d+32>>2]=f;c[h>>2]=e;g=d+40|0;c[g>>2]=(c[g>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0)a[d+54>>0]=1;c[d+44>>2]=4;break;}if((f|0)==1)c[d+32>>2]=1;}}else uB(0,d,e,f);}while(0);return;}function rB(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;if(sB(a,c[b+8>>2]|0,0)|0)tB(0,b,d,e);return;}function sB(a,b,c){a=a|0;b=b|0;c=c|0;return(a|0)==(b|0)|0;}function tB(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0;b=d+16|0;g=c[b>>2]|0;do{if(g){if((g|0)!=(e|0)){f=d+36|0;c[f>>2]=(c[f>>2]|0)+1;c[d+24>>2]=2;a[d+54>>0]=1;break;}b=d+24|0;if((c[b>>2]|0)==2)c[b>>2]=f;}else{c[b>>2]=e;c[d+24>>2]=f;c[d+36>>2]=1;}}while(0);return;}function uB(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;if((c[b+4>>2]|0)==(d|0)?(f=b+28|0,(c[f>>2]|0)!=1):0)c[f>>2]=e;return;}function vB(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;a[d+53>>0]=1;do{if((c[d+4>>2]|0)==(f|0)){a[d+52>>0]=1;b=d+16|0;f=c[b>>2]|0;if(!f){c[b>>2]=e;c[d+24>>2]=g;c[d+36>>2]=1;if(!((g|0)==1?(c[d+48>>2]|0)==1:0))break;a[d+54>>0]=1;break;}if((f|0)!=(e|0)){g=d+36|0;c[g>>2]=(c[g>>2]|0)+1;a[d+54>>0]=1;break;}f=d+24|0;b=c[f>>2]|0;if((b|0)==2){c[f>>2]=g;b=g;}if((b|0)==1?(c[d+48>>2]|0)==1:0)a[d+54>>0]=1;}}while(0);return;}function wB(d,e,f,g){d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;p=Pb;Pb=Pb+64|0;n=p;m=c[d>>2]|0;o=d+(c[m+-8>>2]|0)|0;m=c[m+-4>>2]|0;c[n>>2]=f;c[n+4>>2]=d;c[n+8>>2]=e;c[n+12>>2]=g;d=n+16|0;e=n+20|0;g=n+24|0;h=n+28|0;i=n+32|0;j=n+40|0;k=d;l=k+36|0;do{c[k>>2]=0;k=k+4|0;}while((k|0)<(l|0));b[d+36>>1]=0;a[d+38>>0]=0;a:do{if(sB(m,f,0)|0){c[n+48>>2]=1;tc[c[(c[m>>2]|0)+20>>2]&7](m,n,o,o,1,0);d=(c[g>>2]|0)==1?o:0;}else{sc[c[(c[m>>2]|0)+24>>2]&3](m,n,o,1,0);switch(c[n+36>>2]|0){case 0:{d=(c[j>>2]|0)==1&(c[h>>2]|0)==1&(c[i>>2]|0)==1?c[e>>2]|0:0;break a;}case 1:break;default:{d=0;break a;}}if((c[g>>2]|0)!=1?!((c[j>>2]|0)==0&(c[h>>2]|0)==1&(c[i>>2]|0)==1):0){d=0;break;}d=c[d>>2]|0;}}while(0);Pb=p;return d|0;}function xB(a){a=a|0;kB(a);oA(a);return;}function yB(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;if(sB(a,c[b+8>>2]|0,g)|0)vB(0,b,d,e,f);else{a=c[a+8>>2]|0;tc[c[(c[a>>2]|0)+20>>2]&7](a,b,d,e,f,g);}return;}function zB(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0;do{if(!(sB(b,c[d+8>>2]|0,g)|0)){if(!(sB(b,c[d>>2]|0,g)|0)){i=c[b+8>>2]|0;sc[c[(c[i>>2]|0)+24>>2]&3](i,d,e,f,g);break;}if((c[d+16>>2]|0)!=(e|0)?(h=d+20|0,(c[h>>2]|0)!=(e|0)):0){c[d+32>>2]=f;i=d+44|0;if((c[i>>2]|0)==4)break;f=d+52|0;a[f>>0]=0;j=d+53|0;a[j>>0]=0;b=c[b+8>>2]|0;tc[c[(c[b>>2]|0)+20>>2]&7](b,d,e,e,1,g);if(a[j>>0]|0){if(!(a[f>>0]|0)){f=1;b=11;}else b=15;}else{f=0;b=11;}do{if((b|0)==11){c[h>>2]=e;j=d+40|0;c[j>>2]=(c[j>>2]|0)+1;if((c[d+36>>2]|0)==1?(c[d+24>>2]|0)==2:0){a[d+54>>0]=1;if(f){b=15;break;}else{f=4;break;}}if(f)b=15;else f=4;}}while(0);if((b|0)==15)f=3;c[i>>2]=f;break;}if((f|0)==1)c[d+32>>2]=1;}else uB(0,d,e,f);}while(0);return;}function AB(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;if(sB(a,c[b+8>>2]|0,0)|0)tB(0,b,d,e);else{a=c[a+8>>2]|0;rc[c[(c[a>>2]|0)+28>>2]&7](a,b,d,e);}return;}function BB(a){a=a|0;return;}function CB(){var a=0;a=Pb;Pb=Pb+16|0;if(!(Iq(30804,159)|0)){Pb=a;return;}else jB(25841,a);}function DB(a){a=a|0;var b=0;b=Pb;Pb=Pb+16|0;Cq(a);if(!(Kq(c[7701]|0,0)|0)){Pb=b;return;}else jB(25891,b);}function EB(){var a=0,b=0;a=iB()|0;if((a|0?(b=c[a>>2]|0,b|0):0)?(a=b+48|0,(c[a>>2]&-256|0)==1126902528?(c[a+4>>2]|0)==1129074247:0):0)FB(c[b+12>>2]|0);FB(GB()|0);}function FB(a){a=a|0;var b=0;b=Pb;Pb=Pb+16|0;jc[a&3]();jB(25944,b);}function GB(){var a=0;a=c[3691]|0;c[3691]=a+0;return a|0;}function HB(a){a=a|0;return;}function IB(a){a=a|0;c[a>>2]=14856;MB(a+4|0);return;}function JB(a){a=a|0;IB(a);oA(a);return;}function KB(a){a=a|0;return LB(a+4|0)|0;}function LB(a){a=a|0;return c[a>>2]|0;}function MB(a){a=a|0;var b=0,d=0;if(wA(a)|0?(b=NB(c[a>>2]|0)|0,d=b+8|0,a=c[d>>2]|0,c[d>>2]=a+-1,(a+-1|0)<0):0)oA(b);return;}function NB(a){a=a|0;return a+-12|0;}function OB(a){a=a|0;c[a>>2]=14876;MB(a+4|0);return;}function PB(a){a=a|0;OB(a);oA(a);return;}function QB(a){a=a|0;return LB(a+4|0)|0;}function RB(a){a=a|0;IB(a);oA(a);return;}function SB(a){a=a|0;IB(a);oA(a);return;}function TB(a){a=a|0;OB(a);oA(a);return;}function UB(a){a=a|0;kB(a);oA(a);return;}function VB(a,b,c){a=a|0;b=b|0;c=c|0;return sB(a,b,0)|0;}function WB(a){a=a|0;kB(a);oA(a);return;}function XB(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=Pb;Pb=Pb+64|0;h=j;c[d>>2]=c[c[d>>2]>>2];if(!(YB(a,b,0)|0)){if(((b|0)!=0?(e=wB(b,10464,10600,0)|0,(e|0)!=0):0)?(c[e+8>>2]&~c[a+8>>2]|0)==0:0){a=a+12|0;b=e+12|0;if(!(sB(c[a>>2]|0,c[b>>2]|0,0)|0)?!(sB(c[a>>2]|0,10632,0)|0):0){a=c[a>>2]|0;if((((a|0)!=0?(g=wB(a,10464,10448,0)|0,(g|0)!=0):0)?(f=c[b>>2]|0,(f|0)!=0):0)?(i=wB(f,10464,10448,0)|0,(i|0)!=0):0){a=h+4|0;b=a+52|0;do{c[a>>2]=0;a=a+4|0;}while((a|0)<(b|0));c[h>>2]=i;c[h+8>>2]=g;c[h+12>>2]=-1;c[h+48>>2]=1;rc[c[(c[i>>2]|0)+28>>2]&7](i,h,c[d>>2]|0,1);if((c[h+24>>2]|0)==1){c[d>>2]=c[h+16>>2];a=1;}else a=0;}else a=0;}else a=1;}else a=0;}else a=1;Pb=j;return a|0;}function YB(a,b,c){a=a|0;b=b|0;c=c|0;if(sB(a,b,0)|0)a=1;else a=sB(b,10640,0)|0;return a|0;}function ZB(a){a=a|0;kB(a);oA(a);return;}function _B(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;if(sB(b,c[d+8>>2]|0,h)|0)vB(0,d,e,f,g);else{p=d+52|0;i=a[p>>0]|0;j=d+53|0;k=a[j>>0]|0;o=c[b+12>>2]|0;l=b+16+(o<<3)|0;a[p>>0]=0;a[j>>0]=0;cC(b+16|0,d,e,f,g,h);a:do{if((o|0)>1){m=d+24|0;n=b+8|0;o=d+54|0;b=b+24|0;do{if(a[o>>0]|0)break a;if(!(a[p>>0]|0)){if(a[j>>0]|0?(c[n>>2]&1|0)==0:0)break a;}else{if((c[m>>2]|0)==1)break a;if(!(c[n>>2]&2))break a;}a[p>>0]=0;a[j>>0]=0;cC(b,d,e,f,g,h);b=b+8|0;}while(b>>>0<l>>>0);}}while(0);a[p>>0]=i;a[j>>0]=k;}return;}function $B(b,d,e,f,g){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;a:do{if(!(sB(b,c[d+8>>2]|0,g)|0)){if(!(sB(b,c[d>>2]|0,g)|0)){q=c[b+12>>2]|0;k=b+16+(q<<3)|0;dC(b+16|0,d,e,f,g);h=b+24|0;if((q|0)<=1)break;b=c[b+8>>2]|0;if((b&2|0)==0?(j=d+36|0,(c[j>>2]|0)!=1):0){if(!(b&1)){b=d+54|0;while(1){if(a[b>>0]|0)break a;if((c[j>>2]|0)==1)break a;dC(h,d,e,f,g);h=h+8|0;if(h>>>0>=k>>>0)break a;}}b=d+24|0;i=d+54|0;while(1){if(a[i>>0]|0)break a;if((c[j>>2]|0)==1?(c[b>>2]|0)==1:0)break a;dC(h,d,e,f,g);h=h+8|0;if(h>>>0>=k>>>0)break a;}}b=d+54|0;while(1){if(a[b>>0]|0)break a;dC(h,d,e,f,g);h=h+8|0;if(h>>>0>=k>>>0)break a;}}if((c[d+16>>2]|0)!=(e|0)?(q=d+20|0,(c[q>>2]|0)!=(e|0)):0){c[d+32>>2]=f;p=d+44|0;if((c[p>>2]|0)==4)break;k=b+16+(c[b+12>>2]<<3)|0;f=d+52|0;l=d+53|0;n=d+54|0;m=b+8|0;o=d+24|0;h=0;i=b+16|0;j=0;b:while(1){if(i>>>0>=k>>>0){b=18;break;}a[f>>0]=0;a[l>>0]=0;cC(i,d,e,e,1,g);if(a[n>>0]|0){b=18;break;}do{if(a[l>>0]|0){if(!(a[f>>0]|0))if(!(c[m>>2]&1)){h=1;b=18;break b;}else{h=1;b=j;break;}if((c[o>>2]|0)==1){b=23;break b;}if(!(c[m>>2]&2)){b=23;break b;}else{h=1;b=1;}}else b=j;}while(0);i=i+8|0;j=b;}do{if((b|0)==18){if((!j?(c[q>>2]=e,e=d+40|0,c[e>>2]=(c[e>>2]|0)+1,(c[d+36>>2]|0)==1):0)?(c[o>>2]|0)==2:0){a[n>>0]=1;if(h){b=23;break;}else{h=4;break;}}if(h)b=23;else h=4;}}while(0);if((b|0)==23)h=3;c[p>>2]=h;break;}if((f|0)==1)c[d+32>>2]=1;}else uB(0,d,e,f);}while(0);return;}function aC(b,d,e,f){b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;a:do{if(!(sB(b,c[d+8>>2]|0,0)|0)){h=c[b+12>>2]|0;g=b+16+(h<<3)|0;bC(b+16|0,d,e,f);if((h|0)>1){h=d+54|0;b=b+24|0;do{bC(b,d,e,f);if(a[h>>0]|0)break a;b=b+8|0;}while(b>>>0<g>>>0);}}else tB(0,d,e,f);}while(0);return;}function bC(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,g=0;g=c[a+4>>2]|0;f=g>>8;if(g&1)f=c[(c[d>>2]|0)+f>>2]|0;a=c[a>>2]|0;rc[c[(c[a>>2]|0)+28>>2]&7](a,b,d+f|0,(g&2|0)==0?2:e);return;}function cC(a,b,d,e,f,g){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0;i=c[a+4>>2]|0;h=i>>8;if(i&1)h=c[(c[e>>2]|0)+h>>2]|0;a=c[a>>2]|0;tc[c[(c[a>>2]|0)+20>>2]&7](a,b,d,e+h|0,(i&2|0)==0?2:f,g);return;}function dC(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0;h=c[a+4>>2]|0;g=h>>8;if(h&1)g=c[(c[d>>2]|0)+g>>2]|0;a=c[a>>2]|0;sc[c[(c[a>>2]|0)+24>>2]&3](a,b,d+g|0,(h&2|0)==0?2:e,f);return;}function eC(b){b=b|0;if((a[b>>0]|0)==1)b=0;else{a[b>>0]=1;b=1;}return b|0;}function fC(a){a=a|0;return;}function gC(a){a=a|0;return;}function hC(){var a=0;a=c[7702]|0;c[7702]=a+0;return a|0;}function iC(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;f=Pb;Pb=Pb+16|0;e=f;c[e>>2]=c[d>>2];a=$b[c[(c[a>>2]|0)+16>>2]&31](a,b,e)|0;if(a)c[d>>2]=c[e>>2];Pb=f;return a&1|0;}function jC(a){a=a|0;if(!a)a=0;else a=(wB(a,10464,10600,0)|0)!=0&1;return a|0;}function kC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=a&65535;e=b&65535;c=C(e,f)|0;d=a>>>16;a=(c>>>16)+(C(e,d)|0)|0;e=b>>>16;b=C(e,f)|0;return(F((a>>>16)+(C(e,d)|0)+(((a&65535)+b|0)>>>16)|0),a+b<<16|c&65535|0)|0;}function lC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;f=c;c=kC(e,f)|0;a=G()|0;return(F((C(b,f)|0)+(C(d,e)|0)+a|a&0|0),c|0|0)|0;}function mC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=a+c>>>0;return(F(b+d+(c>>>0<a>>>0|0)>>>0|0),c|0)|0;}function nC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=b-d-(c>>>0>a>>>0|0)>>>0;return(F(d|0),a-c>>>0|0)|0;}function oC(a){a=a|0;return(a?31-(D(a^a-1)|0)|0:32)|0;}function pC(a,b,d,e,f){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0;l=a;j=b;k=j;h=d;n=e;i=n;if(!k){g=(f|0)!=0;if(!i){if(g){c[f>>2]=(l>>>0)%(h>>>0);c[f+4>>2]=0;}n=0;f=(l>>>0)/(h>>>0)>>>0;return(F(n|0),f)|0;}else{if(!g){n=0;f=0;return(F(n|0),f)|0;}c[f>>2]=a|0;c[f+4>>2]=b&0;n=0;f=0;return(F(n|0),f)|0;}}g=(i|0)==0;do{if(h){if(!g){g=(D(i|0)|0)-(D(k|0)|0)|0;if(g>>>0<=31){m=g+1|0;i=31-g|0;b=g-31>>31;h=m;a=l>>>(m>>>0)&b|k<<i;b=k>>>(m>>>0)&b;g=0;i=l<<i;break;}if(!f){n=0;f=0;return(F(n|0),f)|0;}c[f>>2]=a|0;c[f+4>>2]=j|b&0;n=0;f=0;return(F(n|0),f)|0;}g=h-1|0;if(g&h|0){i=(D(h|0)|0)+33-(D(k|0)|0)|0;p=64-i|0;m=32-i|0;j=m>>31;o=i-32|0;b=o>>31;h=i;a=m-1>>31&k>>>(o>>>0)|(k<<m|l>>>(i>>>0))&b;b=b&k>>>(i>>>0);g=l<<p&j;i=(k<<p|l>>>(o>>>0))&j|l<<m&i-33>>31;break;}if(f|0){c[f>>2]=g&l;c[f+4>>2]=0;}if((h|0)==1){o=j|b&0;p=a|0|0;return(F(o|0),p)|0;}else{p=oC(h|0)|0;o=k>>>(p>>>0)|0;p=k<<32-p|l>>>(p>>>0)|0;return(F(o|0),p)|0;}}else{if(g){if(f|0){c[f>>2]=(k>>>0)%(h>>>0);c[f+4>>2]=0;}o=0;p=(k>>>0)/(h>>>0)>>>0;return(F(o|0),p)|0;}if(!l){if(f|0){c[f>>2]=0;c[f+4>>2]=(k>>>0)%(i>>>0);}o=0;p=(k>>>0)/(i>>>0)>>>0;return(F(o|0),p)|0;}g=i-1|0;if(!(g&i)){if(f|0){c[f>>2]=a|0;c[f+4>>2]=g&k|b&0;}o=0;p=k>>>((oC(i|0)|0)>>>0);return(F(o|0),p)|0;}g=(D(i|0)|0)-(D(k|0)|0)|0;if(g>>>0<=30){b=g+1|0;i=31-g|0;h=b;a=k<<i|l>>>(b>>>0);b=k>>>(b>>>0);g=0;i=l<<i;break;}if(!f){o=0;p=0;return(F(o|0),p)|0;}c[f>>2]=a|0;c[f+4>>2]=j|b&0;o=0;p=0;return(F(o|0),p)|0;}}while(0);if(!h){k=i;j=0;i=0;}else{m=d|0|0;l=n|e&0;k=mC(m|0,l|0,-1,-1)|0;d=G()|0;j=i;i=0;do{e=j;j=g>>>31|j<<1;g=i|g<<1;e=a<<1|e>>>31|0;n=a>>>31|b<<1|0;nC(k|0,d|0,e|0,n|0)|0;p=G()|0;o=p>>31|((p|0)<0?-1:0)<<1;i=o&1;a=nC(e|0,n|0,o&m|0,(((p|0)<0?-1:0)>>31|((p|0)<0?-1:0)<<1)&l|0)|0;b=G()|0;h=h-1|0;}while((h|0)!=0);k=j;j=0;}h=0;if(f|0){c[f>>2]=a;c[f+4>>2]=b;}o=(g|0)>>>31|(k|h)<<1|(h<<1|g>>>31)&0|j;p=(g<<1|0>>>31)&-2|i;return(F(o|0),p)|0;}function qC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return pC(a,b,c,d,0)|0;}function rC(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){F(b>>>c|0);return a>>>c|(b&(1<<c)-1)<<32-c;}F(0);return b>>>c-32|0;}function sC(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){F(b<<c|(a&(1<<c)-1<<32-c)>>>32-c|0);return a<<c;}F(a<<c-32|0);return 0;}function tC(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;l=l+1|0;c[a>>2]=l;while((f|0)<(e|0)){if(!(c[d+(f<<3)>>2]|0)){c[d+(f<<3)>>2]=l;c[d+((f<<3)+4)>>2]=b;c[d+((f<<3)+8)>>2]=0;F(e|0);return d|0;}f=f+1|0;}e=e*2|0;d=Dq(d|0,8*(e+1|0)|0)|0;d=tC(a|0,b|0,d|0,e|0)|0;F(e|0);return d|0;}function uC(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;while((f|0)<(d|0)){e=c[b+(f<<3)>>2]|0;if(!e)break;if((e|0)==(a|0))return c[b+((f<<3)+4)>>2]|0;f=f+1|0;}return 0;}function vC(a,b){a=a|0;b=b|0;if(!j){j=a;k=b;}}function wC(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0;if((e|0)>=8192){Ka(b|0,d|0,e|0)|0;return b|0;}h=b|0;g=b+e|0;if((b&3)==(d&3)){while(b&3){if(!e)return h|0;a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;e=e-1|0;}e=g&-4|0;f=e-64|0;while((b|0)<=(f|0)){c[b>>2]=c[d>>2];c[b+4>>2]=c[d+4>>2];c[b+8>>2]=c[d+8>>2];c[b+12>>2]=c[d+12>>2];c[b+16>>2]=c[d+16>>2];c[b+20>>2]=c[d+20>>2];c[b+24>>2]=c[d+24>>2];c[b+28>>2]=c[d+28>>2];c[b+32>>2]=c[d+32>>2];c[b+36>>2]=c[d+36>>2];c[b+40>>2]=c[d+40>>2];c[b+44>>2]=c[d+44>>2];c[b+48>>2]=c[d+48>>2];c[b+52>>2]=c[d+52>>2];c[b+56>>2]=c[d+56>>2];c[b+60>>2]=c[d+60>>2];b=b+64|0;d=d+64|0;}while((b|0)<(e|0)){c[b>>2]=c[d>>2];b=b+4|0;d=d+4|0;}}else{e=g-4|0;while((b|0)<(e|0)){a[b>>0]=a[d>>0]|0;a[b+1>>0]=a[d+1>>0]|0;a[b+2>>0]=a[d+2>>0]|0;a[b+3>>0]=a[d+3>>0]|0;b=b+4|0;d=d+4|0;}}while((b|0)<(g|0)){a[b>>0]=a[d>>0]|0;b=b+1|0;d=d+1|0;}return h|0;}function xC(b,c,d){b=b|0;c=c|0;d=d|0;var e=0;if((c|0)<(b|0)&(b|0)<(c+d|0)){e=b;c=c+d|0;b=b+d|0;while((d|0)>0){b=b-1|0;c=c-1|0;d=d-1|0;a[b>>0]=a[c>>0]|0;}b=e;}else wC(b,c,d)|0;return b|0;}function yC(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;h=b+e|0;d=d&255;if((e|0)>=67){while(b&3){a[b>>0]=d;b=b+1|0;}f=h&-4|0;i=d|d<<8|d<<16|d<<24;g=f-64|0;while((b|0)<=(g|0)){c[b>>2]=i;c[b+4>>2]=i;c[b+8>>2]=i;c[b+12>>2]=i;c[b+16>>2]=i;c[b+20>>2]=i;c[b+24>>2]=i;c[b+28>>2]=i;c[b+32>>2]=i;c[b+36>>2]=i;c[b+40>>2]=i;c[b+44>>2]=i;c[b+48>>2]=i;c[b+52>>2]=i;c[b+56>>2]=i;c[b+60>>2]=i;b=b+64|0;}while((b|0)<(f|0)){c[b>>2]=i;b=b+4|0;}}while((b|0)<(h|0)){a[b>>0]=d;b=b+1|0;}return h-e|0;}function zC(a){a=a|0;return 0;}function AC(a){a=a|0;var b=0,d=0,e=0;e=Ja()|0;d=c[i>>2]|0;b=d+a|0;if((a|0)>0&(b|0)<(d|0)|(b|0)<0){Xa(b|0)|0;ja(12);return-1;}if((b|0)>(e|0))if(!(La(b|0)|0)){ja(12);return-1;}c[i>>2]=b;return d|0;}function BC(a,b){a=a|0;b=+b;return+Sb[a&3](+b);}function CC(a,b,c){a=a|0;b=+b;c=+c;return+Tb[a&1](+b,+c);}function DC(a,b,c){a=a|0;b=+b;c=c|0;return+Ub[a&1](+b,c|0);}function EC(a,b){a=a|0;b=b|0;return+Vb[a&1](b|0);}function FC(a,b,c){a=a|0;b=b|0;c=c|0;return+Wb[a&1](b|0,c|0);}function GC(a){a=a|0;return Xb[a&1]()|0;}function HC(a,b){a=a|0;b=b|0;return Yb[a&127](b|0)|0;}function IC(a,b,c,d,e,f,g){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;f=f|0;g=g|0;return Zb[a&1](b|0,+c,d|0,e|0,f|0,g|0)|0;}function JC(a,b,c){a=a|0;b=b|0;c=c|0;return _b[a&15](b|0,c|0)|0;}function KC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return $b[a&31](b|0,c|0,d|0)|0;}function LC(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;return ac[a&1](b|0,c|0,d|0,+e)|0;}function MC(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return bc[a&7](b|0,c|0,d|0,e|0)|0;}function NC(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;return cc[a&7](b|0,c|0,d|0,e|0,+f)|0;}function OC(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return dc[a&31](b|0,c|0,d|0,e|0,f|0)|0;}function PC(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;return ec[a&3](b|0,c|0,d|0,e|0,f|0,+g)|0;}function QC(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;h=+h;i=+i;j=+j;return fc[a&1](b|0,c|0,d|0,e|0,f|0,+g,+h,+i,+j)|0;}function RC(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return gc[a&63](b|0,c|0,d|0,e|0,f|0,g|0)|0;}function SC(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return hc[a&7](b|0,c|0,d|0,e|0,f|0,g|0,h|0)|0;}function TC(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;return ic[a&15](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0)|0;}function UC(a){a=a|0;jc[a&3]();}function VC(a,b){a=a|0;b=b|0;kc[a&255](b|0);}function WC(a,b,c){a=a|0;b=b|0;c=+c;lc[a&1](b|0,+c);}function XC(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=+d;e=e|0;mc[a&1](b|0,+c,+d,e|0);}function YC(a,b,c){a=a|0;b=b|0;c=c|0;nc[a&63](b|0,c|0);}function ZC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;oc[a&1](b|0,c|0,+d);}function _C(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;pc[a&3](b|0,c|0,d|0);}function $C(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;qc[a&1](b|0,c|0,d|0,+e);}function aD(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;rc[a&7](b|0,c|0,d|0,e|0);}function bD(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;sc[a&3](b|0,c|0,d|0,e|0,f|0);}function cD(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;tc[a&7](b|0,c|0,d|0,e|0,f|0,g|0);}function dD(a){a=+a;E(0);return 0.0;}function eD(a){a=+a;return+Ua(+a);}function fD(a,b){a=+a;b=+b;E(1);return 0.0;}function gD(a,b){a=+a;b=b|0;E(2);return 0.0;}function hD(a){a=a|0;E(3);return 0.0;}function iD(a,b){a=a|0;b=b|0;E(4);return 0.0;}function jD(){E(5);return 0;}function kD(a){a=a|0;E(6);return 0;}function lD(a,b,c,d,e,f){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;f=f|0;E(7);return 0;}function mD(a,b){a=a|0;b=b|0;E(8);return 0;}function nD(a,b,c){a=a|0;b=b|0;c=c|0;E(9);return 0;}function oD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;E(10);return 0;}function pD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;E(11);return 0;}function qD(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;E(12);return 0;}function rD(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;E(13);return 0;}function sD(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;E(14);return 0;}function tD(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;g=+g;h=+h;i=+i;E(15);return 0;}function uD(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;E(16);return 0;}function vD(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;E(17);return 0;}function wD(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;E(18);return 0;}function xD(){E(19);}function yD(){ca();}function zD(a){a=a|0;E(20);}function AD(a,b){a=a|0;b=+b;E(21);}function BD(a,b,c,d){a=a|0;b=+b;c=+c;d=d|0;E(22);}function CD(a,b){a=a|0;b=b|0;E(23);}function DD(a,b,c){a=a|0;b=b|0;c=+c;E(24);}function ED(a,b,c){a=a|0;b=b|0;c=c|0;E(25);}function FD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;E(26);}function GD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;E(27);}function HD(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;E(28);}function ID(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;E(29);}function uc(){gg();hg();ig();jg();kg();Nm();}function vc(a){a=a|0;var b=0;b=Pb;Pb=Pb+a|0;Pb=Pb+15&-16;return b|0;}function wc(){return Pb|0;}function xc(a){a=a|0;Pb=a;}function yc(a,b){a=a|0;b=b|0;Pb=a;Qb=b;}function zc(){Ac(28816,1.0);return;}function Ac(a,b){a=a|0;b=+b;var c=0;c=Pb;Pb=Pb+16|0;g[a>>3]=b;Ec(15089,a,c,c+8|0)|0;Pb=c;return;}function Bc(){Cc(0);return;}function Cc(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;a=Pb;Pb=Pb+16|0;b=a;e=a+8|0;be();g=de()|0;d=ee()|0;m=ge()|0;l=he()|0;k=ie()|0;j=je()|0;i=qe()|0;h=re()|0;f=re()|0;sa(m|0,l|0,k|0,j|0,i|0,61,h|0,g|0,f|0,d|0,15044,se()|0,153);d=ge()|0;f=ve(b)|0;g=we(b)|0;ta(d|0,f|0,g|0,Ce()|0,1,11);c[b>>2]=1;c[b+4>>2]=0;g=ge()|0;f=Ee(e)|0;e=Fe(e)|0;d=Ke()|0;ua(g|0,15059,f|0,e|0,d|0,1,Ge(b)|0,0);Dc(15079);Pb=a;return;}function Dc(a){a=a|0;var b=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0;b=Pb;Pb=Pb+16|0;d=b;e=b+8|0;Xe();h=Ze()|0;f=_e()|0;n=af()|0;m=bf()|0;l=cf()|0;k=je()|0;j=qe()|0;i=re()|0;g=re()|0;sa(n|0,m|0,l|0,k|0,j|0,62,i|0,h|0,g|0,f|0,a|0,se()|0,154);a=af()|0;f=kf(d)|0;g=lf(d)|0;ta(a|0,f|0,g|0,qe()|0,63,1);c[d>>2]=34;c[d+4>>2]=0;g=af()|0;f=pf(e)|0;a=qf(e)|0;h=uf()|0;ua(g|0,15750,f|0,a|0,h|0,1,rf(d)|0,0);c[d>>2]=1;c[d+4>>2]=0;h=af()|0;a=wf(e)|0;f=xf(e)|0;g=Bf()|0;ua(h|0,15760,a|0,f|0,g|0,1,yf(d)|0,0);c[d>>2]=64;c[d+4>>2]=0;g=af()|0;f=Df(e)|0;a=Ef(e)|0;h=Jf()|0;ua(g|0,15767,f|0,a|0,h|0,11,Ff(d)|0,0);c[d>>2]=2;h=af()|0;a=Lf(e)|0;f=Mf(e)|0;g=Rf()|0;ua(h|0,15772,a|0,f|0,g|0,20,Nf(d)|0,0);c[d>>2]=21;g=af()|0;f=ag(e)|0;e=bg(e)|0;a=fg()|0;ua(g|0,15776,f|0,e|0,a|0,1,cg(d)|0,0);Pb=b;return;}function Ec(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0;e=+g[b>>3];if(!(e<=0.0)?Fc(e)|0:0)a=1;else{g[c>>3]=+Gc(a,15158,b,d);a=0;}return a|0;}function Fc(a){a=+a;var b=0,c=0;c=Pb;Pb=Pb+16|0;b=Hc(a,c)|0;Pb=c;return b|0;}function Gc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0;d=Pb;Pb=Pb+16|0;e=+Kc(a,(b|0)==0?20271:b,c,d);Pb=d;return+e;}function Hc(a,b){a=+a;b=b|0;Ic(a)|0;return 0!=0|((G()|0)&2146435072|0)!=2146435072|0;}function Ic(a){a=+a;var b=0;g[h>>3]=a;b=c[h>>2]|0;F(c[h+4>>2]|0);return b|0;}function Jc(a){a=a|0;$(a|0)|0;EB();}function Kc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Lc(a,b,c);return+r;}function Lc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=Pb;Pb=Pb+64|0;j=f+44|0;h=f+32|0;g=f+20|0;i=f+8|0;b=(b|0)==0?15949:b;d=(d|0)==0?17999:d;c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;DA(j,b,Qc(b)|0);c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;DA(h,d,Qc(d)|0);c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;DA(g,16002,Qc(16002)|0);Mc(j,16021,Nc()|0);d=a[j+11>>0]|0;b=d<<24>>24<0;PA(g,b?c[j>>2]|0:j,b?c[j+4>>2]|0:d&255)|0;QA(g,16025)|0;Oc(i,e);Mc(h,16021,(a[i+11>>0]|0)<0?c[i>>2]|0:i);e=a[h+11>>0]|0;d=e<<24>>24<0;PA(g,d?c[h>>2]|0:h,d?c[h+4>>2]|0:e&255)|0;qA(f,g);c[f>>2]=14896;Pc(f);}function Mc(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;j=Jo(d)|0;k=Jo(e)|0;l=b+11|0;h=a[l>>0]|0;f=h<<24>>24<0;m=b+4|0;i=f?c[b>>2]|0:b;h=f?c[m>>2]|0:h&255;f=0;g=Qc(d)|0;do{if(g){h=i+h|0;f=Sc(i+f|0,h,d,d+g|0)|0;if((f|0)==(h|0))break;else f=f-i|0;}if((f|0)==-1)break;TA(b,f,j,e)|0;f=f+k|0;h=a[l>>0]|0;g=h<<24>>24<0;i=g?c[b>>2]|0:b;h=g?c[m>>2]|0:h&255;g=Qc(d)|0;}while(h>>>0>=f>>>0);return;}function Nc(){return 22856;}function Oc(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,i=0;d=Pb;Pb=Pb+144|0;e=d;i=e+64|0;h=e+8|0;c[h>>2]=10808;f=e+12|0;c[e>>2]=6620;c[i>>2]=6640;c[e+4>>2]=0;yr(e+64|0,f);c[e+136>>2]=0;c[e+140>>2]=ad()|0;c[e>>2]=10788;c[i>>2]=10828;c[h>>2]=10808;Br(f);c[f>>2]=10884;h=e+44|0;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;c[e+60>>2]=24;h=e+8|0;c[h+(c[(c[h>>2]|0)+-12>>2]|0)+8>>2]=17;Fr(h,+g[b>>3])|0;md(a,f);Wc(e);Pb=d;return;}function Pc(a){a=a|0;var b=0,c=0;c=Pb;Pb=Pb+32|0;pd(a);b=_(32)|0;rd(c,a);qd(b,c);da(b|0,6768,23);}function Qc(a){a=a|0;return Jo(a)|0;}function Rc(b,c){b=b|0;c=c|0;a[b>>0]=a[c>>0]|0;return;}function Sc(b,c,d,e){b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;j=Pb;Pb=Pb+16|0;i=j;g=e-d|0;if(g){h=c;e=h-b|0;if((e|0)<(g|0))b=c;else{a[i>>0]=a[d>>0]|0;f=1-g|0;while(1){b=Tc(b,f+e|0,i)|0;if(!b){b=c;break;}if(!(Uc(b,d,g)|0))break;b=b+1|0;e=h-b|0;if((e|0)<(g|0)){b=c;break;}}}}Pb=j;return b|0;}function Tc(b,c,d){b=b|0;c=c|0;d=d|0;if(!c)b=0;else b=qp(b,Vc(a[d>>0]|0)|0,c)|0;return b|0;}function Uc(a,b,c){a=a|0;b=b|0;c=c|0;if(!c)a=0;else a=Ip(a,b,c)|0;return a|0;}function Vc(a){a=a|0;return a&255|0;}function Wc(a){a=a|0;od(a,10836);Mq(a+64|0);return;}function Xc(a){a=a|0;Wc(a);oA(a);return;}function Yc(a){a=a|0;Wc(a+-8|0);return;}function Zc(a){a=a|0;Xc(a+-8|0);return;}function _c(a){a=a|0;Wc(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return;}function $c(a){a=a|0;Xc(a+(c[(c[a>>2]|0)+-12>>2]|0)|0);return;}function ad(){return-1;}function bd(a){a=a|0;c[a>>2]=10884;GA(a+32|0);Qq(a);return;}function cd(a){a=a|0;bd(a);oA(a);return;}function dd(b,d,e,f,g,h){b=b|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0;i=d+44|0;j=c[i>>2]|0;n=d+24|0;o=c[n>>2]|0;if(j>>>0<o>>>0){c[i>>2]=o;m=o;}else m=j;l=h&24;a:do{if((l|0)!=0?!((g|0)==1&(l|0)==24):0){if(!m){k=0;l=0;}else{i=d+32|0;if((a[i+11>>0]|0)<0)i=c[i>>2]|0;l=m-i|0;k=((l|0)<0)<<31>>31;}b:do{switch(g|0){case 0:{i=0;j=0;break;}case 1:if(!(h&8)){j=o-(c[d+20>>2]|0)|0;i=j;j=((j|0)<0)<<31>>31;break b;}else{j=(c[d+12>>2]|0)-(c[d+8>>2]|0)|0;i=j;j=((j|0)<0)<<31>>31;break b;}case 2:{i=l;j=k;break;}default:{j=-1;i=-1;break a;}}}while(0);j=mC(i|0,j|0,e|0,f|0)|0;i=G()|0;if(!((i|0)<0|((k|0)<(i|0)|(k|0)==(i|0)&l>>>0<j>>>0))){g=h&8;if(!((j|0)==0&(i|0)==0)){if(g|0?(c[d+12>>2]|0)==0:0){j=-1;i=-1;break;}if((h&16|0)!=0&(o|0)==0){j=-1;i=-1;break;}}if(g|0){c[d+12>>2]=(c[d+8>>2]|0)+j;c[d+16>>2]=m;}if(h&16)c[n>>2]=(c[d+20>>2]|0)+j;}else{j=-1;i=-1;}}else{j=-1;i=-1;}}while(0);o=b;c[o>>2]=0;c[o+4>>2]=0;b=b+8|0;c[b>>2]=j;c[b+4>>2]=i;return;}function ed(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;d=d+8|0;tc[c[(c[b>>2]|0)+16>>2]&7](a,b,c[d>>2]|0,c[d+4>>2]|0,0,e);return;}function fd(b){b=b|0;var d=0,e=0,f=0,g=0;d=b+44|0;f=c[d>>2]|0;e=c[b+24>>2]|0;if(f>>>0<e>>>0){c[d>>2]=e;f=e;}if(c[b+48>>2]&8){d=b+16|0;e=c[d>>2]|0;if(e>>>0<f>>>0){c[d>>2]=f;e=f;}d=c[b+12>>2]|0;if(d>>>0<e>>>0)d=Vc(a[d>>0]|0)|0;else g=8;}else g=8;if((g|0)==8)d=ad()|0;return d|0;}function gd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;f=b+44|0;e=c[b+24>>2]|0;if((c[f>>2]|0)>>>0<e>>>0)c[f>>2]=e;e=b+12|0;do{if((c[b+8>>2]|0)>>>0<(c[e>>2]|0)>>>0){if(id(d,ad()|0)|0){f=c[f>>2]|0;c[e>>2]=(c[e>>2]|0)+-1;c[b+16>>2]=f;d=jd(d)|0;break;}if((c[b+48>>2]&16|0)==0?(h=ld(d)|0,!(kd(h,a[(c[e>>2]|0)+-1>>0]|0)|0)):0){g=9;break;}h=c[f>>2]|0;c[e>>2]=(c[e>>2]|0)+-1;c[b+16>>2]=h;h=ld(d)|0;a[c[e>>2]>>0]=h;}else g=9;}while(0);if((g|0)==9)d=ad()|0;return d|0;}function hd(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;t=Pb;Pb=Pb+16|0;o=t;do{if(!(id(d,ad()|0)|0)){p=b+12|0;q=b+8|0;r=(c[p>>2]|0)-(c[q>>2]|0)|0;s=b+24|0;l=c[s>>2]|0;m=b+28|0;e=c[m>>2]|0;if((l|0)==(e|0)){h=b+48|0;if(!(c[h>>2]&16)){e=ad()|0;break;}i=b+20|0;j=c[i>>2]|0;n=b+44|0;k=(c[n>>2]|0)-j|0;g=b+32|0;RA(g,0);e=g+11|0;if((a[e>>0]|0)<0)f=(c[b+40>>2]&2147483647)+-1|0;else f=10;MA(g,f,0);e=a[e>>0]|0;if(e<<24>>24<0){f=c[g>>2]|0;e=c[b+36>>2]|0;}else{f=g;e=e&255;}e=f+e|0;c[i>>2]=f;c[m>>2]=e;l=f+(l-j)|0;c[s>>2]=l;f=f+k|0;c[n>>2]=f;k=n;g=n;j=e;}else{f=b+44|0;k=f;h=b+48|0;g=f;f=c[f>>2]|0;j=e;}i=l+1|0;c[o>>2]=i;f=c[(i>>>0<f>>>0?g:o)>>2]|0;c[k>>2]=f;if(c[h>>2]&8|0){e=b+32|0;if((a[e+11>>0]|0)<0)e=c[e>>2]|0;c[q>>2]=e;c[p>>2]=e+r;c[b+16>>2]=f;}e=d&255;if((l|0)==(j|0)){s=c[(c[b>>2]|0)+52>>2]|0;e=Vc(e)|0;e=_b[s&15](b,e)|0;break;}else{c[s>>2]=i;a[l>>0]=e;e=Vc(e)|0;break;}}else e=jd(d)|0;}while(0);Pb=t;return e|0;}function id(a,b){a=a|0;b=b|0;return(a|0)==(b|0)|0;}function jd(a){a=a|0;if(id(a,ad()|0)|0)a=~(ad()|0);return a|0;}function kd(a,b){a=a|0;b=b|0;return a<<24>>24==b<<24>>24|0;}function ld(a){a=a|0;return a&255|0;}function md(a,b){a=a|0;b=b|0;var d=0,e=0,f=0;d=c[b+48>>2]|0;do{if(!(d&16)){if(!(d&8)){c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;break;}else{f=c[b+8>>2]|0;b=c[b+16>>2]|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;nd(a,f,b);break;}}else{e=b+44|0;d=c[e>>2]|0;f=c[b+24>>2]|0;if(d>>>0<f>>>0){c[e>>2]=f;d=f;}b=c[b+20>>2]|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;nd(a,b,d);}}while(0);return;}function nd(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,k=0;i=Pb;Pb=Pb+16|0;g=d;h=i;f=e-g|0;if(f>>>0>4294967279)AA(b);if(f>>>0<11)a[b+11>>0]=f;else{k=f+16&-16;j=nA(k)|0;c[b>>2]=j;c[b+8>>2]=k|-2147483648;c[b+4>>2]=f;b=j;}if((d|0)!=(e|0)){g=e-g|0;f=b;while(1){Rc(f,d);d=d+1|0;if((d|0)==(e|0))break;else f=f+1|0;}b=b+g|0;}a[h>>0]=0;Rc(b,h);Pb=i;return;}function od(a,b){a=a|0;b=b|0;var d=0;d=c[b>>2]|0;c[a>>2]=d;c[a+(c[d+-12>>2]|0)>>2]=c[b+32>>2];c[a+8>>2]=c[b+36>>2];bd(a+12|0);wr(a,b+4|0);return;}function pd(a){a=a|0;return;}function qd(a,b){a=a|0;b=b|0;ud(a,b);return;}function rd(a,b){a=a|0;b=b|0;_d(a,b);return;}function sd(a){a=a|0;ae(a,11024);Hd(a+28|0);return;}function td(a){a=a|0;Wd(a+8|0);IB(a);return;}function ud(a,b){a=a|0;b=b|0;var d=0;d=a+28|0;vd(d);wd(a,b);c[a>>2]=10952;a=a+8|0;c[a>>2]=10980;c[d>>2]=11008;xd(a,b+8|0);return;}function vd(a){a=a|0;c[a>>2]=11040;return;}function wd(a,b){a=a|0;b=b|0;var d=0;Jd(a,b);d=a+8|0;Kd(d,b+8|0);c[a>>2]=11064;c[d>>2]=11084;return;}function xd(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;g=Pb;Pb=Pb+16|0;d=g+4|0;e=g;Qd(d);f=Rd(b+4|0)|0;if(f|0){nc[c[(c[f>>2]|0)+20>>2]&63](e,f);Sd(d,e)|0;Td(e);}c[a+12>>2]=c[b+12>>2];c[a+16>>2]=c[b+16>>2];c[a+8>>2]=c[b+8>>2];Sd(a+4|0,d)|0;Td(d);Pb=g;return;}function yd(a){a=a|0;sd(a);oA(a);return;}function zd(b){b=b|0;var d=0,e=0,f=0;e=Pb;Pb=Pb+16|0;f=e+1|0;d=nA(32)|0;a[f>>0]=a[e>>0]|0;Xd(d,b,f);Pb=e;return d+(c[(c[d>>2]|0)+-12>>2]|0)|0;}function Ad(a){a=a|0;var b=0;b=_(32)|0;Yd(b,a);da(b|0,6768,23);}function Bd(a){a=a|0;sd(a+-8|0);return;}function Cd(a){a=a|0;yd(a+-8|0);return;}function Dd(a){a=a|0;return zd(a+(c[(c[a>>2]|0)+-12>>2]|0)|0)|0;}function Ed(a){a=a|0;Ad(a+(c[(c[a>>2]|0)+-16>>2]|0)|0);return;}function Fd(a){a=a|0;sd(a+(c[(c[a>>2]|0)+-20>>2]|0)|0);return;}function Gd(a){a=a|0;yd(a+(c[(c[a>>2]|0)+-20>>2]|0)|0);return;}function Hd(a){a=a|0;return;}function Id(a){a=a|0;Ra();}function Jd(a,b){a=a|0;b=b|0;uA(a,b);c[a>>2]=14896;return;}function Kd(a,b){a=a|0;b=b|0;c[a>>2]=11100;Od(a+4|0,b+4|0);a=a+8|0;b=b+8|0;c[a>>2]=c[b>>2];c[a+4>>2]=c[b+4>>2];c[a+8>>2]=c[b+8>>2];return;}function Ld(a){a=a|0;td(a);oA(a);return;}function Md(a){a=a|0;td(a+-8|0);return;}function Nd(a){a=a|0;Ld(a+-8|0);return;}function Od(a,b){a=a|0;b=b|0;c[a>>2]=c[b>>2];Pd(a);return;}function Pd(a){a=a|0;a=c[a>>2]|0;if(a|0)kc[c[(c[a>>2]|0)+12>>2]&255](a);return;}function Qd(a){a=a|0;c[a>>2]=0;return;}function Rd(a){a=a|0;return c[a>>2]|0;}function Sd(a,b){a=a|0;b=b|0;Ud(a,c[b>>2]|0);return a|0;}function Td(a){a=a|0;Vd(a);return;}function Ud(a,b){a=a|0;b=b|0;Vd(a);c[a>>2]=b;Pd(a);return;}function Vd(a){a=a|0;var b=0;b=c[a>>2]|0;if(b|0?Yb[c[(c[b>>2]|0)+16>>2]&127](b)|0:0)c[a>>2]=0;return;}function Wd(a){a=a|0;c[a>>2]=11100;Td(a+4|0);return;}function Xd(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=a+28|0;vd(e);wd(a,b);c[a>>2]=10952;d=a+8|0;c[d>>2]=10980;c[e>>2]=11008;xd(d,b+8|0);return;}function Yd(a,b){a=a|0;b=b|0;var d=0;d=a+28|0;Zd(d,b+(c[(c[b>>2]|0)+-12>>2]|0)|0);wd(a,b);c[a>>2]=10952;c[a+8>>2]=10980;c[d>>2]=11008;return;}function Zd(a,b){a=a|0;b=b|0;c[a>>2]=11040;return;}function _d(a,b){a=a|0;b=b|0;Jd(a,b);b=a+8|0;$d(b);c[a>>2]=11064;c[b>>2]=11084;return;}function $d(a){a=a|0;c[a>>2]=11100;Qd(a+4|0);c[a+8>>2]=0;c[a+12>>2]=0;c[a+16>>2]=-1;return;}function ae(a,b){a=a|0;b=b|0;td(a);return;}function be(){return;}function ce(a){a=a|0;return ke(a)|0;}function de(){return 0;}function ee(){return 0;}function fe(a){a=a|0;if(a|0){le(a);oA(a);}return;}function ge(){return ne()|0;}function he(){return oe()|0;}function ie(){return pe()|0;}function je(){return 0;}function ke(a){a=a|0;return 6800;}function le(a){a=a|0;me(a+36|0);me(a+24|0);me(a+12|0);me(a);return;}function me(a){a=a|0;var b=0;b=c[a>>2]|0;if(b|0){c[a+4>>2]=b;oA(b);}return;}function ne(){return 6800;}function oe(){return 6808;}function pe(){return 6824;}function qe(){return 15610;}function re(){return 15613;}function se(){return 15615;}function te(a,b,c,d,e,f,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;h=h|0;i=i|0;var j=0;j=nA(80)|0;Cl(j,a,b,c,d,+g[e>>3],+g[f>>3],+g[h>>3],+g[i>>3]);return j|0;}function ue(a,b,c,d,e,f,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;h=+h;i=+i;j=+j;var k=0,l=0,m=0,n=0,o=0;k=Pb;Pb=Pb+32|0;o=k+24|0;n=k+16|0;m=k+8|0;l=k;b=ye(b)|0;c=ye(c)|0;d=ye(d)|0;e=ye(e)|0;g[o>>3]=+ze(f);g[n>>3]=+ze(h);g[m>>3]=+ze(i);g[l>>3]=+ze(j);e=xe(ic[a&15](b,c,d,e,o,n,m,l)|0)|0;Pb=k;return e|0;}function ve(a){a=a|0;return 9;}function we(a){a=a|0;return Be()|0;}function xe(a){a=a|0;return a|0;}function ye(a){a=a|0;return a|0;}function ze(a){a=+a;return+ +Ae(a);}function Ae(a){a=+a;return+a;}function Be(){return 16;}function Ce(){return 15735;}function De(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,i=0.0;e=Pb;Pb=Pb+16|0;d=e;h=Ie(b)|0;b=c[a>>2]|0;f=c[a+4>>2]|0;a=h+(f>>1)|0;if(f&1)b=c[(c[a>>2]|0)+b>>2]|0;g[d>>3]=+Vb[b&1](a);i=+He(d);Pb=e;return+i;}function Ee(a){a=a|0;return 2;}function Fe(a){a=a|0;return Je()|0;}function Ge(a){a=a|0;var b=0,d=0;b=nA(8)|0;d=c[a+4>>2]|0;c[b>>2]=c[a>>2];c[b+4>>2]=d;return b|0;}function He(a){a=a|0;return+ +g[a>>3];}function Ie(a){a=a|0;return a|0;}function Je(){return 11108;}function Ke(){return 15746;}function Le(a,b){a=a|0;b=b|0;var d=0,e=0;d=a+4|0;e=c[d>>2]|0;if((e|0)==(c[a+8>>2]|0))Qe(a,b);else{g[e>>3]=+g[b>>3];c[d>>2]=e+8;}return;}function Me(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;e=a+4|0;g=c[a>>2]|0;f=(c[e>>2]|0)-g>>3;if(f>>>0>=b>>>0){if(f>>>0>b>>>0)c[e>>2]=g+(b<<3);}else Ve(a,b-f|0,d);return;}function Ne(a){a=a|0;return(c[a+4>>2]|0)-(c[a>>2]|0)>>3|0;}function Oe(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=c[b>>2]|0;if((c[b+4>>2]|0)-e>>3>>>0>d>>>0)Sf(a,e+(d<<3)|0);else Tf(a);return;}function Pe(a,b,d){a=a|0;b=b|0;d=d|0;g[(c[a>>2]|0)+(b<<3)>>3]=+g[d>>3];return 1;}function Qe(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,i=0,j=0,k=0,l=0;i=Pb;Pb=Pb+32|0;d=i;e=a+4|0;f=((c[e>>2]|0)-(c[a>>2]|0)>>3)+1|0;h=Ue(a)|0;if(h>>>0<f>>>0)eB(a);else{j=c[a>>2]|0;l=(c[a+8>>2]|0)-j|0;k=l>>2;Re(d,l>>3>>>0<h>>>1>>>0?k>>>0<f>>>0?f:k:h,(c[e>>2]|0)-j>>3,a+8|0);h=d+8|0;f=c[h>>2]|0;g[f>>3]=+g[b>>3];c[h>>2]=f+8;Se(a,d);Te(d);Pb=i;return;}}function Re(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0;f=a+12|0;c[f>>2]=0;c[a+16>>2]=e;do{if(b){if(b>>>0>536870911){f=_(8)|0;tA(f,21233);c[f>>2]=14916;da(f|0,10552,144);}else{e=nA(b<<3)|0;break;}}else e=0;}while(0);c[a>>2]=e;d=e+(d<<3)|0;c[a+8>>2]=d;c[a+4>>2]=d;c[f>>2]=e+(b<<3);return;}function Se(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0,h=0;e=c[a>>2]|0;h=a+4|0;g=b+4|0;f=(c[h>>2]|0)-e|0;d=(c[g>>2]|0)+(0-(f>>3)<<3)|0;c[g>>2]=d;if((f|0)>0){wC(d|0,e|0,f|0)|0;e=g;d=c[g>>2]|0;}else e=g;g=c[a>>2]|0;c[a>>2]=d;c[e>>2]=g;g=b+8|0;f=c[h>>2]|0;c[h>>2]=c[g>>2];c[g>>2]=f;g=a+8|0;h=b+12|0;a=c[g>>2]|0;c[g>>2]=c[h>>2];c[h>>2]=a;c[b>>2]=c[e>>2];return;}function Te(a){a=a|0;var b=0,d=0,e=0;b=c[a+4>>2]|0;d=a+8|0;e=c[d>>2]|0;if((e|0)!=(b|0))c[d>>2]=e+(~((e+-8-b|0)>>>3)<<3);a=c[a>>2]|0;if(a|0)oA(a);return;}function Ue(a){a=a|0;return 536870911;}function Ve(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0;l=Pb;Pb=Pb+32|0;i=l;j=a+8|0;k=a+4|0;e=c[k>>2]|0;h=e;do{if((c[j>>2]|0)-e>>3>>>0<b>>>0){e=(e-(c[a>>2]|0)>>3)+b|0;f=Ue(a)|0;if(f>>>0<e>>>0)eB(a);else{h=c[a>>2]|0;m=(c[j>>2]|0)-h|0;j=m>>2;Re(i,m>>3>>>0<f>>>1>>>0?j>>>0<e>>>0?e:j:f,(c[k>>2]|0)-h>>3,a+8|0);We(i,b,d);Se(a,i);Te(i);break;}}else{e=b;f=h;while(1){g[f>>3]=+g[d>>3];e=e+-1|0;if(!e)break;else f=f+8|0;}c[k>>2]=h+(b<<3);}}while(0);Pb=l;return;}function We(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0;f=a+8|0;e=c[f>>2]|0;a=b;h=e;while(1){g[h>>3]=+g[d>>3];a=a+-1|0;if(!a)break;else h=h+8|0;}c[f>>2]=e+(b<<3);return;}function Xe(){return;}function Ye(a){a=a|0;return df(a)|0;}function Ze(){return 0;}function _e(){return 0;}function $e(a){a=a|0;if(a|0){me(a);oA(a);}return;}function af(){return ef()|0;}function bf(){return ff()|0;}function cf(){return gf()|0;}function df(a){a=a|0;return 6872;}function ef(){return 6872;}function ff(){return 6896;}function gf(){return 6912;}function hf(){var a=0;a=nA(12)|0;c[a>>2]=0;c[a+4>>2]=0;c[a+8>>2]=0;return a|0;}function jf(a){a=a|0;return mf(Xb[a&1]()|0)|0;}function kf(a){a=a|0;return 1;}function lf(a){a=a|0;return nf()|0;}function mf(a){a=a|0;return a|0;}function nf(){return 11116;}function of(a,b,d){a=a|0;b=b|0;d=+d;var e=0,f=0,h=0,i=0;f=Pb;Pb=Pb+16|0;e=f;i=sf(b)|0;b=c[a>>2]|0;h=c[a+4>>2]|0;a=i+(h>>1)|0;if(h&1)b=c[(c[a>>2]|0)+b>>2]|0;g[e>>3]=+Ae(d);nc[b&63](a,e);Pb=f;return;}function pf(a){a=a|0;return 3;}function qf(a){a=a|0;return tf()|0;}function rf(a){a=a|0;var b=0,d=0;b=nA(8)|0;d=c[a+4>>2]|0;c[b>>2]=c[a>>2];c[b+4>>2]=d;return b|0;}function sf(a){a=a|0;return a|0;}function tf(){return 11120;}function uf(){return 15855;}function vf(a,b,d,e){a=a|0;b=b|0;d=d|0;e=+e;var f=0,h=0,i=0,j=0;h=Pb;Pb=Pb+16|0;f=h;j=sf(b)|0;b=c[a>>2]|0;i=c[a+4>>2]|0;a=j+(i>>1)|0;if(i&1)b=c[(c[a>>2]|0)+b>>2]|0;j=zf(d)|0;g[f>>3]=+Ae(e);pc[b&3](a,j,f);Pb=h;return;}function wf(a){a=a|0;return 4;}function xf(a){a=a|0;return Af()|0;}function yf(a){a=a|0;var b=0,d=0;b=nA(8)|0;d=c[a+4>>2]|0;c[b>>2]=c[a>>2];c[b+4>>2]=d;return b|0;}function zf(a){a=a|0;return a|0;}function Af(){return 64;}function Bf(){return 15860;}function Cf(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,g=0;e=Pb;Pb=Pb+16|0;d=e;g=Hf(b)|0;b=c[a>>2]|0;f=c[a+4>>2]|0;a=g+(f>>1)|0;if(f&1)b=c[(c[a>>2]|0)+b>>2]|0;c[d>>2]=Yb[b&127](a)|0;g=Gf(d)|0;Pb=e;return g|0;}function Df(a){a=a|0;return 2;}function Ef(a){a=a|0;return If()|0;}function Ff(a){a=a|0;var b=0,d=0;b=nA(8)|0;d=c[a+4>>2]|0;c[b>>2]=c[a>>2];c[b+4>>2]=d;return b|0;}function Gf(a){a=a|0;return c[a>>2]|0;}function Hf(a){a=a|0;return a|0;}function If(){return 11132;}function Jf(){return 15866;}function Kf(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0;e=Pb;Pb=Pb+16|0;f=e;a=c[a>>2]|0;b=ye(b)|0;d=zf(d)|0;pc[a&3](f,b,d);d=Of(f)|0;Pf(f);Pb=e;return d|0;}function Lf(a){a=a|0;return 3;}function Mf(a){a=a|0;return Qf()|0;}function Nf(a){a=a|0;var b=0;b=nA(4)|0;c[b>>2]=c[a>>2];return b|0;}function Of(a){a=a|0;Da(c[a>>2]|0);return c[a>>2]|0;}function Pf(a){a=a|0;Ca(c[a>>2]|0);return;}function Qf(){return 11140;}function Rf(){return 15889;}function Sf(a,b){a=a|0;b=b|0;var d=0,e=0;d=Pb;Pb=Pb+16|0;e=d;Uf(e,b);b=Vf()|0;c[a>>2]=Fa(b|0,Wf(e)|0)|0;Pb=d;return;}function Tf(a){a=a|0;_f(a,1);return;}function Uf(a,b){a=a|0;b=b|0;var d=0,e=0;d=Pb;Pb=Pb+16|0;e=d;c[e>>2]=a;Xf(e,+He(b));Yf(e);Pb=d;return;}function Vf(){return Zf()|0;}function Wf(a){a=a|0;return a|0;}function Xf(a,b){a=a|0;b=+b;g[c[a>>2]>>3]=b;c[a>>2]=(c[a>>2]|0)+8;return;}function Yf(a){a=a|0;return;}function Zf(){return 10752;}function _f(a,b){a=a|0;b=b|0;c[a>>2]=b;return;}function $f(a,b,d,e){a=a|0;b=b|0;d=d|0;e=+e;var f=0,h=0;f=Pb;Pb=Pb+16|0;h=f;a=c[a>>2]|0;b=ye(b)|0;d=zf(d)|0;g[h>>3]=+Ae(e);d=dg($b[a&31](b,d,h)|0)|0;Pb=f;return d|0;}function ag(a){a=a|0;return 4;}function bg(a){a=a|0;return eg()|0;}function cg(a){a=a|0;var b=0;b=nA(4)|0;c[b>>2]=c[a>>2];return b|0;}function dg(a){a=a|0;return a|0;}function eg(){return 80;}function fg(){return 15894;}function gg(){zc();Bc();return;}function hg(){var b=0;if(!(a[28992]|0)){Ni(30812);b=28992;c[b>>2]=1;c[b+4>>2]=0;}return;}function ig(){var b=0;if(!(a[28936]|0)){gh(30813);b=28936;c[b>>2]=1;c[b+4>>2]=0;}return;}function jg(){var b=0;if(!(a[28832]|0)){ng(30814);b=28832;c[b>>2]=1;c[b+4>>2]=0;}return;}function kg(){var b=0;if(!(a[28824]|0)){lg(30815);b=28824;c[b>>2]=1;c[b+4>>2]=0;}return;}function lg(a){a=a|0;a=Pb;Pb=Pb+16|0;mg(a);Pb=a;return;}function mg(a){a=a|0;return;}function ng(a){a=a|0;a=Pb;Pb=Pb+16|0;og(a);Pb=a;return;}function og(a){a=a|0;var b=0;a=Pb;Pb=Pb+16|0;b=a;+pg(1.0e-12,b);+pg(.25,b);+pg(1.25,b);+pg(2.25,b);+pg(4.25,b);+pg(5.25,b);Pb=a;return;}function pg(a,b){a=+a;b=b|0;b=Pb;Pb=Pb+16|0;qg();a=+sg(+rg(a,0,b+1|0,b),15900);Pb=b;return+a;}function qg(){fh(30814);return;}function rg(b,c,d,e){b=+b;c=c|0;d=d|0;e=e|0;var f=0.0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0.0;ya=Pb;Pb=Pb+96|0;Q=ya+8|0;p=ya+82|0;q=ya+81|0;ta=ya;r=ya+79|0;xa=ya+80|0;h=ya+76|0;t=ya+78|0;i=ya+75|0;u=ya+77|0;j=ya+74|0;k=ya+73|0;l=ya+72|0;m=ya+71|0;n=ya+70|0;o=ya+69|0;v=ya+68|0;w=ya+66|0;x=ya+65|0;y=ya+64|0;A=ya+63|0;B=ya+67|0;C=ya+62|0;D=ya+61|0;E=ya+59|0;F=ya+58|0;G=ya+57|0;H=ya+56|0;I=ya+55|0;J=ya+60|0;K=ya+54|0;L=ya+53|0;M=ya+52|0;N=ya+51|0;O=ya+50|0;P=ya+49|0;R=ya+48|0;S=ya+47|0;T=ya+46|0;U=ya+45|0;V=ya+44|0;W=ya+43|0;X=ya+42|0;Y=ya+41|0;Z=ya+40|0;_=ya+39|0;$=ya+38|0;aa=ya+37|0;ba=ya+36|0;ca=ya+35|0;da=ya+34|0;ea=ya+33|0;fa=ya+32|0;ga=ya+31|0;ha=ya+30|0;ia=ya+29|0;ja=ya+28|0;ka=ya+27|0;la=ya+26|0;ma=ya+25|0;na=ya+24|0;oa=ya+23|0;pa=ya+22|0;qa=ya+21|0;ra=ya+20|0;sa=ya+19|0;ua=ya+18|0;va=ya+17|0;wa=ya+16|0;do{if(b<0.0){if(!c){f=-+rg(-b,0,d,e);break;}f=-b;if(b<-.5){f=2.0-+rg(f,1,d,e);break;}else{f=+rg(f,0,d,e)+1.0;break;}}else{do{if(!(b<.5)){if(c){if(!(b<28.0))s=55;}else if(!(b<5.800000190734863))s=55;if((s|0)==55){f=0.0;c=c^1;break;}c=c^1;if(b<1.5){if((a[28872]|0)==0?eC(28872)|0:0){g[3294]=+Zg(-.09809059221628125,16474,Q,Yg(v)|0);g[3295]=+Zg(.17811466584112035,16499,ta,Yg(w)|0);g[3296]=+Zg(.19100369579677542,16523,xa,Yg(x)|0);g[3297]=+Zg(.08889003689678844,16547,t,Yg(y)|0);g[3298]=+Zg(.01950490012512188,16572,u,Yg(A)|0);g[3299]=+Zg(1.8042453829701423e-03,16597,B,Yg(C)|0);}if((a[28880]|0)==0?eC(28880)|0:0){g[3300]=+Zg(1.0,16368,Q,Yg(D)|0);g[3301]=+Zg(1.8475907098300222,16623,ta,Yg(E)|0);g[3302]=+Zg(1.4262800484551132,16646,xa,Yg(F)|0);g[3303]=+Zg(.5780528048899024,16669,t,Yg(G)|0);g[3304]=+Zg(.12385097467900864,16693,u,Yg(H)|0);g[3305]=+Zg(.011338523357700142,16716,B,Yg(I)|0);g[3306]=+Zg(3.3751147248309467e-06,16741,J,Yg(K)|0);}za=b+-.5;g[Q>>3]=za;f=+$g(26352,Q);g[ta>>3]=za;f=+z(+-(b*b))/b*(f/+ah(26400,ta)+.40593576431274414);break;}if(b<2.5){if((a[28888]|0)==0?eC(28888)|0:0){g[3308]=+Zg(-.024350047620769845,16768,Q,Yg(L)|0);g[3309]=+Zg(.03865403750357072,16794,ta,Yg(M)|0);g[3310]=+Zg(.04394818964209516,16819,xa,Yg(N)|0);g[3311]=+Zg(.017567943631180208,16842,t,Yg(O)|0);g[3312]=+Zg(3.2396240629084215e-03,16867,u,Yg(P)|0);g[3313]=+Zg(2.3583911559688073e-04,16893,B,Yg(R)|0);}if((a[28896]|0)==0?eC(28896)|0:0){g[3314]=+Zg(1.0,16368,Q,Yg(S)|0);g[3315]=+Zg(1.5399149494855244,16920,ta,Yg(T)|0);g[3316]=+Zg(.9824037091579202,16943,xa,Yg(U)|0);g[3317]=+Zg(.3257329247824444,16967,t,Yg(V)|0);g[3318]=+Zg(.05639218374204782,16991,u,Yg(W)|0);g[3319]=+Zg(.004103697239789046,17016,B,Yg(X)|0);}za=b+-1.5;g[Q>>3]=za;f=+$g(26464,Q);g[ta>>3]=za;f=+z(+-(b*b))/b*(f/+$g(26512,ta)+.5067281723022461);break;}if(b<4.5){if((a[28904]|0)==0?eC(28904)|0:0){g[3320]=+Zg(2.9527671653097167e-03,17042,Q,Yg(Y)|0);g[3321]=+Zg(.013738442589635533,17068,ta,Yg(Z)|0);g[3322]=+Zg(.008408076155555853,17093,xa,Yg(_)|0);g[3323]=+Zg(2.1282562091461863e-03,17119,t,Yg($)|0);g[3324]=+Zg(2.5026996154479465e-04,17145,u,Yg(aa)|0);g[3325]=+Zg(1.1321240664884757e-05,17172,B,Yg(ba)|0);}if((a[28912]|0)==0?eC(28912)|0:0){g[3326]=+Zg(1.0,16368,Q,Yg(ca)|0);g[3327]=+Zg(1.0421781416693843,17199,ta,Yg(da)|0);g[3328]=+Zg(.4425976594815631,17222,xa,Yg(ea)|0);g[3329]=+Zg(.09584927263010615,17246,t,Yg(fa)|0);g[3330]=+Zg(.010598290648487654,17271,u,Yg(ga)|0);g[3331]=+Zg(4.7941126952171447e-04,17296,B,Yg(ha)|0);}za=b+-3.5;g[Q>>3]=za;f=+$g(26560,Q);g[ta>>3]=za;f=+z(+-(b*b))/b*(f/+$g(26608,ta)+.5405750274658203);break;}else{if((a[28920]|0)==0?eC(28920)|0:0){g[3332]=+Zg(.006280571706269649,17323,Q,Yg(ia)|0);g[3333]=+Zg(.01753898340524933,17349,ta,Yg(ja)|0);g[3334]=+Zg(-.21265225287280423,17374,xa,Yg(ka)|0);g[3335]=+Zg(-.68771768115365,17399,t,Yg(la)|0);g[3336]=+Zg(-2.5518551727311523,17424,u,Yg(ma)|0);g[3337]=+Zg(-3.2272945176414374,17447,B,Yg(na)|0);g[3338]=+Zg(-2.817540111451338,17471,J,Yg(oa)|0);}if((a[28928]|0)==0?eC(28928)|0:0){g[3340]=+Zg(1.0,16368,Q,Yg(pa)|0);g[3341]=+Zg(2.792577509805753,17494,ta,Yg(qa)|0);g[3342]=+Zg(11.056723792780016,17517,xa,Yg(ra)|0);g[3343]=+Zg(15.930646027911795,17540,t,Yg(sa)|0);g[3344]=+Zg(22.93673765228806,17562,u,Yg(ua)|0);g[3345]=+Zg(13.506417019180288,17585,B,Yg(va)|0);g[3346]=+Zg(5.484091822386417,17608,J,Yg(wa)|0);}za=1.0/b;g[Q>>3]=za;f=+ah(26656,Q);g[ta>>3]=za;f=+z(+-(b*b))/b*(f/+ah(26720,ta)+.5579090118408203);break;}}else{if(b<1.0e-10){if(b==0.0){f=0.0;break;}if((a[28840]|0)==0?eC(28840)|0:0)g[3606]=+Zg(3.3791670955125737e-03,16195,Q,Yg(p)|0);f=b*1.125+ +g[3606]*b;break;}if((a[28856]|0)==0?eC(28856)|0:0){g[3282]=+Zg(.08343058921465318,16237,Q,Yg(q)|0);g[3283]=+Zg(-.3381651344593609,16262,ta,Yg(r)|0);g[3284]=+Zg(-.050999073514677744,16287,xa,Yg(h)|0);g[3285]=+Zg(-.007727583458021333,16313,t,Yg(i)|0);g[3286]=+Zg(-3.227801209646057e-04,16340,u,Yg(j)|0);}if((a[28864]|0)==0?eC(28864)|0:0){g[3288]=+Zg(1.0,16368,Q,Yg(k)|0);g[3289]=+Zg(.455004033050794,16372,ta,Yg(l)|0);g[3290]=+Zg(.08752226001422525,16396,xa,Yg(m)|0);g[3291]=+Zg(.008585719250744061,16421,t,Yg(n)|0);g[3292]=+Zg(.000370900071787748,16447,u,Yg(o)|0);}g[Q>>3]=b*b;f=+_g(26256,Q);f=(f/+_g(26304,Q)+1.0449485778808594)*b;}}while(0);f=c?1.0-f:f;}}while(0);Pb=ya;return+f;}function sg(a,b){a=+a;b=b|0;var c=0,d=0,e=0;e=Pb;Pb=Pb+16|0;c=e;d=e+8|0;g[c>>3]=0.0;do{if(!(tg(a,c,b,d)|0)){if(ug(a,c,b,d)|0){a=+g[c>>3];break;}else{d=vg(a,c,b,d)|0;a=d?+g[c>>3]:a;break;}}else a=+g[c>>3];}while(0);Pb=e;return+a;}function tg(a,b,c,d){a=+a;b=b|0;c=c|0;d=d|0;var e=0.0;e=+u(+a);if(e>+wg()){+xg(c,0,d);g[b>>3]=a;b=1;}else b=0;return b|0;}function ug(a,b,c,d){a=+a;b=b|0;c=c|0;d=d|0;return 0;}function vg(a,b,c,d){a=+a;b=b|0;c=c|0;d=d|0;return 0;}function wg(){return 1797693134862315708145274.0e284;}function xg(a,b,c){a=a|0;b=b|0;c=c|0;yg(a,(b|0)==0?15932:b);return+s;}function yg(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=Pb;Pb=Pb+32|0;g=e+20|0;f=e+8|0;b=(b|0)==0?15949:b;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;DA(g,b,Qc(b)|0);c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;DA(f,16002,Qc(16002)|0);Mc(g,16021,zg()|0);b=a[g+11>>0]|0;h=b<<24>>24<0;PA(f,h?c[g>>2]|0:g,h?c[g+4>>2]|0:b&255)|0;QA(f,16025)|0;QA(f,(d|0)==0?15988:d)|0;yA(e,f);c[e>>2]=14936;Ag(e);}function zg(){return 16183;}function Ag(a){a=a|0;var b=0,c=0;c=Pb;Pb=Pb+32|0;pd(a);b=_(32)|0;Bg(c,a);Cg(b,c);da(b|0,6936,37);}function Bg(a,b){a=a|0;b=b|0;Xg(a,b);return;}function Cg(a,b){a=a|0;b=b|0;Wg(a,b);return;}function Dg(a){a=a|0;Fg(a,11152);Hd(a+28|0);return;}function Eg(a){a=a|0;Wd(a+8|0);OB(a);return;}function Fg(a,b){a=a|0;b=b|0;Eg(a);return;}function Gg(a){a=a|0;Dg(a);oA(a);return;}function Hg(b){b=b|0;var d=0,e=0,f=0;e=Pb;Pb=Pb+16|0;f=e+1|0;d=nA(32)|0;a[f>>0]=a[e>>0]|0;Vg(d,b,f);Pb=e;return d+(c[(c[d>>2]|0)+-12>>2]|0)|0;}function Ig(a){a=a|0;var b=0;b=_(32)|0;Pg(b,a);da(b|0,6936,37);}function Jg(a){a=a|0;Dg(a+-8|0);return;}function Kg(a){a=a|0;Gg(a+-8|0);return;}function Lg(a){a=a|0;return Hg(a+(c[(c[a>>2]|0)+-12>>2]|0)|0)|0;}function Mg(a){a=a|0;Ig(a+(c[(c[a>>2]|0)+-16>>2]|0)|0);return;}function Ng(a){a=a|0;Dg(a+(c[(c[a>>2]|0)+-20>>2]|0)|0);return;}function Og(a){a=a|0;Gg(a+(c[(c[a>>2]|0)+-20>>2]|0)|0);return;}function Pg(a,b){a=a|0;b=b|0;var d=0;d=a+28|0;Zd(d,b+(c[(c[b>>2]|0)+-12>>2]|0)|0);Qg(a,b);c[a>>2]=11172;c[a+8>>2]=11200;c[d>>2]=11228;return;}function Qg(a,b){a=a|0;b=b|0;var d=0;Rg(a,b);d=a+8|0;Kd(d,b+8|0);c[a>>2]=11252;c[d>>2]=11272;return;}function Rg(a,b){a=a|0;b=b|0;zA(a,b);c[a>>2]=14936;return;}function Sg(a){a=a|0;Eg(a);oA(a);return;}function Tg(a){a=a|0;Eg(a+-8|0);return;}function Ug(a){a=a|0;Sg(a+-8|0);return;}function Vg(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=a+28|0;vd(e);Qg(a,b);c[a>>2]=11172;d=a+8|0;c[d>>2]=11200;c[e>>2]=11228;xd(d,b+8|0);return;}function Wg(a,b){a=a|0;b=b|0;var d=0;d=a+28|0;vd(d);Qg(a,b);c[a>>2]=11172;a=a+8|0;c[a>>2]=11200;c[d>>2]=11228;xd(a,b+8|0);return;}function Xg(a,b){a=a|0;b=b|0;Rg(a,b);b=a+8|0;$d(b);c[a>>2]=11252;c[b>>2]=11272;return;}function Yg(a){a=a|0;return eh(30816)|0;}function Zg(a,b,c,d){a=+a;b=b|0;c=c|0;d=d|0;return+a;}function _g(a,b){a=a|0;b=b|0;return+ +dh(a,b,0);}function $g(a,b){a=a|0;b=b|0;return+ +ch(a,b,0);}function ah(a,b){a=a|0;b=b|0;return+ +bh(a,b,0);}function bh(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0;e=+g[b>>3];d=e*e;return+(d*(d*(+g[a+48>>3]*d+ +g[a+32>>3])+ +g[a+16>>3])+ +g[a>>3]+e*(d*(d*+g[a+40>>3]+ +g[a+24>>3])+ +g[a+8>>3]));}function ch(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0;e=+g[b>>3];d=e*e;return+(e*(d*(+g[a+40>>3]*d+ +g[a+24>>3])+ +g[a+8>>3])+(d*(d*+g[a+32>>3]+ +g[a+16>>3])+ +g[a>>3]));}function dh(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0;e=+g[b>>3];d=e*e;return+(d*(+g[a+32>>3]*d+ +g[a+16>>3])+ +g[a>>3]+e*(d*+g[a+24>>3]+ +g[a+8>>3]));}function eh(a){a=a|0;return a|0;}function fh(a){a=a|0;return;}function gh(a){a=a|0;a=Pb;Pb=Pb+16|0;hh(a);Pb=a;return;}function hh(a){a=a|0;var b=0;a=Pb;Pb=Pb+16|0;b=a;+ih(2.5,b);+ih(1.25,b);+ih(1.75,b);Pb=a;return;}function ih(a,b){a=+a;b=b|0;return+ +jh(a,0,b);}function jh(a,b,c){a=+a;b=b|0;c=c|0;c=Pb;Pb=Pb+16|0;kh();a=+sg(+lh(a,c+1|0,c,b),17631);Pb=c;return+a;}function kh(){Mi(30813);return;}function lh(a,b,d,e){a=+a;b=b|0;d=d|0;e=e|0;var f=0.0,h=0,i=0,j=0,k=0,l=0,m=0.0;l=Pb;Pb=Pb+16|0;h=l;i=l+8|0;g[h>>3]=a;do{if(!(-+mh()>=a)){if(!(+mh()>a)){if(a<15.0){j=1;f=+rh(a,a+-1.0,a+-2.0,i,b,d);k=18;break;}if(a>=3.0&a<100.0){j=1;f=+A(+ +sh(a,b,d));k=18;break;}else{f=+th()+a;f=(a+-.5)*(+A(+(f-+uh()))+-1.0);j=1;f=+A(+ +vh(h))+f;k=18;break;}}if(a==0.0){f=+nh(17631,17709,h,b);break;}f=+u(+a);if(f<1.0/+wg())f=-+A(+f);else f=+A(+ +u(+(1.0/a-+qh())));if(a<0.0){j=-1;k=18;}else{j=1;k=18;}}else if(+t(+a)==a){f=+nh(17631,17661,h,b);break;}else{f=+oh(a);a=-a;g[h>>3]=a;k=f<0.0;m=+A(+ +ph());j=k?1:-1;f=m-+lh(a,b,d,0)-+A(+(k?-f:f));k=18;break;}}while(0);if((k|0)==18)if(e)c[e>>2]=j;Pb=l;return+f;}function mh(){var a=0.0,b=0;b=Pb;Pb=Pb+16|0;a=+Li(0,b);Pb=b;return+a;}function nh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0;d=Pb;Pb=Pb+16|0;e=+Ii(a,(b|0)==0?19419:b,c,d);Pb=d;return+e;}function oh(a){a=+a;var b=0,c=0.0;c=a<0.0?-a:a;a=+t(+c);b=Gi(a)|0;a=b?a+1.0-c:c-a;return+(c*(b?-1.0:1.0)*+x(+(+ph()*(a>.5?1.0-a:a))));}function ph(){return+ +Ei();}function qh(){return+ +Ci();}function rh(b,c,d,e,f,h){b=+b;c=+c;d=+d;e=e|0;f=f|0;h=h|0;var i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0;ea=Pb;Pb=Pb+80|0;H=ea+16|0;ca=ea;da=ea+24|0;X=ea+78|0;Y=ea+8|0;I=ea+75|0;Z=ea+79|0;J=ea+72|0;_=ea+77|0;K=ea+71|0;$=ea+76|0;L=ea+70|0;aa=ea+74|0;M=ea+69|0;ba=ea+73|0;N=ea+67|0;O=ea+66|0;P=ea+65|0;Q=ea+64|0;R=ea+63|0;S=ea+62|0;T=ea+61|0;U=ea+60|0;V=ea+68|0;W=ea+59|0;e=ea+58|0;f=ea+57|0;h=ea+56|0;i=ea+55|0;j=ea+54|0;k=ea+53|0;l=ea+52|0;m=ea+51|0;n=ea+50|0;o=ea+49|0;p=ea+48|0;q=ea+47|0;r=ea+46|0;s=ea+45|0;t=ea+44|0;u=ea+43|0;v=ea+42|0;w=ea+41|0;x=ea+40|0;y=ea+39|0;z=ea+38|0;B=ea+37|0;C=ea+36|0;D=ea+35|0;E=ea+34|0;F=ea+33|0;G=ea+32|0;g[H>>3]=c;g[ca>>3]=d;do{if(!(+yi()>b)){if(!(c==0.0|d==0.0)){if(b>2.0){if(!(b>=3.0))c=0.0;else{c=0.0;do{b=b+-1.0;c=c+ +A(+b);}while(b>=3.0);g[ca>>3]=b+-2.0;}if((a[28944]|0)==0?eC(28944)|0:0){g[3348]=+Zg(-.01803556856784494,18360,da,Yg(X)|0);g[3349]=+Zg(.02512664961998968,18388,Y,Yg(I)|0);g[3350]=+Zg(.049410315156753225,18414,Z,Yg(J)|0);g[3351]=+Zg(.0172491608709614,18441,_,Yg(K)|0);g[3352]=+Zg(-2.594535632054381e-04,18468,$,Yg(L)|0);g[3353]=+Zg(-5.410098692152044e-04,18496,aa,Yg(M)|0);g[3354]=+Zg(-3.245886498259485e-05,18524,ba,Yg(N)|0);}if((a[28952]|0)==0?eC(28952)|0:0){g[3356]=+Zg(1.0,18552,da,Yg(O)|0);g[3357]=+Zg(1.962029871977952,18558,Y,Yg(P)|0);g[3358]=+Zg(1.4801966942423133,18584,Z,Yg(Q)|0);g[3359]=+Zg(.5413914320717209,18610,_,Yg(R)|0);g[3360]=+Zg(.09885042511280101,18636,$,Yg(S)|0);g[3361]=+Zg(.008213096746488934,18663,aa,Yg(T)|0);g[3362]=+Zg(2.2493629192211576e-04,18689,ba,Yg(U)|0);g[3363]=+Zg(-2.2335276320861708e-07,18716,V,Yg(W)|0);}d=(b+1.0)*+g[ca>>3];b=+ah(26784,ca);b=c+(d*.15896368026733398+d*(b/+zi(26848,ca)));break;}if(b<1.0){d=0.0-+A(+b);g[ca>>3]=c;g[H>>3]=b;b=b+1.0;c=d;}else c=0.0;if(!(b<=1.5)){if((a[28976]|0)==0?eC(28976)|0:0){g[3380]=+Zg(-.029232972183027003,19094,da,Yg(t)|0);g[3381]=+Zg(.14421626775719232,19122,Y,Yg(u)|0);g[3382]=+Zg(-.14244039073863127,19148,Z,Yg(v)|0);g[3383]=+Zg(.05428096940550536,19175,_,Yg(w)|0);g[3384]=+Zg(-.008505359768683364,19202,$,Yg(x)|0);g[3385]=+Zg(4.311713426792973e-04,19230,aa,Yg(y)|0);}if((a[28984]|0)==0?eC(28984)|0:0){g[3386]=+Zg(1.0,18552,da,Yg(z)|0);g[3387]=+Zg(-1.5016935605448505,19257,Y,Yg(B)|0);g[3388]=+Zg(.846973248876495,19284,Z,Yg(C)|0);g[3389]=+Zg(-.22009515181499575,19310,_,Yg(D)|0);g[3390]=+Zg(.02558279715597587,19337,$,Yg(E)|0);g[3391]=+Zg(-1.0066679553914337e-03,19363,aa,Yg(F)|0);g[3392]=+Zg(-8.271935218912905e-07,19391,ba,Yg(G)|0);}b=+g[ca>>3];d=b*+g[H>>3];g[da>>3]=-b;b=+$g(27040,da);g[Y>>3]=-+g[ca>>3];b=c+(d*.45201730728149414+d*(b/+ah(27088,Y)));break;}else{if((a[28960]|0)==0?eC(28960)|0:0){g[3364]=+Zg(.04906224540690395,18744,da,Yg(e)|0);g[3365]=+Zg(-.09691175301595212,18771,Y,Yg(f)|0);g[3366]=+Zg(-.4149833583594954,18799,Z,Yg(h)|0);g[3367]=+Zg(-.4065671242119384,18826,_,Yg(i)|0);g[3368]=+Zg(-.1584135863906922,18853,$,Yg(j)|0);g[3369]=+Zg(-.024014982064857155,18880,aa,Yg(k)|0);g[3370]=+Zg(-1.0034668769627955e-03,18908,ba,Yg(l)|0);}if((a[28968]|0)==0?eC(28968)|0:0){g[3372]=+Zg(1.0,18552,da,Yg(m)|0);g[3373]=+Zg(3.0234982984646304,18936,Y,Yg(n)|0);g[3374]=+Zg(3.4873958536072385,18962,Z,Yg(o)|0);g[3375]=+Zg(1.9141558827442668,18988,_,Yg(p)|0);g[3376]=+Zg(.5071377386143635,19014,$,Yg(q)|0);g[3377]=+Zg(.05770397226904519,19040,aa,Yg(r)|0);g[3378]=+Zg(.001957681026011072,19067,ba,Yg(s)|0);}d=+ah(26912,H);d=d/+ah(26976,H);b=+g[H>>3]*+g[ca>>3];b=c+(b*.5281534194946289+d*b);break;}}else b=0.0;}else b=-+A(+b);}while(0);Pb=ea;return+b;}function sh(a,b,c){a=+a;b=b|0;c=c|0;var d=0.0,e=0.0,f=0,h=0,i=0,j=0;j=Pb;Pb=Pb+16|0;h=j;i=j+8|0;g[h>>3]=a;g[i>>3]=1.0;do{if(a<=0.0){if(+t(+a)==a){d=+nh(18330,17738,h,b);break;}if(!(a<=-20.0)){if(!(a<0.0)){d=1.0;f=16;break;}d=1.0;do{d=d/a;a=a+1.0;}while(a<0.0);g[i>>3]=d;g[h>>3]=a;f=16;break;}d=+sh(-a,b,c);d=d*+oh(a);g[i>>3]=d;a=+u(+d);if(a<1.0?(e=+wg()*a,e<+ph()):0){d=+(0-(Ah(i)|0)|0);d=+Bh(18330,17786,b)*d;break;}d=-+ph()/d;g[i>>3]=d;if(d==0.0){d=+Ch(18330,17830,b);break;}if((Dh(d)|0)==3)d=+Eh(18330,17874,i,b);}else{d=1.0;f=16;}}while(0);do{if((f|0)==16){if(a<170.0&+t(+a)==a){d=+Gh((Fh(h,b)|0)+-1|0);d=d*+g[i>>3];g[i>>3]=d;break;}if(a<+mh()){if(a<1.0/+wg()){d=+Bh(18330,0,b);g[i>>3]=d;}d=d*(1.0/a-+qh());g[i>>3]=d;break;}e=+Hh(h);g[i>>3]=e*+g[i>>3];e=+g[h>>3];e=e+ +th();e=e-+uh();d=+A(+e);a=+g[h>>3]*d;f=a>+Ih();a=+g[h>>3];if(!f){d=+w(+e,+(a-+uh()))/+z(+e);d=+g[i>>3]*d;g[i>>3]=d;break;}if(d*a*.5>+Ih()){d=+(Ah(i)|0);d=+Bh(18330,17786,b)*d;break;}a=+w(+e,+(+g[h>>3]*.5+-.25));e=a/+z(+e);g[i>>3]=+g[i>>3]*e;e=+wg()/a;d=+g[i>>3];if(e<d){d=+(Ah(i)|0);d=+Bh(18330,17786,b)*d;break;}else{d=a*d;g[i>>3]=d;break;}}}while(0);Pb=j;return+d;}function th(){return 6.02468004077673;}function uh(){return+ +yh();}function vh(a){a=a|0;return+ +wh(96,208,a);}function wh(a,b,c){a=a|0;b=b|0;c=c|0;return+ +xh(a,b,c,0);}function xh(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0.0,h=0.0;f=+g[d>>3];if(!(f<=1.0)){f=1.0/f;h=+g[a+96>>3]+f*(+g[a+88>>3]+f*(+g[a+80>>3]+f*(+g[a+72>>3]+f*(+g[a+64>>3]+f*(+g[a+56>>3]+f*(+g[a+48>>3]+f*(+g[a+40>>3]+f*(+g[a+32>>3]+f*(+g[a+24>>3]+f*(+g[a+16>>3]+f*(f*+g[a>>3]+ +g[a+8>>3])))))))))));f=f*(f*(f*(f*(f*(f*(f*(f*(f*(f*(f*(f*+((c[b>>2]|0)>>>0)+ +((c[b+4>>2]|0)>>>0))+ +((c[b+8>>2]|0)>>>0))+ +((c[b+12>>2]|0)>>>0))+ +((c[b+16>>2]|0)>>>0))+ +((c[b+20>>2]|0)>>>0))+ +((c[b+24>>2]|0)>>>0))+ +((c[b+28>>2]|0)>>>0))+ +((c[b+32>>2]|0)>>>0))+ +((c[b+36>>2]|0)>>>0))+ +((c[b+40>>2]|0)>>>0))+ +((c[b+44>>2]|0)>>>0));b=b+48|0;}else{h=+g[a>>3]+f*(+g[a+8>>3]+f*(+g[a+16>>3]+f*(+g[a+24>>3]+f*(+g[a+32>>3]+f*(+g[a+40>>3]+f*(+g[a+48>>3]+f*(+g[a+56>>3]+f*(+g[a+64>>3]+f*(+g[a+72>>3]+f*(+g[a+80>>3]+f*(f*+g[a+96>>3]+ +g[a+88>>3])))))))))));f=f*(f*(f*(f*(f*(f*(f*(f*(f*(f*(f*(f*+((c[b+48>>2]|0)>>>0)+ +((c[b+44>>2]|0)>>>0))+ +((c[b+40>>2]|0)>>>0))+ +((c[b+36>>2]|0)>>>0))+ +((c[b+32>>2]|0)>>>0))+ +((c[b+28>>2]|0)>>>0))+ +((c[b+24>>2]|0)>>>0))+ +((c[b+20>>2]|0)>>>0))+ +((c[b+16>>2]|0)>>>0))+ +((c[b+12>>2]|0)>>>0))+ +((c[b+8>>2]|0)>>>0))+ +((c[b+4>>2]|0)>>>0));}return+(h/(f+ +((c[b>>2]|0)>>>0)));}function yh(){var a=0.0,b=0;b=Pb;Pb=Pb+16|0;a=+zh(b);Pb=b;return+a;}function zh(a){a=a|0;return .5;}function Ah(a){a=a|0;var b=0.0;b=+g[a>>3];if(b==0.0)a=0;else{a=(wi(b)|0)==0;a=a?1:-1;}return a|0;}function Bh(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0;c=Pb;Pb=Pb+16|0;d=+xg(a,(b|0)==0?18315:b,c);Pb=c;return+d;}function Ch(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0;c=Pb;Pb=Pb+16|0;d=+vi(a,(b|0)==0?18299:b,c);Pb=c;return+d;}function Dh(a){a=+a;var b=0,c=0;c=Pb;Pb=Pb+16|0;b=ui(a,c)|0;Pb=c;return b|0;}function Eh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0;d=Pb;Pb=Pb+16|0;e=+ti(a,(b|0)==0?18286:b,c,d);Pb=d;return+e;}function Fh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0.0,h=0;h=Pb;Pb=Pb+16|0;d=h;e=h+8|0;f=+Kh(a,b);if(f>2147483647.0|f<-2147483648.0){g[d>>3]=+g[a>>3];c[e>>2]=0;a=Lh(17908,0,d,e,b)|0;}else a=~~f;Pb=h;return a|0;}function Gh(a){a=a|0;return+ +g[7e3+(a<<3)>>3];}function Hh(a){a=a|0;return+ +wh(272,384,a);}function Ih(){var a=0.0,b=0;b=Pb;Pb=Pb+16|0;a=+Jh(b);Pb=b;return+a;}function Jh(a){a=a|0;return 709.0;}function Kh(a,b){a=a|0;b=b|0;var c=0.0,d=0;d=Pb;Pb=Pb+16|0;c=+ni(a,b,d);Pb=d;return+c;}function Lh(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=Pb;Pb=Pb+16|0;e=Mh(a,(b|0)==0?17938:b,c,d,f)|0;Pb=f;return e|0;}function Mh(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Nh(a,b,c);return 0;}function Nh(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=Pb;Pb=Pb+64|0;j=f+44|0;h=f+32|0;g=f+20|0;i=f+8|0;b=(b|0)==0?15949:b;d=(d|0)==0?17999:d;c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;DA(j,b,Qc(b)|0);c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;DA(h,d,Qc(d)|0);c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;DA(g,16002,Qc(16002)|0);Mc(j,16021,zg()|0);d=a[j+11>>0]|0;b=d<<24>>24<0;PA(g,b?c[j>>2]|0:j,b?c[j+4>>2]|0:d&255)|0;QA(g,16025)|0;Oh(i,e);Mc(h,16021,(a[i+11>>0]|0)<0?c[i>>2]|0:i);e=a[h+11>>0]|0;d=e<<24>>24<0;PA(g,d?c[h>>2]|0:h,d?c[h+4>>2]|0:e&255)|0;Ph(f,g);Qh(f);}function Oh(a,b){a=a|0;b=b|0;var d=0,e=0,f=0,h=0,i=0;d=Pb;Pb=Pb+144|0;e=d;i=e+64|0;h=e+8|0;c[h>>2]=10808;f=e+12|0;c[e>>2]=6620;c[i>>2]=6640;c[e+4>>2]=0;yr(e+64|0,f);c[e+136>>2]=0;c[e+140>>2]=ad()|0;c[e>>2]=10788;c[i>>2]=10828;c[h>>2]=10808;Br(f);c[f>>2]=10884;h=e+44|0;c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;c[h+12>>2]=0;c[e+60>>2]=24;h=e+8|0;c[h+(c[(c[h>>2]|0)+-12>>2]|0)+8>>2]=17;Gr(h,+g[b>>3])|0;md(a,f);Wc(e);Pb=d;return;}function Ph(a,b){a=a|0;b=b|0;yA(a,b);c[a>>2]=11416;return;}function Qh(a){a=a|0;var b=0,c=0;c=Pb;Pb=Pb+32|0;pd(a);b=_(32)|0;Rh(c,a);Sh(b,c);da(b|0,8368,49);}function Rh(a,b){a=a|0;b=b|0;mi(a,b);return;}function Sh(a,b){a=a|0;b=b|0;li(a,b);return;}function Th(a){a=a|0;Vh(a,11280);Hd(a+28|0);return;}function Uh(a){a=a|0;Wd(a+8|0);OB(a);return;}function Vh(a,b){a=a|0;b=b|0;Uh(a);return;}function Wh(a){a=a|0;Th(a);oA(a);return;}function Xh(b){b=b|0;var d=0,e=0,f=0;e=Pb;Pb=Pb+16|0;f=e+1|0;d=nA(32)|0;a[f>>0]=a[e>>0]|0;ki(d,b,f);Pb=e;return d+(c[(c[d>>2]|0)+-12>>2]|0)|0;}function Yh(a){a=a|0;var b=0;b=_(32)|0;di(b,a);da(b|0,8368,49);}function Zh(a){a=a|0;Th(a+-8|0);return;}function _h(a){a=a|0;Wh(a+-8|0);return;}function $h(a){a=a|0;return Xh(a+(c[(c[a>>2]|0)+-12>>2]|0)|0)|0;}function ai(a){a=a|0;Yh(a+(c[(c[a>>2]|0)+-16>>2]|0)|0);return;}function bi(a){a=a|0;Th(a+(c[(c[a>>2]|0)+-20>>2]|0)|0);return;}function ci(a){a=a|0;Wh(a+(c[(c[a>>2]|0)+-20>>2]|0)|0);return;}function di(a,b){a=a|0;b=b|0;var d=0;d=a+28|0;Zd(d,b+(c[(c[b>>2]|0)+-12>>2]|0)|0);ei(a,b);c[a>>2]=11300;c[a+8>>2]=11328;c[d>>2]=11356;return;}function ei(a,b){a=a|0;b=b|0;var d=0;fi(a,b);d=a+8|0;Kd(d,b+8|0);c[a>>2]=11380;c[d>>2]=11400;return;}function fi(a,b){a=a|0;b=b|0;zA(a,b);c[a>>2]=11416;return;}function gi(a){a=a|0;Uh(a);oA(a);return;}function hi(a){a=a|0;Uh(a+-8|0);return;}function ii(a){a=a|0;gi(a+-8|0);return;}function ji(a){a=a|0;OB(a);oA(a);return;}function ki(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=a+28|0;vd(e);ei(a,b);c[a>>2]=11300;d=a+8|0;c[d>>2]=11328;c[e>>2]=11356;xd(d,b+8|0);return;}function li(a,b){a=a|0;b=b|0;var d=0;d=a+28|0;vd(d);ei(a,b);c[a>>2]=11300;a=a+8|0;c[a>>2]=11328;c[d>>2]=11356;xd(a,b+8|0);return;}function mi(a,b){a=a|0;b=b|0;fi(a,b);b=a+8|0;$d(b);c[a>>2]=11380;c[b>>2]=11400;return;}function ni(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0;f=Pb;Pb=Pb+16|0;c=f+8|0;e=f;do{if(oi(+g[a>>3])|0){d=+g[a>>3];if(!(d>=0.0)){d=+B(+d);break;}else{d=+t(+d);break;}}else{d=+g[a>>3];g[c>>3]=d;g[e>>3]=d;d=+pi(18257,0,c,e,b);}}while(0);Pb=f;return+d;}function oi(a){a=+a;var b=0,c=0;c=Pb;Pb=Pb+16|0;b=ri(a,c)|0;Pb=c;return b|0;}function pi(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0.0;e=Pb;Pb=Pb+16|0;f=+qi(a,(b|0)==0?17938:b,c,d,e);Pb=e;return+f;}function qi(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Nh(a,b,c);return 0.0;}function ri(a,b){a=+a;b=b|0;si(a)|0;return 0!=0|((G()|0)&2146435072|0)!=2146435072|0;}function si(a){a=+a;var b=0;g[h>>3]=a;b=c[h>>2]|0;F(c[h+4>>2]|0);return b|0;}function ti(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return+ +g[c>>3];}function ui(a,b){a=+a;b=b|0;return jq(a)|0;}function vi(a,b,c){a=a|0;b=b|0;c=c|0;return 0.0;}function wi(a){a=+a;var b=0,c=0;c=Pb;Pb=Pb+16|0;b=xi(a,c)|0;Pb=c;return b|0;}function xi(a,b){a=+a;b=b|0;b=si(a)|0;b=rC(b|0,G()|0,63)|0;G()|0;return b|0;}function yi(){var a=0.0,b=0;b=Pb;Pb=Pb+16|0;a=+Bi(b);Pb=b;return+a;}function zi(a,b){a=a|0;b=b|0;return+ +Ai(a,b,0);}function Ai(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0;e=+g[b>>3];d=e*e;return+(e*(d*(d*(+g[a+56>>3]*d+ +g[a+40>>3])+ +g[a+24>>3])+ +g[a+8>>3])+(d*(d*(d*+g[a+48>>3]+ +g[a+32>>3])+ +g[a+16>>3])+ +g[a>>3]));}function Bi(a){a=a|0;return 2.220446049250313e-16;}function Ci(){var a=0.0,b=0;b=Pb;Pb=Pb+16|0;a=+Di(b);Pb=b;return+a;}function Di(a){a=a|0;return .5772156649015329;}function Ei(){var a=0.0,b=0;b=Pb;Pb=Pb+16|0;a=+Fi(b);Pb=b;return+a;}function Fi(a){a=a|0;return 3.141592653589793;}function Gi(a){a=+a;var b=0,c=0;c=Pb;Pb=Pb+16|0;b=Hi(a,c)|0;Pb=c;return b|0;}function Hi(a,b){a=+a;b=b|0;return(~~a&1|0)!=0|0;}function Ii(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0;d=Pb;Pb=Pb+16|0;e=+Ji(a,b,c,d);Pb=d;return+e;}function Ji(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Ki(a,b,c);return+r;}function Ki(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=Pb;Pb=Pb+64|0;j=f+44|0;h=f+32|0;g=f+20|0;i=f+8|0;b=(b|0)==0?15949:b;d=(d|0)==0?17999:d;c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;DA(j,b,Qc(b)|0);c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;DA(h,d,Qc(d)|0);c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;DA(g,16002,Qc(16002)|0);Mc(j,16021,zg()|0);d=a[j+11>>0]|0;b=d<<24>>24<0;PA(g,b?c[j>>2]|0:j,b?c[j+4>>2]|0:d&255)|0;QA(g,16025)|0;Oh(i,e);Mc(h,16021,(a[i+11>>0]|0)<0?c[i>>2]|0:i);e=a[h+11>>0]|0;d=e<<24>>24<0;PA(g,d?c[h>>2]|0:h,d?c[h+4>>2]|0:e&255)|0;qA(f,g);c[f>>2]=14896;Pc(f);}function Li(a,b){a=a|0;b=b|0;return 1.4901161193847656e-08;}function Mi(a){a=a|0;return;}function Ni(a){a=a|0;a=Pb;Pb=Pb+16|0;Oi(a);Pb=a;return;}function Oi(a){a=a|0;return;}function Pi(a,b,d){a=a|0;b=b|0;d=d|0;var e=0.0,f=0.0,h=0,i=0;i=c[a>>2]|0;e=+g[i>>3];h=(c[a+4>>2]|0)-i>>3;if(h>>>0>1){f=+(b>>>0)+4294967296.0*+(d>>>0);a=1;b=0;do{e=e+ +w(+ +g[i+(a<<3)>>3],+f);a=mC(a|0,b|0,1,0)|0;b=G()|0;}while(b>>>0<0|(b|0)==0&a>>>0<h>>>0);}return+e;}function Qi(a,b){a=+a;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,h=0.0,i=0,j=0,k=0,l=0;l=Pb;Pb=Pb+32|0;i=l+16|0;j=l;k=l+24|0;e=+Pi(b,1,0);f=+Pi(b,2,0);h=+Pi(b,3,0);d=h/f/+v(+f);c=+Pi(b,4,0)/f/f;e=(a-e)/+v(+(f*2.0));a=d*d;if(a>c){a=1.0/(d-+v(+(a-c)));c=a*(a*(d*a+-1.0));d=a;a=a*a-c*2.0;}else{d=1.0/d;a=f*(f*f)/h/h;c=0.0;}h=c+a+e*(d*1.4142135623730951);g[i>>3]=h;if(h<0.0)a=1.0;else{Ri(j,a,c);Si(k,j,i);a=+Ti(k);}Pb=l;return+a;}function Ri(a,b,c){a=a|0;b=+b;c=+c;var d=0,e=0,f=0,h=0;d=Pb;Pb=Pb+16|0;f=d;e=d+8|0;g[a>>3]=b;h=a+8|0;g[h>>3]=c;Ec(21131,a,f,e)|0;Wi(21131,+g[h>>3],f,e)|0;Pb=d;return;}function Si(a,b,c){a=a|0;b=b|0;c=c|0;ul(a,b,c);return;}function Ti(a){a=a|0;var b=0.0,d=0.0,e=0,f=0,h=0,i=0,j=0,k=0,l=0;k=Pb;Pb=Pb+32|0;e=k+8|0;f=k;h=k+18|0;i=k+16|0;l=c[a>>2]|0;d=+g[c[a+4>>2]>>3];g[e>>3]=+Ui(l);b=+Vi(l);do{if(Ec(19454,e,f,h)|0){if(!(Wi(19454,b,f,k+17|0)|0)){j=6;break;}if(Xi(19454,d,f,i)|0)b=+Yi(d,+g[e>>3],b,1,h);else j=6;}else j=6;}while(0);if((j|0)==6)b=+g[f>>3];Pb=k;return+b;}function Ui(a){a=a|0;return+ +g[a>>3];}function Vi(a){a=a|0;return+ +g[a+8>>3];}function Wi(a,b,c,d){a=a|0;b=+b;c=c|0;d=d|0;var e=0,f=0;f=Pb;Pb=Pb+16|0;e=f;g[e>>3]=b;if(!(b<0.0)?Fc(b)|0:0)a=1;else{g[c>>3]=+Gc(a,21080,e,d);a=0;}Pb=f;return a|0;}function Xi(a,b,c,d){a=a|0;b=+b;c=c|0;d=d|0;var e=0,f=0;f=Pb;Pb=Pb+16|0;e=f;g[e>>3]=b;if(b<0.0|(Fc(b)|0)^1){g[c>>3]=+Gc(a,21026,e,d);a=0;}else a=1;Pb=f;return a|0;}function Yi(a,b,c,d,e){a=+a;b=+b;c=+c;d=d|0;e=e|0;var f=0,h=0,i=0;i=Pb;Pb=Pb+32|0;e=i+8|0;f=i+16|0;h=i;g[e>>3]=a;do{if(c==0.0){if(d){Ac(h,b);Zi(f,h,e);a=+_i(f);break;}else{Ac(f,b);a=+$i(f,e);break;}}else{do{if(!(b+c<a)){if(c<200.0){a=+bj(a,b,c,f,+(d<<31>>31));break;}else{a=+cj(a,b,c,f,+(d<<31>>31));break;}}else{d=d^1;a=+aj(a,b,c,f,+(d<<31>>31));}}while(0);a=+dj(d?-a:a,19519);}}while(0);Pb=i;return+a;}function Zi(a,b,c){a=a|0;b=b|0;c=c|0;tl(a,b,c);return;}function _i(a){a=a|0;var b=0.0,d=0,e=0,f=0,h=0;h=Pb;Pb=Pb+32|0;e=h+8|0;d=h;f=h+16|0;g[e>>3]=+ql(c[a>>2]|0);a=c[a+4>>2]|0;do{if(Ec(20966,e,d,f)|0){b=+g[a>>3];if(!(b<0.0)?Fc(b)|0:0){b=+sl(+g[e>>3]*.5,+g[a>>3]*.5,f);break;}b=+Gc(20966,20918,a,f);}else b=+g[d>>3];}while(0);Pb=h;return+b;}function $i(a,b){a=a|0;b=b|0;var c=0.0,d=0,e=0,f=0,h=0;h=Pb;Pb=Pb+32|0;e=h+8|0;d=h;f=h+16|0;g[e>>3]=+ql(a);do{if(Ec(20966,e,d,f)|0){c=+g[b>>3];if(!(c<0.0)?Fc(c)|0:0){c=+rl(+g[e>>3]*.5,+g[b>>3]*.5,f);break;}c=+Gc(20966,20918,b,f);}else c=+g[d>>3];}while(0);Pb=h;return+c;}function aj(a,b,c,d,e){a=+a;b=+b;c=+c;d=d|0;e=+e;var f=0,h=0,i=0.0,j=0.0,k=0.0,l=0.0,m=0,n=0,o=0.0,p=0.0,q=0.0,r=0.0,s=0,t=0,v=0,w=0;t=Pb;Pb=Pb+16|0;f=t+8|0;s=t;if(a==0.0)e=1.0;else{g[f>>3]=c*.5;r=b*.5;p=a*.5;m=kj()|0;q=+lj();g[s>>3]=e;h=mj(f,d)|0;l=+oj(+(h+1|0),+g[f>>3],d);c=+(h|0);i=l*c/+g[f>>3];b=r+c;a=+pl(b,p,d);c=+oj(r+1.0+c,p,d);b=b*c/p;j=a-b;do{if(m){o=+g[f>>3];f=h;while(1){k=a*l;e=k+e;v=f;f=f+1|0;l=l*(o/+(f|0));a=a+c;c=c*(p/(r+ +(v|0)+1.0));if(e==0.0){if(k>=a*l)break;}else if(!(k>=a*l?!(+u(+(k/e))<q):1))break;v=f-h|0;w=((v|0)<0)<<31>>31;if(!(w>>>0<0|(w|0)==0&v>>>0<m>>>0)){n=8;break;}}if((n|0)==8){g[s>>3]=e;n=9;break;}g[s>>3]=e;if((h|0)>0){while(1){f=h;h=h+-1|0;a=i*j;e=a+e;c=+(h|0);b=b*((r+c)/p);if(e==0.0){n=16;break;}if(+u(+(a/e))<q){n=15;break;}if((f|0)<=1){n=17;break;}else{j=j-b;i=i*(c/o);}}if((n|0)==15){g[s>>3]=e;break;}else if((n|0)==16){g[s>>3]=e;break;}else if((n|0)==17){g[s>>3]=e;break;}}}else n=9;}while(0);if((n|0)==9)e=+pj(19580,19632,s,d);}Pb=t;return+e;}function bj(a,b,c,d,e){a=+a;b=+b;c=+c;d=d|0;e=+e;var f=0,h=0.0,i=0.0,j=0.0,k=0,l=0.0,m=0.0,n=0,o=0,p=0.0;o=Pb;Pb=Pb+16|0;n=o;if(a==0.0)c=0.0;else{h=+oj(b*.5+1.0,a*.5,d);m=c*.5;i=+z(+-m);c=i*h+e;g[n>>3]=c;a:do{if(!(c==0.0)){k=kj()|0;l=+lj();do{if(k>>>0>1){f=1;j=i;e=i;i=0.0;while(1){h=h*a/(+(f<<1|0)+b);j=m*j/+(f|0);e=e+j;p=i;i=e*h;c=i+c;f=f+1|0;if(!(i<=p?!(+u(+(i/c))<l):1)){f=9;break;}if(f>>>0>=k>>>0){f=7;break;}}if((f|0)==7){g[n>>3]=c;break;}else if((f|0)==9){g[n>>3]=c;break a;}}}while(0);c=+pj(19580,19632,n,d);}}while(0);}Pb=o;return+c;}function cj(a,b,c,d,e){a=+a;b=+b;c=+c;d=d|0;e=+e;var f=0,h=0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,p=0,q=0,r=0,s=0.0,t=0,v=0.0;t=Pb;Pb=Pb+16|0;f=t+8|0;q=t;if(a==0.0)a=0.0;else{r=kj()|0;s=+lj();o=a*.5;g[f>>3]=c*.5;p=mj(f,d)|0;n=b*.5+ +(p|0);a=+nj(n,o,d);if(!(c==0.0)){h=p+1|0;c=+oj(+(h|0),+g[f>>3],d);m=+oj(n,o,d);b=a*c+e;g[q>>3]=b;if(!(b==0.0)){do{if((p|0)>=1){l=+g[f>>3];f=1;e=o*m/n;i=c;j=a;k=0.0;while(1){e=e*((n-+(f|0)+1.0)/o);j=j+e;i=i*+(h-f|0)/l;v=k;k=j*i;b=b+k;if(!(k<=v?!(+u(+(k/b))<s):1)){f=9;break;}if((p|0)<=(f|0)){f=10;break;}else f=f+1|0;}if((f|0)==9){g[q>>3]=b;i=l;break;}else if((f|0)==10){g[q>>3]=b;i=l;break;}}else i=+g[f>>3];}while(0);e=m;h=1;do{e=o*e/(n+ +(h|0)+-1.0);a=a-e;c=c*i/+(h+p|0);v=c*a;b=b+v;h=h+1|0;f=h>>>0<r>>>0;}while(f&+u(+(v/b))>s);g[q>>3]=b;if(f)a=b;else a=+pj(19580,19632,q,d);}else a=b;}}Pb=t;return+a;}function dj(a,b){a=+a;b=b|0;var c=0,d=0,e=0;e=Pb;Pb=Pb+16|0;c=e;d=e+8|0;g[c>>3]=0.0;do{if(!(ej(a,c,b,d)|0)){if(fj(a,c,b,d)|0){a=+g[c>>3];break;}else{d=gj(a,c,b,d)|0;a=d?+g[c>>3]:a;break;}}else a=+g[c>>3];}while(0);Pb=e;return+a;}function ej(a,b,c,d){a=+a;b=b|0;c=c|0;d=d|0;var e=0.0;e=+u(+a);if(e>+hj()){+ij(c,0,d);g[b>>3]=a;b=1;}else b=0;return b|0;}function fj(a,b,c,d){a=+a;b=b|0;c=c|0;d=d|0;return 0;}function gj(a,b,c,d){a=+a;b=b|0;c=c|0;d=d|0;return 0;}function hj(){return 1797693134862315708145274.0e284;}function ij(a,b,c){a=a|0;b=b|0;c=c|0;jj(a,(b|0)==0?15932:b);return+s;}function jj(b,d){b=b|0;d=d|0;var e=0,f=0,g=0,h=0;e=Pb;Pb=Pb+32|0;g=e+20|0;f=e+8|0;b=(b|0)==0?15949:b;c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;DA(g,b,Qc(b)|0);c[f>>2]=0;c[f+4>>2]=0;c[f+8>>2]=0;DA(f,16002,Qc(16002)|0);Mc(g,16021,Nc()|0);b=a[g+11>>0]|0;h=b<<24>>24<0;PA(f,h?c[g>>2]|0:g,h?c[g+4>>2]|0:b&255)|0;QA(f,16025)|0;QA(f,(d|0)==0?15988:d)|0;yA(e,f);c[e>>2]=14936;Ag(e);}function kj(){return 1e6;}function lj(){var a=0.0,b=0;b=Pb;Pb=Pb+16|0;a=+nl(b);Pb=b;return+a;}function mj(a,b){a=a|0;b=b|0;var d=0,e=0.0,f=0;f=Pb;Pb=Pb+16|0;d=f;e=+ll(a,b);if(e>2147483647.0|e<-2147483648.0){c[d>>2]=0;a=Lh(20836,0,a,d,b)|0;}else a=~~e;Pb=f;return a|0;}function nj(a,b,c){a=+a;b=+b;c=c|0;c=Pb;Pb=Pb+16|0;ek();b=+sg(+fk(a,b,1,0,c,0),20311);Pb=c;return+b;}function oj(a,b,c){a=+a;b=+b;c=c|0;c=Pb;Pb=Pb+16|0;b=+sg(+Sj(a,b,c),19937);Pb=c;return+b;}function pj(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0;d=Pb;Pb=Pb+16|0;e=+qj(a,(b|0)==0?19679:b,c,d);Pb=d;return+e;}function qj(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;rj(a,b,c);return 0.0;}function rj(b,d,e){b=b|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0;f=Pb;Pb=Pb+64|0;j=f+44|0;h=f+32|0;g=f+20|0;i=f+8|0;b=(b|0)==0?15949:b;d=(d|0)==0?17999:d;c[j>>2]=0;c[j+4>>2]=0;c[j+8>>2]=0;DA(j,b,Qc(b)|0);c[h>>2]=0;c[h+4>>2]=0;c[h+8>>2]=0;DA(h,d,Qc(d)|0);c[g>>2]=0;c[g+4>>2]=0;c[g+8>>2]=0;DA(g,16002,Qc(16002)|0);Mc(j,16021,zg()|0);d=a[j+11>>0]|0;b=d<<24>>24<0;PA(g,b?c[j>>2]|0:j,b?c[j+4>>2]|0:d&255)|0;QA(g,16025)|0;Oh(i,e);Mc(h,16021,(a[i+11>>0]|0)<0?c[i>>2]|0:i);e=a[h+11>>0]|0;d=e<<24>>24<0;PA(g,d?c[h>>2]|0:h,d?c[h+4>>2]|0:e&255)|0;sj(f,g);tj(f);}function sj(a,b){a=a|0;b=b|0;yA(a,b);c[a>>2]=11564;return;}function tj(a){a=a|0;var b=0,c=0;c=Pb;Pb=Pb+32|0;pd(a);b=_(32)|0;uj(c,a);vj(b,c);da(b|0,8448,63);}function uj(a,b){a=a|0;b=b|0;Rj(a,b);return;}function vj(a,b){a=a|0;b=b|0;Qj(a,b);return;}function wj(a){a=a|0;yj(a,11428);Hd(a+28|0);return;}function xj(a){a=a|0;Wd(a+8|0);OB(a);return;}function yj(a,b){a=a|0;b=b|0;xj(a);return;}function zj(a){a=a|0;wj(a);oA(a);return;}function Aj(b){b=b|0;var d=0,e=0,f=0;e=Pb;Pb=Pb+16|0;f=e+1|0;d=nA(32)|0;a[f>>0]=a[e>>0]|0;Pj(d,b,f);Pb=e;return d+(c[(c[d>>2]|0)+-12>>2]|0)|0;}function Bj(a){a=a|0;var b=0;b=_(32)|0;Ij(b,a);da(b|0,8448,63);}function Cj(a){a=a|0;wj(a+-8|0);return;}function Dj(a){a=a|0;zj(a+-8|0);return;}function Ej(a){a=a|0;return Aj(a+(c[(c[a>>2]|0)+-12>>2]|0)|0)|0;}function Fj(a){a=a|0;Bj(a+(c[(c[a>>2]|0)+-16>>2]|0)|0);return;}function Gj(a){a=a|0;wj(a+(c[(c[a>>2]|0)+-20>>2]|0)|0);return;}function Hj(a){a=a|0;zj(a+(c[(c[a>>2]|0)+-20>>2]|0)|0);return;}function Ij(a,b){a=a|0;b=b|0;var d=0;d=a+28|0;Zd(d,b+(c[(c[b>>2]|0)+-12>>2]|0)|0);Jj(a,b);c[a>>2]=11448;c[a+8>>2]=11476;c[d>>2]=11504;return;}function Jj(a,b){a=a|0;b=b|0;var d=0;Kj(a,b);d=a+8|0;Kd(d,b+8|0);c[a>>2]=11528;c[d>>2]=11548;return;}function Kj(a,b){a=a|0;b=b|0;zA(a,b);c[a>>2]=11564;return;}function Lj(a){a=a|0;xj(a);oA(a);return;}function Mj(a){a=a|0;xj(a+-8|0);return;}function Nj(a){a=a|0;Lj(a+-8|0);return;}function Oj(a){a=a|0;OB(a);oA(a);return;}function Pj(a,b,d){a=a|0;b=b|0;d=d|0;var e=0;e=a+28|0;vd(e);Jj(a,b);c[a>>2]=11448;d=a+8|0;c[d>>2]=11476;c[e>>2]=11504;xd(d,b+8|0);return;}function Qj(a,b){a=a|0;b=b|0;var d=0;d=a+28|0;vd(d);Jj(a,b);c[a>>2]=11448;a=a+8|0;c[a>>2]=11476;c[d>>2]=11504;xd(a,b+8|0);return;}function Rj(a,b){a=a|0;b=b|0;Kj(a,b);b=a+8|0;$d(b);c[a>>2]=11528;c[b>>2]=11548;return;}function Sj(a,b,c){a=+a;b=+b;c=c|0;var d=0,e=0,f=0,h=0,i=0.0;h=Pb;Pb=Pb+32|0;e=h+8|0;f=h;d=h+16|0;g[e>>3]=a;g[f>>3]=b;do{if(!(a<=0.0)){if(b<0.0){a=+Tj(19937,20067,f,c);break;}if(b==0.0){if(a>1.0){a=0.0;break;}if(a==1.0){a=1.0;break;}a=+Bh(19937,0,c);break;}b=+Uj(a,b,c,d);a=+g[f>>3];if(a<1.0){i=+wg();a=+g[f>>3];if(i*a<b){a=+Bh(19937,0,c);break;}}if(b==0.0){i=+g[e>>3];a=i*+A(+a)-a;a=a-+ih(i,c);a=+z(+(a-+A(+ +g[f>>3])));break;}else{a=b/a;break;}}else a=+Tj(19937,19984,e,c);}while(0);Pb=h;return+a;}function Tj(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0;d=Pb;Pb=Pb+16|0;e=+Ji(a,(b|0)==0?20271:b,c,d);Pb=d;return+e;}function Uj(a,b,c,d){a=+a;b=+b;c=c|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0,k=0,l=0.0,m=0;m=Pb;Pb=Pb+16|0;k=m;g[k>>3]=a;l=+th()+a+-.5;e=(b-a-+th()+.5)/l;do{if(a<1.0){if(!(+Vj()>=b)){e=+z(+-b)*+w(+b,+a);e=e/+sh(a,c,d);break;}else{e=+A(+b)*a-b;e=+z(+(e-+lh(a,c,d,0)));break;}}else{do{if(a>150.0?+u(+(e*e*a))<=100.0:0){e=+Wj(e,c)*a;e=+z(+(e+(.5-+th())*b/l));}else{f=b/l;h=+A(+f)*a;i=a-b;e=i<h?i:h;if(!(e<=+Vj())?!((h<i?i:h)>=+Ih()):0){e=+z(+i)*+w(+f,+a);break;}j=i/a;if(e*.5>+Vj()?(h<i?i:h)*.5<+Ih():0){e=+z(+(i*.5))*+w(+f,+(a*.5));e=e*e;break;}if(e*.25>+Vj()?(h<i?i:h)*.25<+Ih()&a<b:0){e=+z(+(i*.25))*+w(+f,+(a*.25));e=e*e;e=e*e;break;}if(j>+Vj()?j<+Ih():0){e=+w(+(+z(+j)*b/l),+a);break;}e=+z(+(i+h));}}while(0);l=+v(+(l/+Xj()));e=e*(l/+vh(k));}}while(0);Pb=m;return+e;}function Vj(){var a=0.0,b=0;b=Pb;Pb=Pb+16|0;a=+dk(b);Pb=b;return+a;}function Wj(a,b){a=+a;b=b|0;var d=0.0,e=0,f=0,h=0,i=0,j=0;j=Pb;Pb=Pb+48|0;e=j+16|0;f=j+24|0;h=j+8|0;i=j;g[e>>3]=a;do{if(!(a<-1.0)){if(a==-1.0){d=-+Bh(20240,0,b);break;}d=+u(+a);if(d>.949999988079071){d=+A(+(a+1.0))-a;break;}if(d<+yi()){d=a*a*-.5;break;}else{_j(f,a);+$j(f);e=h;c[e>>2]=kj()|0;c[e+4>>2]=0;g[i>>3]=+lj();d=+ak(f,i,h);i=h;bk(20240,c[i>>2]|0,c[i+4>>2]|0,b);break;}}else d=+Tj(20240,20137,e,b);}while(0);Pb=j;return+d;}function Xj(){return+ +Yj();}function Yj(){var a=0.0,b=0;b=Pb;Pb=Pb+16|0;a=+Zj(b);Pb=b;return+a;}function Zj(a){a=a|0;return 2.718281828459045;}function _j(a,b){a=a|0;b=+b;c[a>>2]=0;g[a+8>>3]=-b;g[a+16>>3]=-1.0;return;}function $j(a){a=a|0;var b=0,d=0.0;b=a+16|0;d=+g[a+8>>3]*+g[b>>3];g[b>>3]=d;b=(c[a>>2]|0)+1|0;c[a>>2]=b;return+(d/+(b|0));}function ak(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0;e=Pb;Pb=Pb+16|0;f=e;g[f>>3]=0.0;d=+ck(a,b,c,f);Pb=e;return+d;}function bk(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;f=Pb;Pb=Pb+16|0;e=f;if(!(0>c>>>0|0==(c|0)&(kj()|0)>>>0>b>>>0)){g[e>>3]=+(b>>>0)+4294967296.0*+(c>>>0);+pj(a,20182,e,d);}Pb=f;return;}function ck(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0,j=0.0;i=d;h=+g[e>>3];f=c[i>>2]|0;e=c[i+4>>2]|0;while(1){j=+$j(a);h=h+j;if(!(+u(+(+g[b>>3]*h))<+u(+j)))break;f=mC(f|0,e|0,-1,-1)|0;e=G()|0;if((f|0)==0&(e|0)==0){f=0;e=0;break;}}a=d;a=nC(c[a>>2]|0,c[a+4>>2]|0,f|0,e|0)|0;b=G()|0;i=d;c[i>>2]=a;c[i+4>>2]=b;return+h;}function dk(a){a=a|0;return-708.0;}function ek(){kl(30812);return;}function fk(b,c,d,e,f,h){b=+b;c=+c;d=d|0;e=e|0;f=f|0;h=h|0;var i=0.0,j=0.0,k=0.0,l=0,m=0.0,n=0,o=0,p=0,q=0,r=0,s=0,v=0,x=0,y=0;y=Pb;Pb=Pb+32|0;v=y+16|0;s=y+8|0;x=y;n=y+28|0;o=y+27|0;p=y+26|0;l=y+25|0;r=y+24|0;g[s>>3]=b;g[x>>3]=c;do{if(!(b<=0.0)){if(c<0.0){i=+Tj(20800,20067,x,f);break;}if(!(!(b>=170.0)|d)){do{if(b*4.0<c&e){i=+A(+c)*b-c;if(h|0)g[h>>3]=+z(+i);i=i+ +A(+ +gk(b,c,+lj()));}else{if(c*4.0<b&(e^1)){i=+A(+c)*b-c;if(h|0)g[h>>3]=+z(+i);i=i+ +A(+(+hk(b,c,f,0.0)/b));break;}i=+fk(b,c,1,e,f,h);if(!(i==0.0)){i=+A(+i);i=i+ +ih(b,f);break;}if(e){i=(b+-.5)*+A(+b)+(+A(+(1.0/(b*12.0)+1.0+1.0/(b*288.0*b)))-b);i=i+ +A(+ +ik());if(!h)break;g[h>>3]=+z(+(+A(+c)*b-c));break;}i=+A(+c)*b-c;if(h|0)g[h>>3]=+z(+i);i=i+ +A(+(+hk(b,c,f,0.0)/b));}}while(0);if(i>+Ih()){i=+Bh(20800,0,f);break;}else{i=+z(+i);break;}}do{if(!(!(b<30.0)|!(c+1.0>=b))?+Ih()>c:0){i=+t(+b);if(i==b){if(!(c>.6)){q=32;break;}i=+jk(b,c,f,h);if(d){l=e^1;q=81;break;};a[v>>0]=a[n>>0]|0;i=i*+mk(b,v);if(e){q=85;break;}else{q=83;break;}}if(c>.2&+u(+(i-b))==.5){l=e^1;i=+kk(b,c,h,f);if(!d){a[v>>0]=a[o>>0]|0;i=i*+mk(b,v);}if((h|0)!=0?+g[h>>3]==0.0:0){g[h>>3]=+Uj(+g[s>>3],+g[x>>3],f,v);i=i>1.0&d?1.0:i;if(!e)q=82;}else q=81;}else q=32;}else q=32;}while(0);a:do{if((q|0)==32){if(+mh()>c&b>1.0){m=+w(+c,+b);if(d){a[v>>0]=a[l>>0]|0;k=+mk(b+1.0,v);j=+g[s>>3];i=+g[x>>3];}else{k=b;j=b;i=c;}i=m/k*(1.0-j*i/(j+1.0));i=i>1.0&d?1.0:i;if(e){q=82;break;}else{q=85;break;}}do{if(c<.5){if(-.4/+A(+c)<b)q=48;else q=63;}else{if(c<1.1)if(c*.75<b){q=48;break;}else{q=63;break;}do{if(b>20.0&d){i=(c-b)/b;j=+u(+i);if(b>200.0?(lk()|0)<114:0){if(!(20.0/b>i*i))break;}else q=41;if((q|0)==41?!(j<.4&(lk()|0)<65):0)break;i=+pk(b,c,f,0);if(!(c>=b))l=e;else l=e^1;if(!h){q=81;break a;}g[h>>3]=+Uj(b,c,f,v);i=i>1.0?1.0:i;if(l){q=82;break a;}else break a;}}while(0);l=e^1;if(!(c-1.0/(c*3.0)<b)){if(d)i=+Uj(b,c,f,v);else i=+nk(b,c,f);if(h|0)g[h>>3]=i;if(!(i!=0.0)){q=81;break a;}c=+g[s>>3];b=+g[x>>3];i=i*+gk(c,b,+lj());i=i>1.0&d?1.0:i;if(e){q=85;break a;}else{q=82;break a;}}else q=48;}}while(0);if((q|0)==48){if(d)i=+Uj(b,c,f,v);else i=+nk(b,c,f);if(h|0)g[h>>3]=i;if(!(i!=0.0)){l=e;q=81;break;}do{if(e){if(!d){j=+g[s>>3];a[v>>0]=a[p>>0]|0;j=+mk(j,v);if(!(i>=1.0)?!(i*+wg()>j):0){l=0;j=0.0;break;}j=j/i;k=+g[s>>3];if(!(k<1.0)){b=+wg();k=+g[s>>3];if(!(b/k>j)){l=0;j=0.0;break;}}}else{j=1.0/i;k=+g[s>>3];}l=1;j=-(j*k);}else{l=0;j=0.0;}}while(0);b=+hk(+g[s>>3],+g[x>>3],f,j);i=i*(b/+g[s>>3]);if(l)i=-i;else{l=e;q=81;break;}}else if((q|0)==63){i=+ok(b,c,f,v,e^1,h);if(d)i=i/+g[v>>3];}i=i>1.0&d?1.0:i;q=85;}}while(0);if((q|0)==81){i=i>1.0&d?1.0:i;if(l)q=82;else q=85;}if((q|0)==82)if(d){j=1.0;q=84;}else q=83;if((q|0)==83){j=+g[s>>3];a[v>>0]=a[r>>0]|0;j=+mk(j,v);q=84;}if((q|0)==84){i=j-i;q=85;}if((q|0)==85)if(!h)break;j=+g[x>>3];if(j<1.0){b=+wg();j=+g[x>>3];k=+g[h>>3];if(b*j<k){k=+wg()*.5;g[h>>3]=k;j=+g[x>>3];}}else k=+g[h>>3];g[h>>3]=k/j;}else i=+Tj(20800,19984,s,f);}while(0);Pb=y;return+i;}function gk(a,b,c){a=+a;b=+b;c=+c;var d=0,e=0,f=0;d=Pb;Pb=Pb+32|0;e=d;f=d+8|0;g[e>>3]=c;dl(f,a,b);c=1.0/(b-a+1.0+ +el(f,e));Pb=d;return+c;}function hk(a,b,d,e){a=+a;b=+b;d=d|0;e=+e;var f=0,h=0,i=0,j=0,k=0,l=0;f=Pb;Pb=Pb+48|0;i=f+16|0;k=f+24|0;h=f+8|0;j=f;g[i>>3]=e;al(k,a,b);l=h;c[l>>2]=kj()|0;c[l+4>>2]=0;g[j>>3]=+lj();e=+bl(k,j,h,i);bk(20750,c[h>>2]|0,c[h+4>>2]|0,d);Pb=f;return+e;}function ik(){return+ +_k();}function jk(a,b,c,d){a=+a;b=+b;c=c|0;d=d|0;var e=0.0,f=0.0,h=0,i=0.0,j=0,k=0.0,l=0;l=Pb;Pb=Pb+16|0;j=l;k=+z(+-b);if(k!=0.0&a>1.0){f=k;e=k;h=1;i=1.0;do{f=f/i*b;e=e+f;h=h+1|0;i=+(h>>>0);}while(i<a);}else e=k;if(d|0){k=k*+w(+b,+a);g[j>>3]=a+-1.0;g[d>>3]=k/+Gh(Fh(j,c)|0);}Pb=l;return+e;}function kk(a,b,c,d){a=+a;b=+b;c=c|0;d=d|0;var e=0.0,f=0.0,h=0.0,i=0.0,j=0.0;f=+v(+b);e=+wk(f,d);if(a>1.0&e!=0.0){f=+z(+-b);f=f/+v(+(+ph()*b))*b*2.0;if(a>2.0){h=f;i=f;d=2;j=2.0;while(1){i=i/(j+-.5)*b;f=h+i;d=d+1|0;j=+(d>>>0);if(!(j<a))break;else h=f;}}e=e+f;if(c)g[c>>3]=0.0;}else if(c){b=f*+z(+-b);g[c>>3]=b/+Xk();}return+e;}function lk(){var a=0,b=0;b=Pb;Pb=Pb+16|0;a=Wk(b)|0;Pb=b;return a|0;}function mk(b,c){b=+b;c=c|0;var d=0,e=0;d=Pb;Pb=Pb+16|0;e=d+1|0;a[e>>0]=a[d>>0]|0;b=+Vk(b,c,e);Pb=d;return+b;}function nk(a,b,c){a=+a;b=+b;c=c|0;var d=0.0,e=0.0;e=+A(+b)*a;do{if(!(b>=1.0)){if(e>+Vj()){d=+w(+b,+a)*+z(+-b);break;}d=b/a;if(d<+Ih()){d=+w(+(b/+z(+d)),+a);break;}else{d=+z(+(e-b));break;}}else{if(e<+Ih()?(d=-b,+Vj()<d):0){d=+w(+b,+a)*+z(+d);break;}if(!(a>=1.0)){d=+z(+(e-b));break;}else{d=+w(+(b/+z(+(b/a))),+a);break;}}}while(0);if((Dh(d)|0)==1)d=+Bh(20632,20687,c);return+d;}function ok(a,b,d,e,f,h){a=+a;b=+b;d=d|0;e=e|0;f=f|0;h=h|0;var i=0.0,j=0.0,k=0.0,l=0,m=0,n=0,o=0,p=0,q=0;p=Pb;Pb=Pb+64|0;l=p+24|0;m=p+16|0;n=p+8|0;o=p;i=+Dk(a,d);if(e|0)g[e>>3]=(i+1.0)/a;j=+Ek(b,a,d);Fk(l,a,b);q=m;c[q>>2]=(kj()|0)+-10;c[q+4>>2]=0;k=j+1.0;if(h|0){b=+z(+b);g[h>>3]=k/(b*+g[e>>3]);}if(f)b=+g[e>>3];else b=0.0;g[n>>3]=+lj();g[o>>3]=(b-(i-j)/a)/k;k=k*+Gk(l,n,m,o);q=m;bk(20367,c[q>>2]|0,c[q+4>>2]|0,d);Pb=p;return+(f?k:-k);}function pk(a,b,c,d){a=+a;b=+b;c=c|0;d=d|0;var e=0,f=0.0,h=0.0,i=0,j=0,k=0;d=Pb;Pb=Pb+96|0;k=d+88|0;j=d;i=d+80|0;h=+Wj((b-a)/a,c);f=h*a;h=+v(+(h*-2.0));e=b<a;g[k>>3]=e?-h:h;g[j>>3]=+qk(448,k);g[j+8>>3]=+rk(576,k);g[j+16>>3]=+sk(688,k);g[j+24>>3]=+tk(784,k);g[j+32>>3]=+ah(864,k);g[j+40>>3]=+tk(928,k);g[j+48>>3]=+ah(1008,k);g[j+56>>3]=+_g(1072,k);g[j+64>>3]=+uk(1120,k);g[j+72>>3]=-5.967612901927463e-04;g[i>>3]=1.0/a;h=+vk(j,i);b=+z(+f);b=h*(b/+v(+(+ph()*2.0*a)));b=+wk(+v(+-f),c)*.5+(e?-b:b);Pb=d;return+b;}function qk(a,b){a=a|0;b=b|0;return+ +Ck(a,b,0);}function rk(a,b){a=a|0;b=b|0;return+ +Bk(a,b,0);}function sk(a,b){a=a|0;b=b|0;return+ +Ak(a,b,0);}function tk(a,b){a=a|0;b=b|0;return+ +zk(a,b,0);}function uk(a,b){a=a|0;b=b|0;return+ +yk(a,b,0);}function vk(a,b){a=a|0;b=b|0;return+ +xk(a,b,0);}function wk(a,b){a=+a;b=b|0;b=Pb;Pb=Pb+16|0;qg();a=+sg(+rg(a,1,b+1|0,b),20334);Pb=b;return+a;}function xk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0;e=+g[b>>3];d=e*e;return+(e*(d*(d*(d*(+g[a+72>>3]*d+ +g[a+56>>3])+ +g[a+40>>3])+ +g[a+24>>3])+ +g[a+8>>3])+(d*(d*(d*(d*+g[a+64>>3]+ +g[a+48>>3])+ +g[a+32>>3])+ +g[a+16>>3])+ +g[a>>3]));}function yk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0;d=+g[b>>3];return+(+g[a>>3]+d*(+g[a+16>>3]*d+ +g[a+8>>3]));}function zk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0;e=+g[b>>3];d=e*e;return+(d*(d*(d*(+g[a+64>>3]*d+ +g[a+48>>3])+ +g[a+32>>3])+ +g[a+16>>3])+ +g[a>>3]+e*(d*(d*(d*+g[a+56>>3]+ +g[a+40>>3])+ +g[a+24>>3])+ +g[a+8>>3]));}function Ak(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0;e=+g[b>>3];d=e*e;return+(d*(d*(d*(d*(+g[a+80>>3]*d+ +g[a+64>>3])+ +g[a+48>>3])+ +g[a+32>>3])+ +g[a+16>>3])+ +g[a>>3]+e*(d*(d*(d*(d*+g[a+72>>3]+ +g[a+56>>3])+ +g[a+40>>3])+ +g[a+24>>3])+ +g[a+8>>3]));}function Bk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0;e=+g[b>>3];d=e*e;return+(d*(d*(d*(d*(d*(+g[a+96>>3]*d+ +g[a+80>>3])+ +g[a+64>>3])+ +g[a+48>>3])+ +g[a+32>>3])+ +g[a+16>>3])+ +g[a>>3]+e*(d*(d*(d*(d*(d*+g[a+88>>3]+ +g[a+72>>3])+ +g[a+56>>3])+ +g[a+40>>3])+ +g[a+24>>3])+ +g[a+8>>3]));}function Ck(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0;e=+g[b>>3];d=e*e;return+(d*(d*(d*(d*(d*(d*(+g[a+112>>3]*d+ +g[a+96>>3])+ +g[a+80>>3])+ +g[a+64>>3])+ +g[a+48>>3])+ +g[a+32>>3])+ +g[a+16>>3])+ +g[a>>3]+e*(d*(d*(d*(d*(d*(d*+g[a+104>>3]+ +g[a+88>>3])+ +g[a+72>>3])+ +g[a+56>>3])+ +g[a+40>>3])+ +g[a+24>>3])+ +g[a+8>>3]));}function Dk(a,b){a=+a;b=b|0;b=Pb;Pb=Pb+16|0;a=+sg(+Pk(a,b+1|0,b),20510);Pb=b;return+a;}function Ek(a,b,c){a=+a;b=+b;c=c|0;return+ +Ik(a,b,c);}function Fk(a,b,d){a=a|0;b=+b;d=+d;d=-d;g[a>>3]=d;g[a+8>>3]=d;g[a+16>>3]=b+1.0;c[a+24>>2]=1;return;}function Gk(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0,j=0.0;i=d;h=+g[e>>3];f=c[i>>2]|0;e=c[i+4>>2]|0;while(1){j=+Hk(a);h=h+j;if(!(+u(+(+g[b>>3]*h))<+u(+j)))break;f=mC(f|0,e|0,-1,-1)|0;e=G()|0;if((f|0)==0&(e|0)==0){f=0;e=0;break;}}a=d;a=nC(c[a>>2]|0,c[a+4>>2]|0,f|0,e|0)|0;b=G()|0;i=d;c[i>>2]=a;c[i+4>>2]=b;return+h;}function Hk(a){a=a|0;var b=0.0,d=0.0,e=0,f=0,h=0.0,i=0;d=+g[a>>3];e=a+16|0;b=+g[e>>3];h=d*+g[a+8>>3];i=a+24|0;f=(c[i>>2]|0)+1|0;c[i>>2]=f;g[a>>3]=h/+(f|0);g[e>>3]=b+1.0;return+(d/b);}function Ik(a,b,c){a=+a;b=+b;c=c|0;var d=0.0,e=0,f=0,h=0,i=0,j=0;j=Pb;Pb=Pb+32|0;h=j+8|0;e=j;f=j+16|0;g[h>>3]=a;g[e>>3]=b;do{if(a>0.0){if(+u(+b)<.2|+u(+((a+-1.0)*b))<.5){d=+A(+a)*b;if(d<.5){b=+Jk(d);break;}if(d>+Ih())b=+Bh(20476,0,c);else i=11;}else i=11;}else{d=+Kk(e);b=+g[e>>3];if(d!=b){b=+Tj(20476,20419,h,c);break;}g[f>>3]=b*.5;d=+Kk(f);b=+g[e>>3];a=+g[h>>3];if(d==b*.5)b=+Ik(-a,b,c);else i=11;}}while(0);if((i|0)==11)b=+w(+a,+b)+-1.0;Pb=j;return+b;}function Jk(a){a=+a;var b=0;b=Pb;Pb=Pb+16|0;a=+Ok(a,b);Pb=b;return+a;}function Kk(a){a=a|0;var b=0.0,c=0;c=Pb;Pb=Pb+16|0;b=+Lk(a,c);Pb=c;return+b;}function Lk(a,b){a=a|0;b=b|0;var c=0.0,d=0;d=Pb;Pb=Pb+16|0;c=+Mk(a,b,d);Pb=d;return+c;}function Mk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0;f=Pb;Pb=Pb+16|0;c=f+8|0;e=f;do{if(oi(+g[a>>3])|0){d=+g[a>>3];if(!(d>=0.0)){d=+B(+d);break;}else{d=+t(+d);break;}}else{d=+g[a>>3];g[c>>3]=d;g[e>>3]=d;d=+Nk(18257,0,c,e,b);}}while(0);Pb=f;return+d;}function Nk(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0.0;e=Pb;Pb=Pb+16|0;f=+qi(a,(b|0)==0?17938:b,c,d,e);Pb=e;return+f;}function Ok(a,b){a=+a;b=b|0;return+ +iq(a);}function Pk(b,c,d){b=+b;c=c|0;d=d|0;var e=0.0,f=0,g=0,h=0,i=0;i=Pb;Pb=Pb+16|0;g=i+2|0;f=i+1|0;h=i;do{if(b<0.0){if(b<-.5){a[g>>0]=a[f>>0]|0;e=+mk(b+1.0,g)+-1.0;break;}else{e=+Qk(b,c);e=+Jk(+rh(b+2.0,b+1.0,b,g,c,d)-e);break;}}else{e=b+1.0;if(b<2.0){e=+Rk(+rh(e,b,b+-1.0,g,c,d),c);break;}else{a[g>>0]=a[h>>0]|0;e=+mk(e,g)+-1.0;break;}}}while(0);Pb=i;return+e;}function Qk(a,b){a=+a;b=b|0;var c=0,d=0;d=Pb;Pb=Pb+16|0;c=d;g[c>>3]=a;do{if(!(a<-1.0)){if(a==-1.0){a=-+Bh(20573,0,b);break;}else{a=+lq(a);break;}}else a=+Tj(20573,20589,c,b);}while(0);Pb=d;return+a;}function Rk(a,b){a=+a;b=b|0;b=Pb;Pb=Pb+16|0;Sk();a=+sg(+Tk(a,b+1|0,b),20544);Pb=b;return+a;}function Sk(){Uk(30815);return;}function Tk(a,b,c){a=+a;b=b|0;c=c|0;var d=0.0,e=0;e=Pb;Pb=Pb+16|0;b=e;g[b>>3]=a;d=+u(+a);do{if(d>.5){if(!(d>=+Ih())){a=+z(+a)+-1.0;break;}if(a>0.0)a=+Bh(20544,0,c);else a=-1.0;}else if(!(d<+yi())){d=+$g(1152,b)*a;a=a*1.028127670288086+d/+$g(1200,b);}}while(0);Pb=e;return+a;}function Uk(a){a=a|0;return;}function Vk(a,b,c){a=+a;b=b|0;c=c|0;c=Pb;Pb=Pb+16|0;a=+sg(+sh(a,c+1|0,c),18330);Pb=c;return+a;}function Wk(a){a=a|0;return 53;}function Xk(){return+ +Yk();}function Yk(){var a=0.0,b=0;b=Pb;Pb=Pb+16|0;a=+Zk(b);Pb=b;return+a;}function Zk(a){a=a|0;return 1.772453850905516;}function _k(){var a=0.0,b=0;b=Pb;Pb=Pb+16|0;a=+$k(b);Pb=b;return+a;}function $k(a){a=a|0;return 2.5066282746310007;}function al(a,b,c){a=a|0;b=+b;c=+c;g[a>>3]=b;g[a+8>>3]=c;g[a+16>>3]=1.0;return;}function bl(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;var f=0,h=0.0,i=0,j=0.0;i=d;h=+g[e>>3];f=c[i>>2]|0;e=c[i+4>>2]|0;while(1){j=+cl(a);h=h+j;if(!(+u(+(+g[b>>3]*h))<+u(+j)))break;f=mC(f|0,e|0,-1,-1)|0;e=G()|0;if((f|0)==0&(e|0)==0){f=0;e=0;break;}}a=d;a=nC(c[a>>2]|0,c[a+4>>2]|0,f|0,e|0)|0;b=G()|0;i=d;c[i>>2]=a;c[i+4>>2]=b;return+h;}function cl(a){a=a|0;var b=0.0,c=0,d=0.0;c=a+16|0;b=+g[c>>3];d=+g[a>>3]+1.0;g[a>>3]=d;g[c>>3]=b*(+g[a+8>>3]/d);return+b;}function dl(a,b,d){a=a|0;b=+b;d=+d;g[a>>3]=d-b+1.0;g[a+8>>3]=b;c[a+16>>2]=0;return;}function el(a,b){a=a|0;b=b|0;var d=0.0,e=0,f=0,g=0;e=Pb;Pb=Pb+16|0;f=e;g=f;c[g>>2]=-1;c[g+4>>2]=-1;d=+fl(a,b,f);Pb=e;return+d;}function fl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0.0,i=0.0,j=0,k=0,l=0,m=0,n=0.0,o=0.0,p=0.0,q=0,r=0.0,s=0.0;q=Pb;Pb=Pb+32|0;l=q+16|0;m=q;n=+gl();hl(l,a);o=+il(l);p=+jl(l);o=o==0.0?n:o;e=d;j=m+8|0;k=l+8|0;h=o;i=0.0;f=c[e>>2]|0;e=c[e+4>>2]|0;while(1){hl(m,a);g[l>>3]=+g[m>>3];g[k>>3]=+g[j>>3];r=+il(l);r=r+i*+jl(l);s=+il(l);s=s+ +jl(l)/h;h=s==0.0?n:s;i=1.0/(r==0.0?n:r);r=i*h;o=o*r;r=+u(+(r+-1.0));if(!(r>+g[b>>3]))break;f=mC(f|0,e|0,-1,-1)|0;e=G()|0;if((f|0)==0&(e|0)==0){f=0;e=0;break;}}l=d;l=nC(c[l>>2]|0,c[l+4>>2]|0,f|0,e|0)|0;m=G()|0;c[d>>2]=l;c[d+4>>2]=m;Pb=q;return+(p/o);}function gl(){return 2.2250738585072014e-308;}function hl(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0,h=0;h=b+16|0;f=(c[h>>2]|0)+1|0;c[h>>2]=f;d=+g[b>>3]+2.0;g[b>>3]=d;e=+(f|0);g[a>>3]=(+g[b+8>>3]-e)*e;g[a+8>>3]=d;return;}function il(a){a=a|0;return+ +g[a+8>>3];}function jl(a){a=a|0;return+ +g[a>>3];}function kl(a){a=a|0;return;}function ll(b,c){b=b|0;c=c|0;var d=0.0,e=0,f=0;e=Pb;Pb=Pb+16|0;f=e+1|0;a[f>>0]=a[e>>0]|0;d=+ml(b,c,f);Pb=e;return+d;}function ml(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0,h=0.0;f=Pb;Pb=Pb+16|0;c=f+8|0;e=f;do{if(oi(+g[a>>3])|0){d=+g[a>>3];if(!(d>-.5&d<.5)){if(d>0.0){h=+B(+d);d=h-d>.5?h+-1.0:h;break;}else{h=+t(+d);d=d-h>.5?h+1.0:h;break;}}else d=0.0;}else{d=+g[a>>3];g[c>>3]=d;g[e>>3]=d;d=+pi(20866,0,c,e,b);}}while(0);Pb=f;return+d;}function nl(a){a=a|0;return+ +ol();}function ol(){return+ +yi();}function pl(a,b,c){a=+a;b=+b;c=c|0;c=Pb;Pb=Pb+16|0;ek();b=+sg(+fk(a,b,1,1,c,0),20895);Pb=c;return+b;}function ql(a){a=a|0;return+ +g[a>>3];}function rl(a,b,c){a=+a;b=+b;c=c|0;c=Pb;Pb=Pb+16|0;ek();b=+dj(+fk(a,b,1,0,c,0),20311);Pb=c;return+b;}function sl(a,b,c){a=+a;b=+b;c=c|0;c=Pb;Pb=Pb+16|0;ek();b=+dj(+fk(a,b,1,1,c,0),20895);Pb=c;return+b;}function tl(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=b;c[a+4>>2]=d;return;}function ul(a,b,d){a=a|0;b=b|0;d=d|0;c[a>>2]=b;c[a+4>>2]=d;return;}function vl(a,b){a=+a;b=b|0;var d=0,e=0,f=0,h=0,i=0,j=0,k=0;d=Pb;Pb=Pb+96|0;h=d+84|0;e=d+72|0;f=d+56|0;j=d+68|0;i=b+4|0;k=(c[i>>2]|0)-(c[b>>2]|0)>>3;g[f>>3]=0.0;wl(e,k,f);k=(c[i>>2]|0)-(c[b>>2]|0)>>3;c[j>>2]=1;xl(f,k,j);b=c[b>>2]|0;a=1.0-+Am(b,c[e>>2]|0,c[f>>2]|0,(c[i>>2]|0)-b>>3,0.0,a,1e4,1.0e-06,d,h);a=(c[h>>2]|0)==0?a>1.0?1.0:a:-1.0;yl(f);me(e);Pb=d;return+a;}function wl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,h=0;c[a>>2]=0;h=a+4|0;c[h>>2]=0;c[a+8>>2]=0;if(b|0){Bl(a,b);e=c[h>>2]|0;a=b;f=e;while(1){g[f>>3]=+g[d>>3];a=a+-1|0;if(!a)break;else f=f+8|0;}c[h>>2]=e+(b<<3);}return;}function xl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0;c[a>>2]=0;g=a+4|0;c[g>>2]=0;c[a+8>>2]=0;if(b|0){zl(a,b);e=c[g>>2]|0;a=b;f=e;while(1){c[f>>2]=c[d>>2];a=a+-1|0;if(!a)break;else f=f+4|0;}c[g>>2]=e+(b<<2);}return;}function yl(a){a=a|0;var b=0;b=c[a>>2]|0;if(b|0){c[a+4>>2]=b;oA(b);}return;}function zl(a,b){a=a|0;b=b|0;var d=0;if((Al(a)|0)>>>0<b>>>0)eB(a);if(b>>>0>1073741823){b=_(8)|0;tA(b,21233);c[b>>2]=14916;da(b|0,10552,144);}else{d=nA(b<<2)|0;c[a+4>>2]=d;c[a>>2]=d;c[a+8>>2]=d+(b<<2);return;}}function Al(a){a=a|0;return 1073741823;}function Bl(a,b){a=a|0;b=b|0;var d=0;if((Ue(a)|0)>>>0<b>>>0)eB(a);if(b>>>0>536870911){b=_(8)|0;tA(b,21233);c[b>>2]=14916;da(b|0,10552,144);}else{d=nA(b<<3)|0;c[a+4>>2]=d;c[a>>2]=d;c[a+8>>2]=d+(b<<3);return;}}function Cl(a,b,d,e,f,h,i,j,k){a=a|0;b=b|0;d=d|0;e=e|0;f=f|0;h=+h;i=+i;j=+j;k=+k;var l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;s=a+12|0;p=a+24|0;q=a+36|0;l=b+4|0;m=a;n=m+48|0;do{c[m>>2]=0;m=m+4|0;}while((m|0)<(n|0));o=c[l>>2]|0;n=c[b>>2]|0;l=o-n>>3;m=e+4|0;if((l|0)==((c[m>>2]|0)-(c[e>>2]|0)>>3|0)?(r=f+4|0,(l|0)==((c[r>>2]|0)-(c[f>>2]|0)>>3|0)):0){if((a|0)!=(b|0))Dl(a,n,o);if((s|0)!=(d|0))Dl(s,c[d>>2]|0,c[d+4>>2]|0);if((p|0)!=(e|0))Dl(p,c[e>>2]|0,c[m>>2]|0);if((q|0)!=(f|0))Dl(q,c[f>>2]|0,c[r>>2]|0);g[a+48>>3]=h;g[a+56>>3]=i;g[a+64>>3]=j;g[a+72>>3]=k;return;}s=_(4)|0;c[s>>2]=21301;da(s|0,10664,0);}function Dl(a,b,d){a=a|0;b=b|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,k=0;e=b;k=d-e>>3;f=a+8|0;j=c[a>>2]|0;i=j;do{if(k>>>0>(c[f>>2]|0)-j>>3>>>0){Fl(a);e=Ue(a)|0;if(e>>>0<k>>>0)eB(a);else{i=(c[f>>2]|0)-(c[a>>2]|0)|0;j=i>>2;Bl(a,i>>3>>>0<e>>>1>>>0?j>>>0<k>>>0?k:j:e);El(a,b,d,k);break;}}else{f=a+4|0;h=(c[f>>2]|0)-j>>3;g=k>>>0>h>>>0;h=g?b+(h<<3)|0:d;e=h-e|0;if(e|0)xC(j|0,b|0,e|0)|0;if(g){El(a,h,d,k-((c[f>>2]|0)-(c[a>>2]|0)>>3)|0);break;}else{c[f>>2]=i+(e>>3<<3);break;}}}while(0);return;}function El(a,b,d,e){a=a|0;b=b|0;d=d|0;e=e|0;e=a+4|0;a=d-b|0;if((a|0)>0){wC(c[e>>2]|0,b|0,a|0)|0;c[e>>2]=(c[e>>2]|0)+(a>>>3<<3);}return;}function Fl(a){a=a|0;var b=0,d=0;b=c[a>>2]|0;if(b|0){d=a+4|0;c[d>>2]=b;oA(b);c[a+8>>2]=0;c[d>>2]=0;c[a>>2]=0;}return;}function Gl(a,b){a=a|0;b=+b;var d=0.0,e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0.0;l=Pb;Pb=Pb+16|0;k=l;g[k>>3]=b;j=c[a>>2]|0;h=(c[a+4>>2]|0)-j|0;i=h>>3;if(!h)d=1797693134862315708145274.0e284;else{f=c[a+24>>2]|0;h=c[a+36>>2]|0;e=0;d=1797693134862315708145274.0e284;do{m=(+g[f+(e<<3)>>3]-+g[h+(e<<3)>>3]*b)/(1.0-+g[j+(e<<3)>>3]);d=(e|0)==0?m:d;d=m<d?m:d;e=e+1|0;}while(e>>>0<i>>>0);}e=a+12|0;if(!(d>+Hl(e)*1.0e4)){m=+g[a+48>>3];b=+g[a+56>>3];b=m+(d-m)*+v(+(b-+g[a+64>>3]))/+v(+b);d=+vl(b,e);if(d<=0.0|d==1.0)d=+Qi(b,e);}else d=0.0;m=(1.0-d)*+Il(8528,k);Pb=l;return+m;}function Hl(a){a=a|0;var b=0.0,d=0,e=0;d=c[a>>2]|0;e=c[a+4>>2]|0;if((d|0)==(e|0))b=0.0;else{b=0.0;a=d;do{b=b+ +g[a>>3];a=a+8|0;}while((a|0)!=(e|0));}return+b;}function Il(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0,f=0,h=0,i=0;i=Pb;Pb=Pb+32|0;f=i+8|0;e=i;h=i+16|0;g[f>>3]=+ql(a);do{if(Ec(21365,f,e,h)|0){c=+g[b>>3];if(!(c<0.0)?Fc(c)|0:0){d=+g[b>>3];c=+g[f>>3];if(!(d==0.0)){c=+Kl(c*.5,d*.5,h)*.5;break;}if(c<2.0){c=+Jl(21365,0,h);break;}else{c=c==2.0?.5:0.0;break;}}c=+Gc(21365,20918,b,h);}else c=+g[e>>3];}while(0);Pb=i;return+c;}function Jl(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0;c=Pb;Pb=Pb+16|0;d=+ij(a,(b|0)==0?18315:b,c);Pb=c;return+d;}function Kl(a,b,c){a=+a;b=+b;c=c|0;c=Pb;Pb=Pb+16|0;b=+dj(+Sj(a,b,c),19937);Pb=c;return+b;}function Ll(a,b){a=a|0;b=+b;var d=0.0,e=0,f=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0.0;n=Pb;Pb=Pb+32|0;k=n+8|0;l=n+16|0;m=n;g[k>>3]=b;f=c[a>>2]|0;i=(c[a+4>>2]|0)-f|0;j=i>>3;if(!i)d=1797693134862315708145274.0e284;else{h=c[a+24>>2]|0;i=c[a+36>>2]|0;d=1797693134862315708145274.0e284;e=0;do{o=(+g[h+(e<<3)>>3]-+g[i+(e<<3)>>3]*b)/(1.0-+g[f+(e<<3)>>3]);d=o<d?o:d;e=e+1|0;}while(e>>>0<j>>>0);}o=(d-+g[a+48>>3])/+v(+ +g[a+56>>3]);b=+g[a+72>>3];o=b+o*+v(+(b*2.0));g[l>>3]=o;Ac(m,b);if(!(o<=0.0)){d=+$i(m,l);d=d*+Il(8528,k);}else d=0.0;Pb=n;return+d;}function Ml(a){a=a|0;var b=0.0,d=0,e=0,f=0;d=Pb;Pb=Pb+16|0;e=d+12|0;f=d+8|0;c[f>>2]=a;c[e>>2]=c[f>>2];b=+Nl(e,d);Pb=d;return+b;}function Nl(a,b){a=a|0;b=b|0;var d=0.0,e=0,f=0,h=0,i=0,j=0;j=Pb;Pb=Pb+32|0;e=j+8|0;f=j;h=j+16|0;g[e>>3]=0.0;g[f>>3]=40.0;do{if(!(Pl(0.0)|0)?!(Pl(40.0)|0):0){if(+hj()<=-0.0?+hj()<=40.0:0){c[h>>2]=a;g[h+8>>3]=.0001220703;d=+km(h,-1.0,1.0,15,0.0,b,0);break;}if(Fc(0.0)|0?+hj()<=40.0:0){c[h>>2]=e;c[h+4>>2]=a;g[h+8>>3]=.0001220703;d=+lm(h,-1.0,1.0,15,0.0,b,0)*2.0;break;}if(Fc(40.0)|0?+hj()<=-0.0:0){c[h>>2]=a;c[h+4>>2]=f;g[h+8>>3]=.0001220703;d=+mm(h,-1.0,1.0,15,0.0,b,0)*2.0;break;}if(Fc(0.0)|0?Fc(40.0)|0:0){c[h>>2]=c[a>>2];g[h+8>>3]=.0001220703;d=+nm(h,0.0,40.0,15,0.0,b,0);}else i=15;}else i=15;}while(0);if((i|0)==15)d=+Gc(21425,21493,e,h);Pb=j;return+d;}function Ol(a,b){a=a|0;b=b|0;var d=0.0,e=0,f=0,h=0,i=0,j=0;j=Pb;Pb=Pb+32|0;e=j+8|0;f=j;h=j+16|0;g[e>>3]=0.0;g[f>>3]=40.0;do{if(!(Pl(0.0)|0)?!(Pl(40.0)|0):0){if(+hj()<=-0.0?+hj()<=40.0:0){c[h>>2]=a;g[h+8>>3]=.0001220703;d=+Ql(h,-1.0,1.0,15,0.0,b,0);break;}if(Fc(0.0)|0?+hj()<=40.0:0){c[h>>2]=e;c[h+4>>2]=a;g[h+8>>3]=.0001220703;d=+Rl(h,-1.0,1.0,15,0.0,b,0)*2.0;break;}if(Fc(40.0)|0?+hj()<=-0.0:0){c[h>>2]=a;c[h+4>>2]=f;g[h+8>>3]=.0001220703;d=+Sl(h,-1.0,1.0,15,0.0,b,0)*2.0;break;}if(Fc(0.0)|0?Fc(40.0)|0:0){c[h>>2]=c[a>>2];g[h+8>>3]=.0001220703;d=+Tl(h,0.0,40.0,15,0.0,b,0);}else i=15;}else i=15;}while(0);if((i|0)==15)d=+Gc(21425,21493,e,h);Pb=j;return+d;}function Pl(a){a=+a;var b=0,c=0;c=Pb;Pb=Pb+16|0;b=jm(a,c)|0;Pb=c;return b|0;}function Ql(a,b,d,e,f,h,i){a=a|0;b=+b;d=+d;e=e|0;f=+f;h=h|0;i=i|0;var j=0.0,k=0.0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0;q=Pb;Pb=Pb+64|0;o=q+24|0;n=q+48|0;p=q+16|0;s=q+8|0;m=q;r=q+36|0;c[n>>2]=a;k=(b+d)*.5;g[s>>3]=k;j=(d-b)*.5;g[m>>3]=j;c[r>>2]=n;c[r+4>>2]=m;c[r+8>>2]=s;c[o>>2]=c[r>>2];c[o+4>>2]=c[r+4>>2];c[o+8>>2]=c[r+8>>2];j=j*+gm(o,p,i);a=c[n>>2]|0;l=+u(+(j*+g[a+8>>3]));f=f==0.0?l:f;if((e|0)!=0?(t=+g[p>>3],l<t&f<t):0){s=e+-1|0;j=f*.5;t=+Ql(a,b,k,s,j,h,i);j=t+ +Ql(c[n>>2]|0,k,d,s,j,p,o);if(h|0)g[h>>3]=+g[p>>3]+ +g[h>>3];if(i|0)g[i>>3]=+g[o>>3]+ +g[i>>3];}else{if(i|0)g[i>>3]=+g[m>>3]*+g[i>>3];if(h)g[h>>3]=+g[p>>3];}Pb=q;return+j;}function Rl(a,b,d,e,f,h,i){a=a|0;b=+b;d=+d;e=e|0;f=+f;h=h|0;i=i|0;var j=0.0,k=0.0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0;q=Pb;Pb=Pb+64|0;o=q+24|0;n=q+48|0;p=q+16|0;s=q+8|0;m=q;r=q+36|0;c[n>>2]=a;k=(b+d)*.5;g[s>>3]=k;j=(d-b)*.5;g[m>>3]=j;c[r>>2]=n;c[r+4>>2]=m;c[r+8>>2]=s;c[o>>2]=c[r>>2];c[o+4>>2]=c[r+4>>2];c[o+8>>2]=c[r+8>>2];j=j*+dm(o,p,i);a=c[n>>2]|0;l=+u(+(j*+g[a+8>>3]));f=f==0.0?l:f;if((e|0)!=0?(t=+g[p>>3],l<t&f<t):0){s=e+-1|0;j=f*.5;t=+Rl(a,b,k,s,j,h,i);j=t+ +Rl(c[n>>2]|0,k,d,s,j,p,o);if(h|0)g[h>>3]=+g[p>>3]+ +g[h>>3];if(i|0)g[i>>3]=+g[o>>3]+ +g[i>>3];}else{if(i|0)g[i>>3]=+g[m>>3]*+g[i>>3];if(h)g[h>>3]=+g[p>>3];}Pb=q;return+j;}function Sl(a,b,d,e,f,h,i){a=a|0;b=+b;d=+d;e=e|0;f=+f;h=h|0;i=i|0;var j=0.0,k=0.0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0;q=Pb;Pb=Pb+64|0;o=q+24|0;n=q+48|0;p=q+16|0;s=q+8|0;m=q;r=q+36|0;c[n>>2]=a;k=(b+d)*.5;g[s>>3]=k;j=(d-b)*.5;g[m>>3]=j;c[r>>2]=n;c[r+4>>2]=m;c[r+8>>2]=s;c[o>>2]=c[r>>2];c[o+4>>2]=c[r+4>>2];c[o+8>>2]=c[r+8>>2];j=j*+am(o,p,i);a=c[n>>2]|0;l=+u(+(j*+g[a+8>>3]));f=f==0.0?l:f;if((e|0)!=0?(t=+g[p>>3],l<t&f<t):0){s=e+-1|0;j=f*.5;t=+Sl(a,b,k,s,j,h,i);j=t+ +Sl(c[n>>2]|0,k,d,s,j,p,o);if(h|0)g[h>>3]=+g[p>>3]+ +g[h>>3];if(i|0)g[i>>3]=+g[o>>3]+ +g[i>>3];}else{if(i|0)g[i>>3]=+g[m>>3]*+g[i>>3];if(h)g[h>>3]=+g[p>>3];}Pb=q;return+j;}function Tl(a,b,d,e,f,h,i){a=a|0;b=+b;d=+d;e=e|0;f=+f;h=h|0;i=i|0;var j=0.0,k=0.0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0;q=Pb;Pb=Pb+64|0;o=q+24|0;n=q+48|0;p=q+16|0;s=q+8|0;m=q;r=q+36|0;c[n>>2]=a;k=(b+d)*.5;g[s>>3]=k;j=(d-b)*.5;g[m>>3]=j;c[r>>2]=n;c[r+4>>2]=m;c[r+8>>2]=s;c[o>>2]=c[r>>2];c[o+4>>2]=c[r+4>>2];c[o+8>>2]=c[r+8>>2];j=j*+Ul(o,p,i);a=c[n>>2]|0;l=+u(+(j*+g[a+8>>3]));f=f==0.0?l:f;if((e|0)!=0?(t=+g[p>>3],l<t&f<t):0){s=e+-1|0;j=f*.5;t=+Tl(a,b,k,s,j,h,i);j=t+ +Tl(c[n>>2]|0,k,d,s,j,p,o);if(h|0)g[h>>3]=+g[p>>3]+ +g[h>>3];if(i|0)g[i>>3]=+g[o>>3]+ +g[i>>3];}else{if(i|0)g[i>>3]=+g[m>>3]*+g[i>>3];if(h)g[h>>3]=+g[p>>3];}Pb=q;return+j;}function Ul(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,h=0.0,i=0,j=0,k=0.0,l=0.0,m=0.0;j=Pb;Pb=Pb+16|0;i=j;g[i>>3]=0.0;h=+Vl(a,i);e=h*+g[(Wl()|0)>>3];h=h*+g[(Xl()|0)>>3]+0.0;f=+u(+e);Yl()|0;d=2;do{m=+Vl(a,(Yl()|0)+(d<<3)|0);g[i>>3]=-+g[(Yl()|0)+(d<<3)>>3];l=+Vl(a,i);k=m+l;e=e+k*+g[(Wl()|0)+(d<<3)>>3];l=+u(+m)+ +u(+l);f=f+l*+g[(Wl()|0)+(d<<3)>>3];h=h+k*+g[(Xl()|0)+(d>>>1<<3)>>3];d=d+2|0;Yl()|0;}while(d>>>0<8);Yl()|0;d=1;do{l=+Vl(a,(Yl()|0)+(d<<3)|0);g[i>>3]=-+g[(Yl()|0)+(d<<3)>>3];m=+Vl(a,i);e=e+(l+m)*+g[(Wl()|0)+(d<<3)>>3];m=+u(+l)+ +u(+m);f=f+m*+g[(Wl()|0)+(d<<3)>>3];d=d+2|0;Yl()|0;}while(d>>>0<8);if(c|0)g[c>>3]=f;if(b|0){m=+u(+(e-h));l=+u(+(e*+Zl()*2.0));g[b>>3]=m<l?l:m;}Pb=j;return+e;}function Vl(a,b){a=a|0;b=b|0;return+ +$l(c[c[a>>2]>>2]|0,+g[c[a+4>>2]>>3]*+g[b>>3]+ +g[c[a+8>>2]>>3]);}function Wl(){return 8632;}function Xl(){return 8600;}function Yl(){return 8536;}function Zl(){var a=0.0,b=0;b=Pb;Pb=Pb+16|0;a=+_l(b);Pb=b;return+a;}function _l(a){a=a|0;return 2.220446049250313e-16;}function $l(a,b){a=a|0;b=+b;return+ +Ll(c[a>>2]|0,b);}function am(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,h=0.0,i=0,j=0,k=0.0,l=0.0,m=0.0;j=Pb;Pb=Pb+16|0;i=j;g[i>>3]=0.0;h=+bm(a,i);e=h*+g[(Wl()|0)>>3];h=h*+g[(Xl()|0)>>3]+0.0;f=+u(+e);Yl()|0;d=2;do{m=+bm(a,(Yl()|0)+(d<<3)|0);g[i>>3]=-+g[(Yl()|0)+(d<<3)>>3];l=+bm(a,i);k=m+l;e=e+k*+g[(Wl()|0)+(d<<3)>>3];l=+u(+m)+ +u(+l);f=f+l*+g[(Wl()|0)+(d<<3)>>3];h=h+k*+g[(Xl()|0)+(d>>>1<<3)>>3];d=d+2|0;Yl()|0;}while(d>>>0<8);Yl()|0;d=1;do{l=+bm(a,(Yl()|0)+(d<<3)|0);g[i>>3]=-+g[(Yl()|0)+(d<<3)>>3];m=+bm(a,i);e=e+(l+m)*+g[(Wl()|0)+(d<<3)>>3];m=+u(+l)+ +u(+m);f=f+m*+g[(Wl()|0)+(d<<3)>>3];d=d+2|0;Yl()|0;}while(d>>>0<8);if(c|0)g[c>>3]=f;if(b|0){m=+u(+(e-h));l=+u(+(e*+Zl()*2.0));g[b>>3]=m<l?l:m;}Pb=j;return+e;}function bm(a,b){a=a|0;b=b|0;var d=0.0,e=0,f=0,h=0;e=Pb;Pb=Pb+16|0;f=e;h=c[c[a>>2]>>2]|0;g[f>>3]=+g[c[a+4>>2]>>3]*+g[b>>3]+ +g[c[a+8>>2]>>3];d=+cm(h,f);Pb=e;return+d;}function cm(a,b){a=a|0;b=b|0;var d=0.0;d=1.0/(+g[b>>3]+1.0);return+(d*(d*+$l(c[a>>2]|0,+g[c[a+4>>2]>>3]-(d*2.0+-1.0))));}function dm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,h=0.0,i=0,j=0,k=0.0,l=0.0,m=0.0;j=Pb;Pb=Pb+16|0;i=j;g[i>>3]=0.0;h=+em(a,i);e=h*+g[(Wl()|0)>>3];h=h*+g[(Xl()|0)>>3]+0.0;f=+u(+e);Yl()|0;d=2;do{m=+em(a,(Yl()|0)+(d<<3)|0);g[i>>3]=-+g[(Yl()|0)+(d<<3)>>3];l=+em(a,i);k=m+l;e=e+k*+g[(Wl()|0)+(d<<3)>>3];l=+u(+m)+ +u(+l);f=f+l*+g[(Wl()|0)+(d<<3)>>3];h=h+k*+g[(Xl()|0)+(d>>>1<<3)>>3];d=d+2|0;Yl()|0;}while(d>>>0<8);Yl()|0;d=1;do{l=+em(a,(Yl()|0)+(d<<3)|0);g[i>>3]=-+g[(Yl()|0)+(d<<3)>>3];m=+em(a,i);e=e+(l+m)*+g[(Wl()|0)+(d<<3)>>3];m=+u(+l)+ +u(+m);f=f+m*+g[(Wl()|0)+(d<<3)>>3];d=d+2|0;Yl()|0;}while(d>>>0<8);if(c|0)g[c>>3]=f;if(b|0){m=+u(+(e-h));l=+u(+(e*+Zl()*2.0));g[b>>3]=m<l?l:m;}Pb=j;return+e;}function em(a,b){a=a|0;b=b|0;var d=0.0,e=0,f=0,h=0;e=Pb;Pb=Pb+16|0;f=e;h=c[c[a>>2]>>2]|0;g[f>>3]=+g[c[a+4>>2]>>3]*+g[b>>3]+ +g[c[a+8>>2]>>3];d=+fm(h,f);Pb=e;return+d;}function fm(a,b){a=a|0;b=b|0;var d=0.0;d=1.0/(+g[b>>3]+1.0);return+(d*(d*+$l(c[a+4>>2]|0,+g[c[a>>2]>>3]+d*2.0+-1.0)));}function gm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,h=0.0,i=0,j=0,k=0.0,l=0.0,m=0.0;j=Pb;Pb=Pb+16|0;i=j;g[i>>3]=0.0;h=+hm(a,i);e=h*+g[(Wl()|0)>>3];h=h*+g[(Xl()|0)>>3]+0.0;f=+u(+e);Yl()|0;d=2;do{m=+hm(a,(Yl()|0)+(d<<3)|0);g[i>>3]=-+g[(Yl()|0)+(d<<3)>>3];l=+hm(a,i);k=m+l;e=e+k*+g[(Wl()|0)+(d<<3)>>3];l=+u(+m)+ +u(+l);f=f+l*+g[(Wl()|0)+(d<<3)>>3];h=h+k*+g[(Xl()|0)+(d>>>1<<3)>>3];d=d+2|0;Yl()|0;}while(d>>>0<8);Yl()|0;d=1;do{l=+hm(a,(Yl()|0)+(d<<3)|0);g[i>>3]=-+g[(Yl()|0)+(d<<3)>>3];m=+hm(a,i);e=e+(l+m)*+g[(Wl()|0)+(d<<3)>>3];m=+u(+l)+ +u(+m);f=f+m*+g[(Wl()|0)+(d<<3)>>3];d=d+2|0;Yl()|0;}while(d>>>0<8);if(c|0)g[c>>3]=f;if(b|0){m=+u(+(e-h));l=+u(+(e*+Zl()*2.0));g[b>>3]=m<l?l:m;}Pb=j;return+e;}function hm(a,b){a=a|0;b=b|0;var d=0.0,e=0,f=0,h=0;e=Pb;Pb=Pb+16|0;f=e;h=c[c[a>>2]>>2]|0;g[f>>3]=+g[c[a+4>>2]>>3]*+g[b>>3]+ +g[c[a+8>>2]>>3];d=+im(h,f);Pb=e;return+d;}function im(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0.0;f=+g[b>>3];e=f*f;d=1.0/(1.0-e);return+(d*(+$l(c[a>>2]|0,f*d)*(e+1.0)*d));}function jm(a,b){a=+a;b=b|0;var c=0;b=si(a)|0;c=(G()|0)&2147483647;return c>>>0>2146435072|(c|0)==2146435072&b>>>0>0|0;}function km(a,b,d,e,f,h,i){a=a|0;b=+b;d=+d;e=e|0;f=+f;h=h|0;i=i|0;var j=0.0,k=0.0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0;q=Pb;Pb=Pb+64|0;o=q+24|0;n=q+48|0;p=q+16|0;s=q+8|0;m=q;r=q+36|0;c[n>>2]=a;k=(b+d)*.5;g[s>>3]=k;j=(d-b)*.5;g[m>>3]=j;c[r>>2]=n;c[r+4>>2]=m;c[r+8>>2]=s;c[o>>2]=c[r>>2];c[o+4>>2]=c[r+4>>2];c[o+8>>2]=c[r+8>>2];j=j*+xm(o,p,i);a=c[n>>2]|0;l=+u(+(j*+g[a+8>>3]));f=f==0.0?l:f;if((e|0)!=0?(t=+g[p>>3],l<t&f<t):0){s=e+-1|0;j=f*.5;t=+km(a,b,k,s,j,h,i);j=t+ +km(c[n>>2]|0,k,d,s,j,p,o);if(h|0)g[h>>3]=+g[p>>3]+ +g[h>>3];if(i|0)g[i>>3]=+g[o>>3]+ +g[i>>3];}else{if(i|0)g[i>>3]=+g[m>>3]*+g[i>>3];if(h)g[h>>3]=+g[p>>3];}Pb=q;return+j;}function lm(a,b,d,e,f,h,i){a=a|0;b=+b;d=+d;e=e|0;f=+f;h=h|0;i=i|0;var j=0.0,k=0.0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0;q=Pb;Pb=Pb+64|0;o=q+24|0;n=q+48|0;p=q+16|0;s=q+8|0;m=q;r=q+36|0;c[n>>2]=a;k=(b+d)*.5;g[s>>3]=k;j=(d-b)*.5;g[m>>3]=j;c[r>>2]=n;c[r+4>>2]=m;c[r+8>>2]=s;c[o>>2]=c[r>>2];c[o+4>>2]=c[r+4>>2];c[o+8>>2]=c[r+8>>2];j=j*+um(o,p,i);a=c[n>>2]|0;l=+u(+(j*+g[a+8>>3]));f=f==0.0?l:f;if((e|0)!=0?(t=+g[p>>3],l<t&f<t):0){s=e+-1|0;j=f*.5;t=+lm(a,b,k,s,j,h,i);j=t+ +lm(c[n>>2]|0,k,d,s,j,p,o);if(h|0)g[h>>3]=+g[p>>3]+ +g[h>>3];if(i|0)g[i>>3]=+g[o>>3]+ +g[i>>3];}else{if(i|0)g[i>>3]=+g[m>>3]*+g[i>>3];if(h)g[h>>3]=+g[p>>3];}Pb=q;return+j;}function mm(a,b,d,e,f,h,i){a=a|0;b=+b;d=+d;e=e|0;f=+f;h=h|0;i=i|0;var j=0.0,k=0.0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0;q=Pb;Pb=Pb+64|0;o=q+24|0;n=q+48|0;p=q+16|0;s=q+8|0;m=q;r=q+36|0;c[n>>2]=a;k=(b+d)*.5;g[s>>3]=k;j=(d-b)*.5;g[m>>3]=j;c[r>>2]=n;c[r+4>>2]=m;c[r+8>>2]=s;c[o>>2]=c[r>>2];c[o+4>>2]=c[r+4>>2];c[o+8>>2]=c[r+8>>2];j=j*+rm(o,p,i);a=c[n>>2]|0;l=+u(+(j*+g[a+8>>3]));f=f==0.0?l:f;if((e|0)!=0?(t=+g[p>>3],l<t&f<t):0){s=e+-1|0;j=f*.5;t=+mm(a,b,k,s,j,h,i);j=t+ +mm(c[n>>2]|0,k,d,s,j,p,o);if(h|0)g[h>>3]=+g[p>>3]+ +g[h>>3];if(i|0)g[i>>3]=+g[o>>3]+ +g[i>>3];}else{if(i|0)g[i>>3]=+g[m>>3]*+g[i>>3];if(h)g[h>>3]=+g[p>>3];}Pb=q;return+j;}function nm(a,b,d,e,f,h,i){a=a|0;b=+b;d=+d;e=e|0;f=+f;h=h|0;i=i|0;var j=0.0,k=0.0,l=0.0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0.0;q=Pb;Pb=Pb+64|0;o=q+24|0;n=q+48|0;p=q+16|0;s=q+8|0;m=q;r=q+36|0;c[n>>2]=a;k=(b+d)*.5;g[s>>3]=k;j=(d-b)*.5;g[m>>3]=j;c[r>>2]=n;c[r+4>>2]=m;c[r+8>>2]=s;c[o>>2]=c[r>>2];c[o+4>>2]=c[r+4>>2];c[o+8>>2]=c[r+8>>2];j=j*+om(o,p,i);a=c[n>>2]|0;l=+u(+(j*+g[a+8>>3]));f=f==0.0?l:f;if((e|0)!=0?(t=+g[p>>3],l<t&f<t):0){s=e+-1|0;j=f*.5;t=+nm(a,b,k,s,j,h,i);j=t+ +nm(c[n>>2]|0,k,d,s,j,p,o);if(h|0)g[h>>3]=+g[p>>3]+ +g[h>>3];if(i|0)g[i>>3]=+g[o>>3]+ +g[i>>3];}else{if(i|0)g[i>>3]=+g[m>>3]*+g[i>>3];if(h)g[h>>3]=+g[p>>3];}Pb=q;return+j;}function om(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,h=0.0,i=0,j=0,k=0.0,l=0.0,m=0.0;j=Pb;Pb=Pb+16|0;i=j;g[i>>3]=0.0;h=+pm(a,i);e=h*+g[(Wl()|0)>>3];h=h*+g[(Xl()|0)>>3]+0.0;f=+u(+e);Yl()|0;d=2;do{m=+pm(a,(Yl()|0)+(d<<3)|0);g[i>>3]=-+g[(Yl()|0)+(d<<3)>>3];l=+pm(a,i);k=m+l;e=e+k*+g[(Wl()|0)+(d<<3)>>3];l=+u(+m)+ +u(+l);f=f+l*+g[(Wl()|0)+(d<<3)>>3];h=h+k*+g[(Xl()|0)+(d>>>1<<3)>>3];d=d+2|0;Yl()|0;}while(d>>>0<8);Yl()|0;d=1;do{l=+pm(a,(Yl()|0)+(d<<3)|0);g[i>>3]=-+g[(Yl()|0)+(d<<3)>>3];m=+pm(a,i);e=e+(l+m)*+g[(Wl()|0)+(d<<3)>>3];m=+u(+l)+ +u(+m);f=f+m*+g[(Wl()|0)+(d<<3)>>3];d=d+2|0;Yl()|0;}while(d>>>0<8);if(c|0)g[c>>3]=f;if(b|0){m=+u(+(e-h));l=+u(+(e*+Zl()*2.0));g[b>>3]=m<l?l:m;}Pb=j;return+e;}function pm(a,b){a=a|0;b=b|0;return+ +qm(c[c[a>>2]>>2]|0,+g[c[a+4>>2]>>3]*+g[b>>3]+ +g[c[a+8>>2]>>3]);}function qm(a,b){a=a|0;b=+b;return+ +Gl(c[a>>2]|0,b);}function rm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,h=0.0,i=0,j=0,k=0.0,l=0.0,m=0.0;j=Pb;Pb=Pb+16|0;i=j;g[i>>3]=0.0;h=+sm(a,i);e=h*+g[(Wl()|0)>>3];h=h*+g[(Xl()|0)>>3]+0.0;f=+u(+e);Yl()|0;d=2;do{m=+sm(a,(Yl()|0)+(d<<3)|0);g[i>>3]=-+g[(Yl()|0)+(d<<3)>>3];l=+sm(a,i);k=m+l;e=e+k*+g[(Wl()|0)+(d<<3)>>3];l=+u(+m)+ +u(+l);f=f+l*+g[(Wl()|0)+(d<<3)>>3];h=h+k*+g[(Xl()|0)+(d>>>1<<3)>>3];d=d+2|0;Yl()|0;}while(d>>>0<8);Yl()|0;d=1;do{l=+sm(a,(Yl()|0)+(d<<3)|0);g[i>>3]=-+g[(Yl()|0)+(d<<3)>>3];m=+sm(a,i);e=e+(l+m)*+g[(Wl()|0)+(d<<3)>>3];m=+u(+l)+ +u(+m);f=f+m*+g[(Wl()|0)+(d<<3)>>3];d=d+2|0;Yl()|0;}while(d>>>0<8);if(c|0)g[c>>3]=f;if(b|0){m=+u(+(e-h));l=+u(+(e*+Zl()*2.0));g[b>>3]=m<l?l:m;}Pb=j;return+e;}function sm(a,b){a=a|0;b=b|0;var d=0.0,e=0,f=0,h=0;e=Pb;Pb=Pb+16|0;f=e;h=c[c[a>>2]>>2]|0;g[f>>3]=+g[c[a+4>>2]>>3]*+g[b>>3]+ +g[c[a+8>>2]>>3];d=+tm(h,f);Pb=e;return+d;}function tm(a,b){a=a|0;b=b|0;var d=0.0;d=1.0/(+g[b>>3]+1.0);return+(d*(d*+qm(c[a>>2]|0,+g[c[a+4>>2]>>3]-(d*2.0+-1.0))));}function um(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,h=0.0,i=0,j=0,k=0.0,l=0.0,m=0.0;j=Pb;Pb=Pb+16|0;i=j;g[i>>3]=0.0;h=+vm(a,i);e=h*+g[(Wl()|0)>>3];h=h*+g[(Xl()|0)>>3]+0.0;f=+u(+e);Yl()|0;d=2;do{m=+vm(a,(Yl()|0)+(d<<3)|0);g[i>>3]=-+g[(Yl()|0)+(d<<3)>>3];l=+vm(a,i);k=m+l;e=e+k*+g[(Wl()|0)+(d<<3)>>3];l=+u(+m)+ +u(+l);f=f+l*+g[(Wl()|0)+(d<<3)>>3];h=h+k*+g[(Xl()|0)+(d>>>1<<3)>>3];d=d+2|0;Yl()|0;}while(d>>>0<8);Yl()|0;d=1;do{l=+vm(a,(Yl()|0)+(d<<3)|0);g[i>>3]=-+g[(Yl()|0)+(d<<3)>>3];m=+vm(a,i);e=e+(l+m)*+g[(Wl()|0)+(d<<3)>>3];m=+u(+l)+ +u(+m);f=f+m*+g[(Wl()|0)+(d<<3)>>3];d=d+2|0;Yl()|0;}while(d>>>0<8);if(c|0)g[c>>3]=f;if(b|0){m=+u(+(e-h));l=+u(+(e*+Zl()*2.0));g[b>>3]=m<l?l:m;}Pb=j;return+e;}function vm(a,b){a=a|0;b=b|0;var d=0.0,e=0,f=0,h=0;e=Pb;Pb=Pb+16|0;f=e;h=c[c[a>>2]>>2]|0;g[f>>3]=+g[c[a+4>>2]>>3]*+g[b>>3]+ +g[c[a+8>>2]>>3];d=+wm(h,f);Pb=e;return+d;}function wm(a,b){a=a|0;b=b|0;var d=0.0;d=1.0/(+g[b>>3]+1.0);return+(d*(d*+qm(c[a+4>>2]|0,+g[c[a>>2]>>3]+d*2.0+-1.0)));}function xm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,h=0.0,i=0,j=0,k=0.0,l=0.0,m=0.0;j=Pb;Pb=Pb+16|0;i=j;g[i>>3]=0.0;h=+ym(a,i);e=h*+g[(Wl()|0)>>3];h=h*+g[(Xl()|0)>>3]+0.0;f=+u(+e);Yl()|0;d=2;do{m=+ym(a,(Yl()|0)+(d<<3)|0);g[i>>3]=-+g[(Yl()|0)+(d<<3)>>3];l=+ym(a,i);k=m+l;e=e+k*+g[(Wl()|0)+(d<<3)>>3];l=+u(+m)+ +u(+l);f=f+l*+g[(Wl()|0)+(d<<3)>>3];h=h+k*+g[(Xl()|0)+(d>>>1<<3)>>3];d=d+2|0;Yl()|0;}while(d>>>0<8);Yl()|0;d=1;do{l=+ym(a,(Yl()|0)+(d<<3)|0);g[i>>3]=-+g[(Yl()|0)+(d<<3)>>3];m=+ym(a,i);e=e+(l+m)*+g[(Wl()|0)+(d<<3)>>3];m=+u(+l)+ +u(+m);f=f+m*+g[(Wl()|0)+(d<<3)>>3];d=d+2|0;Yl()|0;}while(d>>>0<8);if(c|0)g[c>>3]=f;if(b|0){m=+u(+(e-h));l=+u(+(e*+Zl()*2.0));g[b>>3]=m<l?l:m;}Pb=j;return+e;}function ym(a,b){a=a|0;b=b|0;var d=0.0,e=0,f=0,h=0;e=Pb;Pb=Pb+16|0;f=e;h=c[c[a>>2]>>2]|0;g[f>>3]=+g[c[a+4>>2]>>3]*+g[b>>3]+ +g[c[a+8>>2]>>3];d=+zm(h,f);Pb=e;return+d;}function zm(a,b){a=a|0;b=b|0;var d=0.0,e=0.0,f=0.0;f=+g[b>>3];e=f*f;d=1.0/(1.0-e);return+(d*(+qm(c[a>>2]|0,f*d)*(e+1.0)*d));}function Am(a,b,d,e,f,h,i,l,m,n){a=a|0;b=b|0;d=d|0;e=e|0;f=+f;h=+h;i=i|0;l=+l;m=m|0;n=n|0;var o=0,p=0,q=0.0,r=0.0,s=0.0,v=0,w=0.0,x=0.0,y=0.0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;V=Pb;Pb=Pb+32|0;S=4;T=Bq(40)|0;c[T>>2]=0;P=V+16|0;Q=V+8|0;R=V;S=tC(27152,1,T|0,S|0)|0;T=G()|0;j=0;o=j;j=0;if((o|0)!=0&(k|0)!=0){p=uC(c[o>>2]|0,S|0,T|0)|0;if(!p)Sa(o|0,k|0);F(k|0);}else p=-1;o=G()|0;if((p|0)!=1)o=0;a:while(1){b:do{if(!o){c[7428]=e;c[7429]=i;g[3625]=h;c[7430]=d;c[7431]=a;c[7432]=b;o=m;p=o+56|0;do{c[o>>2]=0;o=o+4|0;}while((o|0)<(p|0));c[n>>2]=0;c[7433]=0;g[3626]=0.0;g[3627]=0.0;c[7434]=1;c[7435]=0;B=+(i|0);j=0;p=K(65,e<<2|0)|0;o=j;j=0;if((o|0)!=0&(k|0)!=0){v=uC(c[o>>2]|0,S|0,T|0)|0;if(!v)Sa(o|0,k|0);F(k|0);}else v=-1;o=G()|0;if((v|0)==1)continue a;c[7436]=p;if(!p){c[n>>2]=5;q=-1.0;break;}j=0;q=+H(1,+f);o=j;j=0;if((o|0)!=0&(k|0)!=0){p=uC(c[o>>2]|0,S|0,T|0)|0;if(!p)Sa(o|0,k|0);F(k|0);}else p=-1;o=G()|0;if((p|0)==1)continue a;g[3628]=q;g[3629]=0.0;g[3630]=0.0;g[3631]=0.0;c:do{if((e|0)>0){z=0;A=0.0;r=0.0;s=0.0;while(1){v=c[d+(z<<2)>>2]|0;y=+g[a+(z<<3)>>3];x=+g[b+(z<<3)>>3];if((v|0)<0|x<0.0)break;j=0;w=+H(1,+y);o=j;j=0;if((o|0)!=0&(k|0)!=0){p=uC(c[o>>2]|0,S|0,T|0)|0;if(!p)Sa(o|0,k|0);F(k|0);}else p=-1;o=G()|0;if((p|0)==1)continue a;q=q+(x*4.0+ +(v<<1|0))*w;A=y*(x+ +(v|0))+A;g[3631]=A;if(!(r<y)){if(s>y){s=y;o=29040;U=16;}}else{r=y;o=29032;U=16;}if((U|0)==16){U=0;g[o>>3]=y;}z=z+1|0;if((z|0)>=(e|0))break c;}c[n>>2]=3;q=-1.0;break b;}else{s=0.0;r=0.0;}}while(0);if(q==0.0){q=h>0.0?1.0:0.0;break;}if(f==0.0&(s==0.0&r==0.0)){c[n>>2]=3;q=-1.0;break;}j=0;w=+H(2,+q);o=j;j=0;if((o|0)!=0&(k|0)!=0){p=uC(c[o>>2]|0,S|0,T|0)|0;if(!p)Sa(o|0,k|0);F(k|0);}else p=-1;o=G()|0;if((p|0)==1)continue a;s=-s;g[P>>3]=16.0/w;x=4.5/w;g[Q>>3]=x;g[R>>3]=-x;x=l*.5;j=0;M(1,P|0,+x);o=j;j=0;if((o|0)!=0&(k|0)!=0){p=uC(c[o>>2]|0,S|0,T|0)|0;if(!p)Sa(o|0,k|0);F(k|0);}else p=-1;o=G()|0;if((p|0)==1)continue a;q=+g[3625];do{if(q!=0.0?(r<s?s:r)>w*.07:0){s=l*.25;j=0;q=+H(3,+q);o=j;j=0;if((o|0)!=0&(k|0)!=0){p=uC(c[o>>2]|0,S|0,T|0)|0;if(!p)Sa(o|0,k|0);F(k|0);}else p=-1;o=G()|0;if((p|0)==1)continue a;r=s/q;if(c[7435]|0){c[7435]=0;break;}j=0;q=+I(1,+ +g[P>>3],+r);o=j;j=0;if((o|0)!=0&(k|0)!=0){p=uC(c[o>>2]|0,S|0,T|0)|0;if(!p)Sa(o|0,k|0);F(k|0);}else p=-1;o=G()|0;if((p|0)==1)continue a;if(q<l*.2){g[3628]=r+ +g[3628];j=0;M(1,P|0,+s);o=j;j=0;if((o|0)!=0&(k|0)!=0){p=uC(c[o>>2]|0,S|0,T|0)|0;if(!p)Sa(o|0,k|0);F(k|0);}else p=-1;o=G()|0;if((p|0)==1)continue a;j=0;q=+H(2,+r);o=j;j=0;if((o|0)!=0&(k|0)!=0){p=uC(c[o>>2]|0,S|0,T|0)|0;if(!p)Sa(o|0,k|0);F(k|0);}else p=-1;o=G()|0;if((p|0)==1)continue a;g[m+40>>3]=q;}}}while(0);g[m+32>>3]=+g[P>>3];j=0;q=+J(1,+x,Q|0);o=j;j=0;if((o|0)!=0&(k|0)!=0){p=uC(c[o>>2]|0,S|0,T|0)|0;if(!p)Sa(o|0,k|0);F(k|0);}else p=-1;o=G()|0;if((p|0)==1)continue a;r=+g[3625];q=q-r;if(q<0.0)q=1.0;else{z=m+16|0;O=m+8|0;E=x;w=B;s=q;while(1){j=0;q=+J(1,+E,R|0);o=j;j=0;if((o|0)!=0&(k|0)!=0){p=uC(c[o>>2]|0,S|0,T|0)|0;if(!p)Sa(o|0,k|0);F(k|0);}else p=-1;o=G()|0;if((p|0)==1)continue a;q=r-q;if(q<0.0){q=0.0;break b;}C=6.28318530717958/(s>q?s:q);r=+g[P>>3];A=r/C;j=0;q=+H(2,+E);o=j;j=0;if((o|0)!=0&(k|0)!=0){p=uC(c[o>>2]|0,S|0,T|0)|0;if(!p)Sa(o|0,k|0);F(k|0);}else p=-1;o=G()|0;if((p|0)==1)continue a;B=3.0/q;if(!(A>B*1.5))break;if(B>w){U=42;break;}v=~~+t(+(B+.5));D=+(v|0);y=r/D;r=6.28318530717958/y;q=+g[3625];if(r<=+u(+q))break;x=E*.33;j=0;s=+H(3,+(q-r));o=j;j=0;if((o|0)!=0&(k|0)!=0){p=uC(c[o>>2]|0,S|0,T|0)|0;if(!p)Sa(o|0,k|0);F(k|0);}else p=-1;o=G()|0;if((p|0)==1)continue a;j=0;q=+H(3,+(r+ +g[3625]));o=j;j=0;if((o|0)!=0&(k|0)!=0){p=uC(c[o>>2]|0,S|0,T|0)|0;if(!p)Sa(o|0,k|0);F(k|0);}else p=-1;o=G()|0;if((p|0)==1)continue a;q=x/((s+q)*1.1);if(c[7435]|0)break;r=E*.67;j=0;N(1,v|0,+y,+q,0);o=j;j=0;if((o|0)!=0&(k|0)!=0){p=uC(c[o>>2]|0,S|0,T|0)|0;if(!p)Sa(o|0,k|0);F(k|0);}else p=-1;o=G()|0;if((p|0)==1)continue a;w=w-B;g[3628]=q+ +g[3628];g[z>>3]=+g[z>>3]+1.0;g[O>>3]=+g[O>>3]+D+1.0;j=0;M(1,P|0,+(r*.25));o=j;j=0;if((o|0)!=0&(k|0)!=0){p=uC(c[o>>2]|0,S|0,T|0)|0;if(!p)Sa(o|0,k|0);F(k|0);}else p=-1;o=G()|0;if((p|0)==1)continue a;E=r*.75;j=0;q=+J(1,+E,Q|0);o=j;j=0;if((o|0)!=0&(k|0)!=0){p=uC(c[o>>2]|0,S|0,T|0)|0;if(!p)Sa(o|0,k|0);F(k|0);}else p=-1;o=G()|0;if((p|0)==1)continue a;r=+g[3625];s=q-r;if(s<0.0){q=1.0;break b;}}if((U|0)==42){U=0;c[n>>2]=1;q=-1.0;break;}g[m+24>>3]=C;if(A>w){c[n>>2]=1;q=-1.0;break;}v=~~+t(+(A+.5));j=0;N(1,v|0,+C,0.0,1);o=j;j=0;if((o|0)!=0&(k|0)!=0){p=uC(c[o>>2]|0,S|0,T|0)|0;if(!p)Sa(o|0,k|0);F(k|0);}else p=-1;o=G()|0;if((p|0)==1)continue a;g[z>>3]=+g[z>>3]+1.0;g[O>>3]=+g[O>>3]+ +(v|0)+1.0;q=+g[3626];r=+g[3627];g[m>>3]=r;g[Q>>3]=r;s=l/10.0+r;o=0;do{E=+(c[1248+(o<<2)>>2]|0);if(s*E==r*E)c[n>>2]=2;o=o+1|0;}while((o|0)!=4);q=.5-q;}}else{c[n>>2]=4;q=0.0;}}while(0);j=0;L(155,c[7436]|0);o=j;j=0;if((o|0)!=0&(k|0)!=0){p=uC(c[o>>2]|0,S|0,T|0)|0;if(!p)Sa(o|0,k|0);F(k|0);}else p=-1;o=G()|0;if((p|0)!=1)break;}g[m+48>>3]=+(c[7433]|0);Cq(S|0);Pb=V;return+q;}function Bm(a){a=+a;return+(a*a);}function Cm(a,b){a=a|0;b=+b;var c=0.0,d=0.0,e=0,f=0;c=+g[a>>3];d=c*.25;if(+Em(d,0.0)>b){if(+Em(c,0.0)>b)do{c=c*4.0;}while(+Em(c,0.0)>b);}else{c=d;while(1){d=c*.25;if(!(+Em(d,0.0)<=b))break;else c=d;}}e=0;do{d=c/+g[1264+(e<<3)>>3];f=!(+Em(d,0.0)<=b);c=f?c:d;e=e+1|0;}while((e|0)!=4);g[a>>3]=c;return;}// EMSCRIPTEN_END_FUNCS
var Sb=[dD,Bm,eD,Dm];var Tb=[fD,Em];var Ub=[gD,Fm];var Vb=[hD,Ml];var Wb=[iD,De];var Xb=[jD,hf];var Yb=[kD,Wq,Xq,fd,_q,KB,zd,Dd,QB,Hg,Lg,Xh,$h,Aj,Ej,so,Zq,_t,fu,gu,hu,iu,ju,ku,lu,Iu,Pu,Qu,Ru,Su,Tu,Uu,Vu,Dv,Ev,Jv,Ov,Pv,Uv,Zv,_v,dw,iw,jw,ow,kx,lx,nx,Cx,Dx,Fx,iy,jy,py,qy,vx,wx,yx,Lx,Mx,Ox,ce,Ye,jf,Ne,Bq,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD,kD];var Zb=[lD,sp];var _b=[mD,gd,hd,$q,br,Xx,Zx,$x,Ay,Cy,Ey,Cf,mD,mD,mD,mD];var $b=[nD,Tq,Yq,ar,to,Lp,Mr,Tr,_w,dx,Yx,_x,by,wy,By,Dy,Gy,oB,VB,XB,Kf,Pe,Uo,nD,nD,nD,nD,nD,nD,nD,nD,nD];var ac=[oD,$f];var bc=[pD,uo,ay,xy,yy,zy,Fy,pD];var cc=[qD,At,Bt,St,Tt,qD,qD,qD];var dc=[rD,Kr,Rr,vt,wt,yt,Ct,Nt,Ot,Qt,Ut,jx,mx,Bx,Ex,cy,Hy,ux,xx,Kx,Nx,rD,rD,rD,rD,rD,rD,rD,rD,rD,rD,rD];var ec=[sD,Ow,Uw,sD];var fc=[tD,ue];var gc=[uD,Yr,Zr,_r,$r,as,bs,cs,ds,es,fs,gs,Us,Vs,Ws,Xs,Ys,Zs,_s,$s,at,bt,ct,xt,zt,Pt,Rt,$t,au,bu,cu,du,Ju,Ku,Lu,Mu,Nu,Pw,Vw,uD,uD,uD,uD,uD,uD,uD,uD,uD,uD,uD,uD,uD,uD,uD,uD,uD,uD,uD,uD,uD,uD,uD,uD,uD];var hc=[vD,rv,xv,tw,uw,Ew,Fw,vD];var ic=[wD,eu,Ou,hx,ix,zx,Ax,sx,tx,Ix,Jx,te,wD,wD,wD,wD];var jc=[xD,yD,hB,CB];var kc=[zD,Wc,Xc,Yc,Zc,_c,$c,qr,rr,sr,tr,ur,vr,gr,hr,ir,jr,lr,mr,nr,or,bd,cd,sd,yd,Ad,Bd,Cd,Ed,Fd,Gd,Hd,Id,td,Ld,Md,Nd,Dg,Gg,Ig,Jg,Kg,Mg,Ng,Og,Eg,Sg,Tg,Ug,Th,Wh,Yh,Zh,_h,ai,bi,ci,Uh,gi,hi,ii,OB,ji,wj,zj,Bj,Cj,Dj,Fj,Gj,Hj,xj,Lj,Mj,Nj,Oj,Nq,Pq,Qq,Rq,Hr,Ir,Jr,Pr,Qr,Wr,Xr,Ss,Ts,tt,ut,Lt,Mt,Yt,Zt,Gu,Hu,pv,qv,vv,wv,Bv,Cv,Mv,Nv,Xv,Yv,gw,hw,rw,sw,Cw,Dw,Mw,Nw,Sw,Tw,Yw,Zw,bx,cx,Or,rx,gx,Gx,Hx,Sx,Tx,Vx,Wx,gy,hy,ny,oy,uy,vy,Iy,Jy,Ky,kB,lB,mB,nB,xB,IB,JB,PB,RB,SB,TB,UB,WB,ZB,fe,$e,Cq,os,qs,vw,DB,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD,zD];var lc=[AD,Cm];var mc=[BD,Gm];var nc=[CD,Sq,Fv,Gv,Hv,Iv,Kv,Lv,Qv,Rv,Sv,Tv,Vv,Wv,$v,aw,bw,cw,ew,fw,kw,lw,mw,nw,pw,qw,ax,fx,ky,ly,my,ry,sy,ty,Le,tp,CD,CD,CD,CD,CD,CD,CD,CD,CD,CD,CD,CD,CD,CD,CD,CD,CD,CD,CD,CD,CD,CD,CD,CD,CD,CD,CD,CD];var oc=[DD,of];var pc=[ED,Me,Oe,ED];var qc=[FD,vf];var rc=[GD,ed,Vq,Lr,Sr,rB,AB,aC];var sc=[HD,qB,zB,$B];var tc=[ID,dd,Uq,$w,ex,pB,yB,_B];return{__ZSt18uncaught_exceptionv:fB,___cxa_can_catch:iC,___cxa_is_pointer_type:jC,___errno_location:wo,___getTypeName:ro,___muldi3:lC,___udivdi3:qC,_bitshift64Lshr:rC,_bitshift64Shl:sC,_free:Cq,_i64Add:mC,_i64Subtract:nC,_malloc:Bq,_memcpy:wC,_memmove:xC,_memset:yC,_pthread_cond_broadcast:zC,_realloc:Dq,_saveSetjmp:tC,_sbrk:AC,_setThrew:vC,_testSetjmp:uC,dynCall_dd:BC,dynCall_ddd:CC,dynCall_ddi:DC,dynCall_di:EC,dynCall_dii:FC,dynCall_i:GC,dynCall_ii:HC,dynCall_iidiiii:IC,dynCall_iii:JC,dynCall_iiii:KC,dynCall_iiiid:LC,dynCall_iiiii:MC,dynCall_iiiiid:NC,dynCall_iiiiii:OC,dynCall_iiiiiid:PC,dynCall_iiiiiidddd:QC,dynCall_iiiiiii:RC,dynCall_iiiiiiii:SC,dynCall_iiiiiiiii:TC,dynCall_v:UC,dynCall_vi:VC,dynCall_vid:WC,dynCall_viddi:XC,dynCall_vii:YC,dynCall_viid:ZC,dynCall_viii:_C,dynCall_viiid:$C,dynCall_viiii:aD,dynCall_viiiii:bD,dynCall_viiiiii:cD,establishStackSpace:yc,globalCtors:uc,stackAlloc:vc,stackRestore:xc,stackSave:wc};}(// EMSCRIPTEN_END_ASM
asmGlobalArg,asmLibraryArg,buffer);var __ZSt18uncaught_exceptionv=Module["__ZSt18uncaught_exceptionv"]=asm["__ZSt18uncaught_exceptionv"];var ___cxa_can_catch=Module["___cxa_can_catch"]=asm["___cxa_can_catch"];var ___cxa_is_pointer_type=Module["___cxa_is_pointer_type"]=asm["___cxa_is_pointer_type"];var ___errno_location=Module["___errno_location"]=asm["___errno_location"];var ___getTypeName=Module["___getTypeName"]=asm["___getTypeName"];var ___muldi3=Module["___muldi3"]=asm["___muldi3"];var ___udivdi3=Module["___udivdi3"]=asm["___udivdi3"];var _bitshift64Lshr=Module["_bitshift64Lshr"]=asm["_bitshift64Lshr"];var _bitshift64Shl=Module["_bitshift64Shl"]=asm["_bitshift64Shl"];var _free=Module["_free"]=asm["_free"];var _i64Add=Module["_i64Add"]=asm["_i64Add"];var _i64Subtract=Module["_i64Subtract"]=asm["_i64Subtract"];var _malloc=Module["_malloc"]=asm["_malloc"];var _memcpy=Module["_memcpy"]=asm["_memcpy"];var _memmove=Module["_memmove"]=asm["_memmove"];var _memset=Module["_memset"]=asm["_memset"];var _pthread_cond_broadcast=Module["_pthread_cond_broadcast"]=asm["_pthread_cond_broadcast"];var _realloc=Module["_realloc"]=asm["_realloc"];var _saveSetjmp=Module["_saveSetjmp"]=asm["_saveSetjmp"];var _sbrk=Module["_sbrk"]=asm["_sbrk"];var _setThrew=Module["_setThrew"]=asm["_setThrew"];var _testSetjmp=Module["_testSetjmp"]=asm["_testSetjmp"];var establishStackSpace=Module["establishStackSpace"]=asm["establishStackSpace"];var globalCtors=Module["globalCtors"]=asm["globalCtors"];var stackAlloc=Module["stackAlloc"]=asm["stackAlloc"];var stackRestore=Module["stackRestore"]=asm["stackRestore"];var stackSave=Module["stackSave"]=asm["stackSave"];var dynCall_dd=Module["dynCall_dd"]=asm["dynCall_dd"];var dynCall_ddd=Module["dynCall_ddd"]=asm["dynCall_ddd"];var dynCall_ddi=Module["dynCall_ddi"]=asm["dynCall_ddi"];var dynCall_di=Module["dynCall_di"]=asm["dynCall_di"];var dynCall_dii=Module["dynCall_dii"]=asm["dynCall_dii"];var dynCall_i=Module["dynCall_i"]=asm["dynCall_i"];var dynCall_ii=Module["dynCall_ii"]=asm["dynCall_ii"];var dynCall_iidiiii=Module["dynCall_iidiiii"]=asm["dynCall_iidiiii"];var dynCall_iii=Module["dynCall_iii"]=asm["dynCall_iii"];var dynCall_iiii=Module["dynCall_iiii"]=asm["dynCall_iiii"];var dynCall_iiiid=Module["dynCall_iiiid"]=asm["dynCall_iiiid"];var dynCall_iiiii=Module["dynCall_iiiii"]=asm["dynCall_iiiii"];var dynCall_iiiiid=Module["dynCall_iiiiid"]=asm["dynCall_iiiiid"];var dynCall_iiiiii=Module["dynCall_iiiiii"]=asm["dynCall_iiiiii"];var dynCall_iiiiiid=Module["dynCall_iiiiiid"]=asm["dynCall_iiiiiid"];var dynCall_iiiiiidddd=Module["dynCall_iiiiiidddd"]=asm["dynCall_iiiiiidddd"];var dynCall_iiiiiii=Module["dynCall_iiiiiii"]=asm["dynCall_iiiiiii"];var dynCall_iiiiiiii=Module["dynCall_iiiiiiii"]=asm["dynCall_iiiiiiii"];var dynCall_iiiiiiiii=Module["dynCall_iiiiiiiii"]=asm["dynCall_iiiiiiiii"];var dynCall_v=Module["dynCall_v"]=asm["dynCall_v"];var dynCall_vi=Module["dynCall_vi"]=asm["dynCall_vi"];var dynCall_vid=Module["dynCall_vid"]=asm["dynCall_vid"];var dynCall_viddi=Module["dynCall_viddi"]=asm["dynCall_viddi"];var dynCall_vii=Module["dynCall_vii"]=asm["dynCall_vii"];var dynCall_viid=Module["dynCall_viid"]=asm["dynCall_viid"];var dynCall_viii=Module["dynCall_viii"]=asm["dynCall_viii"];var dynCall_viiid=Module["dynCall_viiid"]=asm["dynCall_viiid"];var dynCall_viiii=Module["dynCall_viiii"]=asm["dynCall_viiii"];var dynCall_viiiii=Module["dynCall_viiiii"]=asm["dynCall_viiiii"];var dynCall_viiiiii=Module["dynCall_viiiiii"]=asm["dynCall_viiiiii"];Module["asm"]=asm;if(memoryInitializer){if(!isDataURI(memoryInitializer)){memoryInitializer=locateFile(memoryInitializer);}if(ENVIRONMENT_IS_NODE||ENVIRONMENT_IS_SHELL){var data=Module["readBinary"](memoryInitializer);HEAPU8.set(data,GLOBAL_BASE);}else{addRunDependency("memory initializer");var applyMemoryInitializer=function applyMemoryInitializer(data){if(data.byteLength)data=new Uint8Array(data);HEAPU8.set(data,GLOBAL_BASE);if(Module["memoryInitializerRequest"])delete Module["memoryInitializerRequest"].response;removeRunDependency("memory initializer");};var doBrowserLoad=function doBrowserLoad(){Module["readAsync"](memoryInitializer,applyMemoryInitializer,function(){throw"could not load memory initializer "+memoryInitializer;});};var memoryInitializerBytes=tryParseAsDataURI(memoryInitializer);if(memoryInitializerBytes){applyMemoryInitializer(memoryInitializerBytes.buffer);}else if(Module["memoryInitializerRequest"]){var useRequest=function useRequest(){var request=Module["memoryInitializerRequest"];var response=request.response;if(request.status!==200&&request.status!==0){var data=tryParseAsDataURI(Module["memoryInitializerRequestURL"]);if(data){response=data.buffer;}else{console.warn("a problem seems to have happened with Module.memoryInitializerRequest, status: "+request.status+", retrying "+memoryInitializer);doBrowserLoad();return;}}applyMemoryInitializer(response);};if(Module["memoryInitializerRequest"].response){setTimeout(useRequest,0);}else{Module["memoryInitializerRequest"].addEventListener("load",useRequest);}}else{doBrowserLoad();}}}Module["then"]=function(func){if(Module["calledRun"]){func(Module);}else{var old=Module["onRuntimeInitialized"];Module["onRuntimeInitialized"]=function(){if(old)old();func(Module);};}return Module;};function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status;}ExitStatus.prototype=new Error();ExitStatus.prototype.constructor=ExitStatus;dependenciesFulfilled=function runCaller(){if(!Module["calledRun"])run();if(!Module["calledRun"])dependenciesFulfilled=runCaller;};function run(args){args=args||Module["arguments"];if(runDependencies>0){return;}preRun();if(runDependencies>0)return;if(Module["calledRun"])return;function doRun(){if(Module["calledRun"])return;Module["calledRun"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();postRun();}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout(function(){setTimeout(function(){Module["setStatus"]("");},1);doRun();},1);}else{doRun();}}Module["run"]=run;function abort(what){if(Module["onAbort"]){Module["onAbort"](what);}if(what!==undefined){out(what);err(what);what=JSON.stringify(what);}else{what="";}ABORT=true;EXITSTATUS=1;throw"abort("+what+"). Build with -s ASSERTIONS=1 for more info.";}Module["abort"]=abort;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()();}}Module["noExitRuntime"]=true;run();return integral;};}();/* harmony default export */ __webpack_exports__["a"] = (integral);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(11), "/", __webpack_require__(22).Buffer))

/***/ }),
/* 14 */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;

/***/ }),
/* 15 */
/***/ (function(module, exports) {

function _iterableToArrayLimit(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;

/***/ }),
/* 16 */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

module.exports = _nonIterableRest;

/***/ }),
/* 17 */
/***/ (function(module, exports) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized;

/***/ }),
/* 18 */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;

/***/ }),
/* 19 */
/***/ (function(module, exports) {

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

module.exports = _arrayWithoutHoles;

/***/ }),
/* 20 */
/***/ (function(module, exports) {

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

module.exports = _iterableToArray;

/***/ }),
/* 21 */
/***/ (function(module, exports) {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

module.exports = _nonIterableSpread;

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(23)
var ieee754 = __webpack_require__(24)
var isArray = __webpack_require__(25)

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(10)))

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  for (var i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),
/* 24 */
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),
/* 25 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),
/* 26 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var stats_namespaceObject = {};
__webpack_require__.r(stats_namespaceObject);
__webpack_require__.d(stats_namespaceObject, "_AggregationTest", function() { return stats_AggregationTest; });
__webpack_require__.d(stats_namespaceObject, "SkatTest", function() { return stats_SkatTest; });
__webpack_require__.d(stats_namespaceObject, "SkatOptimalTest", function() { return stats_SkatOptimalTest; });
__webpack_require__.d(stats_namespaceObject, "ZegginiBurdenTest", function() { return stats_ZegginiBurdenTest; });
__webpack_require__.d(stats_namespaceObject, "VTTest", function() { return stats_VTTest; });
__webpack_require__.d(stats_namespaceObject, "MVT_WASM_HELPERS", function() { return MVT_WASM_HELPERS; });
__webpack_require__.d(stats_namespaceObject, "calculate_mvt_pvalue", function() { return calculate_mvt_pvalue; });
__webpack_require__.d(stats_namespaceObject, "_skatDavies", function() { return _skatDavies; });
__webpack_require__.d(stats_namespaceObject, "_skatLiu", function() { return _skatLiu; });
var helpers_namespaceObject = {};
__webpack_require__.r(helpers_namespaceObject);
__webpack_require__.d(helpers_namespaceObject, "_PortalVariantsHelper", function() { return helpers_PortalVariantsHelper; });
__webpack_require__.d(helpers_namespaceObject, "_PortalGroupHelper", function() { return helpers_PortalGroupHelper; });
__webpack_require__.d(helpers_namespaceObject, "parsePortalJSON", function() { return parsePortalJSON; });
__webpack_require__.d(helpers_namespaceObject, "PortalTestRunner", function() { return helpers_PortalTestRunner; });
__webpack_require__.d(helpers_namespaceObject, "AGGREGATION_TESTS", function() { return AGGREGATION_TESTS; });

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/slicedToArray.js
var slicedToArray = __webpack_require__(2);
var slicedToArray_default = /*#__PURE__*/__webpack_require__.n(slicedToArray);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/classCallCheck.js
var classCallCheck = __webpack_require__(3);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/createClass.js
var createClass = __webpack_require__(4);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);

// EXTERNAL MODULE: ./node_modules/numeric/numeric-1.2.6.js
var numeric_1_2_6 = __webpack_require__(0);
var numeric_1_2_6_default = /*#__PURE__*/__webpack_require__.n(numeric_1_2_6);

// CONCATENATED MODULE: ./src/app/constants.js
var REGEX_EPACTS = new RegExp("(?:chr)?(.+):(\\d+)_?(\\w+)?/?([^_]+)?_?(.*)?");
var REGEX_REGION = new RegExp("(?:chr)?(.+):(\\d+)-(\\d+)");

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js
var possibleConstructorReturn = __webpack_require__(6);
var possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/getPrototypeOf.js
var getPrototypeOf = __webpack_require__(7);
var getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/inherits.js
var inherits = __webpack_require__(8);
var inherits_default = /*#__PURE__*/__webpack_require__.n(inherits);

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/toConsumableArray.js
var toConsumableArray = __webpack_require__(9);
var toConsumableArray_default = /*#__PURE__*/__webpack_require__.n(toConsumableArray);

// CONCATENATED MODULE: ./src/app/qfc.js


/**
 * A port of Robert Davies' method for computing the distribution
 * of a linear combination of chi-squared random variables.
 *
 * <p>
 *
 * Publication: 
 * {@link https://www.jstor.org/stable/2346911|The distribution of a linear combination of chi‐squared random variables. Applied Statistics 29 323‐333.}
 *
 * <p>
 *
 * Original C code:
 * {@link http://www.robertnz.net/QF.htm}
 *
 * @module qfc
 * @license MIT
 */
var pi = Math.PI;
var log28 = 0.0866;
var count = 0;
var sigsq, lmax, lmin, qfc_mean, qfc_c, intl, ersm, qfc_r, lim, ndtsrt, fail, qfc_n, th, lb, nc;

function exp1(x) {
  return x < -50.0 ? 0.0 : Math.exp(x);
}

function counter() {
  count += 1;

  if (count > lim) {
    throw new RangeError("Exceeded limit of " + lim + " calls");
  }
}

function square(x) {
  return x * x;
}

function cube(x) {
  return x * x * x;
}

function log1(x, first) {
  if (Math.abs(x) > 0.1) {
    return first ? Math.log(1.0 + x) : Math.log(1.0 + x) - x;
  } else {
    var s, s1, term, y, k;
    y = x / (2.0 + x);
    term = 2.0 * cube(y);
    k = 3.0;
    s = (first ? 2.0 : -x) * y;
    y = square(y);

    for (s1 = s + term / k; s1 !== s; s1 = s + term / k) {
      k = k + 2.0;
      term = term * y;
      s = s1;
    }

    return s;
  }
}

function order() {
  var j, k;

  outer: for (var _j = 0; _j < qfc_r; _j++) {
    var lj = Math.abs(lb[_j]);

    for (var _k = _j - 1; _k >= 0; _k--) {
      if (lj > Math.abs(lb[th[_k]])) {
        th[_k + 1] = th[_k];
      } else {
        th[_k + 1] = _j;
        continue outer;
      }
    }

    k = -1;
    th[k + 1] = _j;
  }

  ndtsrt = false;
}

function errbd(u) {
  var sum1, lj, ncj, x, y, xconst, j, nj;
  counter();
  xconst = u * sigsq;
  sum1 = u * xconst;
  u = 2.0 * u;

  for (j = qfc_r - 1; j >= 0; j--) {
    nj = qfc_n[j];
    lj = lb[j];
    ncj = nc[j];
    x = u * lj;
    y = 1.0 - x;
    xconst = xconst + lj * (ncj / y + nj) / y;
    sum1 = sum1 + ncj * square(x / y) + nj * (square(x) / y + log1(-x, false));
  }

  return [exp1(-0.5 * sum1), xconst];
}

function ctff(accx, u2) {
  var u1, u, rb, xconst, c1, c2, rerr;
  u1 = 0.0;
  c1 = qfc_mean;
  rb = 2.0 * (u2 > 0.0 ? lmax : lmin);

  function calc_err(u) {
    var _errbd = errbd(u);

    var _errbd2 = slicedToArray_default()(_errbd, 2);

    rerr = _errbd2[0];
    c2 = _errbd2[1];
    return rerr;
  }

  for (u = u2 / (1.0 + u2 * rb); calc_err(u) > accx; u = u2 / (1.0 + u2 * rb)) {
    u1 = u2;
    c1 = c2;
    u2 = 2.0 * u2;
  }

  for (u = (c1 - qfc_mean) / (c2 - qfc_mean); u < 0.9; u = (c1 - qfc_mean) / (c2 - qfc_mean)) {
    u = (u1 + u2) / 2.0;

    var _errbd3 = errbd(u / (1.0 + u * rb));

    var _errbd4 = slicedToArray_default()(_errbd3, 2);

    rerr = _errbd4[0];
    xconst = _errbd4[1];

    if (rerr > accx) {
      u1 = u;
      c1 = xconst;
    } else {
      u2 = u;
      c2 = xconst;
    }
  }

  return [c2, u2];
}

function truncation(u, tausq) {
  var sum1, sum2, prod1, prod2, prod3, lj, ncj, x, y, err1, err2;
  var j, nj, s;
  counter();
  sum1 = 0.0;
  prod2 = 0.0;
  prod3 = 0.0;
  s = 0;
  sum2 = (sigsq + tausq) * square(u);
  prod1 = 2.0 * sum2;
  u = 2.0 * u;

  for (j = 0; j < qfc_r; j++) {
    lj = lb[j];
    ncj = nc[j];
    nj = qfc_n[j];
    x = square(u * lj);
    sum1 = sum1 + ncj * x / (1.0 + x);

    if (x > 1.0) {
      prod2 = prod2 + nj * Math.log(x);
      prod3 = prod3 + nj * log1(x, true);
      s = s + nj;
    } else {
      prod1 = prod1 + nj * log1(x, true);
    }
  }

  sum1 = 0.5 * sum1;
  prod2 = prod1 + prod2;
  prod3 = prod1 + prod3;
  x = exp1(-sum1 - 0.25 * prod2) / pi;
  y = exp1(-sum1 - 0.25 * prod3) / pi;
  err1 = s == 0 ? 1.0 : x * 2.0 / s;
  err2 = prod3 > 1.0 ? 2.5 * y : 1.0;

  if (err2 < err1) {
    err1 = err2;
  }

  x = 0.5 * sum2;
  err2 = x <= y ? 1.0 : y / x;
  return err1 < err2 ? err1 : err2;
}

function findu(ut, accx) {
  var u, i;
  var divis = [2.0, 1.4, 1.2, 1.1];
  u = ut / 4.0;

  if (truncation(u, 0.0) > accx) {
    for (u = ut; truncation(u, 0.0) > accx; u = ut) {
      ut = ut * 4.0;
    }
  } else {
    ut = u;

    for (u = u / 4.0; truncation(u, 0.0) <= accx; u = u / 4.0) {
      ut = u;
    }
  }

  for (i = 0; i < 4; i++) {
    u = ut / divis[i];

    if (truncation(u, 0.0) <= accx) {
      ut = u;
    }
  }

  return ut;
}

function integrate(nterm, interv, tausq, mainx) {
  var inpi, u, sum1, sum2, sum3, x, y, z;
  var k, j, nj;
  inpi = interv / pi;

  for (k = nterm; k >= 0; k--) {
    u = (k + 0.5) * interv;
    sum1 = -2.0 * u * qfc_c;
    sum2 = Math.abs(sum1);
    sum3 = -0.5 * sigsq * square(u);

    for (j = qfc_r - 1; j >= 0; j--) {
      nj = qfc_n[j];
      x = 2.0 * lb[j] * u;
      y = square(x);
      sum3 = sum3 - 0.25 * nj * log1(y, true);
      y = nc[j] * x / (1.0 + y);
      z = nj * Math.atan(x) + y;
      sum1 = sum1 + z;
      sum2 = sum2 + Math.abs(z);
      sum3 = sum3 - 0.5 * x * y;
    }

    x = inpi * exp1(sum3) / u;

    if (!mainx) {
      x = x * (1.0 - exp1(-0.5 * tausq * square(u)));
    }

    sum1 = Math.sin(0.5 * sum1) * x;
    sum2 = 0.5 * sum2 * x;
    intl = intl + sum1;
    ersm = ersm + sum2;
  }
}

function cfe(x) {
  var axl, axl1, axl2, sxl, sum1, lj;
  var j, k, t;
  counter();
  if (ndtsrt) order();
  axl = Math.abs(x);
  sxl = x > 0.0 ? 1.0 : -1.0;
  sum1 = 0.0;

  for (j = qfc_r - 1; j >= 0; j--) {
    t = th[j];

    if (lb[t] * sxl > 0.0) {
      lj = Math.abs(lb[t]);
      axl1 = axl - lj * (qfc_n[t] + nc[t]);
      axl2 = lj / log28;

      if (axl1 > axl2) {
        axl = axl1;
      } else {
        if (axl1 > axl2) axl = axl2;
        sum1 = (axl - axl1) / lj;

        for (k = j - 1; k >= 0; k--) {
          sum1 = sum1 + (qfc_n[th[k]] + nc[th[k]]);
        }

        break;
      }
    }
  }

  if (sum1 > 100.0) {
    fail = true;
    return 1.0;
  } else {
    return Math.pow(2.0, sum1 / 4.0) / (pi * square(axl));
  }
}
/**
 * Mixture chi-square distribution function. <p>
 *
 * This is the cumulative distribution for a linear mixture of chi-squared random variables, each having
 * its own degrees of freedom and non-centrality parameter: <p>
 *
 * c1 = sum(lb1[j] * x_j) + sigma * X0, where each x_j is non-central chi-squared, and X0 is a standard normal variable.
 *
 * @param lb1 {number[]} Coefficient of each chi-squared variable.
 * @param nc1 {number[]} Non-centrality parameter for each chi-squared variable x_j.
 * @param n1 {number[]} Degrees of freedom for each chi-squared variable x_j.
 * @param r1 {number} Number of chi-squared variables.
 * @param sigma {number} Coefficient of standard normal variable.
 * @param c1 {number[]} Mixture chi-squared statistic value (point at which function should be evaluated).
 * @param lim1 {number} Maximum number of terms in integrations.
 * @param acc {number} Maximum error.
 * @return {number} Cumulative lower-tail probability.
 */


function qf(lb1, nc1, n1, r1, sigma, c1, lim1, acc) {
  /*  distribution function of a linear combination of non-central
      chi-squared random variables :
  
      input:
      lb[j]            coefficient of j-th chi-squared variable
      nc[j]            non-centrality parameter
      n[j]             degrees of freedom
      j = 0, 2 ... r-1
      sigma            coefficient of standard normal variable
      c                point at which df is to be evaluated
      lim              maximum number of terms in integration
      acc              maximum error
  
      output:
      ifault = 1       required accuracy NOT achieved
      2       round-off error possibly significant
      3       invalid parameters
      4       unable to locate integration parameters
      5       out of memory
  
      trace[0]         absolute sum
      trace[1]         total number of integration terms
      trace[2]         number of integrations
      trace[3]         integration interval in final integration
      trace[4]         truncation point in initial integration
      trace[5]         s.d. of initial convergence factor
      trace[6]         cycles to locate integration parameters     */
  var j, nj, nt, ntm;
  var acc1, almx, xlim, xnt, xntm;
  var utx, tausq, sd, intv, intv1, x, up, un, d1, d2, lj, ncj;
  var qfval, ifault;
  var trace = new Array(7).fill(0.0);
  var rats = [1, 2, 4, 8];

  function done() {
    trace[6] = count;
    return [qfval, ifault, trace];
  }

  count = 0;
  qfc_r = r1;
  lim = lim1;
  qfc_c = c1;
  qfc_n = n1;
  lb = lb1;
  nc = nc1;
  ifault = 0;
  intl = 0.0;
  ersm = 0.0;
  qfval = -1.0;
  acc1 = acc;
  ndtsrt = true;
  fail = false;
  xlim = lim;
  th = new Array(qfc_r).fill(NaN);
  /* find mean, sd, max and min of lb,
     check that parameter values are valid */

  sigsq = square(sigma);
  sd = sigsq;
  lmax = 0.0;
  lmin = 0.0;
  qfc_mean = 0.0;

  for (j = 0; j < qfc_r; j++) {
    nj = qfc_n[j];
    lj = lb[j];
    ncj = nc[j];

    if (nj < 0 || ncj < 0.0) {
      ifault = 3;
      return done();
    }

    sd = sd + square(lj) * (2 * nj + 4.0 * ncj);
    qfc_mean = qfc_mean + lj * (nj + ncj);
    if (lmax < lj) lmax = lj;else if (lmin > lj) lmin = lj;
  }

  if (sd == 0.0) {
    qfval = qfc_c > 0.0 ? 1.0 : 0.0;
    return done();
  }

  if (lmin == 0.0 && lmax == 0.0 && sigma == 0.0) {
    ifault = 3;
    return done();
  }

  sd = Math.sqrt(sd);
  almx = lmax < -lmin ? -lmin : lmax;
  /* starting values for findu, ctff */

  utx = 16.0 / sd;
  up = 4.5 / sd;
  un = -up;

  try {
    var l1 = function l1() {
      var _ctff = ctff(acc1, up);

      var _ctff2 = slicedToArray_default()(_ctff, 2);

      ctffx = _ctff2[0];
      up = _ctff2[1];
      d1 = ctffx - qfc_c;

      if (d1 < 0.0) {
        qfval = 1.0;
        return done();
      }

      var _ctff3 = ctff(acc1, un);

      var _ctff4 = slicedToArray_default()(_ctff3, 2);

      ctffx = _ctff4[0];
      un = _ctff4[1];
      d2 = qfc_c - ctffx;

      if (d2 < 0.0) {
        qfval = 0.0;
        return done();
      }
      /* find integration interval */


      intv = 2.0 * pi / (d1 > d2 ? d1 : d2);
      /* calculate number of terms required for main and
         auxillary integrations */

      xnt = utx / intv;
      xntm = 3.0 / Math.sqrt(acc1);

      if (xnt > xntm * 1.5) {
        /* parameters for auxillary integration */
        if (xntm > xlim) {
          ifault = 1;
          return done();
        }

        ntm = Math.floor(xntm + 0.5);
        intv1 = utx / ntm;
        x = 2.0 * pi / intv1;
        if (x <= Math.abs(qfc_c)) return l2();
        /* calculate convergence factor */

        tausq = .33 * acc1 / (1.1 * (cfe(qfc_c - x) + cfe(qfc_c + x)));
        if (fail) return l2();
        acc1 = .67 * acc1;
        /* auxillary integration */

        integrate(ntm, intv1, tausq, false);
        xlim = xlim - xntm;
        sigsq = sigsq + tausq;
        trace[2] = trace[2] + 1;
        trace[1] = trace[1] + ntm + 1;
        /* find truncation point with new convergence factor */

        utx = findu(utx, .25 * acc1);
        acc1 = 0.75 * acc1;
        return l1();
      }

      return l2();
    };
    /* main integration */


    var l2 = function l2() {
      trace[3] = intv;

      if (xnt > xlim) {
        ifault = 1;
        return done();
      }

      nt = Math.floor(xnt + 0.5);
      integrate(nt, intv, 0.0, true);
      trace[2] = trace[2] + 1;
      trace[1] = trace[1] + nt + 1;
      qfval = 0.5 - intl;
      trace[0] = ersm;
      /* test whether round-off error could be significant
         allow for radix 8 or 16 machines */

      up = ersm;
      x = up + acc / 10.0;

      for (j = 0; j < 4; j++) {
        if (rats[j] * x === rats[j] * up) ifault = 2;
      }

      return done();
    };

    /* truncation point with no convergence factor */
    utx = findu(utx, 0.5 * acc1);
    /* does convergence factor help */

    if (qfc_c != 0.0 && almx > 0.07 * sd) {
      tausq = .25 * acc1 / cfe(qfc_c);
      if (fail) fail = false;else if (truncation(utx, tausq) < .2 * acc1) {
        sigsq = sigsq + tausq;
        utx = findu(utx, 0.25 * acc1);
        trace[5] = Math.sqrt(tausq);
      }
    }

    trace[4] = utx;
    acc1 = 0.5 * acc1;
    /* find RANGE of distribution, quit if outside this */

    var ctffx;
    return l1();
  } catch (error) {
    if (error.name === "RangeError") {
      ifault = 4;
      return done();
    } else {
      throw error;
    }
  }
}


// CONCATENATED MODULE: ./src/app/rstats.js
/**
 * JavaScript port of Rmath functions. <p>
 *
 * These functions have been directly ported from the Rmath library, found in the R source code repository under
 * R-source/src/include/Rmath.h. Most of the code should look almost identical to the C code, with minor changes to
 * adapt to features present in C but not in JS. <p>
 *
 * Test cases were ported from R-source/tests/d-p-q-r-tests.R. We additionally wrote other test cases over a range of
 * parameter values and edge cases. These cases are found in our test suite in test/unit/rstats.js. <p>
 *
 * @module rstats
 * @author Matthew Flickinger
 * @author Ryan Welch
 * @license LGPL-2.1
 */
// Constants
var DBL_EPSILON = 2.2204460492503130808472633361816e-16;
var DBL_MIN = Number.MIN_VALUE;
var DBL_MAX_EXP = 308;
var DBL_MIN_EXP = -323;
var DBL_MAX = Number.MAX_VALUE;
var SCALE_FACTOR = 1.157920892373162e+77;
var EULERS_CONST = 0.5772156649015328606065120900824024;
var TOL_LOGCF = 1e-14;
var LGAMMA_C = 0.2273736845824652515226821577978691e-12;
var DXREL = 1.490116119384765625e-8;
var M_LN2 = Math.LN2; //0.693147180559945309417232121458;

var M_LN10 = Math.LN10; //2.302585092994045684017991454684;

var M_PI = Math.PI;
var M_2PI = 2 * M_PI;
var M_LN_2PI = Math.log(2 * Math.PI);
var M_LN_SQRT_2PI = Math.log(Math.sqrt(M_2PI));
var M_SQRT_32 = 5.656854249492380195206754896838;
var M_1_SQRT_2PI = 0.398942280401432677939946059934;
var M_CUTOFF = M_LN2 * DBL_MAX_EXP / DBL_EPSILON;

var _dbl_min_exp = M_LN2 * DBL_MIN_EXP;

var ME_DOMAIN = 1;
var ME_RANGE = 2;
var ME_NOCONV = 4;
var ME_PRECISION = 8;
var ME_UNDERFLOW = 16;

function ML_ERROR(x, s) {
  if (x > ME_DOMAIN) {
    var msg = "";

    switch (x) {
      case ME_DOMAIN:
        msg = "argument out of domain in ".concat(s);
        break;

      case ME_RANGE:
        msg = "value out of range in ".concat(s);
        break;

      case ME_NOCONV:
        msg = "convergence failed in ".concat(s);
        break;

      case ME_PRECISION:
        msg = "full precision may not have been achieved in ".concat(s);
        break;

      case ME_UNDERFLOW:
        msg = "underflow occurred in ".concat(s);
        break;
    }

    console.error(msg);
  }
}

function ML_ERR_return_NAN() {
  ML_ERROR(ME_DOMAIN, "");
  return NaN;
}

var S0 = 0.083333333333333333333;
/* 1/12 */

var S1 = 0.00277777777777777777778;
/* 1/360 */

var S2 = 0.00079365079365079365079365;
/* 1/1260 */

var S3 = 0.000595238095238095238095238;
/* 1/1680 */

var S4 = 0.0008417508417508417508417508;
/* 1/1188 */

var SFERR_HALVES = [0.0,
/* n=0 - wrong, place holder only */
0.1534264097200273452913848,
/* 0.5 */
0.0810614667953272582196702,
/* 1.0 */
0.0548141210519176538961390,
/* 1.5 */
0.0413406959554092940938221,
/* 2.0 */
0.03316287351993628748511048,
/* 2.5 */
0.02767792568499833914878929,
/* 3.0 */
0.02374616365629749597132920,
/* 3.5 */
0.02079067210376509311152277,
/* 4.0 */
0.01848845053267318523077934,
/* 4.5 */
0.01664469118982119216319487,
/* 5.0 */
0.01513497322191737887351255,
/* 5.5 */
0.01387612882307074799874573,
/* 6.0 */
0.01281046524292022692424986,
/* 6.5 */
0.01189670994589177009505572,
/* 7.0 */
0.01110455975820691732662991,
/* 7.5 */
0.010411265261972096497478567,
/* 8.0 */
0.009799416126158803298389475,
/* 8.5 */
0.009255462182712732917728637,
/* 9.0 */
0.008768700134139385462952823,
/* 9.5 */
0.008330563433362871256469318,
/* 10.0 */
0.007934114564314020547248100,
/* 10.5 */
0.007573675487951840794972024,
/* 11.0 */
0.007244554301320383179543912,
/* 11.5 */
0.006942840107209529865664152,
/* 12.0 */
0.006665247032707682442354394,
/* 12.5 */
0.006408994188004207068439631,
/* 13.0 */
0.006171712263039457647532867,
/* 13.5 */
0.005951370112758847735624416,
/* 14.0 */
0.005746216513010115682023589,
/* 14.5 */
0.005554733551962801371038690
/* 15.0 */
];
var LGAMMA_COEFS = [0.3224670334241132182362075833230126e-0, 0.6735230105319809513324605383715000e-1,
/* = (zeta(3)-1)/3 */
0.2058080842778454787900092413529198e-1, 0.7385551028673985266273097291406834e-2, 0.2890510330741523285752988298486755e-2, 0.1192753911703260977113935692828109e-2, 0.5096695247430424223356548135815582e-3, 0.2231547584535793797614188036013401e-3, 0.9945751278180853371459589003190170e-4, 0.4492623673813314170020750240635786e-4, 0.2050721277567069155316650397830591e-4, 0.9439488275268395903987425104415055e-5, 0.4374866789907487804181793223952411e-5, 0.2039215753801366236781900709670839e-5, 0.9551412130407419832857179772951265e-6, 0.4492469198764566043294290331193655e-6, 0.2120718480555466586923135901077628e-6, 0.1004322482396809960872083050053344e-6, 0.4769810169363980565760193417246730e-7, 0.2271109460894316491031998116062124e-7, 0.1083865921489695409107491757968159e-7, 0.5183475041970046655121248647057669e-8, 0.2483674543802478317185008663991718e-8, 0.1192140140586091207442548202774640e-8, 0.5731367241678862013330194857961011e-9, 0.2759522885124233145178149692816341e-9, 0.1330476437424448948149715720858008e-9, 0.6422964563838100022082448087644648e-10, 0.3104424774732227276239215783404066e-10, 0.1502138408075414217093301048780668e-10, 0.7275974480239079662504549924814047e-11, 0.3527742476575915083615072228655483e-11, 0.1711991790559617908601084114443031e-11, 0.8315385841420284819798357793954418e-12, 0.4042200525289440065536008957032895e-12, 0.1966475631096616490411045679010286e-12, 0.9573630387838555763782200936508615e-13, 0.4664076026428374224576492565974577e-13, 0.2273736960065972320633279596737272e-13, 0.1109139947083452201658320007192334e-13
/* = (zeta(40+1)-1)/(40+1) */
];
var POIS_COEFS_A = [-1e99,
/* placeholder used for 1-indexing */
2 / 3., -4 / 135., 8 / 2835., 16 / 8505., -8992 / 12629925., -334144 / 492567075., 698752 / 1477701225.];
var POIS_COEFS_B = [-1e99,
/* placeholder */
1 / 12., 1 / 288., -139 / 51840., -571 / 2488320., 163879 / 209018880., 5246819 / 75246796800., -534703531 / 902961561600.];
var GAMCS = [+.8571195590989331421920062399942e-2, +.4415381324841006757191315771652e-2, +.5685043681599363378632664588789e-1, -.4219835396418560501012500186624e-2, +.1326808181212460220584006796352e-2, -.1893024529798880432523947023886e-3, +.3606925327441245256578082217225e-4, -.6056761904460864218485548290365e-5, +.1055829546302283344731823509093e-5, -.1811967365542384048291855891166e-6, +.3117724964715322277790254593169e-7, -.5354219639019687140874081024347e-8, +.9193275519859588946887786825940e-9, -.1577941280288339761767423273953e-9, +.2707980622934954543266540433089e-10, -.4646818653825730144081661058933e-11, +.7973350192007419656460767175359e-12, -.1368078209830916025799499172309e-12, +.2347319486563800657233471771688e-13, -.4027432614949066932766570534699e-14, +.6910051747372100912138336975257e-15, -.1185584500221992907052387126192e-15, +.2034148542496373955201026051932e-16, -.3490054341717405849274012949108e-17, +.5987993856485305567135051066026e-18, -.1027378057872228074490069778431e-18, +.1762702816060529824942759660748e-19, -.3024320653735306260958772112042e-20, +.5188914660218397839717833550506e-21, -.8902770842456576692449251601066e-22, +.1527474068493342602274596891306e-22, -.2620731256187362900257328332799e-23, +.4496464047830538670331046570666e-24, -.7714712731336877911703901525333e-25, +.1323635453126044036486572714666e-25, -.2270999412942928816702313813333e-26, +.3896418998003991449320816639999e-27, -.6685198115125953327792127999999e-28, +.1146998663140024384347613866666e-28, -.1967938586345134677295103999999e-29, +.3376448816585338090334890666666e-30, -.5793070335782135784625493333333e-31];
var ALGMCS = [+.1666389480451863247205729650822e+0, -.1384948176067563840732986059135e-4, +.9810825646924729426157171547487e-8, -.1809129475572494194263306266719e-10, +.6221098041892605227126015543416e-13, -.3399615005417721944303330599666e-15, +.2683181998482698748957538846666e-17, -.2868042435334643284144622399999e-19, +.3962837061046434803679306666666e-21, -.6831888753985766870111999999999e-23, +.1429227355942498147573333333333e-24, -.3547598158101070547199999999999e-26, +.1025680058010470912000000000000e-27, -.3401102254316748799999999999999e-29, +.1276642195630062933333333333333e-30];
var PNORM_A = [2.2352520354606839287, 161.02823106855587881, 1067.6894854603709582, 18154.981253343561249, 0.065682337918207449113];
var PNORM_B = [47.20258190468824187, 976.09855173777669322, 10260.932208618978205, 45507.789335026729956];
var PNORM_C = [0.39894151208813466764, 8.8831497943883759412, 93.506656132177855979, 597.27027639480026226, 2494.5375852903726711, 6848.1904505362823326, 11602.651437647350124, 9842.7148383839780218, 1.0765576773720192317e-8];
var PNORM_D = [22.266688044328115691, 235.38790178262499861, 1519.377599407554805, 6485.558298266760755, 18615.571640885098091, 34900.952721145977266, 38912.003286093271411, 19685.429676859990727];
var PNORM_P = [0.21589853405795699, 0.1274011611602473639, 0.022235277870649807, 0.001421619193227893466, 2.9112874951168792e-5, 0.02307344176494017303];
var PNORM_Q = [1.28426009614491121, 0.468238212480865118, 0.0659881378689285515, 0.00378239633202758244, 7.29751555083966205e-5];

var R_D__0 = function R_D__0(log_p) {
  return log_p ? -Infinity : 0.0;
};

var R_D__1 = function R_D__1(log_p) {
  return log_p ? 0.0 : 1.0;
};

var R_DT_0 = function R_DT_0(lower_tail, log_p) {
  return lower_tail ? R_D__0(log_p) : R_D__1(log_p);
};

var R_DT_1 = function R_DT_1(lower_tail, log_p) {
  return lower_tail ? R_D__1(log_p) : R_D__0(log_p);
}; // const R_D_half = () => (log_p ? -M_LN2 : 0.5);
// This is some sort of trick by using 0.5 - p + 0.5 to "perhaps gain 1 bit of accuracy"


var R_D_Lval = function R_D_Lval(p, lower_tail) {
  return lower_tail ? p : 0.5 - p + 0.5;
};

var R_D_Cval = function R_D_Cval(p, lower_tail) {
  return lower_tail ? 0.5 - p + 0.5 : p;
};

var R_D_val = function R_D_val(x, log_p) {
  return log_p ? Math.log(x) : x;
};

var R_D_log = function R_D_log(p, log_p) {
  return log_p ? p : Math.log(p);
};

var R_D_Clog = function R_D_Clog(p, log_p) {
  return log_p ? Math.log1p(-p) : 0.5 - p + 0.5;
};

var R_DT_val = function R_DT_val(x, lower_tail, log_p) {
  return lower_tail ? R_D_val(x, log_p) : R_D_Clog(x, log_p);
};

var R_D_LExp = function R_D_LExp(x, log_p) {
  return log_p ? R_Log1_Exp(x) : Math.log1p(-x);
}; // Be careful, for some reason they named two functions off by only 1 capital letter...
// R_DT_log != R_DT_Log


var R_DT_log = function R_DT_log(p, lower_tail) {
  return lower_tail ? R_D_log(p) : R_D_LExp(p);
};

var R_DT_Clog = function R_DT_Clog(p, lower_tail) {
  return lower_tail ? R_D_LExp(p) : R_D_log(p);
}; //const R_DT_Log = (p, lower_tail) => (lower_tail ? p : R_Log1_Exp(p));

/**
 * See warning for R_Q_P01_boundaries (this function should be wrapped in try/catch.)
 */


function R_Q_P01_check(p, log_p) {
  if (log_p && p > 0 || !log_p && (p < 0 || p > 1)) {
    throw ML_ERR_return_NAN();
  }
}
/**
 * Note this has changed from the R implementation which was a C macro.
 * You should wrap this in a try catch, like:
 * try {
 *   boundaries(...)
 * }
 * catch (e) { return e; }
 */


function R_Q_P01_boundaries(p, lower_tail, log_p, left, right) {
  if (log_p) {
    if (p > 0) {
      throw ML_ERR_return_NAN();
    }

    if (p === 0) {
      throw lower_tail ? right : left;
    }

    if (p === Number.NEGATIVE_INFINITY) {
      throw lower_tail ? left : right;
    }
  } else {
    if (p < 0 || p > 1) {
      throw ML_ERR_return_NAN();
    }

    if (p === 0) {
      throw lower_tail ? left : right;
    }

    if (p === 1) {
      throw lower_tail ? right : left;
    }
  }
}

function R_P_bounds_01(x, x_min, x_max, lower_tail, log_p) {
  if (x <= x_min) {
    throw R_DT_0(lower_tail, log_p);
  }

  if (x >= x_max) {
    throw R_DT_1(lower_tail, log_p);
  }
}

function R_DT_qIv(p, lower_tail, log_p) {
  if (log_p) {
    if (lower_tail) {
      return Math.exp(p);
    } else {
      return -Math.expm1(p);
    }
  } else {
    return R_D_Lval(p, lower_tail);
  }
}

function R_DT_CIv(p, lower_tail, log_p) {
  if (log_p) {
    if (lower_tail) {
      return -Math.expm1(p);
    } else {
      return Math.exp(p);
    }
  } else {
    return R_D_Cval(p);
  }
}

function fmin2(x, y) {
  if (isNaN(x) || isNaN(y)) {
    return x + y;
  }

  return x < y ? x : y;
}

function fmax2(x, y) {
  if (isNaN(x) || isNaN(y)) {
    return x + y;
  }

  return x < y ? y : x;
}

function expm1(x) {
  var y,
      a = Math.abs(x);

  if (a < DBL_EPSILON) {
    return x;
  }

  if (a > 0.697) {
    return Math.exp(x) - 1;
  }

  if (a > 1e-8) {
    y = Math.exp(x) - 1;
  } else {
    y = (x / 2 + 1) * x;
  }

  y -= (1 + y) * (Math.log1p(y) - x);
  return y;
}

function R_Log1_Exp(x) {
  return x > -M_LN2 ? Math.log(-Math.expm1(x)) : Math.log1p(-Math.exp(x));
}

function R_D_exp(x, log_p) {
  return log_p ? x : Math.exp(x);
}

function R_D_fexp(f, x, give_log) {
  return give_log ? -0.5 * Math.log(f) + x : Math.exp(x) / Math.sqrt(f);
}

function sinpi(x) {
  if (isNaN(x)) {
    return x;
  }

  if (!Number.isFinite(x)) {
    return NaN;
  }

  x = x % 2;

  if (x <= -1) {
    x += 2.0;
  } else if (x > 1.0) {
    x -= 2.0;
  }

  if (x == 0.0 || x == 1.0) {
    return 0.0;
  }

  if (x == 0.5) {
    return 1.0;
  }

  if (x == -0.5) {
    return -1.0;
  }

  return Math.sin(M_PI * x);
}

function chebyshev_eval(x, a, n) {
  var b0, b1, b2, twox, i;

  if (n < 1 || n > 1000) {
    return NaN;
  }

  if (x < -1.1 || x > 1.1) {
    return NaN;
  }

  twox = x * 2;
  b2 = b1 = 0;
  b0 = 0;

  for (i = 1; i <= n; i++) {
    b2 = b1;
    b1 = b0;
    b0 = twox * b1 - b2 + a[n - i];
  }

  return (b0 - b2) * 0.5;
}

function lgammacor(x) {
  var tmp;
  var nalgm = 5;
  var xbig = 94906265.62425156;
  var xmax = 3.745194030963158e306;

  if (x < 10) {
    return NaN;
  } else if (x > xmax) {
    throw "lgammacor underflow";
  } else if (x < xbig) {
    tmp = 10 / x;
    return chebyshev_eval(tmp * tmp * 2 - 1, ALGMCS, nalgm) / x;
  }

  return 1 / (x * 12);
}

function gammafn(x) {
  var i, n, y, sinpiy, value;
  var ngam = 22;
  var xmin = -170.5674972726612;
  var xmax = 171.61447887182298;
  var xsml = 2.2474362225598545e-308;

  if (isNaN(x)) {
    return x;
  }

  if (x == 0 || x < 0 && x == Math.round(x)) {
    return NaN;
  }

  y = Math.abs(x);

  if (y <= 10) {
    n = parseInt(x, 10);

    if (x < 0) {
      n--;
    }

    y = x - n;
    n--;
    value = chebyshev_eval(y * 2 - 1, GAMCS, ngam) + .9375;

    if (n == 0) {
      return value;
    }

    if (n < 0) {
      if (x < -0.5 && Math.abs(x - parseInt(x - 0.5, 10) / x) < DXREL) {
        throw "gammafn precision error";
      }

      if (x < xsml) {
        return x > 0 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;
      }

      n = -n;

      for (i = 0; i < n; i++) {
        value /= x + i;
      }

      return value;
    } else {
      for (i = 1; i <= n; i++) {
        value *= y + i;
      }

      return value;
    }
  } else {
    if (x > xmax) {
      return Number.POSITIVE_INFINITY;
    }

    if (x < xmin) {
      return 0;
    }

    if (y <= 50 && y == parseInt(y, 10)) {
      value = 1;

      for (i = 2; i < y; i++) {
        value *= i;
      }
    } else {
      value = Math.exp((y - 0.5) * Math.log(y) - y - M_LN_SQRT_2PI + (2 * y == parseInt(2 * y, 10) ? stirlerr(y) : lgammacor(y)));
    }

    if (x > 0) {
      return value;
    }

    if (Math.abs(x - parseInt(x - 0.5, 10) / x) < DXREL) {
      throw "gammafn precision error";
    }

    sinpiy = sinpi(y);

    if (sinpiy == 0) {
      return Number.POSITIVE_INFINITY;
    }

    return -M_PI / (y * sinpiy * value);
  }
}

function lgammafn_sign(x) {
  var ans, y, sinpiy; //sgn = 1;

  var xmax = 2.5327372760800758e+305;

  if (isNaN(x)) {
    return x;
  }

  if (x < 0 && Math.floor(-x) % 2 == 0) {//sgn = -1;
  }

  if (x <= 0 && x == Math.trunc(x)) {
    return Number.POSITIVE_INFINITY;
  }

  y = Math.abs(x);
  if (y < 1e-306) return -Math.log(y);
  if (y <= 10) return Math.log(Math.abs(gammafn(x)));

  if (y > xmax) {
    return Number.POSITIVE_INFINITY;
  }

  if (x > 0) {
    if (x > 1e17) {
      return x * (Math.log(x) - 1);
    } else if (x > 4934720.) {
      return M_LN_SQRT_2PI + (x - 0.5) * Math.log(x) - x;
    } else {
      return M_LN_SQRT_2PI + (x - 0.5) * Math.log(x) - x + lgammacor(x);
    }
  }

  sinpiy = Math.abs(sinpi(y));

  if (sinpiy == 0) {
    return NaN;
  }

  if (Math.abs((x - Math.trunc(x - 0.5)) * ans / x) < DXREL) {
    throw "lgamma precision error";
  }

  return ans;
}

function lgammafn(x) {
  return lgammafn_sign(x, null);
}

function stirlerr(n) {
  var nn;

  if (n <= 15) {
    nn = n + n;

    if (nn == Math.floor(nn)) {
      return SFERR_HALVES[Math.floor(nn)];
    }

    return lgammafn(n + 1.0) - (n + 0.5) * Math.log(n) + n - M_LN_SQRT_2PI;
  }

  nn = n * n;

  if (n > 500) {
    return (S0 - S1 / nn) / n;
  }

  if (n > 80) {
    return (S0 - (S1 - S2 / nn) / nn) / n;
  }

  if (n > 35) {
    return (S0 - (S1 - (S2 - S3 / nn) / nn) / nn) / n;
  }

  return (S0 - (S1 - (S2 - (S3 - S4 / nn) / nn) / nn) / nn) / n;
}

function bd0(x, np) {
  var ej, s, s1, v, j;

  if (!Number.isFinite(x) || !Number.isFinite(np) || np == 0) {
    return NaN;
  }

  if (Math.abs(x - np) < 0.1 * (x + np)) {
    v = (x - np) / (x + np);
    s = (x - np) * v;

    if (Math.abs(s) < DBL_MIN) {
      return s;
    }

    ej = 2 * x * v;
    v = v * v;

    for (j = 1; j < 1000; j++) {
      ej *= v;
      s1 = s + ej / (j * 2 + 1);

      if (s1 == s) {
        return s1;
      }

      s = s1;
    }
  }

  return x * Math.log(x / np) + np - x;
}

function dpois_raw(x, lambda, give_log) {
  if (lambda == 0) {
    return x == 1 ? R_D(1, give_log) : R_D(0, give_log);
  }

  if (!Number.isFinite(lambda)) {
    return R_D(0, give_log);
  }

  if (x < 0) {
    return R_D(0, give_log);
  }

  if (x <= lambda * DBL_MIN) {
    return R_D_exp(-lambda, give_log);
  }

  if (lambda < x * DBL_MIN) {
    return R_D_exp(-lambda + x * Math.log(lambda) - lgammafn(x + 1), give_log);
  }

  return R_D_fexp(M_2PI * x, -stirlerr(x) - bd0(x, lambda), give_log);
}

function logcf(x, i, d, eps) {
  var c1 = 2 * d;
  var c2 = i + d;
  var c3;
  var c4 = c2 + d;
  var a1 = c2;
  var b1 = i * (c2 - i * x);
  var b2 = d * d * x;
  var a2 = c4 * c2 - b2;
  b2 = c4 * b1 - i * b2;

  while (Math.abs(a2 * b1 - a1 * b2) > Math.abs(eps * b1 * b2)) {
    c3 = c2 * c2 * x;
    c2 += d;
    c4 += d;
    a1 = c4 * a2 - c3 * a1;
    b1 = c4 * b2 - c3 * b1;
    c3 = c1 * c1 * x;
    c1 += d;
    c4 += d;
    a2 = c4 * a1 - c3 * a2;
    b2 = c4 * b1 - c3 * b2;

    if (Math.abs(b2) > SCALE_FACTOR) {
      a1 /= SCALE_FACTOR;
      a2 /= SCALE_FACTOR;
      b1 /= SCALE_FACTOR;
      b2 /= SCALE_FACTOR;
    } else if (Math.abs(b2) < 1 / SCALE_FACTOR) {
      a1 *= SCALE_FACTOR;
      a2 *= SCALE_FACTOR;
      b1 *= SCALE_FACTOR;
      b2 *= SCALE_FACTOR;
    }
  }

  return a2 / b2;
}

function log1pmx(x) {
  var minLog1Value = -0.79149064;

  if (x > 1 || x < minLog1Value) {
    return Math.log1p(x) - x;
  } else {
    var r = x / (2 + x);
    var y = r * r;

    if (Math.abs(x) < 1e-2) {
      return r * ((((2 / 9 * y + 2 / 7) * y + 2 / 5) * y + 2 / 3) * y - x);
    } else {
      return r * (2 * y * logcf(y, 3, 2, TOL_LOGCF) - x);
    }
  }
}

function lgamma1p(a) {
  if (Math.abs(a) >= 0.5) {
    return lgammafn(a + 1);
  }

  var lgam, i;
  lgam = LGAMMA_C * logcf(-a / 2, LGAMMA_COEFS.length + 2, 1, TOL_LOGCF);

  for (i = LGAMMA_COEFS.length - 1; i >= 0; i--) {
    lgam = LGAMMA_COEFS[i] - a * lgam;
  }

  return (a * lgam - EULERS_CONST) * a - log1pmx(a);
}

function logspace_add(logx, logy) {
  return (logx > logy ? logx : logy) + Math.log1p(Math.exp(-Math.abs(logx - logy)));
} // function logspace_sub(logx, logy) {
//   return logx + R_Log1_Exp(logy - logx);
// }
// function logspace_sum(logx, n) {
//   if (n == 0) {
//     return Number.NEGATIVE_INFINITY;
//   }
//   if (n == 1) {
//     return logx[0];
//   }
//   if (n == 2) {
//     return logspace_add(logx[0] + logx[1]);
//   }
//   var i;
//   var Mx = logx[0];
//   for (i = 1; i < n; i++) {
//     if (Mx < logx[i]) {
//       Mx = logx[i];
//     }
//   }
//   var s = 0;
//   for (i = 0; i < n; i++) {
//     s += Math.exp(logx[i] - Mx);
//   }
//   return Mx + Math.log(s);
// }


function dpois_wrap(x_plus_1, lambda, give_log) {
  if (!isFinite(lambda)) {
    return R_D(0, give_log);
  }

  if (x_plus_1 > 1) {
    return dpois_raw(x_plus_1 - 1, lambda, give_log);
  }

  if (lambda > Math.abs(x_plus_1 - 1) * M_CUTOFF) {
    return R_D_exp(-lambda - lgammafn(x_plus_1), give_log);
  } else {
    var d = dpois_raw(x_plus_1, lambda, give_log);
    return give_log ? d + Math.log(x_plus_1 / lambda) : d * (x_plus_1 / lambda);
  }
}

function R_D(i, log_p) {
  if (i === 0) {
    return log_p ? Number.NEGATIVE_INFINITY : 0;
  } else {
    return log_p ? 0 : 1;
  }
}

function R_DT(i, lower_tail, log_p) {
  if (i === 0) {
    return lower_tail ? R_D(0, log_p) : R_D(1, log_p);
  } else {
    return lower_tail ? R_D(1, log_p) : R_D(0, log_p);
  }
}

function pgamma_smallx(x, alph, lower_tail, log_p) {
  var sum = 0,
      c = alph,
      n = 0,
      term;

  do {
    n++;
    c *= -x / n;
    term = c / (alph + n);
    sum += term;
  } while (Math.abs(term) > DBL_EPSILON * Math.abs(sum));

  if (lower_tail) {
    var f1 = log_p ? Math.log1p(sum) : 1 + sum;
    var f2;

    if (alph > 1) {
      f2 = dpois_raw(alph, x, log_p);
      f2 = log_p ? f2 + x : f2 * Math.exp(x);
    } else if (log_p) {
      f2 = alph * Math.log(x) - lgamma1p(alph);
    } else {
      f2 = Math.pow(x, alph) / Math.exp(lgamma1p(alph));
    }

    return log_p ? f1 + f2 : f1 * f2;
  } else {
    var lf2 = alph * Math.log(x) - lgamma1p(alph);

    if (log_p) {
      return R_Log1_Exp(Math.log1p(sum) + lf2);
    } else {
      var f1m1 = sum;
      var f2m1 = Math.expm1(lf2);
      return -(f1m1 + f2m1 + f1m1 * f2m1);
    }
  }
}

function pd_upper_series(x, y, log_p) {
  var term = x / y;
  var sum = term;

  do {
    y++;
    term *= x / y;
    sum += term;
  } while (term > sum * DBL_EPSILON);

  return log_p ? Math.log(sum) : sum;
}

function pd_lower_cf(y, d) {
  var f = 0,
      of,
      f0;
  var i, c2, c3, c4, a1, b1, a2, b2;

  if (y == 0) {
    return 0;
  }

  f0 = y / d;

  if (Math.abs(y - 1) < Math.abs(d) * DBL_EPSILON) {
    return f0;
  }

  if (f0 > 1.0) {
    f0 = 1.0;
  }

  c2 = y;
  c4 = d;
  a1 = 0;
  b1 = 1;
  a2 = y;
  b2 = d;

  while (b2 > SCALE_FACTOR) {
    a1 /= SCALE_FACTOR;
    b1 /= SCALE_FACTOR;
    a2 /= SCALE_FACTOR;
    b2 /= SCALE_FACTOR;
  }

  i = 0;
  of = -1;

  while (i < 200000) {
    i++;
    c2--;
    c3 = i * c2;
    c4 += 2;
    a1 = c4 * a2 + c3 * a1;
    b1 = c4 * b2 + c3 * b1;
    i++;
    c2--;
    c3 = i * c2;
    c4 += 2;
    a2 = c4 * a1 + c3 * a2;
    b2 = c4 * b1 + c3 * b2;

    if (b2 > SCALE_FACTOR) {
      a1 /= SCALE_FACTOR;
      b1 /= SCALE_FACTOR;
      a2 /= SCALE_FACTOR;
      b2 /= SCALE_FACTOR;
    }

    if (b2 != 0) {
      f = a2 / b2;

      if (Math.abs(f - of) <= DBL_EPSILON * (Math.abs(f) > f0 ? Math.abs(f) : f0)) {
        return f;
      }

      of = f;
    }
  } //WARNING - NON CONVERGENCE


  return f;
}

function pd_lower_series(lambda, y) {
  var term = 1,
      sum = 0;

  while (y >= 1 && term > sum * DBL_EPSILON) {
    term *= y / lambda;
    sum += term;
    y--;
  }

  if (y !== Math.floor(y)) {
    var f = pd_lower_cf(y, lambda + 1 - y);
    sum += term * f;
  }

  return sum;
}

function dpnorm(x, lower_tail, lp) {
  if (x < 0) {
    x = -x;
    lower_tail = !lower_tail;
  }

  if (x > 10 && !lower_tail) {
    var term = 1 / x,
        sum = term,
        x2 = x * x,
        i = 1;

    do {
      term *= -i / x2;
      sum += term;
      i += 2;
    } while (Math.abs(term) > DBL_EPSILON * sum);

    return 1 / sum;
  } else {
    var d = dnorm(x, 0.0, 1.0, false);
    return d / Math.exp(lp);
  }
}

function ppois_asymp(x, lambda, lower_tail, log_p) {
  var coefs_a = POIS_COEFS_A,
      coefs_b = POIS_COEFS_B;
  var elfb, elfb_term;
  var res12, res1_term, res1_ig, res2_term, res2_ig;
  var dfm, pt_, s2pt, f, np;
  var i;
  dfm = lambda - x;
  pt_ = -log1pmx(dfm / x);
  s2pt = Math.sqrt(2 * x * pt_);

  if (dfm < 0) {
    s2pt = -s2pt;
  }

  res12 = 0;
  res1_ig = res1_term = Math.sqrt(x);
  res2_ig = res2_term = s2pt;

  for (i = 1; i < 8; i++) {
    res12 += res1_ig * coefs_a[i];
    res12 += res2_ig * coefs_b[i];
    res1_term *= pt_ / i;
    res2_term *= 2 * pt_ / (2 * i + 1);
    res1_ig = res1_ig / x + res1_term;
    res2_ig = res2_ig / x + res2_term;
  }

  elfb = x;
  elfb_term = 1;

  for (i = 1; i < 8; i++) {
    elfb += elfb_term * coefs_b[i];
    elfb_term /= x;
  }

  if (!lower_tail) {
    elfb = -elfb;
  }

  f = res12 / elfb;
  np = pnorm(s2pt, 0.0, 1.0, !lower_tail, log_p);

  if (log_p) {
    var n_d_over_p = dpnorm(s2pt, !lower_tail, np);
    return np + Math.log1p(f * n_d_over_p);
  } else {
    var nd = dnorm(s2pt, 0.0, 1.0, log_p);
    return np + f * nd;
  }
}

function pgamma_raw(x, alph, lower_tail, log_p) {
  var res, d, sum;

  try {
    R_P_bounds_01(x, 0.0, Number.POSITIVE_INFINITY, lower_tail, log_p);
  } catch (e) {
    return e;
  }

  if (x < 1) {
    res = pgamma_smallx(x, alph, lower_tail, log_p);
  } else if (x <= alph - 1 && x < 0.8 * (alph + 50)) {
    // incl large alph compared to x
    sum = pd_upper_series(x, alph, log_p);
    d = dpois_wrap(alph, x, log_p);

    if (!lower_tail) {
      res = log_p ? R_Log1_Exp(d + sum) : 1 - d * sum;
    } else {
      res = log_p ? sum + d : sum * d;
    }
  } else if (alph - 1 < x && alph < 0.8 * (x + 50)) {
    // incl large x compared to alph
    d = dpois_wrap(alph, x, log_p);

    if (alph < 1) {
      if (x * DBL_EPSILON > 1 - alph) {
        sum = R_D(0, log_p);
      } else {
        var f = pd_lower_cf(alph, x - (alph - 1)) * x / alph;
        sum = log_p ? Math.log(f) : f;
      }
    } else {
      sum = pd_lower_series(x, alph - 1);
      sum = log_p ? Math.log1p(sum) : 1 + sum;
    }

    if (!lower_tail) {
      res = log_p ? sum + d : sum * d;
    } else {
      res = log_p ? R_Log1_Exp(d + sum) : 1 - d * sum;
    }
  } else {
    //x >=1 and x near alph
    res = ppois_asymp(alph - 1, x, !lower_tail, log_p);
  }

  if (!log_p && res < DBL_MIN / DBL_EPSILON) {
    return Math.exp(pgamma_raw(x, alph, lower_tail, true));
  } else {
    return res;
  }
} // function dpois(x, lambda, give_log) {
//   if (lambda < 0) {
//     return NaN;
//   }
//   if (x % 1 != 0) {
//     return NaN;
//   }
//   if (x < 0 || !Number.isFinite(x)) {
//     return R_D(0, give_log);
//   }
//   return dpois_raw(x, lambda, give_log);
//
// }


function pgamma(x, alph, scale, lower_tail, log_p) {
  if (isNaN(x) || alph < 0 || scale < 0) {
    return NaN;
  }

  x /= scale;

  if (alph == 0) {
    return x <= 0 ? R_DT(0, lower_tail, log_p) : R_DT(1, lower_tail, log_p);
  }

  return pgamma_raw(x, alph, lower_tail, log_p);
}
/**
 * The gamma density function.
 * @param x
 * @param shape
 * @param scale
 * @param give_log
 * @return {number|*}
 */


function dgamma(x, shape, scale, give_log) {
  x = parseNumeric(x);
  shape = parseNumeric(shape);
  scale = parseNumeric(scale);
  give_log = parseBoolean(give_log);
  var pr;

  if (isNaN(x) || isNaN(shape) || isNaN(scale)) {
    return x + shape + scale;
  }

  if (shape < 0 || scale <= 0) {
    ML_ERR_return_NAN;
  }

  if (x < 0) {
    return R_D__0(give_log);
  }

  if (shape === 0) {
    return x === 0 ? Infinity : R_D__0(give_log);
  }

  if (x === 0) {
    if (shape < 1) {
      return Infinity;
    }

    if (shape > 1) {
      return R_D__0(give_log);
    }

    return give_log ? -Math.log(scale) : 1 / scale;
  }

  if (shape < 1) {
    pr = dpois_raw(shape, x / scale, give_log);
    return give_log ? pr + Math.log(shape / x) : pr * shape / x;
  }

  pr = dpois_raw(shape - 1, x / scale, give_log);
  return give_log ? pr - Math.log(scale) : pr / scale;
}
/**
 * The chi-squared density function.
 * @param x
 * @param df
 * @param give_log
 * @return {number|*}
 */

function dchisq(x, df, give_log) {
  return dgamma(x, df / 2.0, 2.0, give_log);
}
/**
 * The chi-squared cumulative distribution function.
 *
 * Supports the non-centrality parameter ncp.
 *
 * @param x {number} Value.
 * @param df {number} Degrees of freedom.
 * @param ncp {number} Non-centrality parameter.
 * @param lower_tail {boolean} Return cumulative probability from lower tail?
 * @param log_p {boolean} Return log probability
 */

function pchisq(x, df) {
  var ncp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  var lower_tail = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
  var log_p = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  x = parseNumeric(x);
  df = parseNumeric(df);
  ncp = parseNumeric(ncp);
  lower_tail = parseBoolean(lower_tail);
  log_p = parseBoolean(log_p);

  if (ncp === 0) {
    return pgamma(x, df / 2.0, 2.0, lower_tail, log_p);
  } else {
    return pnchisq(x, df, ncp, lower_tail, log_p);
  }
}

function pnchisq(q, df) {
  var ncp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  var lower_tail = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
  var log_p = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

  if (df < 0 || ncp < 0) {
    return NaN;
  }

  var ans = pnchisq_raw(q, df, ncp, 1e-12, 8 * DBL_EPSILON, 1000000, lower_tail, log_p);

  if (ncp >= 80) {
    if (lower_tail) {
      ans = fmin2(ans, R_D__1(log_p));
    } else {
      if (ans < (log_p ? -10.0 * M_LN10 : 1e-10)) {
        ML_ERROR(ME_PRECISION, "pnchisq");
      }

      if (!log_p) {
        ans = fmax2(ans, 0.0);
      }
    }
  }

  if (!log_p || ans < -1e-8) {
    return ans;
  } else {
    ans = pnchisq_raw(q, df, ncp, 1e-12, 8 * DBL_EPSILON, 1000000, !lower_tail, false);
    return Math.log1p(-ans);
  }
}

function pnchisq_raw(x, f, theta, errmax, reltol, itrmax, lower_tail, log_p) {
  var lam, x2, f2, term, bound, f_x_2n, f_2n;
  var l_lam = -1.0;
  var l_x = -1.0;
  var n;
  var lamSml, tSml, is_r, is_b, is_it;
  var ans,
      u,
      v,
      t,
      lt,
      lu = -1;

  if (x <= 0.0) {
    if (x === 0.0 && f === 0.0) {
      var _L = -0.5 * theta;

      return lower_tail ? R_D_exp(_L, log_p) : log_p ? R_Log1_Exp(_L) : -expm1(_L);
    }

    return R_DT_0(lower_tail, log_p);
  }

  if (!isFinite(x)) {
    return R_DT_1(lower_tail, log_p);
  }

  if (theta < 80) {
    var _ans;

    if (lower_tail && f > 0.0 && Math.log(x) < M_LN2 + 2 / f * (lgammafn(f / 2.0 + 1) + _dbl_min_exp)) {
      var lambda = 0.5 * theta;
      var sum,
          sum2,
          pr = -lambda;
      sum = sum2 = -Infinity;

      for (var i = 0; i < 110; pr === Math.log(lambda) - Math.log(++i)) {
        sum2 = logspace_add(sum2, pr);
        sum = logspace_add(sum, pr + pchisq(x, f + 2 * i, 0, lower_tail, true));
        if (sum2 >= -1e-15) break;
      }

      _ans = sum - sum2;
      return log_p ? _ans : Math.exp(_ans);
    } else {
      var _lambda = 0.5 * theta;

      var _sum = 0,
          _sum2 = 0,
          _pr = Math.exp(-_lambda);
      /* we need to renormalize here: the result could be very close to 1 */


      for (var _i = 0; _i < 110; _pr *= _lambda / ++_i) {
        _sum2 += _pr;
        _sum += _pr * pchisq(x, f + 2 * _i, 0, lower_tail, false);
        if (_sum2 >= 1 - 1e-15) break;
      }

      _ans = _sum / _sum2;
      return log_p ? Math.log(_ans) : _ans;
    }
  }

  lam = .5 * theta;
  lamSml = -lam < _dbl_min_exp;

  if (lamSml) {
    u = 0;
    lu = -lam;
    /* == ln(u) */

    l_lam = Math.log(lam);
  } else {
    u = Math.exp(-lam);
  }

  v = u;
  x2 = .5 * x;
  f2 = .5 * f;
  f_x_2n = f - x;

  if (f2 * DBL_EPSILON > 0.125 && Math.abs(t = x2 - f2) < Math.sqrt(DBL_EPSILON) * f2) {
    lt = (1 - t) * (2 - t / (f2 + 1)) - M_LN_SQRT_2PI - 0.5 * Math.log(f2 + 1);
  } else {
    lt = f2 * Math.log(x2) - x2 - lgammafn(f2 + 1);
  }

  tSml = lt < _dbl_min_exp;

  if (tSml) {
    if (x > f + theta + 5 * Math.sqrt(2 * (f + 2 * theta))) {
      return R_DT_1(lower_tail, log_p);
    }

    l_x = Math.log(x);
    ans = term = 0.;
    t = 0;
  } else {
    t = Math.exp(lt);
    ans = term = v * t;
  }

  for (n = 1, f_2n = f + 2., f_x_2n += 2.;; n++, f_2n += 2, f_x_2n += 2) {
    if (f_x_2n > 0) {
      bound = t * x / f_x_2n;
      is_b = bound <= errmax;
      is_r = term <= reltol * ans;
      is_it = n > itrmax;

      if (is_b && is_r || is_it) {
        break;
      }
    }

    if (lamSml) {
      lu += l_lam - Math.log(n);
      /* u = u* lam / n */

      if (lu >= _dbl_min_exp) {
        /* no underflow anymore ==> change regime */
        v = u = Math.exp(lu);
        /* the first non-0 'u' */

        lamSml = false;
      }
    } else {
      u *= lam / n;
      v += u;
    }

    if (tSml) {
      lt += l_x - Math.log(f_2n);
      /* t <- t * (x / f2n) */

      if (lt >= _dbl_min_exp) {
        /* no underflow anymore ==> change regime */
        t = Math.exp(lt);
        /* the first non-0 't' */

        tSml = false;
      }
    } else {
      t *= x / f_2n;
    }

    if (!lamSml && !tSml) {
      term = v * t;
      ans += term;
    }
  }

  if (is_it) {
    console.error("pnchisq(x=".concat(x, ",...) not converged in ").concat(itrmax));
  }

  var dans = ans;
  return R_DT_val(dans, lower_tail, log_p);
}

function qnorm(p, mu, sigma, lower_tail, log_p) {
  var p_, q, r, val;

  if (isNaN(p) || isNaN(mu) || isNaN(sigma)) {
    return p + mu + sigma;
  }

  try {
    R_Q_P01_boundaries(p, lower_tail, log_p, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY);
  } catch (e) {
    return e;
  }

  if (sigma < 0) {
    return ML_ERR_return_NAN();
  }

  if (sigma === 0) {
    return mu;
  }

  p_ = R_DT_qIv(p, lower_tail, log_p);
  q = p_ - 0.5;

  if (Math.abs(q) <= .425) {
    /* 0.075 <= p <= 0.925 */
    r = .180625 - q * q;
    val = q * (((((((r * 2509.0809287301226727 + 33430.575583588128105) * r + 67265.770927008700853) * r + 45921.953931549871457) * r + 13731.693765509461125) * r + 1971.5909503065514427) * r + 133.14166789178437745) * r + 3.387132872796366608) / (((((((r * 5226.495278852854561 + 28729.085735721942674) * r + 39307.89580009271061) * r + 21213.794301586595867) * r + 5394.1960214247511077) * r + 687.1870074920579083) * r + 42.313330701600911252) * r + 1.);
  } else {
    /* closer than 0.075 from {0,1} boundary */

    /* r = min(p, 1-p) < 0.075 */
    if (q > 0) {
      r = R_DT_CIv(p, lower_tail, log_p);
      /* 1-p */
    } else {
      r = p_;
      /* = R_DT_Iv(p) ^=  p */
    }

    r = Math.sqrt(-(log_p && (lower_tail && q <= 0 || !lower_tail && q > 0) ? p :
    /* else */
    Math.log(r)));
    /* r = sqrt(-log(r))  <==>  min(p, 1-p) = exp( - r^2 ) */

    if (r <= 5.) {
      /* <==> min(p,1-p) >= exp(-25) ~= 1.3888e-11 */
      r += -1.6;
      val = (((((((r * 7.7454501427834140764e-4 + .0227238449892691845833) * r + .24178072517745061177) * r + 1.27045825245236838258) * r + 3.64784832476320460504) * r + 5.7694972214606914055) * r + 4.6303378461565452959) * r + 1.42343711074968357734) / (((((((r * 1.05075007164441684324e-9 + 5.475938084995344946e-4) * r + .0151986665636164571966) * r + .14810397642748007459) * r + .68976733498510000455) * r + 1.6763848301838038494) * r + 2.05319162663775882187) * r + 1.);
    } else {
      /* very close to  0 or 1 */
      r += -5.;
      val = (((((((r * 2.01033439929228813265e-7 + 2.71155556874348757815e-5) * r + .0012426609473880784386) * r + .026532189526576123093) * r + .29656057182850489123) * r + 1.7848265399172913358) * r + 5.4637849111641143699) * r + 6.6579046435011037772) / (((((((r * 2.04426310338993978564e-15 + 1.4215117583164458887e-7) * r + 1.8463183175100546818e-5) * r + 7.868691311456132591e-4) * r + .0148753612908506148525) * r + .13692988092273580531) * r + .59983220655588793769) * r + 1.);
    }

    if (q < 0.0) {
      val = -val;
    }
    /* return (q >= 0.)? r : -r ;*/

  }

  return mu + sigma * val;
}

function qchisq_appr(p, nu, g, lower_tail, log_p, tol) {
  var C7 = 4.67;
  var C8 = 6.66;
  var C9 = 6.73;
  var C10 = 13.32;
  var alpha, a, c, ch, p1;
  var p2, q, t, x;

  if (isNaN(p) || isNaN(nu)) {
    return p + nu;
  }

  try {
    R_Q_P01_check(p, log_p);
  } catch (e) {
    return e;
  }

  if (nu <= 0) {
    return ML_ERR_return_NAN();
  }

  alpha = 0.5 * nu;
  c = alpha - 1;

  if (nu < -1.24 * (p1 = R_DT_log(p))) {
    var lgam1pa = alpha < 0.5 ? lgamma1p(alpha) : Math.log(alpha) + g;
    ch = Math.exp((lgam1pa + p1) / alpha + M_LN2);
  } else if (nu > 0.32) {
    x = qnorm(p, 0, 1, lower_tail, log_p);
    p1 = 2.0 / (9 * nu);
    ch = nu * Math.pow(x * Math.sqrt(p1) + 1 - p1, 3);

    if (ch > 2.2 * nu + 6) {
      ch = -2 * (R_DT_Clog(p, lower_tail) - c * Math.log(0.5 * ch) + g);
    }
  } else {
    ch = 0.4;
    a = R_DT_Clog(p, lower_tail) + g + c * M_LN2;

    do {
      q = ch;
      p1 = 1.0 / (1 + ch * (C7 + ch));
      p2 = ch * (C9 + ch * (C8 + ch));
      t = -0.5 + (C7 + 2 * ch) * p1 - (C9 + ch * (C10 + 3 * ch)) / p2;
      ch -= (1 - Math.exp(a + 0.5 * ch) * p2 * p1) / t;
    } while (Math.abs(q - ch) > tol * Math.abs(ch));
  }

  return ch;
}
/**
 * Inverse CDF / quantile function of gamma distribution.
 * @param p
 * @param alpha
 * @param scale
 * @param lower_tail
 * @param log_p
 * @return {*|number|number|*}
 */


function qgamma(p, alpha, scale, lower_tail, log_p) {
  var EPS1 = 1e-2;
  var EPS2 = 5e-7;
  var EPS_N = 1e-15; //const LN_EPS = -36.043653389117156;

  var MAXIT = 1000;
  var pMIN = 1e-100;
  var pMAX = 1 - 1e-14;
  var i420 = 1.0 / 420.0;
  var i2520 = 1.0 / 2520.0;
  var i5040 = 1.0 / 5040.0;
  var p_, a, b, c, g, ch, ch0, p1;
  var p2, q, s1, s2, s3, s4, s5, s6, t, x;
  var max_it_Newton = 1;

  if (isNaN(p) || isNaN(alpha) || isNaN(scale)) {
    return p + alpha + scale;
  }

  try {
    R_Q_P01_boundaries(p, lower_tail, log_p, 0.0, Number.POSITIVE_INFINITY);
  } catch (e) {
    return e;
  }

  if (alpha < 0 || scale <= 0) {
    return ML_ERR_return_NAN();
  }

  if (alpha === 0) {
    return 0.0;
  }

  if (alpha < 1e-10) {
    max_it_Newton = 7;
  }

  p_ = R_DT_qIv(p, lower_tail, log_p);
  g = lgammafn(alpha); // Closure to mimic the ugly 'goto END' everywhere

  function end() {
    x = 0.5 * scale * ch;

    if (max_it_Newton) {
      if (!log_p) {
        p = Math.log(p);
        log_p = true;
      }

      if (x === 0) {
        var _1_p = 1.0 + 1e-7;

        var _1_m = 1.0 - 1e-7;

        x = DBL_MIN;
        p_ = pgamma(x, alpha, scale, lower_tail, log_p);

        if (lower_tail && p_ > p * _1_p || !lower_tail && p_ < p * _1_m) {
          return 0.0;
        }
      } else {
        p_ = pgamma(x, alpha, scale, lower_tail, log_p);
      }

      if (p_ === Number.NEGATIVE_INFINITY) {
        return 0;
      }
    }

    for (var i = 1; i <= max_it_Newton; i++) {
      p1 = p_ - p;

      if (Math.abs(p1) < Math.abs(EPS_N * p)) {
        break;
      }

      if ((g = dgamma(x, alpha, scale, log_p)) === R_D__0(log_p)) {
        break;
      }

      t = log_p ? p1 * Math.exp(p_ - g) : p1 / g;
      t = lower_tail ? x - t : x + t;
      p_ = pgamma(t, alpha, scale, lower_tail, log_p);

      if (Math.abs(p_ - p) > Math.abs(p1) || i > 1 && Math.abs(p_ - p) === Math.abs(p1)) {
        break;
      }
      /*
      // This code appears to be never triggered in R, or rather I'm unable to find where
      // Harmful_notably_if_max_it_Newton_is_1 is ever defined
      if (t > 1.1*x) { t = 1.1 * x; }
      else if (t < 0.9*x) { t = 0.9 * x; }
       */


      x = t;
    }

    return x;
  }

  ch = qchisq_appr(p, 2 * alpha, g, lower_tail, log_p, EPS1);

  if (!isFinite(ch)) {
    max_it_Newton = 0;
    return end();
  }

  if (ch < EPS2) {
    max_it_Newton = 20;
    return end();
  }

  if (p_ > pMAX || p_ < pMIN) {
    max_it_Newton = 20;
    return end();
  }

  c = alpha - 1;
  s6 = (120 + c * (346 + 127 * c)) * i5040;
  ch0 = ch;

  for (var i = 1; i <= MAXIT; i++) {
    q = ch;
    p1 = 0.5 * ch;
    p2 = p_ - pgamma_raw(p1, alpha, true, false);

    if (!isFinite(p2) || ch <= 0) {
      ch = ch0;
      max_it_Newton = 27;
      return end();
    }

    t = p2 * Math.exp(alpha * M_LN2 + g + p1 - c * Math.log(ch));
    b = t / ch;
    a = 0.5 * t - b * c;
    s1 = (210 + a * (140 + a * (105 + a * (84 + a * (70 + 60 * a))))) * i420;
    s2 = (420 + a * (735 + a * (966 + a * (1141 + 1278 * a)))) * i2520;
    s3 = (210 + a * (462 + a * (707 + 932 * a))) * i2520;
    s4 = (252 + a * (672 + 1182 * a) + c * (294 + a * (889 + 1740 * a))) * i5040;
    s5 = (84 + 2264 * a + c * (1175 + 606 * a)) * i2520;
    ch += t * (1 + 0.5 * t * s1 - b * c * (s1 - b * (s2 - b * (s3 - b * (s4 - b * (s5 - b * s6))))));

    if (Math.abs(q - ch) < EPS2 * ch) {
      return end();
    }

    if (Math.abs(q - ch) > 0.1 * ch) {
      if (ch < q) {
        ch = 0.9 * q;
      } else {
        ch = 1.1 * q;
      }
    }
  }

  return end();
}
/**
 * Inverse CDF / quantile function for chi-squared distribution.
 * @param p
 * @param df
 * @param lower_tail
 * @param log_p
 * @return {*|number}
 */

function qchisq(p, df) {
  var ncp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  var lower_tail = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
  var log_p = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

  if (ncp !== 0) {
    throw 'Non-central chi-squared not yet supported';
  }

  return qgamma(p, 0.5 * df, 2.0, lower_tail, log_p);
}

function pnorm_both(x, i_tail, log_p) {
  var cum, ccum;
  var xden, xnum, temp, del, eps, xsq, y;
  var i, lower, upper;
  var a = PNORM_A,
      b = PNORM_B,
      c = PNORM_C,
      d = PNORM_D,
      p = PNORM_P,
      q = PNORM_Q;

  if (isNaN(x)) {
    return {
      cum: NaN,
      ccum: NaN
    };
  }

  eps = DBL_EPSILON * 0.5;
  lower = i_tail != 1;
  upper = i_tail != 0;
  y = Math.abs(x);

  if (y <= 0.67448975) {
    if (y > eps) {
      xsq = x * x;
      xnum = a[4] * xsq;
      xden = xsq;

      for (i = 0; i < 3; ++i) {
        xnum = (xnum + a[i]) * xsq;
        xden = (xden + b[i]) * xsq;
      }
    } else {
      xnum = xden = 0.0;
    }

    temp = x * (xnum + a[3]) / (xden + b[3]);

    if (lower) {
      cum = 0.5 + temp;
    }

    if (upper) {
      ccum = 0.5 - temp;
    }

    if (log_p) {
      if (lower) {
        cum = Math.log(cum);
      }

      if (upper) {
        ccum = Math.log(ccum);
      }
    }
  } else if (y <= M_SQRT_32) {
    xnum = c[8] * y;
    xden = y;

    for (i = 0; i < 7; ++i) {
      xnum = (xnum + c[i]) * y;
      xden = (xden + d[i]) * y;
    }

    temp = (xnum + c[7]) / (xden + d[7]); //do del (x)

    xsq = Math.trunc(y * 16) / 16;
    del = (y - xsq) * (y + xsq);

    if (log_p) {
      cum = -xsq * xsq * 0.5 + -del * 0.5 + Math.log(temp);

      if (lower && x > 0.0 || upper && x <= 0.0) {
        ccum = Math.log1p(-Math.exp(-xsq * xsq * 0.5) * Math.exp(-del * 0.5) * temp);
      }
    } else {
      cum = Math.exp(-xsq * xsq * 0.5) * Math.exp(-del * 0.5) * temp;
      ccum = 1.0 - cum;
    } //swap tail


    if (x > 0.) {
      temp = cum;

      if (lower) {
        cum = ccum;
      }

      ccum = temp;
    }
  } else if (log_p && y < 1e170 || lower && -37.5193 < x && x < 8.2924 || upper && -8.2924 && x < 37.5193) {
    xsq = 1.0 / (x * x);
    xnum = p[5] * xsq;
    xden = xsq;

    for (i = 0; i < 4; ++i) {
      xnum = (xnum + p[i]) * xsq;
      xden = (xden + q[i]) * xsq;
    }

    temp = xsq * (xnum + p[4]) / (xden + q[4]);
    temp = (M_1_SQRT_2PI - temp) / y; //do del(x)

    xsq = Math.trunc(x * 16) / 16;
    del = (x - xsq) * (x + xsq);

    if (log_p) {
      cum = -xsq * xsq * 0.5 + -del * 0.5 + Math.log(temp);

      if (lower && x > 0.0 || upper && x <= 0.0) {
        ccum = Math.log1p(-Math.exp(-xsq * xsq * 0.5) * Math.exp(-del * 0.5) * temp);
      }
    } else {
      cum = Math.exp(-xsq * xsq * 0.5) * Math.exp(-del * 0.5) * temp;
      ccum = 1.0 - cum;
    } //swap tail


    if (x > 0.) {
      temp = cum;

      if (lower) {
        cum = ccum;
      }

      ccum = temp;
    }
  } else {
    if (x > 0) {
      cum = R_D(1, log_p);
      ccum = R_D(0, log_p);
    } else {
      cum = R_D(0, log_p);
      ccum = R_D(1, log_p);
    }
  } //TODO left off here


  return {
    cum: cum,
    ccum: ccum
  };
}

function pnorm(x, mu, sigma, lower_tail, log_p) {
  var p;

  if (isNaN(x) || isNaN(mu) || isNaN(sigma)) {
    return NaN;
  }

  if (!Number.isFinite(x) && mu === x) {
    return NaN;
  }

  if (sigma <= 0) {
    if (sigma < 0) {
      return NaN;
    }

    return x < mu ? R_DT_0(lower_tail, log_p) : R_DT_1(lower_tail, log_p);
  }

  p = (x - mu) / sigma;

  if (!Number.isFinite(p)) {
    return x < mu ? R_DT_0(lower_tail, log_p) : R_DT_1(lower_tail, log_p);
  }

  x = p;
  var r = pnorm_both(x, lower_tail ? 0 : 1, log_p);
  return lower_tail ? r.cum : r.ccum;
}
/**
 * The normal cumulative distribution function.
 *
 * @function pnorm
 * @param x {number} Value.
 * @param mu {number} Mean of the normal distribution.
 * @param sigma {number} Standard deviation of the normal distribution.
 * @param lower_tail {boolean} Should the cumulative probability returned be calculated as the lower tail?
 * @param give_log {boolean} Return log probability
 */


function _pnorm(x, mu, sigma, lower_tail, give_log) {
  x = parseNumeric(x);
  mu = parseNumeric(mu, 0);
  sigma = parseNumeric(sigma, 1);
  lower_tail = parseBoolean(lower_tail, true);
  give_log = parseBoolean(give_log, false);
  return pnorm(x, mu, sigma, lower_tail, give_log);
}



function dnorm(x, mu, sigma, give_log) {
  if (isNaN(x) || isNaN(mu) || isNaN(sigma)) {
    return x + mu + sigma;
  }

  if (!Number.isFinite(sigma)) {
    return R_D(0, give_log);
  }

  if (!Number.isFinite(x) && mu == x) {
    return NaN;
  }

  if (sigma <= 0) {
    if (sigma < 0) {
      return NaN;
    }

    return x == mu ? Number.POSITIVE_INFINITY : R_D(0, give_log);
  }

  x = (x - mu) / sigma;

  if (!Number.isFinite(x)) {
    return R_D(0, give_log);
  }

  x = Math.abs(x);

  if (x >= 2 * Math.sqrt(DBL_MAX)) {
    return R_D(0, give_log);
  }

  if (give_log) {
    return -(M_LN_SQRT_2PI + 0.5 * x * x + Math.log(sigma));
  } //fast version


  return M_1_SQRT_2PI * Math.exp(-0.5 * x * x) / sigma;
}

function lbeta(a, b) {
  var corr, p, q;
  p = q = a;
  if (b < p) p = b;
  if (b > q) q = b;

  if (p < 0) {
    return ML_ERR_return_NAN();
  } else if (p === 0) {
    return Number.POSITIVE_INFINITY;
  } else if (!isFinite(q)) {
    return Number.NEGATIVE_INFINITY;
  }

  if (p >= 10) {
    corr = lgammacor(p) + lgammacor(q) - lgammacor(p + q);
    return Math.log(q) * -0.5 + M_LN_SQRT_2PI + corr + (p - 0.5) * Math.log(p / (p + q)) + q * Math.log1p(-p / (p + q));
  } else if (q >= 10) {
    corr = lgammacor(q) - lgammacor(p + q);
    return lgammafn(p) + corr + p - p * Math.log(p + q) + (q - 0.5) * Math.log1p(-p / (p + q));
  } else {
    if (p < 1e-306) return lgammafn(p) + (lgammafn(q) - lgammafn(p + q));else return Math.log(gammafn(p) * (gammafn(q) / gammafn(p + q)));
  }
}

function dbinom_raw(x, n, p, q, give_log) {
  var lf, lc;
  if (p === 0) return x === 0 ? R_D__1(give_log) : R_D__0(give_log);
  if (q === 0) return x === n ? R_D__1(give_log) : R_D__0(give_log);

  if (x === 0) {
    if (n === 0) return R_D__1(give_log);
    lc = p < 0.1 ? -bd0(n, n * q) - n * p : n * Math.log(q);
    return R_D_exp(lc, give_log);
  }

  if (x === n) {
    lc = q < 0.1 ? -bd0(n, n * p) - n * q : n * Math.log(p);
    return R_D_exp(lc, give_log);
  }

  if (x < 0 || x > n) return R_D__0(give_log);
  lc = stirlerr(n) - stirlerr(x) - stirlerr(n - x) - bd0(x, n * p) - bd0(n - x, n * q);
  lf = M_LN_2PI + Math.log(x) + Math.log1p(-x / n);
  return R_D_exp(lc - 0.5 * lf, give_log);
}

function dbeta(x, a, b, give_log) {
  if (a < 0 || b < 0) ML_ERR_return_NAN();
  if (x < 0 || x > 1) return R_D__0(give_log);

  if (a === 0 || b === 0 || !isFinite(a) || !isFinite(b)) {
    if (a === 0 && b === 0) {
      if (x === 0 || x === 1) return Number.POSITIVE_INFINITY;else return R_D__0(give_log);
    }

    if (a === 0 || a / b === 0) {
      if (x === 0) return Number.POSITIVE_INFINITY;else return R_D__0(give_log);
    }

    if (b === 0 || b / a === 0) {
      if (x === 1) return Number.POSITIVE_INFINITY;else return R_D__0(give_log);
    }

    if (x === 0.5) return Number.POSITIVE_INFINITY;else return R_D__0(give_log);
  }

  if (x === 0) {
    if (a > 1) return R_D__0(give_log);
    if (a < 1) return Number.POSITIVE_INFINITY;
    return R_D_val(b, give_log);
  }

  if (x === 1) {
    if (b > 1) return R_D__0(give_log);
    if (b < 1) return Number.POSITIVE_INFINITY;
    return R_D_val(a, give_log);
  }

  var lval;

  if (a <= 2 || b <= 2) {
    lval = (a - 1) * Math.log(x) + (b - 1) * Math.log1p(-x) - lbeta(a, b);
  } else {
    lval = Math.log(a + b - 1) + dbinom_raw(a - 1, a + b - 2, x, 1 - x, true);
  }

  return R_D_exp(lval, give_log);
}
/**
 * The beta density function.
 *
 * The non-central beta distribution parameter is not implemented currently.
 *
 * @function dbeta
 * @param x {number} Value.
 * @param shape1 {number} The first shape parameter, or "alpha."
 * @param shape2 {number} The second shape parameter, or "beta."
 * @param log {boolean} Should the result be returned in log scale.
 * @return {number} Probability density evaluated at x.
 */


function _dbeta(x, shape1, shape2, log) {
  x = parseNumeric(x);
  shape1 = parseNumeric(shape1);
  shape2 = parseNumeric(shape2); //ncp = parseNumeric(ncp, 0);

  log = parseBoolean(log, false);
  return dbeta(x, shape1, shape2, log);
}



function parseNumeric(x, default_value) {
  if (typeof x === "undefined") {
    return default_value;
  }

  return +x;
}

function parseBoolean(x, default_value) {
  if (typeof x === "undefined") {
    return default_value;
  }

  return !!((x || "false") != "false");
} // Will slowly roll this into export statements as-needed
// const rollup = {
//   dnorm: function (x, mu, sigma, give_log) {
//     x = +x;
//     mu = parseNumeric(mu, 0);
//     sigma = parseNumeric(sigma, 1);
//     give_log = parseBoolean(give_log, false);
//     return dnorm(x, mu, sigma, give_log);
//   },
//   pnorm: function (x, mu, sigma, lower_tail, give_log) {
//     x = parseNumeric(x);
//     mu = parseNumeric(mu, 0);
//     sigma = parseNumeric(sigma, 1);
//     lower_tail = parseBoolean(lower_tail, true);
//     give_log = parseBoolean(give_log, false);
//     return pnorm(x, mu, sigma, lower_tail, give_log);
//   },
//   pchisq: function (x, df, ncp, lower_tail, give_log) {
//     x = parseNumeric(x);
//     df = parseNumeric(df);
//     ncp = parseNumeric(ncp,0);
//     lower_tail = parseBoolean(lower_tail, true);
//     give_log = parseBoolean(give_log, false);
//     return pchisq(x, df, ncp, lower_tail, give_log);
//   },
//   pgamma: function (q, shape, scale, lower_tail, give_log) {
//     q = parseNumeric(q);
//     shape = parseNumeric(shape);
//     scale = parseNumeric(scale, 1);
//     lower_tail = parseBoolean(lower_tail, true);
//     give_log = parseBoolean(give_log, false);
//     return pgamma(q, shape, scale, lower_tail, give_log);
//   },
//   dpois: function (x, lambda, log) {
//     x = parseNumeric(x);
//     lambda = parseNumeric(lambda);
//     log = parseBoolean(log, false);
//     return dpois(x, lambda, log);
//   }
// };
// CONCATENATED MODULE: ./src/app/linalg.js

/**
 * Return the cholesky decomposition A = GG'. The matrix G is returned.
 * @param A
 * @return {*}
 */

function cholesky(A) {
  var n = A.length;
  var G = numeric_1_2_6_default.a.rep([n, n], 0);

  for (var i = 0; i < n; i++) {
    for (var j = 0; j <= i; j++) {
      var s = A[j][i];

      for (var k = 0; k <= j - 1; k++) {
        s = s - G[j][k] * G[i][k];
      }

      if (j < i) {
        G[i][j] = s / G[j][j];
      } else {
        G[i][i] = Math.sqrt(s);
      }
    }
  }

  return G;
}
// EXTERNAL MODULE: ./src/app/mvtdstpack.js
var mvtdstpack = __webpack_require__(12);

// EXTERNAL MODULE: ./src/app/integral.js
var integral = __webpack_require__(13);

// CONCATENATED MODULE: ./src/app/stats.js








/**
 * Calculate group-based tests from score statistics.
 *
 * @module stats
 * @license MIT
 */





 // Functions using WASM will be defined inside a single promise- sort of a meta-module
//   Because the webassembly code is loaded asynchronously, anything using any module method will need to be
//   resolved asynchronously as well.

var MVT_WASM_HELPERS = new Promise(function (resolve, reject) {
  // The emscripten "module" doesn't return a true promise, so it can't be chained in the traditional sense.
  // This syntax is a hack that allows us to wrap the wasm module with our helper functions and access those helpers.
  try {
    Object(mvtdstpack["a" /* default */])().then(function (module) {
      function makeDoubleVec(size) {
        var v = new module.DoubleVec();
        v.resize(size, NaN);
        return v;
      }

      function makeIntVec(size) {
        var v = new module.IntVec();
        v.resize(size, NaN);
        return v;
      }

      function copyToDoubleVec(arr) {
        var constructor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : module.DoubleVec;
        var v = new constructor();

        for (var i = 0; i < arr.length; i++) {
          v.push_back(arr[i]);
        }

        return v;
      }

      function pmvnorm(lower, upper, mean, sigma) {
        var n = sigma.length;
        var infin = makeIntVec(n);
        var delta = makeDoubleVec(n);
        var corrF = makeDoubleVec(n * (n - 1) / 2);
        var corr = cov2cor(sigma); // Populate corrF

        for (var j = 0; j < n; j++) {
          for (var i = j + 1; i < n; i++) {
            var k = j + 1 + (i - 1) * i / 2 - 1;
            corrF.set(k, corr[i][j]);
          }
        } // Calculate limits


        for (var _i = 0; _i < n; _i++) {
          delta.set(_i, 0.0);

          if (lower[_i] !== Infinity && lower[_i] !== -Infinity) {
            lower[_i] = (lower[_i] - mean[_i]) / Math.sqrt(sigma[_i][_i]);
          }

          if (upper[_i] !== Infinity && upper[_i] !== -Infinity) {
            upper[_i] = (upper[_i] - mean[_i]) / Math.sqrt(sigma[_i][_i]);
          }

          if (lower[_i] === -Infinity) {
            infin.set(_i, 0);
          }

          if (upper[_i] === Infinity) {
            infin.set(_i, 1);
          }

          if (lower[_i] === -Infinity && upper[_i] === Infinity) {
            infin.set(_i, -1);
          }

          if (lower[_i] !== -Infinity && upper[_i] !== Infinity) {
            infin.set(_i, 2);
          }

          if (lower[_i] === -Infinity) {
            lower[_i] = 0;
          }

          if (upper[_i] === Infinity) {
            upper[_i] = 0;
          }
        }

        var inform = 0;
        var value = 0.0;
        var error = 0.0;
        var df = 0;
        var maxpts = 50000;
        var abseps = 0.001;
        var releps = 0.0;
        var sum = 0;

        for (var _i2 = 0; _i2 < n; _i2++) {
          sum += infin.get(_i2);
        }

        if (sum === -n) {
          inform = 0;
          value = 1.0;
        } else {
          var _module$mvtdst = module.mvtdst(n, df, copyToDoubleVec(lower), copyToDoubleVec(upper), infin, corrF, delta, maxpts, abseps, releps);

          error = _module$mvtdst.error;
          inform = _module$mvtdst.inform;
          value = _module$mvtdst.value;
        }

        if (inform === 3) {
          // Need to make correlation matrix positive definite
          var trial = 0;

          while (inform > 1 && trial < 100) {
            var eig = numeric_1_2_6_default.a.eig(corr, 100000);
            var lambdas = eig.lambda.x;

            for (var _i3 = 0; _i3 < n; _i3++) {
              if (lambdas[_i3] < 0) {
                lambdas[_i3] = 0.0;
              }
            }

            var D = numeric_1_2_6_default.a.diag(lambdas);
            var V = eig.E.x;
            corr = numeric_1_2_6_default.a.dot(numeric_1_2_6_default.a.dot(V, D), numeric_1_2_6_default.a.transpose(V));
            var corr_diag = Array(n);

            for (var _i4 = 0; _i4 < n; _i4++) {
              corr_diag[_i4] = corr[_i4][_i4];
            }

            var norm = numeric_1_2_6_default.a.dot(numeric_1_2_6_default.a.transpose([corr_diag]), [corr_diag]);

            for (var _j = 0; _j < n; _j++) {
              for (var _i5 = _j + 1; _i5 < n; _i5++) {
                var _k = _j + 1 + (_i5 - 1) * _i5 / 2 - 1;

                corrF.set(_k, corr[_i5][_j] / Math.sqrt(norm[_i5][_j]));
              }
            }

            var _module$mvtdst2 = module.mvtdst(n, df, copyToDoubleVec(lower), copyToDoubleVec(upper), infin, corrF, delta, maxpts, abseps, releps);

            error = _module$mvtdst2.error;
            inform = _module$mvtdst2.inform;
            value = _module$mvtdst2.value;
          }

          if (inform > 1) {
            value = -1.0;
          }
        }

        return {
          error: error,
          inform: inform,
          value: value
        };
      }

      var helper_module = {
        makeDoubleVec: makeDoubleVec,
        makeIntVec: makeIntVec,
        copyToDoubleVec: copyToDoubleVec,
        pmvnorm: pmvnorm
      };
      resolve(helper_module);
    });
  } catch (error) {
    reject(error);
  }
});

function emptyRowMatrix(nrows, ncols) {
  var m = new Array(nrows);

  for (var i = 0; i < nrows; i++) {
    m[i] = new Array(ncols).fill(NaN);
  }

  return m;
}

function cov2cor(sigma) {
  var corr = emptyRowMatrix(sigma.length, sigma[0].length);

  for (var i = 0; i < sigma.length; i++) {
    for (var j = i; j < sigma[0].length; j++) {
      if (i === j) {
        corr[i][j] = 1.0;
      } else {
        var v = sigma[i][j] / (Math.sqrt(sigma[i][i]) * Math.sqrt(sigma[j][j]));
        corr[i][j] = v;
        corr[j][i] = v;
      }
    }
  }

  return corr;
}

function get_conditional_dist(scores, cov, comb) {
  var result = new Array(2).fill(0.0);
  var mu2 = [];
  var dim = comb.length - 1;
  var sub_cov = emptyRowMatrix(dim, dim);

  for (var i = 0; i < dim; i++) {
    var idx1 = comb[i + 1];
    mu2[i] = scores[idx1];

    for (var j = 0; j < dim; j++) {
      var idx2 = comb[j + 1];
      sub_cov[i][j] = cov[idx1][idx2];
    }
  }

  var inv = numeric_1_2_6_default.a.inv(sub_cov);
  var sigma12 = new Array(dim).fill(NaN);

  for (var _i6 = 0; _i6 < dim; _i6++) {
    var _idx = comb[0];
    var _idx2 = comb[_i6 + 1];
    sigma12[_i6] = cov[_idx][_idx2];
  }

  var tmp = new Array(dim).fill(0.0);

  for (var _i7 = 0; _i7 < dim; _i7++) {
    tmp[_i7] += numeric_1_2_6_default.a.dot(sigma12, inv[_i7]);
  }

  result[0] = numeric_1_2_6_default.a.dot(tmp, mu2);
  result[1] = 1.0 - numeric_1_2_6_default.a.dot(tmp, sigma12);

  if (result[1] < 0) {
    result[1] = Math.abs(result[1]);
  }

  return result;
}
/**
 * Calculates MVT p-value directly from scores/covariance and maximum test statistic.
 * TODO: ask Shaung or Goncalo where this comes from?
 * @param scores
 * @param cov_t
 * @param t_max
 * @return {*|number}
 */


function calculate_mvt_pvalue(scores, cov_t, t_max) {
  var pvalue = 0.0;
  var dim = scores.length;
  var chisq = t_max * t_max;
  var jointProbHash = {};

  if (dim === 1) {
    pvalue = pchisq(chisq, 1, 0, 0);
    return pvalue;
  }

  var uni = pchisq(chisq, 1, 0, 0);
  pvalue += dim * uni;
  var indx = [];

  var alpha = toConsumableArray_default()(Array(dim).keys()); // 0, 1, 2, 3... dim


  for (var r = 2; r <= dim; r++) {
    var j = r;
    var k = r;
    var comb = [];
    var par = [];

    for (var twk = j; twk <= k; twk++) {
      var _r = twk;
      var done = true;

      for (var iwk = 0; iwk < _r; iwk++) {
        indx.push(iwk);
      }

      while (done) {
        done = false;

        for (var owk = 0; owk < _r; owk++) {
          comb.push(alpha[indx[owk]]);
        }

        par = get_conditional_dist(scores, cov_t, comb);

        var _chisq = void 0,
            condProb = void 0,
            prob = void 0;

        if (par[1] === 0.0) {
          condProb = 0.0;
        } else {
          _chisq = (t_max - par[0]) * (t_max - par[0]) / par[1];

          if (_chisq < 0) {
            _chisq = -_chisq;
          }

          condProb = pchisq(_chisq, 1, 0, 0);
        }

        var hashKey = "";

        if (_r === 2) {
          hashKey += comb[0];
          hashKey += comb[1];
          prob = condProb * uni;
          jointProbHash[hashKey] = prob;
          hashKey = "";
        } else {
          for (var i = 1; i < _r; i++) {
            hashKey += comb[i];
          }

          prob = jointProbHash[hashKey];
          prob *= condProb;
          var newKey = "";
          newKey += comb[0];
          newKey += hashKey;
          jointProbHash[newKey] = prob;
          hashKey = "";
        }

        pvalue -= prob;
        comb = [];

        for (var _iwk = _r - 1; _iwk >= 0; _iwk--) {
          if (indx[_iwk] <= dim - 1 - (_r - _iwk)) {
            indx[_iwk]++;

            for (var swk = _iwk + 1; swk < _r; swk++) {
              indx[swk] = indx[swk - 1] + 1;
            }

            _iwk = -1;
            done = true;
          }
        }
      }

      indx = [];
    }
  }

  return pvalue;
}
/**
 * Base class for all aggregation tests.
 */


var stats_AggregationTest =
/*#__PURE__*/
function () {
  function AggregationTest() {
    classCallCheck_default()(this, AggregationTest);

    this.label = '';
    this.key = '';
    this.requiresMaf = false;
  }

  createClass_default()(AggregationTest, [{
    key: "run",
    value: function run(u, v, w, mafs) {
      // todo update docstrings and call sigs
      throw new Error("Method must be implemented in a subclass");
    }
  }]);

  return AggregationTest;
}();
/**
 * Standard burden test that collapses rare variants into a total count of rare alleles observed per sample
 * in a group (e.g. gene). <p>
 *
 * See {@link https://genome.sph.umich.edu/wiki/RAREMETAL_METHOD#BURDEN_META_ANALYSIS|our wiki page} for more information.
 * Also see the {@link https://www.ncbi.nlm.nih.gov/pubmed/19810025|paper} describing the method.
 *
 * @extends AggregationTest
 */


var stats_ZegginiBurdenTest =
/*#__PURE__*/
function (_AggregationTest) {
  inherits_default()(ZegginiBurdenTest, _AggregationTest);

  function ZegginiBurdenTest() {
    var _this;

    classCallCheck_default()(this, ZegginiBurdenTest);

    _this = possibleConstructorReturn_default()(this, getPrototypeOf_default()(ZegginiBurdenTest).apply(this, arguments));
    _this.key = 'burden';
    _this.label = 'Burden';
    return _this;
  }
  /**
   * Default weight function for burden test. All variants weighted equally. Only requires the number of variants
   * since they are all given the same weight value.
   * @param n {number} Number of variants.
   * @return {number[]} An array of weights, one per variant.
   */


  createClass_default()(ZegginiBurdenTest, [{
    key: "run",

    /**
     * Calculate burden test from vector of score statistics and variances.
     *
     * @param {Number[]} u Vector of score statistics (length m, number of variants)
     * @param {Number[]} v Covariance matrix of score statistics
     * @param {Number[]} w Weight vector (length m, number of variants)
     * @return {Number[]} Burden test statistic z and p-value
     */
    value: function run(u, v, w) {
      for (var _i8 = 0, _arr = [u, v]; _i8 < _arr.length; _i8++) {
        var e = _arr[_i8];

        if (!Array.isArray(e) || !e.length) {
          throw 'Please provide all required arrays';
        }
      }

      if (!(u.length === v.length)) {
        throw 'u and v must be same length';
      }

      if (w != null) {
        if (w.length !== u.length) {
          throw 'w vector must be same length as score vector u';
        }
      } else {
        w = ZegginiBurdenTest.weights(u.length);
      } // This is taken from:
      // https://genome.sph.umich.edu/wiki/RAREMETAL_METHOD#BURDEN_META_ANALYSIS


      var over = numeric_1_2_6_default.a.dot(w, u);
      var under = Math.sqrt(numeric_1_2_6_default.a.dot(numeric_1_2_6_default.a.dot(w, v), w));
      var z = over / under; // The -Math.abs(z) is because pnorm returns the lower tail probability from the normal dist
      // The * 2 is for a two-sided p-value.

      var p = _pnorm(-Math.abs(z), 0, 1) * 2;
      return [z, p];
    }
  }], [{
    key: "weights",
    value: function weights(n) {
      return new Array(n).fill(1 / n);
    }
  }]);

  return ZegginiBurdenTest;
}(stats_AggregationTest);

function _vt(maf_cutoffs, u, v, mafs) {
  // Calculate score statistic and cov weight matrix for each MAF cutoff.
  var cov_weight = emptyRowMatrix(maf_cutoffs.length, u.length);
  var t_max = -Infinity;
  var scores = Array(maf_cutoffs.length).fill(0.0);
  maf_cutoffs.map(function (m, i) {
    // Weight is 1 if MAF < cutoff, otherwise 0.
    var w = mafs.map(function (maf) {
      return maf <= m ? 1 : 0;
    });
    cov_weight[i] = w; // Calculate burden t-statistic for this maf cutoff

    var numer = numeric_1_2_6_default.a.dot(w, u);
    var denom = numeric_1_2_6_default.a.dot(numeric_1_2_6_default.a.dot(w, v), w);
    var t_stat = Math.abs(numer / Math.sqrt(denom));
    scores.push(t_stat);

    if (t_stat > t_max) {
      t_max = t_stat;
    }
  }); // Did we calculate any valid scores?

  if (Math.max.apply(Math, toConsumableArray_default()(scores)) === 0.0) {
    throw 'No scores were able to be calculated for this group';
  } // Calculate covariance matrix


  var cov_u = numeric_1_2_6_default.a.dot(numeric_1_2_6_default.a.dot(cov_weight, v), numeric_1_2_6_default.a.transpose(cov_weight));
  var cov_t = cov2cor(cov_u);
  return [scores, cov_t, t_max];
}
/**
 * Variable threshold test (VT). <p>
 */


var stats_VTTest =
/*#__PURE__*/
function (_AggregationTest2) {
  inherits_default()(VTTest, _AggregationTest2);

  function VTTest() {
    var _this2;

    classCallCheck_default()(this, VTTest);

    _this2 = possibleConstructorReturn_default()(this, getPrototypeOf_default()(VTTest).apply(this, arguments));
    _this2.label = 'Variable Threshold';
    _this2.key = 'vt';
    _this2.requiresMaf = true;
    _this2._method = 'auto';
    return _this2;
  }
  /**
   * This code corresponds roughly to: https://github.com/statgen/raremetal/blob/2c82cfc5710dbd9fd56ef67a7ca5f74772d4e70d/raremetal/src/Meta.cpp#L3456
   * @param u
   * @param v
   * @param w This parameter is ignored for VT. Weights are calculated automatically from mafs.
   * @param mafs
   * @return Promise
   */


  createClass_default()(VTTest, [{
    key: "run",
    value: function run(u, v, w, mafs) {
      // Uses wasm, returns a promise
      if (w != null) {
        throw 'w vector is not accepted in with VT test';
      } // Figure out MAF cutoffs. This tries every possible MAF cutoff given a list of all MAFs.


      var maf_cutoffs = [];

      var sorted_mafs = toConsumableArray_default()(mafs).sort();

      for (var i = 0; i < mafs.length; i++) {
        if (sorted_mafs[i] > maf_cutoffs.slice(-1)) {
          maf_cutoffs.push(sorted_mafs[i]);
        }
      } // Try calculating scores/t-stat covariance the first time (may need refinement later).


      var _vt2 = _vt(maf_cutoffs, u, v, mafs),
          _vt3 = slicedToArray_default()(_vt2, 3),
          scores = _vt3[0],
          cov_t = _vt3[1],
          t_max = _vt3[2];

      var lower = new Array(maf_cutoffs.length).fill(-t_max);
      var upper = new Array(maf_cutoffs.length).fill(t_max);
      var mean = new Array(maf_cutoffs.length).fill(0);
      return MVT_WASM_HELPERS.then(function (module) {
        var result = module.pmvnorm(lower, upper, mean, cov_t);
        var pvalue;

        if (result.value === -1.0) {
          throw 'Error: correlation matrix is not positive semi-definite';
        } else if (result.value === 1.0) {
          // Use Shuang's algorithm
          if (maf_cutoffs.length > 20) {
            maf_cutoffs = maf_cutoffs.slice(-20);

            var _vt4 = _vt(maf_cutoffs, u, v, mafs),
                _vt5 = slicedToArray_default()(_vt4, 3),
                _scores = _vt5[0],
                _cov_t = _vt5[1],
                _t_max = _vt5[2];

            pvalue = calculate_mvt_pvalue(_scores, _cov_t, _t_max);
          } else {
            pvalue = calculate_mvt_pvalue(scores, cov_t, t_max);
          }
        } else {
          pvalue = 1.0 - result.value;
        }

        if (pvalue > 1.0) {
          pvalue = 1.0;
        }

        return [t_max, pvalue];
      });
    }
  }]);

  return VTTest;
}(stats_AggregationTest);
/**
 * Sequence kernel association test (SKAT). <p>
 *
 * See the {@link https://www.cell.com/ajhg/fulltext/S0002-9297%2811%2900222-9|original paper} for details on the
 * method, and {@link https://genome.sph.umich.edu/wiki/RAREMETAL_METHOD#SKAT_META_ANALYSIS|our wiki} for information
 * on how the test is calculated using scores/covariances. <p>
 *
 * @extends AggregationTest
 */


var stats_SkatTest =
/*#__PURE__*/
function (_AggregationTest3) {
  inherits_default()(SkatTest, _AggregationTest3);

  function SkatTest() {
    var _this3;

    classCallCheck_default()(this, SkatTest);

    _this3 = possibleConstructorReturn_default()(this, getPrototypeOf_default()(SkatTest).apply(this, arguments));
    _this3.label = 'SKAT';
    _this3.key = 'skat';
    _this3.requiresMaf = true;
    /**
     * Skat test method. Only used for dev/testing.
     * Should not be set by user.
     * @private
     * @type {string}
     */

    _this3._method = 'auto';
    return _this3;
  }
  /**
   * Calculate typical SKAT weights using beta density function.
   *
   * @function
   * @param mafs {number[]} Array of minor allele frequencies.
   * @param a {number} alpha defaults to 1.
   * @param b {number} beta defaults to 25.
   */


  createClass_default()(SkatTest, [{
    key: "run",

    /**
     * Calculate SKAT test. <p>
     *
     * The distribution function of the SKAT test statistic is evaluated using Davies' method by default.
     * In the special case where there is only 1 lambda, the Liu moment matching approximation method is used. <p>
     *
     * @function
     * @param {Number[]} u Vector of score statistics (length m, number of variants).
     * @param {Number[]} v Covariance matrix of score statistics (m x m).
     * @param {Number[]} w Weight vector (length m, number of variants). If weights are not provided, they will
     *  be calculated using the default weights() method of this object.
     * @param {Number[]} mafs A vector of minor allele frequencies. These will be used to calculate weights if
     *  they were not provided.
     * @return {Number[]} SKAT p-value.
     */
    value: function run(u, v, w, mafs) {
      // Calculate weights (if necessary)
      if (w === undefined || w === null) {
        w = SkatTest.weights(mafs);
      } // Calculate Q


      var q = numeric_1_2_6_default.a.dot(numeric_1_2_6_default.a.dot(u, numeric_1_2_6_default.a.diag(w)), u);
      /**
       * Code to calculate eigenvalues from V^(1/2) * W * V^(1/2)
       * This first decomposes V = U * S * U' (SVD on symmetric normal matrix results in this, instead of U * S * V').
       * If we take sqrt(S), then U * sqrt(S) * U' is a square root of the original matrix V. For a diagonal matrix,
       * sqrt(S) is just the sqrt(s_i) of each individual diagonal element.
       * Then we just take the dot product of (U * sqrt(S) * U') * W * (U * sqrt(S) * U'), which is V^(1/2) * W * V^(1/2).
       * Finally we compute SVD of that matrix, and take the singular values as the eigenvalues.
       */

      var lambdas;

      try {
        var svd = numeric_1_2_6_default.a.svd(v);
        var sqrtS = numeric_1_2_6_default.a.sqrt(svd.S);
        var uT = numeric_1_2_6_default.a.transpose(svd.U);
        var eigenRhs = numeric_1_2_6_default.a.dot(numeric_1_2_6_default.a.dot(svd.U, numeric_1_2_6_default.a.diag(sqrtS)), uT);
        var eigenLhs = numeric_1_2_6_default.a.dot(eigenRhs, numeric_1_2_6_default.a.diag(w));
        var eigen = numeric_1_2_6_default.a.dot(eigenLhs, eigenRhs);
        var finalSvd = numeric_1_2_6_default.a.svd(eigen);
        lambdas = numeric_1_2_6_default.a.abs(finalSvd.S);
      } catch (error) {
        console.log(error);
        return [NaN, NaN];
      }

      if (numeric_1_2_6_default.a.sum(lambdas) < 0.0000000001) {
        console.error("Sum of lambda values for SKAT test is essentially zero");
        return [NaN, NaN];
      } // P-value method


      if (this._method === 'liu') {
        // Only for debug purposes
        return _skatLiu(lambdas, q);
      } else if (this._method === 'davies') {
        return _skatDavies(lambdas, q);
      } else if (this._method === 'auto') {
        if (lambdas.length === 1) {
          // Davies method does not support 1 lambda
          // This is what raremetal does
          return _skatLiu(lambdas, q);
        } else {
          var daviesResult = _skatDavies(lambdas, q);

          if (isNaN(daviesResult[1])) {
            // Davies' method could not converge. Use R-SKAT's approach instead.
            return _skatLiu(lambdas, q);
          } else {
            return daviesResult;
          }
        }
      } else {
        throw new Error("Skat method ".concat(this._method, " not implemented"));
      }
    }
  }], [{
    key: "weights",
    value: function weights(mafs) {
      var a = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
      var b = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 25;
      var weights = Array(mafs.length).fill(null);

      for (var i = 0; i < mafs.length; i++) {
        var w = _dbeta(mafs[i], a, b, false);
        w *= w;
        weights[i] = w;
      }

      return weights;
    }
  }]);

  return SkatTest;
}(stats_AggregationTest);
/**
 * Calculate SKAT p-value using Davies method.
 * @function
 * @param lambdas Eigenvalues of sqrtV * W * sqrtV.
 * @param qstat SKAT test statistic U.T * W * U.
 * @return {Number[]} Array of [Q statistic, p-value].
 * @private
 */


function _skatDavies(lambdas, qstat) {
  /**
   * lambdas - coefficient of jth chi-squared variable
   * nc1 - non-centrality parameters
   * n1 - degrees of freedom
   * n - number of chi-squared variables
   * sigma - coefficient of standard normal variable
   * qstat - point at which cdf is to be evaluated (this is SKAT Q stat usually)
   * lim1 - max number of terms in integration
   * acc - maximum error
   * trace - array into which the following is stored:
   *   trace[0]	absolute sum
   *   trace[1]	total number of integration terms
   *   trace[2]	number of integrations
   *   trace[3]	integration interval in final integration
   *   trace[4]	truncation point in initial integration
   *   trace[5]	s.d. of initial convergence factor
   *   trace[6]	cycles to locate integration parameters
   * ifault - array into which the following fault codes are stored:
   *   0 normal operation
   *   1 required accuracy not achieved
   *   2 round-off error possibly significant
   *   3 invalid parameters
   *   4 unable to locate integration parameters
   *   5 out of memory
   * res - store final value into this variable
   */
  var n = lambdas.length;
  var nc1 = Array(n).fill(0);
  var n1 = Array(n).fill(1);
  var sigma = 0.0;
  var lim1 = 10000;
  var acc = 0.0001;
  var res = qf(lambdas, nc1, n1, n, sigma, qstat, lim1, acc);
  var qfval = res[0];
  var pval = 1.0 - qfval;
  var converged = res[1] === 0 && pval > 0 && pval <= 1;

  if (!converged) {
    pval = NaN;
  }

  return [qstat, pval];
}
/**
 * Calculate SKAT p-value using Liu method.
 * @param lambdas Eigenvalues of sqrtV * W * sqrtV.
 * @param qstat SKAT test statistic U.T * W * U.
 * @return {Number[]} [qstat, pvalue]
 * @private
 */


function _skatLiu(lambdas, qstat) {
  var n = lambdas.length;

  var _Array$fill = Array(4).fill(0.0),
      _Array$fill2 = slicedToArray_default()(_Array$fill, 4),
      c1 = _Array$fill2[0],
      c2 = _Array$fill2[1],
      c3 = _Array$fill2[2],
      c4 = _Array$fill2[3];

  for (var i = 0; i < n; i++) {
    var ilambda = lambdas[i];
    c1 += ilambda;
    c2 += ilambda * ilambda;
    c3 += ilambda * ilambda * ilambda;
    c4 += ilambda * ilambda * ilambda * ilambda;
  }

  var s1 = c3 / Math.sqrt(c2 * c2 * c2);
  var s2 = c4 / (c2 * c2);
  var muQ = c1;
  var sigmaQ = Math.sqrt(2.0 * c2);
  var tStar = (qstat - muQ) / sigmaQ;
  var delta, l, a;

  if (s1 * s1 > s2) {
    a = 1.0 / (s1 - Math.sqrt(s1 * s1 - s2));
    delta = s1 * a * a * a - a * a;
    l = a * a - 2.0 * delta;
  } else {
    a = 1.0 / s1;
    delta = 0.0;
    l = c2 * c2 * c2 / (c3 * c3);
  }

  var muX = l + delta;
  var sigmaX = Math.sqrt(2.0) * a;
  var qNew = tStar * sigmaX + muX;
  var p;

  if (delta === 0) {
    p = pchisq(qNew, l, 0, 0);
  } else {
    // Non-central chi-squared
    p = pchisq(qNew, l, delta, 0, 0);
  }

  return [qstat, p];
}

function getEigen(m) {
  var lambdas = numeric_1_2_6_default.a.eig(m, 1000000).lambda.x.sort(function (a, b) {
    return a - b;
  });
  var n = lambdas.length;
  var numNonZero = 0;
  var sumNonZero = 0.0;

  for (var i = 0; i < n; i++) {
    if (lambdas[i] > 0) {
      numNonZero++;
      sumNonZero += lambdas[i];
    }
  }

  if (numNonZero === 0) {
    throw new Error("All eigenvalues were 0 when calculating SKAT-O test");
  }

  var t = sumNonZero / numNonZero / 100000;
  var numKeep = n;

  for (var _i9 = 0; _i9 < n; _i9++) {
    if (lambdas[_i9] < t) {
      numKeep--;
    } else {
      break;
    }
  }

  var keep = new Array(numKeep).fill(null);

  for (var _i10 = 0; _i10 < numKeep; _i10++) {
    keep[_i10] = lambdas[n - 1 - _i10];
  }

  return keep;
}

function getMoment(lambdas) {
  var c = new Array(4).fill(NaN);
  c[0] = numeric_1_2_6_default.a.sum(lambdas);
  c[1] = numeric_1_2_6_default.a.sum(numeric_1_2_6_default.a.pow(lambdas, 2));
  c[2] = numeric_1_2_6_default.a.sum(numeric_1_2_6_default.a.pow(lambdas, 3));
  c[3] = numeric_1_2_6_default.a.sum(numeric_1_2_6_default.a.pow(lambdas, 4));
  var muQ = c[0];
  var sigmaQ = Math.sqrt(2 * c[1]);
  var s1 = c[2] / c[1] / Math.sqrt(c[1]);
  var s2 = c[3] / (c[1] * c[1]);
  var a, d, l;

  if (s1 * s1 > s2) {
    a = 1 / (s1 - Math.sqrt(s1 * s1 - s2));
    d = s1 * a - a * a;
    l = a * a - 2 * d;
  } else {
    l = 1.0 / s2;
  }

  var varQ = sigmaQ * sigmaQ;
  var df = l;
  return {
    muQ: muQ,
    varQ: varQ,
    df: df
  };
}

function getPvalByMoment(q, m) {
  var qNorm = (q - m.muQ) / Math.sqrt(m.varQ) * Math.sqrt(2.0 * m.df) + m.df;
  return pchisq(qNorm, m.df, 0, false, false);
}

function getQvalByMoment(min_pval, m) {
  var q_org = qchisq(min_pval, m.df, 0, false, false);
  return (q_org - m.df) / Math.sqrt(2.0 * m.df) * Math.sqrt(m.varQ) + m.muQ;
}
/**
 * Optimal sequence kernel association test (SKAT). <p>
 *
 * The following papers detail the method:
 *
 * Original SKAT optimal test paper, utilizing genotypes instead of covariance matrices: https://doi.org/10.1016/j.ajhg.2012.06.007
 * Meta-analysis of SKAT optimal test, and use of covariance matrices: https://doi.org/10.1016/j.ajhg.2013.05.010
 *
 * @extends AggregationTest
 */


var stats_SkatOptimalTest =
/*#__PURE__*/
function (_AggregationTest4) {
  inherits_default()(SkatOptimalTest, _AggregationTest4);

  function SkatOptimalTest() {
    var _this4;

    classCallCheck_default()(this, SkatOptimalTest);

    _this4 = possibleConstructorReturn_default()(this, getPrototypeOf_default()(SkatOptimalTest).apply(this, arguments));
    _this4.label = 'SKAT Optimal';
    _this4.key = 'skat-o';
    _this4.requiresMaf = true;
    /**
     * Skat test method. Only used for dev/testing.
     * Should not be set by user.
     * @private
     * @type {string}
     */

    _this4._method = 'auto';
    return _this4;
  }
  /**
   * Calculate typical SKAT weights using beta density function.
   *
   * @function
   * @param mafs {number[]} Array of minor allele frequencies.
   * @param a {number} alpha defaults to 1.
   * @param b {number} beta defaults to 25.
   */


  createClass_default()(SkatOptimalTest, [{
    key: "run",

    /**
     * Calculate optimal SKAT test. <p>
     *
     * @function
     * @param {Number[]} u Vector of score statistics (length m, number of variants).
     * @param {Number[]} v Covariance matrix of score statistics (m x m).
     * @param {Number[]} w Weight vector (length m, number of variants). If weights are not provided, they will
     *  be calculated using the default weights() method of this object.
     * @param {Number[]} mafs A vector of minor allele frequencies. These will be used to calculate weights if
     *  they were not provided.
     * @param {Number[]} rhos A vector of rho values, representing the weighting between burden and SKAT statistics.
     * @return {Number[]} SKAT p-value.
     */
    value: function run(u, v, w, mafs, rhos) {
      var dot = numeric_1_2_6_default.a.dot,
          sum = numeric_1_2_6_default.a.sum,
          mul = numeric_1_2_6_default.a.mul,
          div = numeric_1_2_6_default.a.div,
          sub = numeric_1_2_6_default.a.sub,
          rep = numeric_1_2_6_default.a.rep,
          pow = numeric_1_2_6_default.a.pow,
          diag = numeric_1_2_6_default.a.diag;
      var t = numeric_1_2_6_default.a.transpose;

      if (u.length === 1) {
        // rvtest
        return new stats_SkatTest().run(u, v, w, mafs);
      } // Calculate weights (if necessary)


      if (w === undefined || w === null) {
        w = SkatOptimalTest.weights(mafs);
      }

      var nVar = u.length; // number of variants

      w = diag(w); // diagonal matrix

      u = t([u]); // column vector
      // Setup rho values

      if (!rhos) {
        rhos = [];

        for (var i = 0; i <= 10; i++) {
          var _v = i / 10;

          if (_v > 0.999) {
            // rvtests does this to avoid rank deficiency
            _v = 0.999;
          }

          rhos.push(_v);
        }
      }

      var nRhos = rhos.length; // MetaSKAT optimal.mod rho values
      //const rhos = [0, 0.01, 0.04, 0.09, 0.25, 0.5, 0.999];
      //const nRhos = rhos.length;
      // Calculate rho matrices (1-rho)*I + rho*1*1'
      // [ 1   rho rho ]
      // [ rho 1   rho ]
      // [ rho rho 1   ]

      var Rp = new Array(nRhos).fill(null);

      for (var _i11 = 0; _i11 < nRhos; _i11++) {
        var r = rep([nVar, nVar], rhos[_i11]);

        for (var j = 0; j < r.length; j++) {
          r[j][j] = 1.0;
        }

        Rp[_i11] = r;
      } // Calculate Q statistics, where Q = U' * W * R(rho) * W * U
      // U is the score statistic vector, W is the diagonal weight matrix for each variant
      // R(rho) is a matrix for each rho value that reflects weighting between burden & SKAT


      var Qs = [];

      for (var _i12 = 0; _i12 < nRhos; _i12++) {
        Qs[_i12] = dot(t(u), dot(w, dot(Rp[_i12], dot(w, u))))[0][0];
        Qs[_i12] = Qs[_i12] / 2.0; // SKAT R package divides by 2
      } // Calculate lambdas (eigenvalues of W * IOTA * W.) In the paper, IOTA is the covariance matrix divided by
      // the phenotypic variance sigma^2.


      var lambdas = new Array(nRhos).fill(null);
      var phi = div(dot(w, dot(v, w)), 2); // https://git.io/fjwqF

      for (var _i13 = 0; _i13 < nRhos; _i13++) {
        var L = cholesky(Rp[_i13]);
        var phi_rho = dot(t(L), dot(phi, L));

        try {
          lambdas[_i13] = getEigen(phi_rho);
        } catch (error) {
          console.error(error.message);
          return [NaN, NaN];
        }
      } // Calculate moments


      var moments = new Array(nRhos).fill(null);

      for (var _i14 = 0; _i14 < nRhos; _i14++) {
        moments[_i14] = getMoment(lambdas[_i14]);
      } // Calculate p-values for each rho


      var pvals = new Array(nRhos).fill(null);

      for (var _i15 = 0; _i15 < nRhos; _i15++) {
        pvals[_i15] = getPvalByMoment(Qs[_i15], moments[_i15]);
      } // Calculate minimum p-value across all rho values


      var minP = pvals[0];
      var minIndex = 0;

      for (var _i16 = 1; _i16 < nRhos; _i16++) {
        if (pvals[_i16] < minP) {
          minP = pvals[_i16];
          minIndex = _i16;
        }
      } //const rho = rhos[minIndex];


      var Q = Qs[minIndex]; // Calculate minimum Q(p)

      var Qs_minP = new Array(nRhos).fill(null);

      for (var _i17 = 0; _i17 < nRhos; _i17++) {
        Qs_minP[_i17] = getQvalByMoment(minP, moments[_i17]);
      } // Calculate parameters needed for Z'(I-M)Z part


      var Z11 = dot(phi, rep([nVar, 1], 1));
      var ZZ = phi;
      var ZMZ = div(dot(Z11, t(Z11)), sum(ZZ));
      var ZIMZ = sub(ZZ, ZMZ);
      var lambda;

      try {
        lambda = getEigen(ZIMZ);
      } catch (error) {
        console.error(error.message);
        return [NaN, NaN];
      }

      var varZeta = 4 * sum(mul(ZMZ, ZIMZ));
      var muQ = sum(lambda);
      var varQ = 2.0 * sum(pow(lambda, 2)) + varZeta;
      var kerQ = 12.0 * sum(pow(lambda, 4)) / Math.pow(sum(pow(lambda, 2)), 2);
      var dF = 12.0 / kerQ; // Calculate taus

      var z_mean = sum(ZZ) / Math.pow(nVar, 2);
      var tau1 = sum(dot(ZZ, ZZ)) / Math.pow(nVar, 2) / z_mean;
      var taus = new Array(nRhos).fill(null);

      for (var _i18 = 0; _i18 < nRhos; _i18++) {
        taus[_i18] = nVar * nVar * rhos[_i18] * z_mean + tau1 * (1 - rhos[_i18]);
      } // Calculate final p-value


      if (new Set([rhos.length, Qs_minP.length, taus.length]).size > 1) {
        throw "Parameter arrays for SKAT integration must all be the same length";
      }

      return MVT_WASM_HELPERS.then(function (mvt_module) {
        // This part is a little ugly, in that we're consuming two async emscripten wrappers that don't support Promise
        //  chaining. Once both modules are loaded, the real calculations are done synchronously.
        // Integral is an emscripten module, so wrap it to allow promise chaining
        return new Promise(function (resolve, reject) {
          try {
            Object(integral["a" /* default */])().then(function (int_module) {
              var integrator = new int_module.SkatIntegrator(mvt_module.copyToDoubleVec(rhos, int_module.DoubleVec), mvt_module.copyToDoubleVec(lambda, int_module.DoubleVec), mvt_module.copyToDoubleVec(Qs_minP, int_module.DoubleVec), mvt_module.copyToDoubleVec(taus, int_module.DoubleVec), muQ, varQ, varZeta, dF);
              var pvalue = 1 - integrator.skatOptimalIntegral(); // Check SKAT p-value

              var multi = nRhos < 3 ? 2 : 3;

              if (nRhos) {
                if (pvalue <= 0) {
                  var p = minP * multi;

                  if (pvalue < p) {
                    pvalue = p;
                  }
                }
              }

              if (pvalue === 0.0) {
                pvalue = pvals[0];

                for (var _i19 = 1; _i19 < nRhos; _i19++) {
                  if (pvals[_i19] > 0 && pvals[_i19] < pvalue) {
                    pvalue = pvals[_i19];
                  }
                }
              }

              resolve([Q, pvalue]);
            });
          } catch (error) {
            reject(error);
          }
        });
      });
    }
  }], [{
    key: "weights",
    value: function weights(mafs) {
      var a = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
      var b = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 25;
      var weights = Array(mafs.length).fill(null);

      for (var i = 0; i < mafs.length; i++) {
        var w = _dbeta(mafs[i], a, b, false); //w *= w;

        weights[i] = w;
      }

      return weights;
    }
  }]);

  return SkatOptimalTest;
}(stats_AggregationTest);

 // for unit testing only


// CONCATENATED MODULE: ./src/app/helpers.js




/**
 * Helper methods for running aggregation tests
 *
 * This wraps internal functionality and provides utilities for reading and writing expected API formats
 */



var _all_tests = [stats_ZegginiBurdenTest, stats_SkatTest, stats_VTTest];
/**
 * Look up aggregation tests by unique name.
 *
 * This is a helper for external libraries; it provides an immutable registry of all available tests.
 * TODO would be nice to get rid of this?
 *
 *
 * {key: {label: String, constructor: Object }
 * @type {{String: {label: String, constructor: function}}}
 */

var AGGREGATION_TESTS = Object.freeze(_all_tests.reduce(function (acc, constructor) {
  var inst = new constructor(); // Hack- need instance to access attributes

  acc[inst.key] = {
    label: inst.label,
    constructor: constructor
  };
  return acc;
}, {}));
/**
 * Helper object for reading and interpreting variant data
 */

var helpers_PortalVariantsHelper =
/*#__PURE__*/
function () {
  function PortalVariantsHelper(variants_array) {
    classCallCheck_default()(this, PortalVariantsHelper);

    this._variants = variants_array;
    this._variant_lookup = this.parsePortalVariantData(variants_array);
  }

  createClass_default()(PortalVariantsHelper, [{
    key: "parsePortalVariantData",
    value: function parsePortalVariantData(variants) {
      // Read an array of variants. Parse names into position/ref/alt, and assign altFreq to MAF.
      // Return a hash keyed on variant ID for quick lookups.
      var lookup = {};
      variants.forEach(function (data) {
        var variant = data.variant,
            altFreq = data.altFreq,
            pvalue = data.pvalue,
            score = data.score;

        var _variant$match = variant.match(REGEX_EPACTS),
            _variant$match2 = slicedToArray_default()(_variant$match, 6),
            _ = _variant$match2[0],
            chrom = _variant$match2[1],
            pos = _variant$match2[2],
            ref = _variant$match2[3],
            alt = _variant$match2[4],
            __ = _variant$match2[5]; // eslint-disable-line no-unused-vars


        var effectFreq = altFreq;
        var effect = alt;
        /**
         * The variant's score statistic in the API is coded toward the alternate allele.
         * However, we want the effect coded towards the minor allele, since most rare variant tests assume
         * you are counting the rare/minor allele.
         */

        if (altFreq > 0.5) {
          /**
           * The effect allele is initially the alt allele. Since we're flipping it,
           * the "other" allele is the reference allele.
           */
          score = -score;
          effect = ref; // This is also now the minor allele frequency.

          effectFreq = 1 - altFreq;
        }

        lookup[variant] = {
          variant: variant,
          chrom: chrom,
          pos: pos,
          pvalue: pvalue,
          score: score,
          altAllele: alt,
          effectAllele: effect,
          altFreq: altFreq,
          effectFreq: effectFreq
        };
      });
      return lookup;
    }
  }, {
    key: "isAltEffect",
    value: function isAltEffect(variant_names) {
      var _this = this;

      // Some calculations are sensitive to whether alt is the minor (effect) allele
      return variant_names.map(function (name) {
        var variant_data = _this._variant_lookup[name];
        return variant_data.altAllele === variant_data.effectAllele;
      });
    }
  }, {
    key: "getEffectFreq",
    value: function getEffectFreq(variant_names) {
      var _this2 = this;

      // Get the allele freq for the minor (effect) allele
      return variant_names.map(function (name) {
        return _this2._variant_lookup[name].effectFreq;
      });
    }
  }, {
    key: "getScores",
    value: function getScores(variant_names) {
      var _this3 = this;

      // Get single-variant scores
      return variant_names.map(function (name) {
        return _this3._variant_lookup[name].score;
      });
    }
  }, {
    key: "getGroupVariants",
    value: function getGroupVariants(variant_names) {
      var _this4 = this;

      // Return all that is known about a given set of variants
      return variant_names.map(function (name) {
        return _this4._variant_lookup[name];
      });
    }
  }, {
    key: "data",
    get: function get() {
      // Raw unparsed data
      return this._variants;
    }
  }]);

  return PortalVariantsHelper;
}(); // Utility class. Provides helper methods to access information about groups and generate subsets


var helpers_PortalGroupHelper =
/*#__PURE__*/
function () {
  function PortalGroupHelper(groups) {
    classCallCheck_default()(this, PortalGroupHelper);

    this._groups = groups;
    this._lookup = this._generateLookup(groups);
  }

  createClass_default()(PortalGroupHelper, [{
    key: "byMask",
    value: function byMask(selection) {
      // str or array
      // Get all groups that identify as a specific category of mask- "limit the analysis to loss of function variants
      // in any gene"
      if (!Array.isArray(selection)) {
        selection = [selection];
      }

      selection = new Set(selection);

      var subset = this._groups.filter(function (group) {
        return selection.has(group.mask);
      });

      return new this.constructor(subset);
    }
  }, {
    key: "byGroup",
    value: function byGroup(selection) {
      // str or array
      // Get all groups based on a specific group name, regardless of mask. Eg, "all the ways to analyze data for a
      // given gene".
      if (!Array.isArray(selection)) {
        selection = [selection];
      }

      selection = new Set(selection);

      var subset = this._groups.filter(function (group) {
        return selection.has(group.group);
      });

      return new this.constructor(subset);
    }
  }, {
    key: "_generateLookup",
    value: function _generateLookup(groups) {
      var _this5 = this;

      // We don't transform data, so this is a simple name -> position mapping
      return groups.reduce(function (acc, item, idx) {
        var key = _this5._getKey(item.mask, item.group);

        acc[key] = idx;
        return acc;
      }, {});
    }
  }, {
    key: "_getKey",
    value: function _getKey(mask_name, group_name) {
      return "".concat(mask_name, ",").concat(group_name);
    }
  }, {
    key: "getOne",
    value: function getOne(mask_name, group_name) {
      // Get a single group that is fully and uniquely identified by group + mask
      var key = this._getKey(mask_name, group_name);

      var pos = this._lookup[key];
      return this._groups[pos];
    }
  }, {
    key: "makeCovarianceMatrix",
    value: function makeCovarianceMatrix(group, is_alt_effect) {
      // Helper method that expands the portal covariance format into a full matrix.
      // Load the covariance matrix from the response JSON
      var n_variants = group.variants.length;
      var covmat = new Array(n_variants);

      for (var i = 0; i < n_variants; i++) {
        covmat[i] = new Array(n_variants).fill(null);
      }

      var c = 0;

      for (var _i = 0; _i < n_variants; _i++) {
        for (var j = _i; j < n_variants; j++) {
          var v = group.covariance[c];
          var iAlt = is_alt_effect[_i];
          var jAlt = is_alt_effect[j];
          /**
           * The API spec codes variant genotypes towards the alt allele. If the alt allele frequency
           * is > 0.5, that means we're not counting towards the minor (rare) allele, and we need to flip it around.
           * We don't flip when i == j because that element represents the variance of the variant's score, which is
           * invariant to which allele we code towards (but covariance is not.)
           *
           * We also don't flip when both the i variant and j variant need to be flipped (the ^ is XOR) because it would
           * just cancel out.
           */

          if (_i !== j) {
            if (!iAlt ^ !jAlt) {
              v = -v;
            }
          }

          covmat[_i][j] = v;
          covmat[j][_i] = v;
          c += 1;
        }
      }

      covmat = numeric_1_2_6_default.a.mul(group.nSamples, covmat);
      return covmat;
    }
  }, {
    key: "data",
    get: function get() {
      // Raw unparsed data
      return this._groups;
    }
  }]);

  return PortalGroupHelper;
}(); // Helper method that coordinates multiple tests on a series of masks


var helpers_PortalTestRunner =
/*#__PURE__*/
function () {
  function PortalTestRunner(groups, variants) {
    var _this6 = this;

    var test_names = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];

    classCallCheck_default()(this, PortalTestRunner);

    this.groups = groups;
    this.variants = variants;
    this._tests = [];
    test_names.forEach(function (name) {
      return _this6.addTest(name);
    });
  }

  createClass_default()(PortalTestRunner, [{
    key: "addTest",
    value: function addTest(test) {
      // Add a new test by name, or directly from an instance
      // TODO Find a way to do this without using the registry
      if (typeof test === 'string') {
        var type = AGGREGATION_TESTS[test];

        if (!type) {
          throw new Error("Cannot make unknown test type: ".concat(test));
        }

        test = new type.constructor();
      } else if (!(test instanceof stats_AggregationTest)) {
        throw new Error('Must specify test as name or instance');
      }

      this._tests.push(test);

      return test;
    }
    /**
     * Run every test on every group in the container and return results
     * @returns Promise A promise representing the fulfillment state of all tests being run
     */

  }, {
    key: "run",
    value: function run() {
      var _this7 = this;

      var results = [];

      this._tests.forEach(function (test) {
        _this7.groups.data.forEach(function (group) {
          results.push(_this7._runOne(test, group));
        });
      });

      return Promise.all(results);
    }
    /**
     *
     * @param {AggregationTest} test Instance for a single unit test
     * @param group {Object} Data corresponding to a specific group, following API format docs
     * @returns {{groupType: *, stat: *, test: *, pvalue: *, variants: (*|Array|string[]|Map), group: *, mask: (*|string|SVGMaskElement|string)}}
     * @private
     */

  }, {
    key: "_runOne",
    value: function _runOne(test, group) {
      // Helper method that translates portal data into the format expected by a test.
      var variants = group.variants;
      var scores = this.variants.getScores(variants); // Most calculations will require adjusting API data to ensure that minor allele is the effect allele

      var isAltEffect = this.variants.isAltEffect(variants);
      var cov = this.groups.makeCovarianceMatrix(group, isAltEffect);
      var mafs = this.variants.getEffectFreq(variants);
      var weights; // TODO: The runner never actually uses the weights argument. Should it allow this?
      // Some test classes may return a raw value and others will return a promise. Wrap the result for consistency.

      var result = test.run(scores, cov, weights, mafs);
      return Promise.resolve(result).then(function (_ref) {
        var _ref2 = slicedToArray_default()(_ref, 2),
            stat = _ref2[0],
            pvalue = _ref2[1];

        // The results describe the group + several new fields for calculation results.
        return {
          groupType: group.groupType,
          group: group.group,
          mask: group.mask,
          variants: group.variants,
          test: test.key,
          stat: stat,
          pvalue: pvalue
        };
      });
    }
    /**
     * Generate a JSON representation of the results. Returns a Promise, because some methods may run asynchronously
     *  (eg via web workers), or require loading external libraries (eg webassembly)
     * @param results Array
     * @returns {Promise<{data: {groups: Promise<any> | Array, variants: *}} | never>}
     */

  }, {
    key: "toJSON",
    value: function toJSON(results) {
      var _this8 = this;

      // Output calculation results in a format that matches the "precomputed results" endpoint
      // By passing in an argument, user can format any set of results (even combining multiple runs)
      if (!results) {
        results = this.run();
      } else {
        results = Promise.resolve(results);
      }

      return results.then(function (group_results) {
        return {
          data: {
            variants: _this8.variants.data,
            groups: group_results
          }
        };
      });
    }
  }]);

  return PortalTestRunner;
}();

function parsePortalJSON(json) {
  var data = json.data || json;
  var groups = new helpers_PortalGroupHelper(data.groups.map(function (item) {
    // Each group should have access to fields that, in portal json, are defined once globally
    item.nSamples = data.nSamples;
    item.sigmaSquared = data.sigmaSquared;
    return item;
  }));
  var variants = new helpers_PortalVariantsHelper(data.variants);
  return [groups, variants];
}

 // testing only


// CONCATENATED MODULE: ./src/app/browser.js
/* concated harmony reexport helpers */__webpack_require__.d(__webpack_exports__, "helpers", function() { return helpers_namespaceObject; });
/* concated harmony reexport stats */__webpack_require__.d(__webpack_exports__, "stats", function() { return stats_namespaceObject; });
/**
 * Calculate aggregation tests and meta-analysis of these tests
 * using score statistics and covariance matrices in the browser.
 *
 * This is the user-facing bundle, which exposes an API suitable for use in the web browser.
 * If using es6 modules exclusively, consider including those files directly for greater control.
 *
 * @module browser
 * @license MIT
 */




/***/ })
/******/ ]);
});
//# sourceMappingURL=raremetal.js.map