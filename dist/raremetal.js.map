{"version":3,"sources":["webpack://raremetal/webpack/universalModuleDefinition","webpack://raremetal/webpack/bootstrap","webpack://raremetal/./node_modules/numeric/numeric-1.2.6.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/createClass.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/typeof.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/inherits.js","webpack://raremetal/./src/app/mvtdstpack.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://raremetal/(webpack)/buildin/global.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://raremetal/./node_modules/process/browser.js","webpack://raremetal/./src/app/constants.js","webpack://raremetal/./src/app/linalg.js","webpack://raremetal/./src/app/qfc.js","webpack://raremetal/./src/app/quadrature.js","webpack://raremetal/./src/app/rstats.js","webpack://raremetal/./src/app/stats.js","webpack://raremetal/./src/app/helpers.js","webpack://raremetal/./src/app/browser.js"],"names":["mvtdstpack","_scriptDir","document","currentScript","src","undefined","Module","moduleOverrides","key","hasOwnProperty","status","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","window","importScripts","process","scriptDirectory","locateFile","path","__dirname","nodeFS","nodePath","shell_read","filename","binary","ret","require","toString","readBinary","buffer","Uint8Array","assert","length","replace","slice","ex","ExitStatus","abort","read","f","data","readbuffer","scriptArgs","arguments","quit","self","location","href","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","readAsync","onload","onerror","xhr_onload","title","out","console","log","bind","print","err","printErr","warn","asm2wasmImports","x","y","functionPointers","Array","tempRet0","setTempRet0","value","WebAssembly","wasmMemory","wasmTable","ABORT","EXITSTATUS","condition","text","UTF8Decoder","TextDecoder","UTF8ArrayToString","u8Array","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","str","u0","String","fromCharCode","u1","u2","ch","UTF8ToString","ptr","HEAPU8","stringToUTF8Array","outU8Array","outIdx","maxBytesToWrite","startIdx","i","u","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","len","UTF16Decoder","WASM_PAGE_SIZE","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","updateGlobalBufferViews","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","DYNAMIC_BASE","DYNAMICTOP_PTR","TOTAL_STACK","INITIAL_TOTAL_MEMORY","Memory","ArrayBuffer","callRuntimeCallbacks","callbacks","callback","shift","func","arg","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runtimeInitialized","preRun","addOnPreRun","ensureInitRuntime","preMain","postRun","addOnPostRun","cb","unshift","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","id","removeRunDependency","clearInterval","dataURIPrefix","isDataURI","prototype","startsWith","wasmBinaryFile","getBinary","getBinaryPromise","fetch","credentials","then","Promise","resolve","reject","createWasm","env","info","NaN","Infinity","Math","receiveInstance","instance","module","exports","e","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","instantiate","reason","instantiateStreaming","global","providedBuffer","Table","push","globalCtors","___cxa_allocate_exception","size","_malloc","__ZSt18uncaught_exceptionv","uncaught_exception","___cxa_free_exception","_free","EXCEPTIONS","last","caught","infos","deAdjust","adjusted","adj","addRef","refcount","decRef","rethrown","destructor","clearRef","___cxa_throw","type","SYSCALLS","buffers","printChar","stream","curr","varargs","get","getStr","get64","low","high","getZero","___syscall140","which","getStreamFromFD","offset_high","offset_low","result","whence","FS","ErrnoError","errno","___syscall146","iov","iovcnt","j","___syscall6","structRegistrations","runDestructors","destructors","pop","del","simpleReadValueFromPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","name","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","message","stack","Error","Object","create","constructor","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","forEach","onComplete","typeConverters","myTypeConverters","registerType","unregisteredTypes","registered","dt","__embind_finalize_value_object","structType","reg","rawConstructor","rawDestructor","fieldRecords","fields","fieldTypes","map","field","getterReturnType","concat","setterArgumentType","fieldName","getter","getterContext","setter","setterContext","write","o","rv","TypeError","destructorFunction","getShiftFromSize","embind_init_charCodes","codes","embind_charCodes","readLatin1String","c","BindingError","throwBindingError","rawType","registeredInstance","options","ignoreDuplicateRegistrations","__embind_register_bool","trueValue","falseValue","wt","heap","ClassHandle_isAliasOf","other","ClassHandle","leftClass","$$","ptrType","registeredClass","left","rightClass","right","baseClass","upcast","shallowCopyInternalPointer","count","deleteScheduled","preservePointerOnDelete","smartPtr","smartPtrType","throwInstanceAlreadyDeleted","obj","getInstanceTypeName","handle","ClassHandle_clone","clone","getPrototypeOf","runDestructor","ClassHandle_delete","toDelete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","ClassHandle_deleteLater","init_ClassHandle","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","apply","argCount","exposePublicSymbol","numArguments","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","isConst","sharingPolicy","clonedHandle","rawShare","__emval_register","nonConstNoSmartPtrRawPointerToWireType","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","getInheritedInstanceCount","keys","registeredInstances","getLiveInheritedInstances","k","setDelayFunction","fn","init_embind","getBasestPointer","class_","getInheritedInstance","makeClassHandle","record","hasSmartPtrType","hasSmartPtr","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","pointeeType","actualType","registeredPointerRecord","call","toType","constPointerType","pointerType","dp","init_RegisteredPointer","RegisteredPointer","replacePublicSymbol","embind__requireFunction","signature","rawFunction","makeDynCaller","dynCall","args","join","fp","FUNCTION_TABLE","dc","UnboundTypeError","getTypeName","___getTypeName","throwUnboundTypeError","types","unboundTypes","seen","visit","__embind_register_class","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","heap32VectorToArray","firstElement","array","__embind_register_class_constructor","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","classType","unboundTypeHandler","argTypes","new_","argumentList","dummy","r","craftInvokerFunction","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","invokerFunction","__embind_register_class_function","rawInvoker","context","isPureVirtual","unboundTypesHandler","method","className","memberFunction","emval_free_list","emval_handle_array","__emval_decref","count_emval_handles","get_first_emval","init_emval","__embind_register_emval","v","t","floatReadValueFromPointer","__embind_register_float","__embind_register_function","invokerArgsArray","integerReadValueFromPointer","signed","readS8FromPointer","readU8FromPointer","readS16FromPointer","readU16FromPointer","readS32FromPointer","readU32FromPointer","__embind_register_integer","primitiveType","minRange","maxRange","fromWireType","bitshift","isUnsignedType","__embind_register_memory_view","dataTypeIndex","typeMapping","TA","decodeMemoryView","__embind_register_std_string","stdStringIsUTF8","endChar","endCharSwap","decodeStartPtr","currentBytePtr","stringSegment","a","getLength","valueIsOfTypeString","Uint8ClampedArray","charCode","__embind_register_std_wstring","charSize","getHeap","HEAP","start","__embind_register_value_object","constructorSignature","__embind_register_value_object_field","getterSignature","setterSignature","__embind_register_void","isVoid","__emval_incref","requireRegisteredType","impl","__emval_take_value","argv","_abort","_emscripten_get_heap_size","abortOnCannotGrowMemory","requestedSize","_emscripten_resize_heap","_emscripten_memcpy_big","dest","num","set","___setErrNo","asmGlobalArg","asmLibraryArg","asm","___errno_location","dynCall_dii","dynCall_i","dynCall_ii","dynCall_iidiiii","dynCall_iii","dynCall_iiii","dynCall_iiiid","dynCall_iiiii","dynCall_iiiiiiiiiidd","dynCall_jiji","dynCall_v","dynCall_vi","dynCall_vii","dynCall_viid","dynCall_viii","dynCall_viiid","dynCall_viiii","dynCall_viiiii","dynCall_viiiiii","dynCall_viiiiiiiiidd","old","runCaller","run","doRun","setTimeout","what","JSON","stringify","REGEX_EPACTS","RegExp","REGEX_REGION","cholesky","A","n","G","numeric","rep","s","sqrt","pi","PI","log28","sigsq","lmax","lmin","mean","intl","ersm","lim","ndtsrt","fail","th","lb","nc","exp1","exp","counter","RangeError","square","cube","log1","first","abs","s1","term","order","outer","lj","errbd","sum1","ncj","xconst","nj","ctff","accx","rb","c1","c2","rerr","calc_err","truncation","tausq","sum2","prod1","prod2","prod3","err1","err2","findu","ut","divis","integrate","nterm","interv","mainx","inpi","sum3","z","atan","sin","cfe","axl","axl1","axl2","sxl","pow","qf","lb1","nc1","n1","r1","sigma","lim1","acc","nt","ntm","acc1","almx","xlim","xnt","xntm","utx","sd","intv","intv1","up","un","d1","d2","qfval","ifault","trace","fill","rats","done","l1","ctffx","floor","l2","error","GAUSS_KRONROD_ABSCISSA","GAUSS_KRONROD_WEIGHTS","GAUSS_WEIGHTS","ROOT_EPSILON","Number","EPSILON","GaussKronrod","N","maxDepth","maxRelativeError","gauss_start","kronrod_start","gauss_order","kronrod_result","gauss_result","fm","max","b","max_levels","abs_tol","error_local","estimate","scale","ff","_integrateNonAdaptive","abs_tol1","mid","_recursiveAdaptiveIntegrate","isFinite","EXP_SINH_ABSCISSAS","EXP_SINH_WEIGHTS","ldexp","steps","min","ceil","ExpSinh","max_refinements","tol","m_max_refinements","m_committed_refinements","m_t_min","m_abscissas","m_weights","row","h","t_max","trunc","l","sinh","w","cosh","extend_refinements","integrand","MAX_VALUE","y_max","I0","L1_I0","I1","L1_I1","sum","absum","abscissas_row","get_abscissa_row","weight_row","get_weight_row","abterm1","eps","abterm0","DBL_EPSILON","DBL_MIN","MIN_VALUE","DBL_MAX_EXP","DBL_MIN_EXP","DBL_MAX","SCALE_FACTOR","EULERS_CONST","TOL_LOGCF","LGAMMA_C","DXREL","M_LN2","LN2","M_LN10","LN10","M_PI","M_2PI","M_LN_2PI","M_LN_SQRT_2PI","M_SQRT_32","M_1_SQRT_2PI","M_CUTOFF","_dbl_min_exp","ME_DOMAIN","ME_RANGE","ME_NOCONV","ME_PRECISION","ME_UNDERFLOW","ML_ERROR","msg","ML_ERR_return_NAN","S0","S1","S2","S3","S4","SFERR_HALVES","LGAMMA_COEFS","POIS_COEFS_A","POIS_COEFS_B","GAMCS","ALGMCS","PNORM_A","PNORM_B","PNORM_C","PNORM_D","PNORM_P","PNORM_Q","R_D__0","log_p","R_D__1","R_DT_0","lower_tail","R_DT_1","R_D_Lval","p","R_D_Cval","R_D_val","R_D_log","R_D_Clog","log1p","R_DT_val","R_D_LExp","R_Log1_Exp","R_DT_log","R_DT_Clog","R_Q_P01_check","R_Q_P01_boundaries","NEGATIVE_INFINITY","R_P_bounds_01","x_min","x_max","R_DT_qIv","expm1","R_DT_CIv","fmin2","isNaN","fmax2","R_D_exp","R_D_fexp","give_log","sinpi","chebyshev_eval","b0","b1","b2","twox","lgammacor","tmp","nalgm","xbig","xmax","gammafn","sinpiy","ngam","xmin","xsml","round","parseInt","POSITIVE_INFINITY","stirlerr","lgammafn_sign","ans","lgammafn","nn","bd0","np","ej","dpois_raw","lambda","R_D","logcf","d","c3","c4","a1","a2","log1pmx","minLog1Value","lgamma1p","lgam","logspace_add","logx","logy","dpois_wrap","x_plus_1","R_DT","pgamma_smallx","alph","f1","f2","lf2","f1m1","f2m1","pd_upper_series","pd_lower_cf","of","f0","pd_lower_series","dpnorm","lp","x2","dnorm","ppois_asymp","coefs_a","coefs_b","elfb","elfb_term","res12","res1_term","res1_ig","res2_term","res2_ig","dfm","pt_","s2pt","pnorm","n_d_over_p","nd","pgamma_raw","res","pgamma","dgamma","shape","parseNumeric","parseBoolean","pr","dchisq","df","pchisq","ncp","pnchisq","q","pnchisq_raw","theta","errmax","reltol","itrmax","lam","bound","f_x_2n","f_2n","l_lam","l_x","lamSml","tSml","is_r","is_b","is_it","lt","lu","_L","dans","qnorm","mu","p_","val","qchisq_appr","nu","g","C7","C8","C9","C10","alpha","p1","p2","lgam1pa","qgamma","EPS1","EPS2","EPS_N","MAXIT","pMIN","pMAX","i420","i2520","i5040","ch0","s2","s3","s4","s5","s6","max_it_Newton","end","_1_p","_1_m","qchisq","pnorm_both","i_tail","cum","ccum","xden","xnum","temp","xsq","lower","upper","_pnorm","lbeta","corr","dbinom_raw","lf","lc","dbeta","lval","_dbeta","shape1","shape2","default_value","MVT_WASM_HELPERS","makeDoubleVec","DoubleVec","resize","makeIntVec","IntVec","copyToDoubleVec","arr","push_back","pmvnorm","infin","delta","corrF","cov2cor","inform","maxpts","abseps","releps","mvtdst","trial","eig","lambdas","D","diag","V","E","dot","transpose","corr_diag","norm","helper_module","emptyRowMatrix","nrows","ncols","m","get_conditional_dist","scores","cov","comb","mu2","dim","sub_cov","idx1","idx2","inv","sigma12","calculate_mvt_pvalue","cov_t","pvalue","chisq","jointProbHash","uni","indx","par","twk","iwk","owk","condProb","prob","hashKey","newKey","swk","AggregationTest","label","requiresMaf","mafs","ZegginiBurdenTest","isArray","weights","over","under","_vt","maf_cutoffs","cov_weight","maf","numer","denom","t_stat","cov_u","VTTest","_method","sorted_mafs","sort","SkatTest","svd","sqrtS","S","uT","U","eigenRhs","eigenLhs","eigen","finalSvd","_skatLiu","_skatDavies","daviesResult","qstat","qfc","pval","converged","ilambda","muQ","sigmaQ","tStar","muX","sigmaX","qNew","eigh","maxiter","jacobi","Ain","identity","iters","getDiag","bw","zw","iter","niter","nrot","tresh","gapq","termp","termq","tau","jacobinorm","iterations","add","getEigen","numNonZero","sumNonZero","numKeep","keep","getMoment","varQ","getPvalByMoment","qNorm","getQvalByMoment","min_pval","q_org","SkatIntegrator","rhos","Qs_minP","taus","MuQ","VarQ","VarZeta","Df","kappa","nRho","Q","pvalueDavies","final","fpath","xstart","xend","increment","fs","createWriteStream","integrandDavies","integ","daviesLimit","integrandLiu","fault","SkatOptimalTest","mul","div","sub","nVar","nRhos","Rp","Qs","phi","L","phi_rho","moments","pvals","daviesPvals","liuPvals","minP","minIndex","Z11","ZZ","ZMZ","ZIMZ","varZeta","kerQ","dF","z_mean","tau1","Set","integrator","skatOptimalIntegral","minP_adj","multi","_all_tests","AGGREGATION_TESTS","freeze","reduce","inst","PortalVariantsHelper","variants_array","_variants","_variant_lookup","parsePortalVariantData","variants","lookup","variant","altFreq","score","match","_","chrom","pos","ref","alt","__","effectFreq","effect","altAllele","effectAllele","variant_names","variant_data","PortalGroupHelper","groups","_groups","_lookup","_generateLookup","selection","subset","filter","group","has","mask","item","_getKey","mask_name","group_name","is_alt_effect","n_variants","covmat","covariance","iAlt","jAlt","nSamples","PortalTestRunner","test_names","_tests","addTest","test","_AggregationTest","partials","_runOne","results","one_test","all_prior","one_res","getScores","isAltEffect","makeCovarianceMatrix","getEffectFreq","stat","groupType","group_results","parsePortalJSON","json","sigmaSquared"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;AClFA,8CAAa;;AAEb,eAAe,MAA8B,GAAG,SAAqB;AACrE,mCAAmC,0BAA0B;;AAE7D;;AAEA;AACA;AACA;AACA,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA,gBAAgB,IAAI,OAAO,KAAK,KAAK,KAAK,KAAK;AAC/C,oBAAoB,KAAK,KAAK;AAC9B;AACA;AACA;AACA,YAAY,IAAI,OAAO,KAAK,KAAK,KAAK,KAAK;AAC3C,gBAAgB,KAAK,KAAK;AAC1B;AACA;AACA;;AAEA;AACA;AACA,YAAY,IAAI;AAChB;AACA,CAAC;AACD;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,YAAY;AACjC,sBAAsB,cAAc;AACpC,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA,0CAA0C,SAAS,gBAAgB,mDAAmD;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,gDAAgD,cAAc;AACpG,mCAAmC,qBAAqB,cAAc;AACtE,oCAAoC,wBAAwB,cAAc;AAC1E;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAW,MAAM,qCAAqC;AAC1E;AACA;AACA;AACA,wBAAwB,kBAAkB,cAAc;AACxD,qC;AACA;AACA;AACA,yBAAyB,0B;AACzB;AACA,kCAAkC;AAClC,4B;AACA,4B;AACA,iC;AACA,0B;AACA,aAAa;AACb,gCAAgC;AAChC;AACA;AACA;AACA,+CAA+C,+BAA+B,aAAa;AAC3F;AACA;AACA,oBAAoB,WAAW,MAAM,UAAU,eAAe,0BAA0B,EAAE,kBAAkB;AAC5G;AACA;AACA;AACA,mBAAmB;AACnB;AACA,qBAAqB,0BAA0B,0BAA0B,aAAa,aAAa,kBAAkB,WAAW,EAAE;AAClI,mBAAmB;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,wCAAwC;AAC3E,mCAAmC,mEAAmE;AACtG;AACA,gBAAgB,WAAW,MAAM,oBAAoB;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,sBAAsB;AACzD,mCAAmC,oEAAoE;AACvG;AACA,gBAAgB,WAAW,MAAM,oBAAoB;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,+BAA+B;AAC/D;AACA,YAAY,aAAa;AACzB;AACA;AACA;AACA,kBAAkB,aAAa;AAC/B;AACA,oCAAoC,iCAAiC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA,gBAAgB,IAAI,MAAM,6BAA6B;AACvD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,YAAY;AACpC,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD,uCAAuC,eAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,sBAAsB,QAAQ;AAC9B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB,mBAAmB,gBAAgB;AACnC,cAAc,gBAAgB;AAC9B,gCAAgC;AAChC,uBAAuB;AACvB,8BAA8B;AAC9B;AACA,gBAAgB,IAAI;AACpB,oBAAoB,IAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,qBAAqB;AACrB,oBAAoB;AACpB,oBAAoB;AACpB,qBAAqB;AACrB,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA,kCAAkC,oBAAoB,UAAU;AAChE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+DAA+D;AAC/D,wCAAwC,YAAY,UAAU,cAAc,EAAE;AAC9E,+DAA+D;AAC/D,kDAAkD;AAClD,6BAA6B;AAC7B,sBAAsB;AACtB,mCAAmC;AACnC,4BAA4B,KAAK,MAAM;AACvC,kEAAkE;AAClE,kBAAkB;AAClB,8BAA8B;AAC9B,cAAc;AACd,wBAAwB,KAAK,OAAO;AACpC,2BAA2B;AAC3B,0BAA0B;AAC1B,6BAA6B;AAC7B,0BAA0B;AAC1B,cAAc;AACd,0BAA0B;AAC1B,2BAA2B;AAC3B;AACA,cAAc;AACd,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,sBAAsB,YAAY;AAClC,uBAAuB,OAAO,MAAM;AACpC,2BAA2B;AAC3B,0BAA0B;AAC1B,cAAc;AACd,0BAA0B;AAC1B;AACA;;;AAGA;AACA;AACA,wDAAwD,cAAc;AACtE;AACA,wBAAwB,cAAc;AACtC,YAAY,IAAI;AAChB,2BAA2B,UAAU;AACrC,sCAAsC,mCAAmC;AACzE,cAAc,cAAc;AAC5B;AACA;AACA;;AAEA;AACA,kCAAkC,KAAK;AACvC;AACA;AACA,kBAAkB,KAAK,OAAO,cAAc,YAAY;AACxD,oBAAoB,YAAY;AAChC;AACA;AACA,cAAc,KAAK,MAAM,+BAA+B;AACxD;AACA;;;AAGA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA,cAAc,KAAK;AACnB;AACA;AACA,kBAAkB,KAAK;AACvB;AACA,sBAAsB,KAAK;AAC3B;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,IAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,KAAK,MAAM,wBAAwB;AACjD;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA,cAAc,KAAK;AACnB;AACA,kBAAkB,KAAK;AACvB;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA;AACA,eAAe,kBAAkB;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA,kBAAkB,MAAM;AACxB;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA,kBAAkB,KAAK;AACvB;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yCAAyC,yCAAyC;AAClF;AACA,sCAAsC,YAAY;AAClD;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA,SAAS,OAAO,eAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE,kDAAkD;AAClD,6BAA6B;AAC7B,uDAAuD;AACvD,mCAAmC;AACnC,4BAA4B,KAAK,6DAA6D;AAC9F,4BAA4B;AAC5B,cAAc;AACd;AACA,wBAAwB,OAAO,MAAM;AACrC;AACA,cAAc;AACd,wBAAwB;AACxB;AACA;AACA;AACA;AACA,sCAAsC,YAAY;AAClD;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA,SAAS,OAAO,eAAe;AAC/B;AACA;AACA;AACA;AACA,wCAAwC;AACxC,uDAAuD;AACvD;AACA,wBAAwB,OAAO,MAAM;AACrC;AACA,cAAc;AACd,wBAAwB;AACxB;AACA;AACA;AACA;AACA,0BAA0B,QAAQ,QAAQ;AAC1C;AACA,cAAc,KAAK,MAAM,2EAA2E;AACpG,CAAC;AACD;AACA,0BAA0B,eAAe;AACzC;AACA,cAAc,KAAK,MAAM,qFAAqF;AAC9G;AACA,CAAC;AACD;AACA,0BAA0B,MAAM,QAAQ;AACxC;AACA,cAAc,KAAK,MAAM,wBAAwB;AACjD,CAAC;AACD;AACA,0BAA0B,aAAa;AACvC;AACA,cAAc,KAAK,MAAM,kCAAkC;AAC3D;AACA,CAAC;;AAED,uDAAuD;AACvD,uDAAuD;AACvD,2BAA2B,8CAA8C,wBAAwB;AACjG,2BAA2B,8CAA8C,wBAAwB,EAAE;;AAEnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,qBAAqB;AACvD,oCAAoC,oBAAoB;AACxD,2BAA2B,iBAAiB;AAC5C,4BAA4B,iBAAiB;AAC7C,uCAAuC,iBAAiB;AACxD,8CAA8C,iDAAiD;AAC/F,kEAAkE;AAClE,qCAAqC,yCAAyC;AAC9E,qCAAqC,wCAAwC;AAC7E;;AAEA;AACA;AACA,YAAY,2BAA2B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,wCAAwC,kCAAkC;AAC1E,wCAAwC,kCAAkC;AAC1E,aAAa;AACb,wCAAwC,8BAA8B;AACtE;AACA,4CAA4C,uBAAuB;AACnE,iBAAiB;AACjB,4CAA4C,8BAA8B,G;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE,0FAA0F;AAC1F,2CAA2C;AAC3C,6BAA6B,MAAM,MAAM;AACzC,wCAAwC;AACxC,kDAAkD;AAClD,8FAA8F;AAC9F,yEAAyE;AACzE,wBAAwB,yEAAyE;AACjG;AACA,sBAAsB,WAAW;AACjC;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA,4CAA4C;AAC5C,6BAA6B,MAAM,MAAM;AACzC,wCAAwC;AACxC,+EAA+E;AAC/E,0DAA0D;AAC1D,sBAAsB,WAAW;AACjC;AACA;AACA,YAAY,2BAA2B;AACvC;AACA;AACA;AACA,YAAY,0BAA0B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA,qFAAqF;AACrF;AACA;AACA,2BAA2B;AAC3B,8CAA8C;AAC9C,4CAA4C;AAC5C,+CAA+C;AAC/C,8BAA8B;AAC9B,+EAA+E;AAC/E;AACA;AACA,2BAA2B;AAC3B,4CAA4C;AAC5C,4CAA4C;AAC5C,uDAAuD;AACvD;AACA;AACA,YAAY,0BAA0B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,gCAAgC;AAChC,2BAA2B;AAC3B,sCAAsC;AACtC,sBAAsB;AACtB,qEAAqE;AACrE,wDAAwD;AACxD,mEAAmE;AACnE,4BAA4B;AAC5B,yCAAyC;AACzC,+BAA+B,OAAO,MAAM;AAC5C,oDAAoD;AACpD,2BAA2B;AAC3B,sBAAsB;AACtB,kCAAkC;AAClC;AACA;AACA,CAAC;;AAED,oFAAoF,0BAA0B;AAC9G,2EAA2E,0BAA0B;AACrG,8EAA8E,0BAA0B;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA,gBAAgB,MAAM,MAAM,kBAAkB,WAAW,QAAQ,QAAQ,EAAE;AAC3E,mBAAmB,cAAc;AACjC,mBAAmB,cAAc;AACjC;AACA,gBAAgB,MAAM,mB;AACtB,kBAAkB,OAAO;AACzB,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA,0BAA0B,MAAM;AAChC,0BAA0B,IAAI,MAAM,kBAAkB,KAAK,kBAAkB;AAC7E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC,iEAAiE;AAC1G;AACA,YAAY,MAAM;AAClB;AACA,kBAAkB,IAAI,MAAM,4CAA4C,OAAO,EAAE;AACjF;AACA,wBAAwB,aAAa;AACrC;AACA;AACA;AACA,kBAAkB,IAAI;AACtB;AACA;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA,yBAAyB,UAAU;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,IAAI;AAChB,cAAc,KAAK;AACnB;AACA;AACA,kBAAkB,KAAK;AACvB,wBAAwB,eAAe;AACvC;AACA,wBAAwB,eAAe;AACvC;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA;AACA,kBAAkB,KAAK;AACvB;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB,cAAc,KAAK;AACnB;AACA;AACA,kBAAkB,KAAK;AACvB,wBAAwB,gBAAgB;AACxC;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA,kBAAkB,KAAK;AACvB;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,KAAK;AACvB;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA,qCAAqC,6BAA6B;;AAElE,mCAAmC,2CAA2C;;AAE9E;AACA;AACA,aAAa,qBAAqB;AAClC;AACA;AACA,YAAY,KAAK,MAAM,0BAA0B;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,KAAK,MAAM,iBAAiB;AAChD;AACA;AACA,gBAAgB,KAAK,MAAM,0BAA0B;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B,SAAS,KAAK,MAAM,eAAe,EAAE;AACnE,gBAAgB,KAAK,MAAM,sBAAsB;AACjD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV,YAAY,IAAI;AAChB,YAAY,IAAI;AAChB;AACA,YAAY,IAAI;AAChB;AACA,YAAY,IAAI;AAChB;AACA,kBAAkB,OAAO;AACzB;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA,kBAAkB,KAAK;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAmB,KAAK;AAC7C;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,YAAY,YAAY;AACrD,6BAA6B,2BAA2B;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,4CAA4C,sBAAsB,EAAE;AACpE;AACA,sBAAsB;AACtB,wBAAwB;AACxB,8CAA8C;AAC9C,gBAAgB;AAChB,4CAA4C;AAC5C,cAAc;AACd,sBAAsB;AACtB,4CAA4C;AAC5C,cAAc;AACd,0CAA0C;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iCAAiC;AAC9C;AACA,gBAAgB,uDAAuD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C;AACA;AACA;AACA;AACA,WAAW,oDAAoD;AAC/D;AACA;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA,0BAA0B;AAC1B;AACA,sBAAsB;AACtB,qBAAqB;AACrB,cAAc;AACd,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA,4FAA4F;AAC5F;AACA,mCAAmC;AACnC,oDAAoD;AACpD;AACA,wCAAwC;AACxC,iDAAiD;AACjD,+BAA+B;AAC/B;AACA;AACA,mEAAmE;AACnE;AACA;AACA,kDAAkD;AAClD;AACA,gDAAgD;AAChD,oFAAoF;AACpF,+BAA+B;AAC/B;AACA,gDAAgD;AAChD,wEAAwE;AACxE,wDAAwD;AACxD;AACA,mCAAmC;AACnC,sCAAsC;AACtC,yCAAyC;AACzC;AACA;AACA,oCAAoC,wCAAwC;AAC5E;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB,sBAAsB;AACtB;AACA;AACA,kBAAkB,IAAI;AACtB,0BAA0B;AAC1B;AACA,wBAAwB,KAAK,QAAQ;AACrC;AACA;AACA,yBAAyB,eAAe;AACxC,yBAAyB,eAAe;AACxC,yBAAyB,eAAe;AACxC,yBAAyB,eAAe;AACxC;AACA,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,kBAAkB,IAAI;AACtB,wBAAwB;AACxB;AACA;AACA;AACA,gBAAgB,IAAI;AACpB,wBAAwB;AACxB;AACA;AACA;AACA,kBAAkB,IAAI;AACtB,wBAAwB;AACxB,wBAAwB;AACxB,wBAAwB;AACxB,sBAAsB,IAAI;AAC1B,4BAA4B;AAC5B;AACA;AACA;AACA,oBAAoB,IAAI;AACxB,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,cAAc,IAAI;AAClB,oBAAoB;AACpB,kBAAkB,KAAK;AACvB,wBAAwB;AACxB,0BAA0B;AAC1B,sBAAsB,KAAK;AAC3B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa;AAC7B,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM,MAAM,iBAAiB;AAC1C;AACA;AACA,iBAAiB,MAAM,MAAM,iBAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM,MAAM,iBAAiB;AAC1C;AACA,iBAAiB,qCAAqC,aAAa;AACnE,iBAAiB,MAAM,MAAM,iBAAiB;AAC9C,KAAK;AACL,iBAAiB,MAAM,MAAM,yCAAyC;AACtE;AACA;AACA;AACA;AACA;AACA,WAAW,iCAAiC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,qCAAqC,aAAa;AACnE;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,iDAAiD;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2CAA2C,YAAY;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,+DAA+D;AAC/E;AACA;AACA,2CAA2C,2CAA2C;AACtF;AACA;AACA;AACA,WAAW,2CAA2C;AACtD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qEAAqE;AACxF;AACA;;AAEA;AACA;AACA,yCAAyC,+EAA+E;AACxH;AACA,YAAY,MAAM;AAClB;AACA,kBAAkB,IAAI,MAAM,oBAAoB;AAChD;AACA;AACA;AACA;AACA,sBAAsB,IAAI,MAAM,WAAW,eAAe,SAAS,IAAI,wBAAwB;AAC/F;AACA;AACA,oBAAoB,IAAI,MAAM,WAAW,WAAW,WAAW,IAAI,0BAA0B;AAC7F;AACA,sBAAsB,IAAI;AAC1B;AACA,sBAAsB,IAAI,MAAM,WAAW,eAAe,SAAS,IAAI,sBAAsB;AAC7F;AACA;AACA,YAAY;AACZ;;AAEA;;AAEA;AACA,wCAAwC,iBAAiB;AACzD;AACA;AACA;AACA,aAAa,SAAS,oBAAoB;AAC1C;AACA,eAAe,aAAa;AAC5B,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA,wBAAwB,KAAK,MAAM,aAAa;AAChD;AACA,wBAAwB,KAAK,MAAM,aAAa;AAChD;AACA,0BAA0B,IAAI,MAAM,iBAAiB;AACrD;AACA,0BAA0B,IAAI,MAAM,iBAAiB;AACrD,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI,MAAM,WAAW,WAAW,SAAS,IAAI,sBAAsB;AACnF;AACA;AACA,gBAAgB,IAAI,MAAM,WAAW,WAAW,SAAS,IAAI,sBAAsB;AACnF;AACA;AACA,gBAAgB,IAAI,MAAM,WAAW,WAAW,SAAS,IAAI,sBAAsB;AACnF;AACA,gBAAgB,MAAM;AACtB,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA,4BAA4B,KAAK,MAAM,aAAa;AACpD;AACA,4BAA4B,KAAK,MAAM,aAAa;AACpD;AACA,8BAA8B,IAAI,MAAM,iBAAiB;AACzD;AACA,8BAA8B,IAAI,MAAM,iBAAiB;AACzD,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,sBAAsB,KAAK,MAAM,oBAAoB;AACrD;AACA;AACA;AACA,sBAAsB,KAAK,MAAM,WAAW,eAAe,SAAS,IAAI,wBAAwB;AAChG;AACA;AACA,oBAAoB,IAAI,MAAM,WAAW,WAAW,WAAW,KAAK,0BAA0B;AAC9F;AACA,sBAAsB,KAAK;AAC3B;AACA,sBAAsB,KAAK,MAAM,WAAW,eAAe,SAAS,IAAI,sBAAsB;AAC9F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA,sBAAsB,KAAK;AAC3B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA,iBAAiB,KAAK,MAAM,qBAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA,sBAAsB,OAAO,MAAM,YAAY;AAC/C;AACA,sBAAsB,OAAO,MAAM,cAAc;AACjD,sBAAsB,OAAO,MAAM,WAAW,aAAa;AAC3D,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA,iBAAiB,OAAO,MAAM,kBAAkB,eAAe,OAAO,EAAE;AACxE;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,KAAK,MAAM,sCAAsC;AAC9D,sBAAsB,OAAO,MAAM,cAAc;AACjD,aAAa,OAAO,MAAM,iBAAiB,cAAc;AACzD,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA,iBAAiB,KAAK,MAAM,wBAAwB,eAAe,OAAO,EAAE;AAC5E;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,eAAe;AACzD,YAAY,IAAI;AAChB;AACA;AACA;AACA,0BAA0B,OAAO;AACjC;AACA;AACA;AACA,uBAAuB,OAAO,OAAO;AACrC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,qBAAqB;AACrB,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,OAAO;AACjC;AACA;AACA;AACA;AACA,sBAAsB,WAAW,WAAW,OAAO;AACnD,sBAAsB,cAAc,aAAa,KAAK;AACtD;AACA;AACA;AACA;AACA,sBAAsB,OAAO,MAAM,qBAAqB;AACxD,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,KAAK,MAAM,kCAAkC;AAC1D,sBAAsB,OAAO,MAAM,WAAW,aAAa;AAC3D,aAAa,OAAO,MAAM,WAAW,cAAc;AACnD,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA,iBAAiB,KAAK,MAAM,kBAAkB,eAAe,OAAO,EAAE;AACtE;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,eAAe;AACzD,YAAY,IAAI;AAChB;AACA;AACA;AACA,0BAA0B,OAAO;AACjC;AACA;AACA;AACA,uBAAuB,OAAO,OAAO;AACrC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,OAAO;AACjC;AACA;AACA;AACA;AACA,sBAAsB,WAAW,WAAW,OAAO;AACnD,sBAAsB,cAAc,aAAa,KAAK;AACtD;AACA;AACA;AACA;AACA,sBAAsB,OAAO,MAAM,qBAAqB;AACxD,YAAY;AACZ;AACA;;AAEA,qCAAqC,4CAA4C;AACjF;AACA;AACA,kCAAkC,6BAA6B;AAC/D,oCAAoC,SAAS;AAC7C,kCAAkC,6BAA6B;AAC/D,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA,iBAAiB,KAAK;AACtB;AACA;AACA;AACA;AACA,qBAAqB,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,qDAAqD,WAAW,aAAa;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA,iBAAiB,KAAK,M;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,OAAO;AACjC;AACA;AACA,0BAA0B,OAAO;AACjC,0BAA0B,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD;AACjD,iDAAiD;AACjD,iFAAiF;AACjF,6DAA6D;AAC7D,+DAA+D;AAC/D,0BAA0B;AAC1B,iCAAiC;AACjC;AACA,qBAAqB,IAAI,MAAM;AAC/B,0BAA0B,cAAc;AACxC,wBAAwB,OAAO,MAAM;AACrC,2BAA2B;AAC3B,0BAA0B;AAC1B,2BAA2B;AAC3B,qBAAqB;AACrB,gBAAgB;AAChB,0BAA0B,cAAc;AACxC,wBAAwB,OAAO,MAAM;AACrC,2BAA2B;AAC3B,8BAA8B;AAC9B,iCAAiC;AACjC,6BAA6B;AAC7B,uBAAuB;AACvB,kBAAkB;AAClB,gBAAgB;AAChB,2BAA2B;AAC3B,0BAA0B,cAAc;AACxC,wBAAwB,OAAO,sBAAsB;AACrD,0BAA0B,cAAc;AACxC,wBAAwB,OAAO,MAAM;AACrC,2BAA2B;AAC3B,2BAA2B;AAC3B,2BAA2B;AAC3B;AACA,4BAA4B;AAC5B,gBAAgB;AAChB,0BAA0B,cAAc;AACxC,wBAAwB,OAAO,kBAAkB;AACjD,0BAA0B,cAAc;AACxC,wBAAwB,OAAO,kBAAkB;AACjD,cAAc;AACd,+BAA+B;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF;AAChF;AACA,wDAAwD;AACxD,wDAAwD;AACxD,8BAA8B;AAC9B;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB,YAAY,IAAI;AAChB;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oCAAoC,UAAU;AAC9C;AACA,kCAAkC,KAAK;AACvC,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,KAAK;AACvC,kCAAkC,4BAA4B;AAC9D;AACA;AACA,qBAAqB,uCAAuC;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,KAAK;AACnB;AACA,oBAAoB;AACpB,qBAAqB;AACrB;AACA,eAAe,aAAa,kBAAkB;AAC9C;AACA;;AAEA,0CAA0C,0CAA0C;;AAEpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,aAAa;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA,kBAAkB,KAAK;AACvB;AACA;AACA;AACA;AACA,8BAA8B,uBAAuB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,kCAAkC;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,KAAK;AACvC;AACA,4BAA4B,KAAK;AACjC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM,MAAM,iDAAiD;AACzE,cAAc,KAAK,MAAM,2CAA2C;AACpE;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI,MAAM,UAAU,2BAA2B;AAC3D,YAAY,MAAM;AAClB;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA,wBAAwB,KAAK,MAAM,0BAA0B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR,YAAY,IAAI;AAChB;AACA;AACA;AACA,gBAAgB,KAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gCAAgC;AACnE;AACA;AACA,mCAAmC,aAAa;AAChD;AACA;AACA;AACA;AACA,YAAY,SAAS,aAAa,SAAS;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,MAAM,aAAa,MAAM;AACrC;AACA,gBAAgB,IAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,IAAI,MAAM,uBAAuB;AAC7C;AACA;AACA,YAAY,IAAI,MAAM,4BAA4B;AAClD;AACA;;AAEA;;AAEA,iDAAiD,YAAY,cAAc,cAAc,cAAc,cAAc;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA,gC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,KAAK,MAAM,qBAAqB,0BAA0B;AACxE,0D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA,KAAK;AACL,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,oBAAoB,aAAa,aAAa;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB,yCAAyC,IAAI;AAC7C;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB,yCAAyC,IAAI;AAC7C;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA,uBAAuB,6CAA6C;AACpE;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO,UAAU;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,cAAc;AACtD,oCAAoC,YAAY;AAChD,yCAAyC,yBAAyB,kBAAkB,GAAG;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,+BAA+B,gCAAgC,OAAO,EAAE;AACpH,gCAAgC,sCAAsC,OAAO;AAC7E;AACA,kCAAkC,8CAA8C,OAAO;AACvF;AACA,yBAAyB,oCAAoC,OAAO;AACpE;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,gDAAgD,OAAO;AAClF,0BAA0B,0CAA0C,OAAO;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,YAAY;AAChD,sCAAsC,cAAc;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,SAAS,WAAW,SAAS,mBAAmB,6BAA6B;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,OAAO;AAC1B;AACA;;AAEA,mBAAmB,OAAO;AAC1B;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,OAAO;AACtB;AACA;AACA;;AAEA,iBAAiB,QAAQ;AACzB;AACA,mBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,0CAA0C,+CAA+C;;AAEzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA,gBAAgB,IAAI;AACpB;AACA;AACA;AACA,gBAAgB,IAAI;AACpB,qBAAqB;AACrB,sBAAsB,OAAO;AAC7B;AACA,sBAAsB,OAAO;AAC7B;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA,kBAAkB,OAAO;AACzB;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA,kCAAkC;AAClC;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,sBAAsB,OAAO,oBAAoB,mBAAmB,OAAO;AAC3E,SAAS;AACT;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS,mEAAmE;AAC3F;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B,qBAAqB,OAAO;AAC5B,YAAY;AACZ;;AAEA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA,2BAA2B,8BAA8B;AACzD;AACA;AACA,qBAAqB,+FAA+F;AACpH,YAAY,IAAI;AAChB;AACA;AACA;AACA,gBAAgB,YAAY;AAC5B;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA,uBAAuB,aAAa;AACpC,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,gCAAgC;AACzE,sCAAsC,cAAc,WAAW,MAAM;AACrE,sCAAsC,eAAe,UAAU,MAAM;AACrE,sCAAsC,cAAc,UAAU,MAAM;AACpE;AACA;AACA;AACA;AACA,4CAA4C,iBAAiB,WAAW,6BAA6B,MAAM;AAC3G;AACA,oBAAoB,WAAW;AAC/B,gCAAgC,2BAA2B,UAAU;AACrE;AACA;AACA;AACA;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,mCAAmC;AACnC,mCAAmC;AACnC,4BAA4B;AAC5B;AACA,sCAAsC;AACtC,mCAAmC;AACnC;AACA,wBAAwB;AACxB,mCAAmC;AACnC;AACA,+BAA+B;AAC/B,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA;AACA,sBAAsB;;AAEtB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,sCAAsC;AACtC,2BAA2B;AAC3B,uBAAuB;AACvB,cAAc;AACd,8BAA8B;AAC9B,0BAA0B;AAC1B,iBAAiB;AACjB,oBAAoB;AACpB;AACA,2BAA2B;AAC3B,aAAa;AACb,aAAa;AACb,eAAe;AACf;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,kBAAkB;;AAElC;AACA,qBAAqB,eAAe;AACpC,aAAa,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8BAA8B;AAC9B,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,yBAAyB;AACzB,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,aAAa,4CAA4C,EAAE;AAC3D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB;AACA,aAAa;AACb;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA,kBAAkB,qCAAqC;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,wBAAwB;;AAE7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,UAAU;AACzC;AACA,YAAY,IAAI;AAChB;AACA;AACA;AACA,+BAA+B,UAAU;AACzC;AACA,YAAY,IAAI;AAChB;AACA;;AAEA;AACA;;AAEA,eAAe,QAAQ;AACvB;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,eAAe,QAAQ;AACvB;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;;AAEA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,uBAAuB,UAAU;AACjC;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,eAAe,QAAQ;AACvB;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA,eAAe,QAAQ;AACvB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mBAAmB,QAAQ;AAC3B;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,QAAQ;AACvB;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,QAAQ;AAC3B;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA,0BAA0B,QAAQ;AAClC,uBAAuB,QAAQ;AAC/B;AACA;AACA;;AAEA;AACA,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,eAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B,WAAW;AACxC;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,6BAA6B,WAAW;AACxC;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA,eAAe,8CAA8C;AAC7D;AACA;AACA,eAAe,QAAQ;AACvB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,UAAU,KAAK;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU,OAAO;AACjB,E;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,G;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,G;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,I;AACA;AACA,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB;AACA,I;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,SAAS;AACrB,E;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB,I;AACA;AACA,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB;AACA,I;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,SAAS;AACrB,E;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB;AACA,YAAY,OAAO;AACnB;AACA;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA,uBAAuB,mBAAmB;AAC1C,GAAG;AACH;AACA,YAAY,SAAS;AACrB,I;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA,cAAc,OAAO;AACrB,K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,M;AACA;AACA;AACA;AACA;AACA,M;AACA,K;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,KAAK;AACL;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;AACA;;AAEA;AACA;AACA,UAAU,WAAW;AACrB;;AAEA;AACA,UAAU,MAAM;AAChB,E;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW,MAAM,gBAAgB,mBAAmB,gBAAgB;AAChF,YAAY,WAAW,MAAM,gBAAgB,mBAAmB,gBAAgB;AAChF;AACA;AACA;AACA;AACA,G;AACA;;AAEA,SAAS;AACT;;;;;;;;;ACt0IA,qBAAqB,mBAAO,CAAC,EAAkB;;AAE/C,2BAA2B,mBAAO,CAAC,EAAwB;;AAE3D,sBAAsB,mBAAO,CAAC,EAAmB;;AAEjD;AACA;AACA;;AAEA,gC;;;;;;ACVA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;ACNA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8B;;;;;;AChBA,wBAAwB,2EAA2E,oCAAoC,mBAAmB,GAAG,EAAE,OAAO,oCAAoC,8HAA8H,GAAG,EAAE,sBAAsB;;AAEnW;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yB;;;;;;AChBA,wBAAwB,mBAAO,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;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;ACnBA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wC;;;;;;ACRA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iC;;;;;;ACTA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvLtC,IAAMomB,YAAY,GAAG,IAAIC,MAAJ,CAAW,+CAAX,CAArB;AACA,I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","file":"raremetal.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"raremetal\"] = factory();\n\telse\n\t\troot[\"raremetal\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","\"use strict\";\n\nvar numeric = (typeof exports === \"undefined\")?(function numeric() {}):(exports);\nif(typeof global !== \"undefined\") { global.numeric = numeric; }\n\nnumeric.version = \"1.2.6\";\n\n// 1. Utility functions\nnumeric.bench = function bench (f,interval) {\n    var t1,t2,n,i;\n    if(typeof interval === \"undefined\") { interval = 15; }\n    n = 0.5;\n    t1 = new Date();\n    while(1) {\n        n*=2;\n        for(i=n;i>3;i-=4) { f(); f(); f(); f(); }\n        while(i>0) { f(); i--; }\n        t2 = new Date();\n        if(t2-t1 > interval) break;\n    }\n    for(i=n;i>3;i-=4) { f(); f(); f(); f(); }\n    while(i>0) { f(); i--; }\n    t2 = new Date();\n    return 1000*(3*n-1)/(t2-t1);\n}\n\nnumeric._myIndexOf = (function _myIndexOf(w) {\n    var n = this.length,k;\n    for(k=0;k<n;++k) if(this[k]===w) return k;\n    return -1;\n});\nnumeric.myIndexOf = (Array.prototype.indexOf)?Array.prototype.indexOf:numeric._myIndexOf;\n\nnumeric.Function = Function;\nnumeric.precision = 4;\nnumeric.largeArray = 50;\n\nnumeric.prettyPrint = function prettyPrint(x) {\n    function fmtnum(x) {\n        if(x === 0) { return '0'; }\n        if(isNaN(x)) { return 'NaN'; }\n        if(x<0) { return '-'+fmtnum(-x); }\n        if(isFinite(x)) {\n            var scale = Math.floor(Math.log(x) / Math.log(10));\n            var normalized = x / Math.pow(10,scale);\n            var basic = normalized.toPrecision(numeric.precision);\n            if(parseFloat(basic) === 10) { scale++; normalized = 1; basic = normalized.toPrecision(numeric.precision); }\n            return parseFloat(basic).toString()+'e'+scale.toString();\n        }\n        return 'Infinity';\n    }\n    var ret = [];\n    function foo(x) {\n        var k;\n        if(typeof x === \"undefined\") { ret.push(Array(numeric.precision+8).join(' ')); return false; }\n        if(typeof x === \"string\") { ret.push('\"'+x+'\"'); return false; }\n        if(typeof x === \"boolean\") { ret.push(x.toString()); return false; }\n        if(typeof x === \"number\") {\n            var a = fmtnum(x);\n            var b = x.toPrecision(numeric.precision);\n            var c = parseFloat(x.toString()).toString();\n            var d = [a,b,c,parseFloat(b).toString(),parseFloat(c).toString()];\n            for(k=1;k<d.length;k++) { if(d[k].length < a.length) a = d[k]; }\n            ret.push(Array(numeric.precision+8-a.length).join(' ')+a);\n            return false;\n        }\n        if(x === null) { ret.push(\"null\"); return false; }\n        if(typeof x === \"function\") { \n            ret.push(x.toString());\n            var flag = false;\n            for(k in x) { if(x.hasOwnProperty(k)) { \n                if(flag) ret.push(',\\n');\n                else ret.push('\\n{');\n                flag = true; \n                ret.push(k); \n                ret.push(': \\n'); \n                foo(x[k]); \n            } }\n            if(flag) ret.push('}\\n');\n            return true;\n        }\n        if(x instanceof Array) {\n            if(x.length > numeric.largeArray) { ret.push('...Large Array...'); return true; }\n            var flag = false;\n            ret.push('[');\n            for(k=0;k<x.length;k++) { if(k>0) { ret.push(','); if(flag) ret.push('\\n '); } flag = foo(x[k]); }\n            ret.push(']');\n            return true;\n        }\n        ret.push('{');\n        var flag = false;\n        for(k in x) { if(x.hasOwnProperty(k)) { if(flag) ret.push(',\\n'); flag = true; ret.push(k); ret.push(': \\n'); foo(x[k]); } }\n        ret.push('}');\n        return true;\n    }\n    foo(x);\n    return ret.join('');\n}\n\nnumeric.parseDate = function parseDate(d) {\n    function foo(d) {\n        if(typeof d === 'string') { return Date.parse(d.replace(/-/g,'/')); }\n        if(!(d instanceof Array)) { throw new Error(\"parseDate: parameter must be arrays of strings\"); }\n        var ret = [],k;\n        for(k=0;k<d.length;k++) { ret[k] = foo(d[k]); }\n        return ret;\n    }\n    return foo(d);\n}\n\nnumeric.parseFloat = function parseFloat_(d) {\n    function foo(d) {\n        if(typeof d === 'string') { return parseFloat(d); }\n        if(!(d instanceof Array)) { throw new Error(\"parseFloat: parameter must be arrays of strings\"); }\n        var ret = [],k;\n        for(k=0;k<d.length;k++) { ret[k] = foo(d[k]); }\n        return ret;\n    }\n    return foo(d);\n}\n\nnumeric.parseCSV = function parseCSV(t) {\n    var foo = t.split('\\n');\n    var j,k;\n    var ret = [];\n    var pat = /(([^'\",]*)|('[^']*')|(\"[^\"]*\")),/g;\n    var patnum = /^\\s*(([+-]?[0-9]+(\\.[0-9]*)?(e[+-]?[0-9]+)?)|([+-]?[0-9]*(\\.[0-9]+)?(e[+-]?[0-9]+)?))\\s*$/;\n    var stripper = function(n) { return n.substr(0,n.length-1); }\n    var count = 0;\n    for(k=0;k<foo.length;k++) {\n      var bar = (foo[k]+\",\").match(pat),baz;\n      if(bar.length>0) {\n          ret[count] = [];\n          for(j=0;j<bar.length;j++) {\n              baz = stripper(bar[j]);\n              if(patnum.test(baz)) { ret[count][j] = parseFloat(baz); }\n              else ret[count][j] = baz;\n          }\n          count++;\n      }\n    }\n    return ret;\n}\n\nnumeric.toCSV = function toCSV(A) {\n    var s = numeric.dim(A);\n    var i,j,m,n,row,ret;\n    m = s[0];\n    n = s[1];\n    ret = [];\n    for(i=0;i<m;i++) {\n        row = [];\n        for(j=0;j<m;j++) { row[j] = A[i][j].toString(); }\n        ret[i] = row.join(', ');\n    }\n    return ret.join('\\n')+'\\n';\n}\n\nnumeric.getURL = function getURL(url) {\n    var client = new XMLHttpRequest();\n    client.open(\"GET\",url,false);\n    client.send();\n    return client;\n}\n\nnumeric.imageURL = function imageURL(img) {\n    function base64(A) {\n        var n = A.length, i,x,y,z,p,q,r,s;\n        var key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n        var ret = \"\";\n        for(i=0;i<n;i+=3) {\n            x = A[i];\n            y = A[i+1];\n            z = A[i+2];\n            p = x >> 2;\n            q = ((x & 3) << 4) + (y >> 4);\n            r = ((y & 15) << 2) + (z >> 6);\n            s = z & 63;\n            if(i+1>=n) { r = s = 64; }\n            else if(i+2>=n) { s = 64; }\n            ret += key.charAt(p) + key.charAt(q) + key.charAt(r) + key.charAt(s);\n            }\n        return ret;\n    }\n    function crc32Array (a,from,to) {\n        if(typeof from === \"undefined\") { from = 0; }\n        if(typeof to === \"undefined\") { to = a.length; }\n        var table = [0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3,\n                     0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91, \n                     0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE, 0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7,\n                     0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5, \n                     0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B, \n                     0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940, 0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59, \n                     0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F,\n                     0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924, 0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D,\n                     0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433,\n                     0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818, 0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01, \n                     0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E, 0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457, \n                     0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65, \n                     0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2, 0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB, \n                     0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9, \n                     0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F, \n                     0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD, \n                     0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A, 0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683, \n                     0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8, 0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1, \n                     0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7, \n                     0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5, \n                     0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B, \n                     0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79, \n                     0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236, 0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F, \n                     0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D, \n                     0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A, 0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713, \n                     0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38, 0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, \n                     0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777, \n                     0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C, 0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45, \n                     0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB, \n                     0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9, \n                     0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF, \n                     0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94, 0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D];\n     \n        var crc = -1, y = 0, n = a.length,i;\n\n        for (i = from; i < to; i++) {\n            y = (crc ^ a[i]) & 0xFF;\n            crc = (crc >>> 8) ^ table[y];\n        }\n     \n        return crc ^ (-1);\n    }\n\n    var h = img[0].length, w = img[0][0].length, s1, s2, next,k,length,a,b,i,j,adler32,crc32;\n    var stream = [\n                  137, 80, 78, 71, 13, 10, 26, 10,                           //  0: PNG signature\n                  0,0,0,13,                                                  //  8: IHDR Chunk length\n                  73, 72, 68, 82,                                            // 12: \"IHDR\" \n                  (w >> 24) & 255, (w >> 16) & 255, (w >> 8) & 255, w&255,   // 16: Width\n                  (h >> 24) & 255, (h >> 16) & 255, (h >> 8) & 255, h&255,   // 20: Height\n                  8,                                                         // 24: bit depth\n                  2,                                                         // 25: RGB\n                  0,                                                         // 26: deflate\n                  0,                                                         // 27: no filter\n                  0,                                                         // 28: no interlace\n                  -1,-2,-3,-4,                                               // 29: CRC\n                  -5,-6,-7,-8,                                               // 33: IDAT Chunk length\n                  73, 68, 65, 84,                                            // 37: \"IDAT\"\n                  // RFC 1950 header starts here\n                  8,                                                         // 41: RFC1950 CMF\n                  29                                                         // 42: RFC1950 FLG\n                  ];\n    crc32 = crc32Array(stream,12,29);\n    stream[29] = (crc32>>24)&255;\n    stream[30] = (crc32>>16)&255;\n    stream[31] = (crc32>>8)&255;\n    stream[32] = (crc32)&255;\n    s1 = 1;\n    s2 = 0;\n    for(i=0;i<h;i++) {\n        if(i<h-1) { stream.push(0); }\n        else { stream.push(1); }\n        a = (3*w+1+(i===0))&255; b = ((3*w+1+(i===0))>>8)&255;\n        stream.push(a); stream.push(b);\n        stream.push((~a)&255); stream.push((~b)&255);\n        if(i===0) stream.push(0);\n        for(j=0;j<w;j++) {\n            for(k=0;k<3;k++) {\n                a = img[k][i][j];\n                if(a>255) a = 255;\n                else if(a<0) a=0;\n                else a = Math.round(a);\n                s1 = (s1 + a )%65521;\n                s2 = (s2 + s1)%65521;\n                stream.push(a);\n            }\n        }\n        stream.push(0);\n    }\n    adler32 = (s2<<16)+s1;\n    stream.push((adler32>>24)&255);\n    stream.push((adler32>>16)&255);\n    stream.push((adler32>>8)&255);\n    stream.push((adler32)&255);\n    length = stream.length - 41;\n    stream[33] = (length>>24)&255;\n    stream[34] = (length>>16)&255;\n    stream[35] = (length>>8)&255;\n    stream[36] = (length)&255;\n    crc32 = crc32Array(stream,37);\n    stream.push((crc32>>24)&255);\n    stream.push((crc32>>16)&255);\n    stream.push((crc32>>8)&255);\n    stream.push((crc32)&255);\n    stream.push(0);\n    stream.push(0);\n    stream.push(0);\n    stream.push(0);\n//    a = stream.length;\n    stream.push(73);  // I\n    stream.push(69);  // E\n    stream.push(78);  // N\n    stream.push(68);  // D\n    stream.push(174); // CRC1\n    stream.push(66);  // CRC2\n    stream.push(96);  // CRC3\n    stream.push(130); // CRC4\n    return 'data:image/png;base64,'+base64(stream);\n}\n\n// 2. Linear algebra with Arrays.\nnumeric._dim = function _dim(x) {\n    var ret = [];\n    while(typeof x === \"object\") { ret.push(x.length); x = x[0]; }\n    return ret;\n}\n\nnumeric.dim = function dim(x) {\n    var y,z;\n    if(typeof x === \"object\") {\n        y = x[0];\n        if(typeof y === \"object\") {\n            z = y[0];\n            if(typeof z === \"object\") {\n                return numeric._dim(x);\n            }\n            return [x.length,y.length];\n        }\n        return [x.length];\n    }\n    return [];\n}\n\nnumeric.mapreduce = function mapreduce(body,init) {\n    return Function('x','accum','_s','_k',\n            'if(typeof accum === \"undefined\") accum = '+init+';\\n'+\n            'if(typeof x === \"number\") { var xi = x; '+body+'; return accum; }\\n'+\n            'if(typeof _s === \"undefined\") _s = numeric.dim(x);\\n'+\n            'if(typeof _k === \"undefined\") _k = 0;\\n'+\n            'var _n = _s[_k];\\n'+\n            'var i,xi;\\n'+\n            'if(_k < _s.length-1) {\\n'+\n            '    for(i=_n-1;i>=0;i--) {\\n'+\n            '        accum = arguments.callee(x[i],accum,_s,_k+1);\\n'+\n            '    }'+\n            '    return accum;\\n'+\n            '}\\n'+\n            'for(i=_n-1;i>=1;i-=2) { \\n'+\n            '    xi = x[i];\\n'+\n            '    '+body+';\\n'+\n            '    xi = x[i-1];\\n'+\n            '    '+body+';\\n'+\n            '}\\n'+\n            'if(i === 0) {\\n'+\n            '    xi = x[i];\\n'+\n            '    '+body+'\\n'+\n            '}\\n'+\n            'return accum;'\n            );\n}\nnumeric.mapreduce2 = function mapreduce2(body,setup) {\n    return Function('x',\n            'var n = x.length;\\n'+\n            'var i,xi;\\n'+setup+';\\n'+\n            'for(i=n-1;i!==-1;--i) { \\n'+\n            '    xi = x[i];\\n'+\n            '    '+body+';\\n'+\n            '}\\n'+\n            'return accum;'\n            );\n}\n\n\nnumeric.same = function same(x,y) {\n    var i,n;\n    if(!(x instanceof Array) || !(y instanceof Array)) { return false; }\n    n = x.length;\n    if(n !== y.length) { return false; }\n    for(i=0;i<n;i++) {\n        if(x[i] === y[i]) { continue; }\n        if(typeof x[i] === \"object\") { if(!same(x[i],y[i])) return false; }\n        else { return false; }\n    }\n    return true;\n}\n\nnumeric.rep = function rep(s,v,k) {\n    if(typeof k === \"undefined\") { k=0; }\n    var n = s[k], ret = Array(n), i;\n    if(k === s.length-1) {\n        for(i=n-2;i>=0;i-=2) { ret[i+1] = v; ret[i] = v; }\n        if(i===-1) { ret[0] = v; }\n        return ret;\n    }\n    for(i=n-1;i>=0;i--) { ret[i] = numeric.rep(s,v,k+1); }\n    return ret;\n}\n\n\nnumeric.dotMMsmall = function dotMMsmall(x,y) {\n    var i,j,k,p,q,r,ret,foo,bar,woo,i0,k0,p0,r0;\n    p = x.length; q = y.length; r = y[0].length;\n    ret = Array(p);\n    for(i=p-1;i>=0;i--) {\n        foo = Array(r);\n        bar = x[i];\n        for(k=r-1;k>=0;k--) {\n            woo = bar[q-1]*y[q-1][k];\n            for(j=q-2;j>=1;j-=2) {\n                i0 = j-1;\n                woo += bar[j]*y[j][k] + bar[i0]*y[i0][k];\n            }\n            if(j===0) { woo += bar[0]*y[0][k]; }\n            foo[k] = woo;\n        }\n        ret[i] = foo;\n    }\n    return ret;\n}\nnumeric._getCol = function _getCol(A,j,x) {\n    var n = A.length, i;\n    for(i=n-1;i>0;--i) {\n        x[i] = A[i][j];\n        --i;\n        x[i] = A[i][j];\n    }\n    if(i===0) x[0] = A[0][j];\n}\nnumeric.dotMMbig = function dotMMbig(x,y){\n    var gc = numeric._getCol, p = y.length, v = Array(p);\n    var m = x.length, n = y[0].length, A = new Array(m), xj;\n    var VV = numeric.dotVV;\n    var i,j,k,z;\n    --p;\n    --m;\n    for(i=m;i!==-1;--i) A[i] = Array(n);\n    --n;\n    for(i=n;i!==-1;--i) {\n        gc(y,i,v);\n        for(j=m;j!==-1;--j) {\n            z=0;\n            xj = x[j];\n            A[j][i] = VV(xj,v);\n        }\n    }\n    return A;\n}\n\nnumeric.dotMV = function dotMV(x,y) {\n    var p = x.length, q = y.length,i;\n    var ret = Array(p), dotVV = numeric.dotVV;\n    for(i=p-1;i>=0;i--) { ret[i] = dotVV(x[i],y); }\n    return ret;\n}\n\nnumeric.dotVM = function dotVM(x,y) {\n    var i,j,k,p,q,r,ret,foo,bar,woo,i0,k0,p0,r0,s1,s2,s3,baz,accum;\n    p = x.length; q = y[0].length;\n    ret = Array(q);\n    for(k=q-1;k>=0;k--) {\n        woo = x[p-1]*y[p-1][k];\n        for(j=p-2;j>=1;j-=2) {\n            i0 = j-1;\n            woo += x[j]*y[j][k] + x[i0]*y[i0][k];\n        }\n        if(j===0) { woo += x[0]*y[0][k]; }\n        ret[k] = woo;\n    }\n    return ret;\n}\n\nnumeric.dotVV = function dotVV(x,y) {\n    var i,n=x.length,i1,ret = x[n-1]*y[n-1];\n    for(i=n-2;i>=1;i-=2) {\n        i1 = i-1;\n        ret += x[i]*y[i] + x[i1]*y[i1];\n    }\n    if(i===0) { ret += x[0]*y[0]; }\n    return ret;\n}\n\nnumeric.dot = function dot(x,y) {\n    var d = numeric.dim;\n    switch(d(x).length*1000+d(y).length) {\n    case 2002:\n        if(y.length < 10) return numeric.dotMMsmall(x,y);\n        else return numeric.dotMMbig(x,y);\n    case 2001: return numeric.dotMV(x,y);\n    case 1002: return numeric.dotVM(x,y);\n    case 1001: return numeric.dotVV(x,y);\n    case 1000: return numeric.mulVS(x,y);\n    case 1: return numeric.mulSV(x,y);\n    case 0: return x*y;\n    default: throw new Error('numeric.dot only works on vectors and matrices');\n    }\n}\n\nnumeric.diag = function diag(d) {\n    var i,i1,j,n = d.length, A = Array(n), Ai;\n    for(i=n-1;i>=0;i--) {\n        Ai = Array(n);\n        i1 = i+2;\n        for(j=n-1;j>=i1;j-=2) {\n            Ai[j] = 0;\n            Ai[j-1] = 0;\n        }\n        if(j>i) { Ai[j] = 0; }\n        Ai[i] = d[i];\n        for(j=i-1;j>=1;j-=2) {\n            Ai[j] = 0;\n            Ai[j-1] = 0;\n        }\n        if(j===0) { Ai[0] = 0; }\n        A[i] = Ai;\n    }\n    return A;\n}\nnumeric.getDiag = function(A) {\n    var n = Math.min(A.length,A[0].length),i,ret = Array(n);\n    for(i=n-1;i>=1;--i) {\n        ret[i] = A[i][i];\n        --i;\n        ret[i] = A[i][i];\n    }\n    if(i===0) {\n        ret[0] = A[0][0];\n    }\n    return ret;\n}\n\nnumeric.identity = function identity(n) { return numeric.diag(numeric.rep([n],1)); }\nnumeric.pointwise = function pointwise(params,body,setup) {\n    if(typeof setup === \"undefined\") { setup = \"\"; }\n    var fun = [];\n    var k;\n    var avec = /\\[i\\]$/,p,thevec = '';\n    var haveret = false;\n    for(k=0;k<params.length;k++) {\n        if(avec.test(params[k])) {\n            p = params[k].substring(0,params[k].length-3);\n            thevec = p;\n        } else { p = params[k]; }\n        if(p==='ret') haveret = true;\n        fun.push(p);\n    }\n    fun[params.length] = '_s';\n    fun[params.length+1] = '_k';\n    fun[params.length+2] = (\n            'if(typeof _s === \"undefined\") _s = numeric.dim('+thevec+');\\n'+\n            'if(typeof _k === \"undefined\") _k = 0;\\n'+\n            'var _n = _s[_k];\\n'+\n            'var i'+(haveret?'':', ret = Array(_n)')+';\\n'+\n            'if(_k < _s.length-1) {\\n'+\n            '    for(i=_n-1;i>=0;i--) ret[i] = arguments.callee('+params.join(',')+',_s,_k+1);\\n'+\n            '    return ret;\\n'+\n            '}\\n'+\n            setup+'\\n'+\n            'for(i=_n-1;i!==-1;--i) {\\n'+\n            '    '+body+'\\n'+\n            '}\\n'+\n            'return ret;'\n            );\n    return Function.apply(null,fun);\n}\nnumeric.pointwise2 = function pointwise2(params,body,setup) {\n    if(typeof setup === \"undefined\") { setup = \"\"; }\n    var fun = [];\n    var k;\n    var avec = /\\[i\\]$/,p,thevec = '';\n    var haveret = false;\n    for(k=0;k<params.length;k++) {\n        if(avec.test(params[k])) {\n            p = params[k].substring(0,params[k].length-3);\n            thevec = p;\n        } else { p = params[k]; }\n        if(p==='ret') haveret = true;\n        fun.push(p);\n    }\n    fun[params.length] = (\n            'var _n = '+thevec+'.length;\\n'+\n            'var i'+(haveret?'':', ret = Array(_n)')+';\\n'+\n            setup+'\\n'+\n            'for(i=_n-1;i!==-1;--i) {\\n'+\n            body+'\\n'+\n            '}\\n'+\n            'return ret;'\n            );\n    return Function.apply(null,fun);\n}\nnumeric._biforeach = (function _biforeach(x,y,s,k,f) {\n    if(k === s.length-1) { f(x,y); return; }\n    var i,n=s[k];\n    for(i=n-1;i>=0;i--) { _biforeach(typeof x===\"object\"?x[i]:x,typeof y===\"object\"?y[i]:y,s,k+1,f); }\n});\nnumeric._biforeach2 = (function _biforeach2(x,y,s,k,f) {\n    if(k === s.length-1) { return f(x,y); }\n    var i,n=s[k],ret = Array(n);\n    for(i=n-1;i>=0;--i) { ret[i] = _biforeach2(typeof x===\"object\"?x[i]:x,typeof y===\"object\"?y[i]:y,s,k+1,f); }\n    return ret;\n});\nnumeric._foreach = (function _foreach(x,s,k,f) {\n    if(k === s.length-1) { f(x); return; }\n    var i,n=s[k];\n    for(i=n-1;i>=0;i--) { _foreach(x[i],s,k+1,f); }\n});\nnumeric._foreach2 = (function _foreach2(x,s,k,f) {\n    if(k === s.length-1) { return f(x); }\n    var i,n=s[k], ret = Array(n);\n    for(i=n-1;i>=0;i--) { ret[i] = _foreach2(x[i],s,k+1,f); }\n    return ret;\n});\n\n/*numeric.anyV = numeric.mapreduce('if(xi) return true;','false');\nnumeric.allV = numeric.mapreduce('if(!xi) return false;','true');\nnumeric.any = function(x) { if(typeof x.length === \"undefined\") return x; return numeric.anyV(x); }\nnumeric.all = function(x) { if(typeof x.length === \"undefined\") return x; return numeric.allV(x); }*/\n\nnumeric.ops2 = {\n        add: '+',\n        sub: '-',\n        mul: '*',\n        div: '/',\n        mod: '%',\n        and: '&&',\n        or:  '||',\n        eq:  '===',\n        neq: '!==',\n        lt:  '<',\n        gt:  '>',\n        leq: '<=',\n        geq: '>=',\n        band: '&',\n        bor: '|',\n        bxor: '^',\n        lshift: '<<',\n        rshift: '>>',\n        rrshift: '>>>'\n};\nnumeric.opseq = {\n        addeq: '+=',\n        subeq: '-=',\n        muleq: '*=',\n        diveq: '/=',\n        modeq: '%=',\n        lshifteq: '<<=',\n        rshifteq: '>>=',\n        rrshifteq: '>>>=',\n        bandeq: '&=',\n        boreq: '|=',\n        bxoreq: '^='\n};\nnumeric.mathfuns = ['abs','acos','asin','atan','ceil','cos',\n                    'exp','floor','log','round','sin','sqrt','tan',\n                    'isNaN','isFinite'];\nnumeric.mathfuns2 = ['atan2','pow','max','min'];\nnumeric.ops1 = {\n        neg: '-',\n        not: '!',\n        bnot: '~',\n        clone: ''\n};\nnumeric.mapreducers = {\n        any: ['if(xi) return true;','var accum = false;'],\n        all: ['if(!xi) return false;','var accum = true;'],\n        sum: ['accum += xi;','var accum = 0;'],\n        prod: ['accum *= xi;','var accum = 1;'],\n        norm2Squared: ['accum += xi*xi;','var accum = 0;'],\n        norminf: ['accum = max(accum,abs(xi));','var accum = 0, max = Math.max, abs = Math.abs;'],\n        norm1: ['accum += abs(xi)','var accum = 0, abs = Math.abs;'],\n        sup: ['accum = max(accum,xi);','var accum = -Infinity, max = Math.max;'],\n        inf: ['accum = min(accum,xi);','var accum = Infinity, min = Math.min;']\n};\n\n(function () {\n    var i,o;\n    for(i=0;i<numeric.mathfuns2.length;++i) {\n        o = numeric.mathfuns2[i];\n        numeric.ops2[o] = o;\n    }\n    for(i in numeric.ops2) {\n        if(numeric.ops2.hasOwnProperty(i)) {\n            o = numeric.ops2[i];\n            var code, codeeq, setup = '';\n            if(numeric.myIndexOf.call(numeric.mathfuns2,i)!==-1) {\n                setup = 'var '+o+' = Math.'+o+';\\n';\n                code = function(r,x,y) { return r+' = '+o+'('+x+','+y+')'; };\n                codeeq = function(x,y) { return x+' = '+o+'('+x+','+y+')'; };\n            } else {\n                code = function(r,x,y) { return r+' = '+x+' '+o+' '+y; };\n                if(numeric.opseq.hasOwnProperty(i+'eq')) {\n                    codeeq = function(x,y) { return x+' '+o+'= '+y; };\n                } else {\n                    codeeq = function(x,y) { return x+' = '+x+' '+o+' '+y; };                    \n                }\n            }\n            numeric[i+'VV'] = numeric.pointwise2(['x[i]','y[i]'],code('ret[i]','x[i]','y[i]'),setup);\n            numeric[i+'SV'] = numeric.pointwise2(['x','y[i]'],code('ret[i]','x','y[i]'),setup);\n            numeric[i+'VS'] = numeric.pointwise2(['x[i]','y'],code('ret[i]','x[i]','y'),setup);\n            numeric[i] = Function(\n                    'var n = arguments.length, i, x = arguments[0], y;\\n'+\n                    'var VV = numeric.'+i+'VV, VS = numeric.'+i+'VS, SV = numeric.'+i+'SV;\\n'+\n                    'var dim = numeric.dim;\\n'+\n                    'for(i=1;i!==n;++i) { \\n'+\n                    '  y = arguments[i];\\n'+\n                    '  if(typeof x === \"object\") {\\n'+\n                    '      if(typeof y === \"object\") x = numeric._biforeach2(x,y,dim(x),0,VV);\\n'+\n                    '      else x = numeric._biforeach2(x,y,dim(x),0,VS);\\n'+\n                    '  } else if(typeof y === \"object\") x = numeric._biforeach2(x,y,dim(y),0,SV);\\n'+\n                    '  else '+codeeq('x','y')+'\\n'+\n                    '}\\nreturn x;\\n');\n            numeric[o] = numeric[i];\n            numeric[i+'eqV'] = numeric.pointwise2(['ret[i]','x[i]'], codeeq('ret[i]','x[i]'),setup);\n            numeric[i+'eqS'] = numeric.pointwise2(['ret[i]','x'], codeeq('ret[i]','x'),setup);\n            numeric[i+'eq'] = Function(\n                    'var n = arguments.length, i, x = arguments[0], y;\\n'+\n                    'var V = numeric.'+i+'eqV, S = numeric.'+i+'eqS\\n'+\n                    'var s = numeric.dim(x);\\n'+\n                    'for(i=1;i!==n;++i) { \\n'+\n                    '  y = arguments[i];\\n'+\n                    '  if(typeof y === \"object\") numeric._biforeach(x,y,s,0,V);\\n'+\n                    '  else numeric._biforeach(x,y,s,0,S);\\n'+\n                    '}\\nreturn x;\\n');\n        }\n    }\n    for(i=0;i<numeric.mathfuns2.length;++i) {\n        o = numeric.mathfuns2[i];\n        delete numeric.ops2[o];\n    }\n    for(i=0;i<numeric.mathfuns.length;++i) {\n        o = numeric.mathfuns[i];\n        numeric.ops1[o] = o;\n    }\n    for(i in numeric.ops1) {\n        if(numeric.ops1.hasOwnProperty(i)) {\n            setup = '';\n            o = numeric.ops1[i];\n            if(numeric.myIndexOf.call(numeric.mathfuns,i)!==-1) {\n                if(Math.hasOwnProperty(o)) setup = 'var '+o+' = Math.'+o+';\\n';\n            }\n            numeric[i+'eqV'] = numeric.pointwise2(['ret[i]'],'ret[i] = '+o+'(ret[i]);',setup);\n            numeric[i+'eq'] = Function('x',\n                    'if(typeof x !== \"object\") return '+o+'x\\n'+\n                    'var i;\\n'+\n                    'var V = numeric.'+i+'eqV;\\n'+\n                    'var s = numeric.dim(x);\\n'+\n                    'numeric._foreach(x,s,0,V);\\n'+\n                    'return x;\\n');\n            numeric[i+'V'] = numeric.pointwise2(['x[i]'],'ret[i] = '+o+'(x[i]);',setup);\n            numeric[i] = Function('x',\n                    'if(typeof x !== \"object\") return '+o+'(x)\\n'+\n                    'var i;\\n'+\n                    'var V = numeric.'+i+'V;\\n'+\n                    'var s = numeric.dim(x);\\n'+\n                    'return numeric._foreach2(x,s,0,V);\\n');\n        }\n    }\n    for(i=0;i<numeric.mathfuns.length;++i) {\n        o = numeric.mathfuns[i];\n        delete numeric.ops1[o];\n    }\n    for(i in numeric.mapreducers) {\n        if(numeric.mapreducers.hasOwnProperty(i)) {\n            o = numeric.mapreducers[i];\n            numeric[i+'V'] = numeric.mapreduce2(o[0],o[1]);\n            numeric[i] = Function('x','s','k',\n                    o[1]+\n                    'if(typeof x !== \"object\") {'+\n                    '    xi = x;\\n'+\n                    o[0]+';\\n'+\n                    '    return accum;\\n'+\n                    '}'+\n                    'if(typeof s === \"undefined\") s = numeric.dim(x);\\n'+\n                    'if(typeof k === \"undefined\") k = 0;\\n'+\n                    'if(k === s.length-1) return numeric.'+i+'V(x);\\n'+\n                    'var xi;\\n'+\n                    'var n = x.length, i;\\n'+\n                    'for(i=n-1;i!==-1;--i) {\\n'+\n                    '   xi = arguments.callee(x[i]);\\n'+\n                    o[0]+';\\n'+\n                    '}\\n'+\n                    'return accum;\\n');\n        }\n    }\n}());\n\nnumeric.truncVV = numeric.pointwise(['x[i]','y[i]'],'ret[i] = round(x[i]/y[i])*y[i];','var round = Math.round;');\nnumeric.truncVS = numeric.pointwise(['x[i]','y'],'ret[i] = round(x[i]/y)*y;','var round = Math.round;');\nnumeric.truncSV = numeric.pointwise(['x','y[i]'],'ret[i] = round(x/y[i])*y[i];','var round = Math.round;');\nnumeric.trunc = function trunc(x,y) {\n    if(typeof x === \"object\") {\n        if(typeof y === \"object\") return numeric.truncVV(x,y);\n        return numeric.truncVS(x,y);\n    }\n    if (typeof y === \"object\") return numeric.truncSV(x,y);\n    return Math.round(x/y)*y;\n}\n\nnumeric.inv = function inv(x) {\n    var s = numeric.dim(x), abs = Math.abs, m = s[0], n = s[1];\n    var A = numeric.clone(x), Ai, Aj;\n    var I = numeric.identity(m), Ii, Ij;\n    var i,j,k,x;\n    for(j=0;j<n;++j) {\n        var i0 = -1;\n        var v0 = -1;\n        for(i=j;i!==m;++i) { k = abs(A[i][j]); if(k>v0) { i0 = i; v0 = k; } }\n        Aj = A[i0]; A[i0] = A[j]; A[j] = Aj;\n        Ij = I[i0]; I[i0] = I[j]; I[j] = Ij;\n        x = Aj[j];\n        for(k=j;k!==n;++k)    Aj[k] /= x; \n        for(k=n-1;k!==-1;--k) Ij[k] /= x;\n        for(i=m-1;i!==-1;--i) {\n            if(i!==j) {\n                Ai = A[i];\n                Ii = I[i];\n                x = Ai[j];\n                for(k=j+1;k!==n;++k)  Ai[k] -= Aj[k]*x;\n                for(k=n-1;k>0;--k) { Ii[k] -= Ij[k]*x; --k; Ii[k] -= Ij[k]*x; }\n                if(k===0) Ii[0] -= Ij[0]*x;\n            }\n        }\n    }\n    return I;\n}\n\nnumeric.det = function det(x) {\n    var s = numeric.dim(x);\n    if(s.length !== 2 || s[0] !== s[1]) { throw new Error('numeric: det() only works on square matrices'); }\n    var n = s[0], ret = 1,i,j,k,A = numeric.clone(x),Aj,Ai,alpha,temp,k1,k2,k3;\n    for(j=0;j<n-1;j++) {\n        k=j;\n        for(i=j+1;i<n;i++) { if(Math.abs(A[i][j]) > Math.abs(A[k][j])) { k = i; } }\n        if(k !== j) {\n            temp = A[k]; A[k] = A[j]; A[j] = temp;\n            ret *= -1;\n        }\n        Aj = A[j];\n        for(i=j+1;i<n;i++) {\n            Ai = A[i];\n            alpha = Ai[j]/Aj[j];\n            for(k=j+1;k<n-1;k+=2) {\n                k1 = k+1;\n                Ai[k] -= Aj[k]*alpha;\n                Ai[k1] -= Aj[k1]*alpha;\n            }\n            if(k!==n) { Ai[k] -= Aj[k]*alpha; }\n        }\n        if(Aj[j] === 0) { return 0; }\n        ret *= Aj[j];\n    }\n    return ret*A[j][j];\n}\n\nnumeric.transpose = function transpose(x) {\n    var i,j,m = x.length,n = x[0].length, ret=Array(n),A0,A1,Bj;\n    for(j=0;j<n;j++) ret[j] = Array(m);\n    for(i=m-1;i>=1;i-=2) {\n        A1 = x[i];\n        A0 = x[i-1];\n        for(j=n-1;j>=1;--j) {\n            Bj = ret[j]; Bj[i] = A1[j]; Bj[i-1] = A0[j];\n            --j;\n            Bj = ret[j]; Bj[i] = A1[j]; Bj[i-1] = A0[j];\n        }\n        if(j===0) {\n            Bj = ret[0]; Bj[i] = A1[0]; Bj[i-1] = A0[0];\n        }\n    }\n    if(i===0) {\n        A0 = x[0];\n        for(j=n-1;j>=1;--j) {\n            ret[j][0] = A0[j];\n            --j;\n            ret[j][0] = A0[j];\n        }\n        if(j===0) { ret[0][0] = A0[0]; }\n    }\n    return ret;\n}\nnumeric.negtranspose = function negtranspose(x) {\n    var i,j,m = x.length,n = x[0].length, ret=Array(n),A0,A1,Bj;\n    for(j=0;j<n;j++) ret[j] = Array(m);\n    for(i=m-1;i>=1;i-=2) {\n        A1 = x[i];\n        A0 = x[i-1];\n        for(j=n-1;j>=1;--j) {\n            Bj = ret[j]; Bj[i] = -A1[j]; Bj[i-1] = -A0[j];\n            --j;\n            Bj = ret[j]; Bj[i] = -A1[j]; Bj[i-1] = -A0[j];\n        }\n        if(j===0) {\n            Bj = ret[0]; Bj[i] = -A1[0]; Bj[i-1] = -A0[0];\n        }\n    }\n    if(i===0) {\n        A0 = x[0];\n        for(j=n-1;j>=1;--j) {\n            ret[j][0] = -A0[j];\n            --j;\n            ret[j][0] = -A0[j];\n        }\n        if(j===0) { ret[0][0] = -A0[0]; }\n    }\n    return ret;\n}\n\nnumeric._random = function _random(s,k) {\n    var i,n=s[k],ret=Array(n), rnd;\n    if(k === s.length-1) {\n        rnd = Math.random;\n        for(i=n-1;i>=1;i-=2) {\n            ret[i] = rnd();\n            ret[i-1] = rnd();\n        }\n        if(i===0) { ret[0] = rnd(); }\n        return ret;\n    }\n    for(i=n-1;i>=0;i--) ret[i] = _random(s,k+1);\n    return ret;\n}\nnumeric.random = function random(s) { return numeric._random(s,0); }\n\nnumeric.norm2 = function norm2(x) { return Math.sqrt(numeric.norm2Squared(x)); }\n\nnumeric.linspace = function linspace(a,b,n) {\n    if(typeof n === \"undefined\") n = Math.max(Math.round(b-a)+1,1);\n    if(n<2) { return n===1?[a]:[]; }\n    var i,ret = Array(n);\n    n--;\n    for(i=n;i>=0;i--) { ret[i] = (i*b+(n-i)*a)/n; }\n    return ret;\n}\n\nnumeric.getBlock = function getBlock(x,from,to) {\n    var s = numeric.dim(x);\n    function foo(x,k) {\n        var i,a = from[k], n = to[k]-a, ret = Array(n);\n        if(k === s.length-1) {\n            for(i=n;i>=0;i--) { ret[i] = x[i+a]; }\n            return ret;\n        }\n        for(i=n;i>=0;i--) { ret[i] = foo(x[i+a],k+1); }\n        return ret;\n    }\n    return foo(x,0);\n}\n\nnumeric.setBlock = function setBlock(x,from,to,B) {\n    var s = numeric.dim(x);\n    function foo(x,y,k) {\n        var i,a = from[k], n = to[k]-a;\n        if(k === s.length-1) { for(i=n;i>=0;i--) { x[i+a] = y[i]; } }\n        for(i=n;i>=0;i--) { foo(x[i+a],y[i],k+1); }\n    }\n    foo(x,B,0);\n    return x;\n}\n\nnumeric.getRange = function getRange(A,I,J) {\n    var m = I.length, n = J.length;\n    var i,j;\n    var B = Array(m), Bi, AI;\n    for(i=m-1;i!==-1;--i) {\n        B[i] = Array(n);\n        Bi = B[i];\n        AI = A[I[i]];\n        for(j=n-1;j!==-1;--j) Bi[j] = AI[J[j]];\n    }\n    return B;\n}\n\nnumeric.blockMatrix = function blockMatrix(X) {\n    var s = numeric.dim(X);\n    if(s.length<4) return numeric.blockMatrix([X]);\n    var m=s[0],n=s[1],M,N,i,j,Xij;\n    M = 0; N = 0;\n    for(i=0;i<m;++i) M+=X[i][0].length;\n    for(j=0;j<n;++j) N+=X[0][j][0].length;\n    var Z = Array(M);\n    for(i=0;i<M;++i) Z[i] = Array(N);\n    var I=0,J,ZI,k,l,Xijk;\n    for(i=0;i<m;++i) {\n        J=N;\n        for(j=n-1;j!==-1;--j) {\n            Xij = X[i][j];\n            J -= Xij[0].length;\n            for(k=Xij.length-1;k!==-1;--k) {\n                Xijk = Xij[k];\n                ZI = Z[I+k];\n                for(l = Xijk.length-1;l!==-1;--l) ZI[J+l] = Xijk[l];\n            }\n        }\n        I += X[i][0].length;\n    }\n    return Z;\n}\n\nnumeric.tensor = function tensor(x,y) {\n    if(typeof x === \"number\" || typeof y === \"number\") return numeric.mul(x,y);\n    var s1 = numeric.dim(x), s2 = numeric.dim(y);\n    if(s1.length !== 1 || s2.length !== 1) {\n        throw new Error('numeric: tensor product is only defined for vectors');\n    }\n    var m = s1[0], n = s2[0], A = Array(m), Ai, i,j,xi;\n    for(i=m-1;i>=0;i--) {\n        Ai = Array(n);\n        xi = x[i];\n        for(j=n-1;j>=3;--j) {\n            Ai[j] = xi * y[j];\n            --j;\n            Ai[j] = xi * y[j];\n            --j;\n            Ai[j] = xi * y[j];\n            --j;\n            Ai[j] = xi * y[j];\n        }\n        while(j>=0) { Ai[j] = xi * y[j]; --j; }\n        A[i] = Ai;\n    }\n    return A;\n}\n\n// 3. The Tensor type T\nnumeric.T = function T(x,y) { this.x = x; this.y = y; }\nnumeric.t = function t(x,y) { return new numeric.T(x,y); }\n\nnumeric.Tbinop = function Tbinop(rr,rc,cr,cc,setup) {\n    var io = numeric.indexOf;\n    if(typeof setup !== \"string\") {\n        var k;\n        setup = '';\n        for(k in numeric) {\n            if(numeric.hasOwnProperty(k) && (rr.indexOf(k)>=0 || rc.indexOf(k)>=0 || cr.indexOf(k)>=0 || cc.indexOf(k)>=0) && k.length>1) {\n                setup += 'var '+k+' = numeric.'+k+';\\n';\n            }\n        }\n    }\n    return Function(['y'],\n            'var x = this;\\n'+\n            'if(!(y instanceof numeric.T)) { y = new numeric.T(y); }\\n'+\n            setup+'\\n'+\n            'if(x.y) {'+\n            '  if(y.y) {'+\n            '    return new numeric.T('+cc+');\\n'+\n            '  }\\n'+\n            '  return new numeric.T('+cr+');\\n'+\n            '}\\n'+\n            'if(y.y) {\\n'+\n            '  return new numeric.T('+rc+');\\n'+\n            '}\\n'+\n            'return new numeric.T('+rr+');\\n'\n    );\n}\n\nnumeric.T.prototype.add = numeric.Tbinop(\n        'add(x.x,y.x)',\n        'add(x.x,y.x),y.y',\n        'add(x.x,y.x),x.y',\n        'add(x.x,y.x),add(x.y,y.y)');\nnumeric.T.prototype.sub = numeric.Tbinop(\n        'sub(x.x,y.x)',\n        'sub(x.x,y.x),neg(y.y)',\n        'sub(x.x,y.x),x.y',\n        'sub(x.x,y.x),sub(x.y,y.y)');\nnumeric.T.prototype.mul = numeric.Tbinop(\n        'mul(x.x,y.x)',\n        'mul(x.x,y.x),mul(x.x,y.y)',\n        'mul(x.x,y.x),mul(x.y,y.x)',\n        'sub(mul(x.x,y.x),mul(x.y,y.y)),add(mul(x.x,y.y),mul(x.y,y.x))');\n\nnumeric.T.prototype.reciprocal = function reciprocal() {\n    var mul = numeric.mul, div = numeric.div;\n    if(this.y) {\n        var d = numeric.add(mul(this.x,this.x),mul(this.y,this.y));\n        return new numeric.T(div(this.x,d),div(numeric.neg(this.y),d));\n    }\n    return new T(div(1,this.x));\n}\nnumeric.T.prototype.div = function div(y) {\n    if(!(y instanceof numeric.T)) y = new numeric.T(y);\n    if(y.y) { return this.mul(y.reciprocal()); }\n    var div = numeric.div;\n    if(this.y) { return new numeric.T(div(this.x,y.x),div(this.y,y.x)); }\n    return new numeric.T(div(this.x,y.x));\n}\nnumeric.T.prototype.dot = numeric.Tbinop(\n        'dot(x.x,y.x)',\n        'dot(x.x,y.x),dot(x.x,y.y)',\n        'dot(x.x,y.x),dot(x.y,y.x)',\n        'sub(dot(x.x,y.x),dot(x.y,y.y)),add(dot(x.x,y.y),dot(x.y,y.x))'\n        );\nnumeric.T.prototype.transpose = function transpose() {\n    var t = numeric.transpose, x = this.x, y = this.y;\n    if(y) { return new numeric.T(t(x),t(y)); }\n    return new numeric.T(t(x));\n}\nnumeric.T.prototype.transjugate = function transjugate() {\n    var t = numeric.transpose, x = this.x, y = this.y;\n    if(y) { return new numeric.T(t(x),numeric.negtranspose(y)); }\n    return new numeric.T(t(x));\n}\nnumeric.Tunop = function Tunop(r,c,s) {\n    if(typeof s !== \"string\") { s = ''; }\n    return Function(\n            'var x = this;\\n'+\n            s+'\\n'+\n            'if(x.y) {'+\n            '  '+c+';\\n'+\n            '}\\n'+\n            r+';\\n'\n    );\n}\n\nnumeric.T.prototype.exp = numeric.Tunop(\n        'return new numeric.T(ex)',\n        'return new numeric.T(mul(cos(x.y),ex),mul(sin(x.y),ex))',\n        'var ex = numeric.exp(x.x), cos = numeric.cos, sin = numeric.sin, mul = numeric.mul;');\nnumeric.T.prototype.conj = numeric.Tunop(\n        'return new numeric.T(x.x);',\n        'return new numeric.T(x.x,numeric.neg(x.y));');\nnumeric.T.prototype.neg = numeric.Tunop(\n        'return new numeric.T(neg(x.x));',\n        'return new numeric.T(neg(x.x),neg(x.y));',\n        'var neg = numeric.neg;');\nnumeric.T.prototype.sin = numeric.Tunop(\n        'return new numeric.T(numeric.sin(x.x))',\n        'return x.exp().sub(x.neg().exp()).div(new numeric.T(0,2));');\nnumeric.T.prototype.cos = numeric.Tunop(\n        'return new numeric.T(numeric.cos(x.x))',\n        'return x.exp().add(x.neg().exp()).div(2);');\nnumeric.T.prototype.abs = numeric.Tunop(\n        'return new numeric.T(numeric.abs(x.x));',\n        'return new numeric.T(numeric.sqrt(numeric.add(mul(x.x,x.x),mul(x.y,x.y))));',\n        'var mul = numeric.mul;');\nnumeric.T.prototype.log = numeric.Tunop(\n        'return new numeric.T(numeric.log(x.x));',\n        'var theta = new numeric.T(numeric.atan2(x.y,x.x)), r = x.abs();\\n'+\n        'return new numeric.T(numeric.log(r.x),theta.x);');\nnumeric.T.prototype.norm2 = numeric.Tunop(\n        'return numeric.norm2(x.x);',\n        'var f = numeric.norm2Squared;\\n'+\n        'return Math.sqrt(f(x.x)+f(x.y));');\nnumeric.T.prototype.inv = function inv() {\n    var A = this;\n    if(typeof A.y === \"undefined\") { return new numeric.T(numeric.inv(A.x)); }\n    var n = A.x.length, i, j, k;\n    var Rx = numeric.identity(n),Ry = numeric.rep([n,n],0);\n    var Ax = numeric.clone(A.x), Ay = numeric.clone(A.y);\n    var Aix, Aiy, Ajx, Ajy, Rix, Riy, Rjx, Rjy;\n    var i,j,k,d,d1,ax,ay,bx,by,temp;\n    for(i=0;i<n;i++) {\n        ax = Ax[i][i]; ay = Ay[i][i];\n        d = ax*ax+ay*ay;\n        k = i;\n        for(j=i+1;j<n;j++) {\n            ax = Ax[j][i]; ay = Ay[j][i];\n            d1 = ax*ax+ay*ay;\n            if(d1 > d) { k=j; d = d1; }\n        }\n        if(k!==i) {\n            temp = Ax[i]; Ax[i] = Ax[k]; Ax[k] = temp;\n            temp = Ay[i]; Ay[i] = Ay[k]; Ay[k] = temp;\n            temp = Rx[i]; Rx[i] = Rx[k]; Rx[k] = temp;\n            temp = Ry[i]; Ry[i] = Ry[k]; Ry[k] = temp;\n        }\n        Aix = Ax[i]; Aiy = Ay[i];\n        Rix = Rx[i]; Riy = Ry[i];\n        ax = Aix[i]; ay = Aiy[i];\n        for(j=i+1;j<n;j++) {\n            bx = Aix[j]; by = Aiy[j];\n            Aix[j] = (bx*ax+by*ay)/d;\n            Aiy[j] = (by*ax-bx*ay)/d;\n        }\n        for(j=0;j<n;j++) {\n            bx = Rix[j]; by = Riy[j];\n            Rix[j] = (bx*ax+by*ay)/d;\n            Riy[j] = (by*ax-bx*ay)/d;\n        }\n        for(j=i+1;j<n;j++) {\n            Ajx = Ax[j]; Ajy = Ay[j];\n            Rjx = Rx[j]; Rjy = Ry[j];\n            ax = Ajx[i]; ay = Ajy[i];\n            for(k=i+1;k<n;k++) {\n                bx = Aix[k]; by = Aiy[k];\n                Ajx[k] -= bx*ax-by*ay;\n                Ajy[k] -= by*ax+bx*ay;\n            }\n            for(k=0;k<n;k++) {\n                bx = Rix[k]; by = Riy[k];\n                Rjx[k] -= bx*ax-by*ay;\n                Rjy[k] -= by*ax+bx*ay;\n            }\n        }\n    }\n    for(i=n-1;i>0;i--) {\n        Rix = Rx[i]; Riy = Ry[i];\n        for(j=i-1;j>=0;j--) {\n            Rjx = Rx[j]; Rjy = Ry[j];\n            ax = Ax[j][i]; ay = Ay[j][i];\n            for(k=n-1;k>=0;k--) {\n                bx = Rix[k]; by = Riy[k];\n                Rjx[k] -= ax*bx - ay*by;\n                Rjy[k] -= ax*by + ay*bx;\n            }\n        }\n    }\n    return new numeric.T(Rx,Ry);\n}\nnumeric.T.prototype.get = function get(i) {\n    var x = this.x, y = this.y, k = 0, ik, n = i.length;\n    if(y) {\n        while(k<n) {\n            ik = i[k];\n            x = x[ik];\n            y = y[ik];\n            k++;\n        }\n        return new numeric.T(x,y);\n    }\n    while(k<n) {\n        ik = i[k];\n        x = x[ik];\n        k++;\n    }\n    return new numeric.T(x);\n}\nnumeric.T.prototype.set = function set(i,v) {\n    var x = this.x, y = this.y, k = 0, ik, n = i.length, vx = v.x, vy = v.y;\n    if(n===0) {\n        if(vy) { this.y = vy; }\n        else if(y) { this.y = undefined; }\n        this.x = x;\n        return this;\n    }\n    if(vy) {\n        if(y) { /* ok */ }\n        else {\n            y = numeric.rep(numeric.dim(x),0);\n            this.y = y;\n        }\n        while(k<n-1) {\n            ik = i[k];\n            x = x[ik];\n            y = y[ik];\n            k++;\n        }\n        ik = i[k];\n        x[ik] = vx;\n        y[ik] = vy;\n        return this;\n    }\n    if(y) {\n        while(k<n-1) {\n            ik = i[k];\n            x = x[ik];\n            y = y[ik];\n            k++;\n        }\n        ik = i[k];\n        x[ik] = vx;\n        if(vx instanceof Array) y[ik] = numeric.rep(numeric.dim(vx),0);\n        else y[ik] = 0;\n        return this;\n    }\n    while(k<n-1) {\n        ik = i[k];\n        x = x[ik];\n        k++;\n    }\n    ik = i[k];\n    x[ik] = vx;\n    return this;\n}\nnumeric.T.prototype.getRows = function getRows(i0,i1) {\n    var n = i1-i0+1, j;\n    var rx = Array(n), ry, x = this.x, y = this.y;\n    for(j=i0;j<=i1;j++) { rx[j-i0] = x[j]; }\n    if(y) {\n        ry = Array(n);\n        for(j=i0;j<=i1;j++) { ry[j-i0] = y[j]; }\n        return new numeric.T(rx,ry);\n    }\n    return new numeric.T(rx);\n}\nnumeric.T.prototype.setRows = function setRows(i0,i1,A) {\n    var j;\n    var rx = this.x, ry = this.y, x = A.x, y = A.y;\n    for(j=i0;j<=i1;j++) { rx[j] = x[j-i0]; }\n    if(y) {\n        if(!ry) { ry = numeric.rep(numeric.dim(rx),0); this.y = ry; }\n        for(j=i0;j<=i1;j++) { ry[j] = y[j-i0]; }\n    } else if(ry) {\n        for(j=i0;j<=i1;j++) { ry[j] = numeric.rep([x[j-i0].length],0); }\n    }\n    return this;\n}\nnumeric.T.prototype.getRow = function getRow(k) {\n    var x = this.x, y = this.y;\n    if(y) { return new numeric.T(x[k],y[k]); }\n    return new numeric.T(x[k]);\n}\nnumeric.T.prototype.setRow = function setRow(i,v) {\n    var rx = this.x, ry = this.y, x = v.x, y = v.y;\n    rx[i] = x;\n    if(y) {\n        if(!ry) { ry = numeric.rep(numeric.dim(rx),0); this.y = ry; }\n        ry[i] = y;\n    } else if(ry) {\n        ry = numeric.rep([x.length],0);\n    }\n    return this;\n}\n\nnumeric.T.prototype.getBlock = function getBlock(from,to) {\n    var x = this.x, y = this.y, b = numeric.getBlock;\n    if(y) { return new numeric.T(b(x,from,to),b(y,from,to)); }\n    return new numeric.T(b(x,from,to));\n}\nnumeric.T.prototype.setBlock = function setBlock(from,to,A) {\n    if(!(A instanceof numeric.T)) A = new numeric.T(A);\n    var x = this.x, y = this.y, b = numeric.setBlock, Ax = A.x, Ay = A.y;\n    if(Ay) {\n        if(!y) { this.y = numeric.rep(numeric.dim(this),0); y = this.y; }\n        b(x,from,to,Ax);\n        b(y,from,to,Ay);\n        return this;\n    }\n    b(x,from,to,Ax);\n    if(y) b(y,from,to,numeric.rep(numeric.dim(Ax),0));\n}\nnumeric.T.rep = function rep(s,v) {\n    var T = numeric.T;\n    if(!(v instanceof T)) v = new T(v);\n    var x = v.x, y = v.y, r = numeric.rep;\n    if(y) return new T(r(s,x),r(s,y));\n    return new T(r(s,x));\n}\nnumeric.T.diag = function diag(d) {\n    if(!(d instanceof numeric.T)) d = new numeric.T(d);\n    var x = d.x, y = d.y, diag = numeric.diag;\n    if(y) return new numeric.T(diag(x),diag(y));\n    return new numeric.T(diag(x));\n}\nnumeric.T.eig = function eig() {\n    if(this.y) { throw new Error('eig: not implemented for complex matrices.'); }\n    return numeric.eig(this.x);\n}\nnumeric.T.identity = function identity(n) { return new numeric.T(numeric.identity(n)); }\nnumeric.T.prototype.getDiag = function getDiag() {\n    var n = numeric;\n    var x = this.x, y = this.y;\n    if(y) { return new n.T(n.getDiag(x),n.getDiag(y)); }\n    return new n.T(n.getDiag(x));\n}\n\n// 4. Eigenvalues of real matrices\n\nnumeric.house = function house(x) {\n    var v = numeric.clone(x);\n    var s = x[0] >= 0 ? 1 : -1;\n    var alpha = s*numeric.norm2(x);\n    v[0] += alpha;\n    var foo = numeric.norm2(v);\n    if(foo === 0) { /* this should not happen */ throw new Error('eig: internal error'); }\n    return numeric.div(v,foo);\n}\n\nnumeric.toUpperHessenberg = function toUpperHessenberg(me) {\n    var s = numeric.dim(me);\n    if(s.length !== 2 || s[0] !== s[1]) { throw new Error('numeric: toUpperHessenberg() only works on square matrices'); }\n    var m = s[0], i,j,k,x,v,A = numeric.clone(me),B,C,Ai,Ci,Q = numeric.identity(m),Qi;\n    for(j=0;j<m-2;j++) {\n        x = Array(m-j-1);\n        for(i=j+1;i<m;i++) { x[i-j-1] = A[i][j]; }\n        if(numeric.norm2(x)>0) {\n            v = numeric.house(x);\n            B = numeric.getBlock(A,[j+1,j],[m-1,m-1]);\n            C = numeric.tensor(v,numeric.dot(v,B));\n            for(i=j+1;i<m;i++) { Ai = A[i]; Ci = C[i-j-1]; for(k=j;k<m;k++) Ai[k] -= 2*Ci[k-j]; }\n            B = numeric.getBlock(A,[0,j+1],[m-1,m-1]);\n            C = numeric.tensor(numeric.dot(B,v),v);\n            for(i=0;i<m;i++) { Ai = A[i]; Ci = C[i]; for(k=j+1;k<m;k++) Ai[k] -= 2*Ci[k-j-1]; }\n            B = Array(m-j-1);\n            for(i=j+1;i<m;i++) B[i-j-1] = Q[i];\n            C = numeric.tensor(v,numeric.dot(v,B));\n            for(i=j+1;i<m;i++) { Qi = Q[i]; Ci = C[i-j-1]; for(k=0;k<m;k++) Qi[k] -= 2*Ci[k]; }\n        }\n    }\n    return {H:A, Q:Q};\n}\n\nnumeric.epsilon = 2.220446049250313e-16;\n\nnumeric.QRFrancis = function(H,maxiter) {\n    if(typeof maxiter === \"undefined\") { maxiter = 10000; }\n    H = numeric.clone(H);\n    var H0 = numeric.clone(H);\n    var s = numeric.dim(H),m=s[0],x,v,a,b,c,d,det,tr, Hloc, Q = numeric.identity(m), Qi, Hi, B, C, Ci,i,j,k,iter;\n    if(m<3) { return {Q:Q, B:[ [0,m-1] ]}; }\n    var epsilon = numeric.epsilon;\n    for(iter=0;iter<maxiter;iter++) {\n        for(j=0;j<m-1;j++) {\n            if(Math.abs(H[j+1][j]) < epsilon*(Math.abs(H[j][j])+Math.abs(H[j+1][j+1]))) {\n                var QH1 = numeric.QRFrancis(numeric.getBlock(H,[0,0],[j,j]),maxiter);\n                var QH2 = numeric.QRFrancis(numeric.getBlock(H,[j+1,j+1],[m-1,m-1]),maxiter);\n                B = Array(j+1);\n                for(i=0;i<=j;i++) { B[i] = Q[i]; }\n                C = numeric.dot(QH1.Q,B);\n                for(i=0;i<=j;i++) { Q[i] = C[i]; }\n                B = Array(m-j-1);\n                for(i=j+1;i<m;i++) { B[i-j-1] = Q[i]; }\n                C = numeric.dot(QH2.Q,B);\n                for(i=j+1;i<m;i++) { Q[i] = C[i-j-1]; }\n                return {Q:Q,B:QH1.B.concat(numeric.add(QH2.B,j+1))};\n            }\n        }\n        a = H[m-2][m-2]; b = H[m-2][m-1];\n        c = H[m-1][m-2]; d = H[m-1][m-1];\n        tr = a+d;\n        det = (a*d-b*c);\n        Hloc = numeric.getBlock(H, [0,0], [2,2]);\n        if(tr*tr>=4*det) {\n            var s1,s2;\n            s1 = 0.5*(tr+Math.sqrt(tr*tr-4*det));\n            s2 = 0.5*(tr-Math.sqrt(tr*tr-4*det));\n            Hloc = numeric.add(numeric.sub(numeric.dot(Hloc,Hloc),\n                                           numeric.mul(Hloc,s1+s2)),\n                               numeric.diag(numeric.rep([3],s1*s2)));\n        } else {\n            Hloc = numeric.add(numeric.sub(numeric.dot(Hloc,Hloc),\n                                           numeric.mul(Hloc,tr)),\n                               numeric.diag(numeric.rep([3],det)));\n        }\n        x = [Hloc[0][0],Hloc[1][0],Hloc[2][0]];\n        v = numeric.house(x);\n        B = [H[0],H[1],H[2]];\n        C = numeric.tensor(v,numeric.dot(v,B));\n        for(i=0;i<3;i++) { Hi = H[i]; Ci = C[i]; for(k=0;k<m;k++) Hi[k] -= 2*Ci[k]; }\n        B = numeric.getBlock(H, [0,0],[m-1,2]);\n        C = numeric.tensor(numeric.dot(B,v),v);\n        for(i=0;i<m;i++) { Hi = H[i]; Ci = C[i]; for(k=0;k<3;k++) Hi[k] -= 2*Ci[k]; }\n        B = [Q[0],Q[1],Q[2]];\n        C = numeric.tensor(v,numeric.dot(v,B));\n        for(i=0;i<3;i++) { Qi = Q[i]; Ci = C[i]; for(k=0;k<m;k++) Qi[k] -= 2*Ci[k]; }\n        var J;\n        for(j=0;j<m-2;j++) {\n            for(k=j;k<=j+1;k++) {\n                if(Math.abs(H[k+1][k]) < epsilon*(Math.abs(H[k][k])+Math.abs(H[k+1][k+1]))) {\n                    var QH1 = numeric.QRFrancis(numeric.getBlock(H,[0,0],[k,k]),maxiter);\n                    var QH2 = numeric.QRFrancis(numeric.getBlock(H,[k+1,k+1],[m-1,m-1]),maxiter);\n                    B = Array(k+1);\n                    for(i=0;i<=k;i++) { B[i] = Q[i]; }\n                    C = numeric.dot(QH1.Q,B);\n                    for(i=0;i<=k;i++) { Q[i] = C[i]; }\n                    B = Array(m-k-1);\n                    for(i=k+1;i<m;i++) { B[i-k-1] = Q[i]; }\n                    C = numeric.dot(QH2.Q,B);\n                    for(i=k+1;i<m;i++) { Q[i] = C[i-k-1]; }\n                    return {Q:Q,B:QH1.B.concat(numeric.add(QH2.B,k+1))};\n                }\n            }\n            J = Math.min(m-1,j+3);\n            x = Array(J-j);\n            for(i=j+1;i<=J;i++) { x[i-j-1] = H[i][j]; }\n            v = numeric.house(x);\n            B = numeric.getBlock(H, [j+1,j],[J,m-1]);\n            C = numeric.tensor(v,numeric.dot(v,B));\n            for(i=j+1;i<=J;i++) { Hi = H[i]; Ci = C[i-j-1]; for(k=j;k<m;k++) Hi[k] -= 2*Ci[k-j]; }\n            B = numeric.getBlock(H, [0,j+1],[m-1,J]);\n            C = numeric.tensor(numeric.dot(B,v),v);\n            for(i=0;i<m;i++) { Hi = H[i]; Ci = C[i]; for(k=j+1;k<=J;k++) Hi[k] -= 2*Ci[k-j-1]; }\n            B = Array(J-j);\n            for(i=j+1;i<=J;i++) B[i-j-1] = Q[i];\n            C = numeric.tensor(v,numeric.dot(v,B));\n            for(i=j+1;i<=J;i++) { Qi = Q[i]; Ci = C[i-j-1]; for(k=0;k<m;k++) Qi[k] -= 2*Ci[k]; }\n        }\n    }\n    throw new Error('numeric: eigenvalue iteration does not converge -- increase maxiter?');\n}\n\nnumeric.eig = function eig(A,maxiter) {\n    var QH = numeric.toUpperHessenberg(A);\n    var QB = numeric.QRFrancis(QH.H,maxiter);\n    var T = numeric.T;\n    var n = A.length,i,k,flag = false,B = QB.B,H = numeric.dot(QB.Q,numeric.dot(QH.H,numeric.transpose(QB.Q)));\n    var Q = new T(numeric.dot(QB.Q,QH.Q)),Q0;\n    var m = B.length,j;\n    var a,b,c,d,p1,p2,disc,x,y,p,q,n1,n2;\n    var sqrt = Math.sqrt;\n    for(k=0;k<m;k++) {\n        i = B[k][0];\n        if(i === B[k][1]) {\n            // nothing\n        } else {\n            j = i+1;\n            a = H[i][i];\n            b = H[i][j];\n            c = H[j][i];\n            d = H[j][j];\n            if(b === 0 && c === 0) continue;\n            p1 = -a-d;\n            p2 = a*d-b*c;\n            disc = p1*p1-4*p2;\n            if(disc>=0) {\n                if(p1<0) x = -0.5*(p1-sqrt(disc));\n                else     x = -0.5*(p1+sqrt(disc));\n                n1 = (a-x)*(a-x)+b*b;\n                n2 = c*c+(d-x)*(d-x);\n                if(n1>n2) {\n                    n1 = sqrt(n1);\n                    p = (a-x)/n1;\n                    q = b/n1;\n                } else {\n                    n2 = sqrt(n2);\n                    p = c/n2;\n                    q = (d-x)/n2;\n                }\n                Q0 = new T([[q,-p],[p,q]]);\n                Q.setRows(i,j,Q0.dot(Q.getRows(i,j)));\n            } else {\n                x = -0.5*p1;\n                y = 0.5*sqrt(-disc);\n                n1 = (a-x)*(a-x)+b*b;\n                n2 = c*c+(d-x)*(d-x);\n                if(n1>n2) {\n                    n1 = sqrt(n1+y*y);\n                    p = (a-x)/n1;\n                    q = b/n1;\n                    x = 0;\n                    y /= n1;\n                } else {\n                    n2 = sqrt(n2+y*y);\n                    p = c/n2;\n                    q = (d-x)/n2;\n                    x = y/n2;\n                    y = 0;\n                }\n                Q0 = new T([[q,-p],[p,q]],[[x,y],[y,-x]]);\n                Q.setRows(i,j,Q0.dot(Q.getRows(i,j)));\n            }\n        }\n    }\n    var R = Q.dot(A).dot(Q.transjugate()), n = A.length, E = numeric.T.identity(n);\n    for(j=0;j<n;j++) {\n        if(j>0) {\n            for(k=j-1;k>=0;k--) {\n                var Rk = R.get([k,k]), Rj = R.get([j,j]);\n                if(numeric.neq(Rk.x,Rj.x) || numeric.neq(Rk.y,Rj.y)) {\n                    x = R.getRow(k).getBlock([k],[j-1]);\n                    y = E.getRow(j).getBlock([k],[j-1]);\n                    E.set([j,k],(R.get([k,j]).neg().sub(x.dot(y))).div(Rk.sub(Rj)));\n                } else {\n                    E.setRow(j,E.getRow(k));\n                    continue;\n                }\n            }\n        }\n    }\n    for(j=0;j<n;j++) {\n        x = E.getRow(j);\n        E.setRow(j,x.div(x.norm2()));\n    }\n    E = E.transpose();\n    E = Q.transjugate().dot(E);\n    return { lambda:R.getDiag(), E:E };\n};\n\n// 5. Compressed Column Storage matrices\nnumeric.ccsSparse = function ccsSparse(A) {\n    var m = A.length,n,foo, i,j, counts = [];\n    for(i=m-1;i!==-1;--i) {\n        foo = A[i];\n        for(j in foo) {\n            j = parseInt(j);\n            while(j>=counts.length) counts[counts.length] = 0;\n            if(foo[j]!==0) counts[j]++;\n        }\n    }\n    var n = counts.length;\n    var Ai = Array(n+1);\n    Ai[0] = 0;\n    for(i=0;i<n;++i) Ai[i+1] = Ai[i] + counts[i];\n    var Aj = Array(Ai[n]), Av = Array(Ai[n]);\n    for(i=m-1;i!==-1;--i) {\n        foo = A[i];\n        for(j in foo) {\n            if(foo[j]!==0) {\n                counts[j]--;\n                Aj[Ai[j]+counts[j]] = i;\n                Av[Ai[j]+counts[j]] = foo[j];\n            }\n        }\n    }\n    return [Ai,Aj,Av];\n}\nnumeric.ccsFull = function ccsFull(A) {\n    var Ai = A[0], Aj = A[1], Av = A[2], s = numeric.ccsDim(A), m = s[0], n = s[1], i,j,j0,j1,k;\n    var B = numeric.rep([m,n],0);\n    for(i=0;i<n;i++) {\n        j0 = Ai[i];\n        j1 = Ai[i+1];\n        for(j=j0;j<j1;++j) { B[Aj[j]][i] = Av[j]; }\n    }\n    return B;\n}\nnumeric.ccsTSolve = function ccsTSolve(A,b,x,bj,xj) {\n    var Ai = A[0], Aj = A[1], Av = A[2],m = Ai.length-1, max = Math.max,n=0;\n    if(typeof bj === \"undefined\") x = numeric.rep([m],0);\n    if(typeof bj === \"undefined\") bj = numeric.linspace(0,x.length-1);\n    if(typeof xj === \"undefined\") xj = [];\n    function dfs(j) {\n        var k;\n        if(x[j] !== 0) return;\n        x[j] = 1;\n        for(k=Ai[j];k<Ai[j+1];++k) dfs(Aj[k]);\n        xj[n] = j;\n        ++n;\n    }\n    var i,j,j0,j1,k,l,l0,l1,a;\n    for(i=bj.length-1;i!==-1;--i) { dfs(bj[i]); }\n    xj.length = n;\n    for(i=xj.length-1;i!==-1;--i) { x[xj[i]] = 0; }\n    for(i=bj.length-1;i!==-1;--i) { j = bj[i]; x[j] = b[j]; }\n    for(i=xj.length-1;i!==-1;--i) {\n        j = xj[i];\n        j0 = Ai[j];\n        j1 = max(Ai[j+1],j0);\n        for(k=j0;k!==j1;++k) { if(Aj[k] === j) { x[j] /= Av[k]; break; } }\n        a = x[j];\n        for(k=j0;k!==j1;++k) {\n            l = Aj[k];\n            if(l !== j) x[l] -= a*Av[k];\n        }\n    }\n    return x;\n}\nnumeric.ccsDFS = function ccsDFS(n) {\n    this.k = Array(n);\n    this.k1 = Array(n);\n    this.j = Array(n);\n}\nnumeric.ccsDFS.prototype.dfs = function dfs(J,Ai,Aj,x,xj,Pinv) {\n    var m = 0,foo,n=xj.length;\n    var k = this.k, k1 = this.k1, j = this.j,km,k11;\n    if(x[J]!==0) return;\n    x[J] = 1;\n    j[0] = J;\n    k[0] = km = Ai[J];\n    k1[0] = k11 = Ai[J+1];\n    while(1) {\n        if(km >= k11) {\n            xj[n] = j[m];\n            if(m===0) return;\n            ++n;\n            --m;\n            km = k[m];\n            k11 = k1[m];\n        } else {\n            foo = Pinv[Aj[km]];\n            if(x[foo] === 0) {\n                x[foo] = 1;\n                k[m] = km;\n                ++m;\n                j[m] = foo;\n                km = Ai[foo];\n                k1[m] = k11 = Ai[foo+1];\n            } else ++km;\n        }\n    }\n}\nnumeric.ccsLPSolve = function ccsLPSolve(A,B,x,xj,I,Pinv,dfs) {\n    var Ai = A[0], Aj = A[1], Av = A[2],m = Ai.length-1, n=0;\n    var Bi = B[0], Bj = B[1], Bv = B[2];\n    \n    var i,i0,i1,j,J,j0,j1,k,l,l0,l1,a;\n    i0 = Bi[I];\n    i1 = Bi[I+1];\n    xj.length = 0;\n    for(i=i0;i<i1;++i) { dfs.dfs(Pinv[Bj[i]],Ai,Aj,x,xj,Pinv); }\n    for(i=xj.length-1;i!==-1;--i) { x[xj[i]] = 0; }\n    for(i=i0;i!==i1;++i) { j = Pinv[Bj[i]]; x[j] = Bv[i]; }\n    for(i=xj.length-1;i!==-1;--i) {\n        j = xj[i];\n        j0 = Ai[j];\n        j1 = Ai[j+1];\n        for(k=j0;k<j1;++k) { if(Pinv[Aj[k]] === j) { x[j] /= Av[k]; break; } }\n        a = x[j];\n        for(k=j0;k<j1;++k) {\n            l = Pinv[Aj[k]];\n            if(l !== j) x[l] -= a*Av[k];\n        }\n    }\n    return x;\n}\nnumeric.ccsLUP1 = function ccsLUP1(A,threshold) {\n    var m = A[0].length-1;\n    var L = [numeric.rep([m+1],0),[],[]], U = [numeric.rep([m+1], 0),[],[]];\n    var Li = L[0], Lj = L[1], Lv = L[2], Ui = U[0], Uj = U[1], Uv = U[2];\n    var x = numeric.rep([m],0), xj = numeric.rep([m],0);\n    var i,j,k,j0,j1,a,e,c,d,K;\n    var sol = numeric.ccsLPSolve, max = Math.max, abs = Math.abs;\n    var P = numeric.linspace(0,m-1),Pinv = numeric.linspace(0,m-1);\n    var dfs = new numeric.ccsDFS(m);\n    if(typeof threshold === \"undefined\") { threshold = 1; }\n    for(i=0;i<m;++i) {\n        sol(L,A,x,xj,i,Pinv,dfs);\n        a = -1;\n        e = -1;\n        for(j=xj.length-1;j!==-1;--j) {\n            k = xj[j];\n            if(k <= i) continue;\n            c = abs(x[k]);\n            if(c > a) { e = k; a = c; }\n        }\n        if(abs(x[i])<threshold*a) {\n            j = P[i];\n            a = P[e];\n            P[i] = a; Pinv[a] = i;\n            P[e] = j; Pinv[j] = e;\n            a = x[i]; x[i] = x[e]; x[e] = a;\n        }\n        a = Li[i];\n        e = Ui[i];\n        d = x[i];\n        Lj[a] = P[i];\n        Lv[a] = 1;\n        ++a;\n        for(j=xj.length-1;j!==-1;--j) {\n            k = xj[j];\n            c = x[k];\n            xj[j] = 0;\n            x[k] = 0;\n            if(k<=i) { Uj[e] = k; Uv[e] = c;   ++e; }\n            else     { Lj[a] = P[k]; Lv[a] = c/d; ++a; }\n        }\n        Li[i+1] = a;\n        Ui[i+1] = e;\n    }\n    for(j=Lj.length-1;j!==-1;--j) { Lj[j] = Pinv[Lj[j]]; }\n    return {L:L, U:U, P:P, Pinv:Pinv};\n}\nnumeric.ccsDFS0 = function ccsDFS0(n) {\n    this.k = Array(n);\n    this.k1 = Array(n);\n    this.j = Array(n);\n}\nnumeric.ccsDFS0.prototype.dfs = function dfs(J,Ai,Aj,x,xj,Pinv,P) {\n    var m = 0,foo,n=xj.length;\n    var k = this.k, k1 = this.k1, j = this.j,km,k11;\n    if(x[J]!==0) return;\n    x[J] = 1;\n    j[0] = J;\n    k[0] = km = Ai[Pinv[J]];\n    k1[0] = k11 = Ai[Pinv[J]+1];\n    while(1) {\n        if(isNaN(km)) throw new Error(\"Ow!\");\n        if(km >= k11) {\n            xj[n] = Pinv[j[m]];\n            if(m===0) return;\n            ++n;\n            --m;\n            km = k[m];\n            k11 = k1[m];\n        } else {\n            foo = Aj[km];\n            if(x[foo] === 0) {\n                x[foo] = 1;\n                k[m] = km;\n                ++m;\n                j[m] = foo;\n                foo = Pinv[foo];\n                km = Ai[foo];\n                k1[m] = k11 = Ai[foo+1];\n            } else ++km;\n        }\n    }\n}\nnumeric.ccsLPSolve0 = function ccsLPSolve0(A,B,y,xj,I,Pinv,P,dfs) {\n    var Ai = A[0], Aj = A[1], Av = A[2],m = Ai.length-1, n=0;\n    var Bi = B[0], Bj = B[1], Bv = B[2];\n    \n    var i,i0,i1,j,J,j0,j1,k,l,l0,l1,a;\n    i0 = Bi[I];\n    i1 = Bi[I+1];\n    xj.length = 0;\n    for(i=i0;i<i1;++i) { dfs.dfs(Bj[i],Ai,Aj,y,xj,Pinv,P); }\n    for(i=xj.length-1;i!==-1;--i) { j = xj[i]; y[P[j]] = 0; }\n    for(i=i0;i!==i1;++i) { j = Bj[i]; y[j] = Bv[i]; }\n    for(i=xj.length-1;i!==-1;--i) {\n        j = xj[i];\n        l = P[j];\n        j0 = Ai[j];\n        j1 = Ai[j+1];\n        for(k=j0;k<j1;++k) { if(Aj[k] === l) { y[l] /= Av[k]; break; } }\n        a = y[l];\n        for(k=j0;k<j1;++k) y[Aj[k]] -= a*Av[k];\n        y[l] = a;\n    }\n}\nnumeric.ccsLUP0 = function ccsLUP0(A,threshold) {\n    var m = A[0].length-1;\n    var L = [numeric.rep([m+1],0),[],[]], U = [numeric.rep([m+1], 0),[],[]];\n    var Li = L[0], Lj = L[1], Lv = L[2], Ui = U[0], Uj = U[1], Uv = U[2];\n    var y = numeric.rep([m],0), xj = numeric.rep([m],0);\n    var i,j,k,j0,j1,a,e,c,d,K;\n    var sol = numeric.ccsLPSolve0, max = Math.max, abs = Math.abs;\n    var P = numeric.linspace(0,m-1),Pinv = numeric.linspace(0,m-1);\n    var dfs = new numeric.ccsDFS0(m);\n    if(typeof threshold === \"undefined\") { threshold = 1; }\n    for(i=0;i<m;++i) {\n        sol(L,A,y,xj,i,Pinv,P,dfs);\n        a = -1;\n        e = -1;\n        for(j=xj.length-1;j!==-1;--j) {\n            k = xj[j];\n            if(k <= i) continue;\n            c = abs(y[P[k]]);\n            if(c > a) { e = k; a = c; }\n        }\n        if(abs(y[P[i]])<threshold*a) {\n            j = P[i];\n            a = P[e];\n            P[i] = a; Pinv[a] = i;\n            P[e] = j; Pinv[j] = e;\n        }\n        a = Li[i];\n        e = Ui[i];\n        d = y[P[i]];\n        Lj[a] = P[i];\n        Lv[a] = 1;\n        ++a;\n        for(j=xj.length-1;j!==-1;--j) {\n            k = xj[j];\n            c = y[P[k]];\n            xj[j] = 0;\n            y[P[k]] = 0;\n            if(k<=i) { Uj[e] = k; Uv[e] = c;   ++e; }\n            else     { Lj[a] = P[k]; Lv[a] = c/d; ++a; }\n        }\n        Li[i+1] = a;\n        Ui[i+1] = e;\n    }\n    for(j=Lj.length-1;j!==-1;--j) { Lj[j] = Pinv[Lj[j]]; }\n    return {L:L, U:U, P:P, Pinv:Pinv};\n}\nnumeric.ccsLUP = numeric.ccsLUP0;\n\nnumeric.ccsDim = function ccsDim(A) { return [numeric.sup(A[1])+1,A[0].length-1]; }\nnumeric.ccsGetBlock = function ccsGetBlock(A,i,j) {\n    var s = numeric.ccsDim(A),m=s[0],n=s[1];\n    if(typeof i === \"undefined\") { i = numeric.linspace(0,m-1); }\n    else if(typeof i === \"number\") { i = [i]; }\n    if(typeof j === \"undefined\") { j = numeric.linspace(0,n-1); }\n    else if(typeof j === \"number\") { j = [j]; }\n    var p,p0,p1,P = i.length,q,Q = j.length,r,jq,ip;\n    var Bi = numeric.rep([n],0), Bj=[], Bv=[], B = [Bi,Bj,Bv];\n    var Ai = A[0], Aj = A[1], Av = A[2];\n    var x = numeric.rep([m],0),count=0,flags = numeric.rep([m],0);\n    for(q=0;q<Q;++q) {\n        jq = j[q];\n        var q0 = Ai[jq];\n        var q1 = Ai[jq+1];\n        for(p=q0;p<q1;++p) {\n            r = Aj[p];\n            flags[r] = 1;\n            x[r] = Av[p];\n        }\n        for(p=0;p<P;++p) {\n            ip = i[p];\n            if(flags[ip]) {\n                Bj[count] = p;\n                Bv[count] = x[i[p]];\n                ++count;\n            }\n        }\n        for(p=q0;p<q1;++p) {\n            r = Aj[p];\n            flags[r] = 0;\n        }\n        Bi[q+1] = count;\n    }\n    return B;\n}\n\nnumeric.ccsDot = function ccsDot(A,B) {\n    var Ai = A[0], Aj = A[1], Av = A[2];\n    var Bi = B[0], Bj = B[1], Bv = B[2];\n    var sA = numeric.ccsDim(A), sB = numeric.ccsDim(B);\n    var m = sA[0], n = sA[1], o = sB[1];\n    var x = numeric.rep([m],0), flags = numeric.rep([m],0), xj = Array(m);\n    var Ci = numeric.rep([o],0), Cj = [], Cv = [], C = [Ci,Cj,Cv];\n    var i,j,k,j0,j1,i0,i1,l,p,a,b;\n    for(k=0;k!==o;++k) {\n        j0 = Bi[k];\n        j1 = Bi[k+1];\n        p = 0;\n        for(j=j0;j<j1;++j) {\n            a = Bj[j];\n            b = Bv[j];\n            i0 = Ai[a];\n            i1 = Ai[a+1];\n            for(i=i0;i<i1;++i) {\n                l = Aj[i];\n                if(flags[l]===0) {\n                    xj[p] = l;\n                    flags[l] = 1;\n                    p = p+1;\n                }\n                x[l] = x[l] + Av[i]*b;\n            }\n        }\n        j0 = Ci[k];\n        j1 = j0+p;\n        Ci[k+1] = j1;\n        for(j=p-1;j!==-1;--j) {\n            b = j0+j;\n            i = xj[j];\n            Cj[b] = i;\n            Cv[b] = x[i];\n            flags[i] = 0;\n            x[i] = 0;\n        }\n        Ci[k+1] = Ci[k]+p;\n    }\n    return C;\n}\n\nnumeric.ccsLUPSolve = function ccsLUPSolve(LUP,B) {\n    var L = LUP.L, U = LUP.U, P = LUP.P;\n    var Bi = B[0];\n    var flag = false;\n    if(typeof Bi !== \"object\") { B = [[0,B.length],numeric.linspace(0,B.length-1),B]; Bi = B[0]; flag = true; }\n    var Bj = B[1], Bv = B[2];\n    var n = L[0].length-1, m = Bi.length-1;\n    var x = numeric.rep([n],0), xj = Array(n);\n    var b = numeric.rep([n],0), bj = Array(n);\n    var Xi = numeric.rep([m+1],0), Xj = [], Xv = [];\n    var sol = numeric.ccsTSolve;\n    var i,j,j0,j1,k,J,N=0;\n    for(i=0;i<m;++i) {\n        k = 0;\n        j0 = Bi[i];\n        j1 = Bi[i+1];\n        for(j=j0;j<j1;++j) { \n            J = LUP.Pinv[Bj[j]];\n            bj[k] = J;\n            b[J] = Bv[j];\n            ++k;\n        }\n        bj.length = k;\n        sol(L,b,x,bj,xj);\n        for(j=bj.length-1;j!==-1;--j) b[bj[j]] = 0;\n        sol(U,x,b,xj,bj);\n        if(flag) return b;\n        for(j=xj.length-1;j!==-1;--j) x[xj[j]] = 0;\n        for(j=bj.length-1;j!==-1;--j) {\n            J = bj[j];\n            Xj[N] = J;\n            Xv[N] = b[J];\n            b[J] = 0;\n            ++N;\n        }\n        Xi[i+1] = N;\n    }\n    return [Xi,Xj,Xv];\n}\n\nnumeric.ccsbinop = function ccsbinop(body,setup) {\n    if(typeof setup === \"undefined\") setup='';\n    return Function('X','Y',\n            'var Xi = X[0], Xj = X[1], Xv = X[2];\\n'+\n            'var Yi = Y[0], Yj = Y[1], Yv = Y[2];\\n'+\n            'var n = Xi.length-1,m = Math.max(numeric.sup(Xj),numeric.sup(Yj))+1;\\n'+\n            'var Zi = numeric.rep([n+1],0), Zj = [], Zv = [];\\n'+\n            'var x = numeric.rep([m],0),y = numeric.rep([m],0);\\n'+\n            'var xk,yk,zk;\\n'+\n            'var i,j,j0,j1,k,p=0;\\n'+\n            setup+\n            'for(i=0;i<n;++i) {\\n'+\n            '  j0 = Xi[i]; j1 = Xi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) {\\n'+\n            '    k = Xj[j];\\n'+\n            '    x[k] = 1;\\n'+\n            '    Zj[p] = k;\\n'+\n            '    ++p;\\n'+\n            '  }\\n'+\n            '  j0 = Yi[i]; j1 = Yi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) {\\n'+\n            '    k = Yj[j];\\n'+\n            '    y[k] = Yv[j];\\n'+\n            '    if(x[k] === 0) {\\n'+\n            '      Zj[p] = k;\\n'+\n            '      ++p;\\n'+\n            '    }\\n'+\n            '  }\\n'+\n            '  Zi[i+1] = p;\\n'+\n            '  j0 = Xi[i]; j1 = Xi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) x[Xj[j]] = Xv[j];\\n'+\n            '  j0 = Zi[i]; j1 = Zi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) {\\n'+\n            '    k = Zj[j];\\n'+\n            '    xk = x[k];\\n'+\n            '    yk = y[k];\\n'+\n            body+'\\n'+\n            '    Zv[j] = zk;\\n'+\n            '  }\\n'+\n            '  j0 = Xi[i]; j1 = Xi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) x[Xj[j]] = 0;\\n'+\n            '  j0 = Yi[i]; j1 = Yi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) y[Yj[j]] = 0;\\n'+\n            '}\\n'+\n            'return [Zi,Zj,Zv];'\n            );\n};\n\n(function() {\n    var k,A,B,C;\n    for(k in numeric.ops2) {\n        if(isFinite(eval('1'+numeric.ops2[k]+'0'))) A = '[Y[0],Y[1],numeric.'+k+'(X,Y[2])]';\n        else A = 'NaN';\n        if(isFinite(eval('0'+numeric.ops2[k]+'1'))) B = '[X[0],X[1],numeric.'+k+'(X[2],Y)]';\n        else B = 'NaN';\n        if(isFinite(eval('1'+numeric.ops2[k]+'0')) && isFinite(eval('0'+numeric.ops2[k]+'1'))) C = 'numeric.ccs'+k+'MM(X,Y)';\n        else C = 'NaN';\n        numeric['ccs'+k+'MM'] = numeric.ccsbinop('zk = xk '+numeric.ops2[k]+'yk;');\n        numeric['ccs'+k] = Function('X','Y',\n                'if(typeof X === \"number\") return '+A+';\\n'+\n                'if(typeof Y === \"number\") return '+B+';\\n'+\n                'return '+C+';\\n'\n                );\n    }\n}());\n\nnumeric.ccsScatter = function ccsScatter(A) {\n    var Ai = A[0], Aj = A[1], Av = A[2];\n    var n = numeric.sup(Aj)+1,m=Ai.length;\n    var Ri = numeric.rep([n],0),Rj=Array(m), Rv = Array(m);\n    var counts = numeric.rep([n],0),i;\n    for(i=0;i<m;++i) counts[Aj[i]]++;\n    for(i=0;i<n;++i) Ri[i+1] = Ri[i] + counts[i];\n    var ptr = Ri.slice(0),k,Aii;\n    for(i=0;i<m;++i) {\n        Aii = Aj[i];\n        k = ptr[Aii];\n        Rj[k] = Ai[i];\n        Rv[k] = Av[i];\n        ptr[Aii]=ptr[Aii]+1;\n    }\n    return [Ri,Rj,Rv];\n}\n\nnumeric.ccsGather = function ccsGather(A) {\n    var Ai = A[0], Aj = A[1], Av = A[2];\n    var n = Ai.length-1,m = Aj.length;\n    var Ri = Array(m), Rj = Array(m), Rv = Array(m);\n    var i,j,j0,j1,p;\n    p=0;\n    for(i=0;i<n;++i) {\n        j0 = Ai[i];\n        j1 = Ai[i+1];\n        for(j=j0;j!==j1;++j) {\n            Rj[p] = i;\n            Ri[p] = Aj[j];\n            Rv[p] = Av[j];\n            ++p;\n        }\n    }\n    return [Ri,Rj,Rv];\n}\n\n// The following sparse linear algebra routines are deprecated.\n\nnumeric.sdim = function dim(A,ret,k) {\n    if(typeof ret === \"undefined\") { ret = []; }\n    if(typeof A !== \"object\") return ret;\n    if(typeof k === \"undefined\") { k=0; }\n    if(!(k in ret)) { ret[k] = 0; }\n    if(A.length > ret[k]) ret[k] = A.length;\n    var i;\n    for(i in A) {\n        if(A.hasOwnProperty(i)) dim(A[i],ret,k+1);\n    }\n    return ret;\n};\n\nnumeric.sclone = function clone(A,k,n) {\n    if(typeof k === \"undefined\") { k=0; }\n    if(typeof n === \"undefined\") { n = numeric.sdim(A).length; }\n    var i,ret = Array(A.length);\n    if(k === n-1) {\n        for(i in A) { if(A.hasOwnProperty(i)) ret[i] = A[i]; }\n        return ret;\n    }\n    for(i in A) {\n        if(A.hasOwnProperty(i)) ret[i] = clone(A[i],k+1,n);\n    }\n    return ret;\n}\n\nnumeric.sdiag = function diag(d) {\n    var n = d.length,i,ret = Array(n),i1,i2,i3;\n    for(i=n-1;i>=1;i-=2) {\n        i1 = i-1;\n        ret[i] = []; ret[i][i] = d[i];\n        ret[i1] = []; ret[i1][i1] = d[i1];\n    }\n    if(i===0) { ret[0] = []; ret[0][0] = d[i]; }\n    return ret;\n}\n\nnumeric.sidentity = function identity(n) { return numeric.sdiag(numeric.rep([n],1)); }\n\nnumeric.stranspose = function transpose(A) {\n    var ret = [], n = A.length, i,j,Ai;\n    for(i in A) {\n        if(!(A.hasOwnProperty(i))) continue;\n        Ai = A[i];\n        for(j in Ai) {\n            if(!(Ai.hasOwnProperty(j))) continue;\n            if(typeof ret[j] !== \"object\") { ret[j] = []; }\n            ret[j][i] = Ai[j];\n        }\n    }\n    return ret;\n}\n\nnumeric.sLUP = function LUP(A,tol) {\n    throw new Error(\"The function numeric.sLUP had a bug in it and has been removed. Please use the new numeric.ccsLUP function instead.\");\n};\n\nnumeric.sdotMM = function dotMM(A,B) {\n    var p = A.length, q = B.length, BT = numeric.stranspose(B), r = BT.length, Ai, BTk;\n    var i,j,k,accum;\n    var ret = Array(p),reti;\n    for(i=p-1;i>=0;i--) {\n        reti = [];\n        Ai = A[i];\n        for(k=r-1;k>=0;k--) {\n            accum = 0;\n            BTk = BT[k];\n            for(j in Ai) {\n                if(!(Ai.hasOwnProperty(j))) continue;\n                if(j in BTk) { accum += Ai[j]*BTk[j]; }\n            }\n            if(accum) reti[k] = accum;\n        }\n        ret[i] = reti;\n    }\n    return ret;\n}\n\nnumeric.sdotMV = function dotMV(A,x) {\n    var p = A.length, Ai, i,j;\n    var ret = Array(p), accum;\n    for(i=p-1;i>=0;i--) {\n        Ai = A[i];\n        accum = 0;\n        for(j in Ai) {\n            if(!(Ai.hasOwnProperty(j))) continue;\n            if(x[j]) accum += Ai[j]*x[j];\n        }\n        if(accum) ret[i] = accum;\n    }\n    return ret;\n}\n\nnumeric.sdotVM = function dotMV(x,A) {\n    var i,j,Ai,alpha;\n    var ret = [], accum;\n    for(i in x) {\n        if(!x.hasOwnProperty(i)) continue;\n        Ai = A[i];\n        alpha = x[i];\n        for(j in Ai) {\n            if(!Ai.hasOwnProperty(j)) continue;\n            if(!ret[j]) { ret[j] = 0; }\n            ret[j] += alpha*Ai[j];\n        }\n    }\n    return ret;\n}\n\nnumeric.sdotVV = function dotVV(x,y) {\n    var i,ret=0;\n    for(i in x) { if(x[i] && y[i]) ret+= x[i]*y[i]; }\n    return ret;\n}\n\nnumeric.sdot = function dot(A,B) {\n    var m = numeric.sdim(A).length, n = numeric.sdim(B).length;\n    var k = m*1000+n;\n    switch(k) {\n    case 0: return A*B;\n    case 1001: return numeric.sdotVV(A,B);\n    case 2001: return numeric.sdotMV(A,B);\n    case 1002: return numeric.sdotVM(A,B);\n    case 2002: return numeric.sdotMM(A,B);\n    default: throw new Error('numeric.sdot not implemented for tensors of order '+m+' and '+n);\n    }\n}\n\nnumeric.sscatter = function scatter(V) {\n    var n = V[0].length, Vij, i, j, m = V.length, A = [], Aj;\n    for(i=n-1;i>=0;--i) {\n        if(!V[m-1][i]) continue;\n        Aj = A;\n        for(j=0;j<m-2;j++) {\n            Vij = V[j][i];\n            if(!Aj[Vij]) Aj[Vij] = [];\n            Aj = Aj[Vij];\n        }\n        Aj[V[j][i]] = V[j+1][i];\n    }\n    return A;\n}\n\nnumeric.sgather = function gather(A,ret,k) {\n    if(typeof ret === \"undefined\") ret = [];\n    if(typeof k === \"undefined\") k = [];\n    var n,i,Ai;\n    n = k.length;\n    for(i in A) {\n        if(A.hasOwnProperty(i)) {\n            k[n] = parseInt(i);\n            Ai = A[i];\n            if(typeof Ai === \"number\") {\n                if(Ai) {\n                    if(ret.length === 0) {\n                        for(i=n+1;i>=0;--i) ret[i] = [];\n                    }\n                    for(i=n;i>=0;--i) ret[i].push(k[i]);\n                    ret[n+1].push(Ai);\n                }\n            } else gather(Ai,ret,k);\n        }\n    }\n    if(k.length>n) k.pop();\n    return ret;\n}\n\n// 6. Coordinate matrices\nnumeric.cLU = function LU(A) {\n    var I = A[0], J = A[1], V = A[2];\n    var p = I.length, m=0, i,j,k,a,b,c;\n    for(i=0;i<p;i++) if(I[i]>m) m=I[i];\n    m++;\n    var L = Array(m), U = Array(m), left = numeric.rep([m],Infinity), right = numeric.rep([m],-Infinity);\n    var Ui, Uj,alpha;\n    for(k=0;k<p;k++) {\n        i = I[k];\n        j = J[k];\n        if(j<left[i]) left[i] = j;\n        if(j>right[i]) right[i] = j;\n    }\n    for(i=0;i<m-1;i++) { if(right[i] > right[i+1]) right[i+1] = right[i]; }\n    for(i=m-1;i>=1;i--) { if(left[i]<left[i-1]) left[i-1] = left[i]; }\n    var countL = 0, countU = 0;\n    for(i=0;i<m;i++) {\n        U[i] = numeric.rep([right[i]-left[i]+1],0);\n        L[i] = numeric.rep([i-left[i]],0);\n        countL += i-left[i]+1;\n        countU += right[i]-i+1;\n    }\n    for(k=0;k<p;k++) { i = I[k]; U[i][J[k]-left[i]] = V[k]; }\n    for(i=0;i<m-1;i++) {\n        a = i-left[i];\n        Ui = U[i];\n        for(j=i+1;left[j]<=i && j<m;j++) {\n            b = i-left[j];\n            c = right[i]-i;\n            Uj = U[j];\n            alpha = Uj[b]/Ui[a];\n            if(alpha) {\n                for(k=1;k<=c;k++) { Uj[k+b] -= alpha*Ui[k+a]; }\n                L[j][i-left[j]] = alpha;\n            }\n        }\n    }\n    var Ui = [], Uj = [], Uv = [], Li = [], Lj = [], Lv = [];\n    var p,q,foo;\n    p=0; q=0;\n    for(i=0;i<m;i++) {\n        a = left[i];\n        b = right[i];\n        foo = U[i];\n        for(j=i;j<=b;j++) {\n            if(foo[j-a]) {\n                Ui[p] = i;\n                Uj[p] = j;\n                Uv[p] = foo[j-a];\n                p++;\n            }\n        }\n        foo = L[i];\n        for(j=a;j<i;j++) {\n            if(foo[j-a]) {\n                Li[q] = i;\n                Lj[q] = j;\n                Lv[q] = foo[j-a];\n                q++;\n            }\n        }\n        Li[q] = i;\n        Lj[q] = i;\n        Lv[q] = 1;\n        q++;\n    }\n    return {U:[Ui,Uj,Uv], L:[Li,Lj,Lv]};\n};\n\nnumeric.cLUsolve = function LUsolve(lu,b) {\n    var L = lu.L, U = lu.U, ret = numeric.clone(b);\n    var Li = L[0], Lj = L[1], Lv = L[2];\n    var Ui = U[0], Uj = U[1], Uv = U[2];\n    var p = Ui.length, q = Li.length;\n    var m = ret.length,i,j,k;\n    k = 0;\n    for(i=0;i<m;i++) {\n        while(Lj[k] < i) {\n            ret[i] -= Lv[k]*ret[Lj[k]];\n            k++;\n        }\n        k++;\n    }\n    k = p-1;\n    for(i=m-1;i>=0;i--) {\n        while(Uj[k] > i) {\n            ret[i] -= Uv[k]*ret[Uj[k]];\n            k--;\n        }\n        ret[i] /= Uv[k];\n        k--;\n    }\n    return ret;\n};\n\nnumeric.cgrid = function grid(n,shape) {\n    if(typeof n === \"number\") n = [n,n];\n    var ret = numeric.rep(n,-1);\n    var i,j,count;\n    if(typeof shape !== \"function\") {\n        switch(shape) {\n        case 'L':\n            shape = function(i,j) { return (i>=n[0]/2 || j<n[1]/2); }\n            break;\n        default:\n            shape = function(i,j) { return true; };\n            break;\n        }\n    }\n    count=0;\n    for(i=1;i<n[0]-1;i++) for(j=1;j<n[1]-1;j++) \n        if(shape(i,j)) {\n            ret[i][j] = count;\n            count++;\n        }\n    return ret;\n}\n\nnumeric.cdelsq = function delsq(g) {\n    var dir = [[-1,0],[0,-1],[0,1],[1,0]];\n    var s = numeric.dim(g), m = s[0], n = s[1], i,j,k,p,q;\n    var Li = [], Lj = [], Lv = [];\n    for(i=1;i<m-1;i++) for(j=1;j<n-1;j++) {\n        if(g[i][j]<0) continue;\n        for(k=0;k<4;k++) {\n            p = i+dir[k][0];\n            q = j+dir[k][1];\n            if(g[p][q]<0) continue;\n            Li.push(g[i][j]);\n            Lj.push(g[p][q]);\n            Lv.push(-1);\n        }\n        Li.push(g[i][j]);\n        Lj.push(g[i][j]);\n        Lv.push(4);\n    }\n    return [Li,Lj,Lv];\n}\n\nnumeric.cdotMV = function dotMV(A,x) {\n    var ret, Ai = A[0], Aj = A[1], Av = A[2],k,p=Ai.length,N;\n    N=0;\n    for(k=0;k<p;k++) { if(Ai[k]>N) N = Ai[k]; }\n    N++;\n    ret = numeric.rep([N],0);\n    for(k=0;k<p;k++) { ret[Ai[k]]+=Av[k]*x[Aj[k]]; }\n    return ret;\n}\n\n// 7. Splines\n\nnumeric.Spline = function Spline(x,yl,yr,kl,kr) { this.x = x; this.yl = yl; this.yr = yr; this.kl = kl; this.kr = kr; }\nnumeric.Spline.prototype._at = function _at(x1,p) {\n    var x = this.x;\n    var yl = this.yl;\n    var yr = this.yr;\n    var kl = this.kl;\n    var kr = this.kr;\n    var x1,a,b,t;\n    var add = numeric.add, sub = numeric.sub, mul = numeric.mul;\n    a = sub(mul(kl[p],x[p+1]-x[p]),sub(yr[p+1],yl[p]));\n    b = add(mul(kr[p+1],x[p]-x[p+1]),sub(yr[p+1],yl[p]));\n    t = (x1-x[p])/(x[p+1]-x[p]);\n    var s = t*(1-t);\n    return add(add(add(mul(1-t,yl[p]),mul(t,yr[p+1])),mul(a,s*(1-t))),mul(b,s*t));\n}\nnumeric.Spline.prototype.at = function at(x0) {\n    if(typeof x0 === \"number\") {\n        var x = this.x;\n        var n = x.length;\n        var p,q,mid,floor = Math.floor,a,b,t;\n        p = 0;\n        q = n-1;\n        while(q-p>1) {\n            mid = floor((p+q)/2);\n            if(x[mid] <= x0) p = mid;\n            else q = mid;\n        }\n        return this._at(x0,p);\n    }\n    var n = x0.length, i, ret = Array(n);\n    for(i=n-1;i!==-1;--i) ret[i] = this.at(x0[i]);\n    return ret;\n}\nnumeric.Spline.prototype.diff = function diff() {\n    var x = this.x;\n    var yl = this.yl;\n    var yr = this.yr;\n    var kl = this.kl;\n    var kr = this.kr;\n    var n = yl.length;\n    var i,dx,dy;\n    var zl = kl, zr = kr, pl = Array(n), pr = Array(n);\n    var add = numeric.add, mul = numeric.mul, div = numeric.div, sub = numeric.sub;\n    for(i=n-1;i!==-1;--i) {\n        dx = x[i+1]-x[i];\n        dy = sub(yr[i+1],yl[i]);\n        pl[i] = div(add(mul(dy, 6),mul(kl[i],-4*dx),mul(kr[i+1],-2*dx)),dx*dx);\n        pr[i+1] = div(add(mul(dy,-6),mul(kl[i], 2*dx),mul(kr[i+1], 4*dx)),dx*dx);\n    }\n    return new numeric.Spline(x,zl,zr,pl,pr);\n}\nnumeric.Spline.prototype.roots = function roots() {\n    function sqr(x) { return x*x; }\n    function heval(y0,y1,k0,k1,x) {\n        var A = k0*2-(y1-y0);\n        var B = -k1*2+(y1-y0);\n        var t = (x+1)*0.5;\n        var s = t*(1-t);\n        return (1-t)*y0+t*y1+A*s*(1-t)+B*s*t;\n    }\n    var ret = [];\n    var x = this.x, yl = this.yl, yr = this.yr, kl = this.kl, kr = this.kr;\n    if(typeof yl[0] === \"number\") {\n        yl = [yl];\n        yr = [yr];\n        kl = [kl];\n        kr = [kr];\n    }\n    var m = yl.length,n=x.length-1,i,j,k,y,s,t;\n    var ai,bi,ci,di, ret = Array(m),ri,k0,k1,y0,y1,A,B,D,dx,cx,stops,z0,z1,zm,t0,t1,tm;\n    var sqrt = Math.sqrt;\n    for(i=0;i!==m;++i) {\n        ai = yl[i];\n        bi = yr[i];\n        ci = kl[i];\n        di = kr[i];\n        ri = [];\n        for(j=0;j!==n;j++) {\n            if(j>0 && bi[j]*ai[j]<0) ri.push(x[j]);\n            dx = (x[j+1]-x[j]);\n            cx = x[j];\n            y0 = ai[j];\n            y1 = bi[j+1];\n            k0 = ci[j]/dx;\n            k1 = di[j+1]/dx;\n            D = sqr(k0-k1+3*(y0-y1)) + 12*k1*y0;\n            A = k1+3*y0+2*k0-3*y1;\n            B = 3*(k1+k0+2*(y0-y1));\n            if(D<=0) {\n                z0 = A/B;\n                if(z0>x[j] && z0<x[j+1]) stops = [x[j],z0,x[j+1]];\n                else stops = [x[j],x[j+1]];\n            } else {\n                z0 = (A-sqrt(D))/B;\n                z1 = (A+sqrt(D))/B;\n                stops = [x[j]];\n                if(z0>x[j] && z0<x[j+1]) stops.push(z0);\n                if(z1>x[j] && z1<x[j+1]) stops.push(z1);\n                stops.push(x[j+1]);\n            }\n            t0 = stops[0];\n            z0 = this._at(t0,j);\n            for(k=0;k<stops.length-1;k++) {\n                t1 = stops[k+1];\n                z1 = this._at(t1,j);\n                if(z0 === 0) {\n                    ri.push(t0); \n                    t0 = t1;\n                    z0 = z1;\n                    continue;\n                }\n                if(z1 === 0 || z0*z1>0) {\n                    t0 = t1;\n                    z0 = z1;\n                    continue;\n                }\n                var side = 0;\n                while(1) {\n                    tm = (z0*t1-z1*t0)/(z0-z1);\n                    if(tm <= t0 || tm >= t1) { break; }\n                    zm = this._at(tm,j);\n                    if(zm*z1>0) {\n                        t1 = tm;\n                        z1 = zm;\n                        if(side === -1) z0*=0.5;\n                        side = -1;\n                    } else if(zm*z0>0) {\n                        t0 = tm;\n                        z0 = zm;\n                        if(side === 1) z1*=0.5;\n                        side = 1;\n                    } else break;\n                }\n                ri.push(tm);\n                t0 = stops[k+1];\n                z0 = this._at(t0, j);\n            }\n            if(z1 === 0) ri.push(t1);\n        }\n        ret[i] = ri;\n    }\n    if(typeof this.yl[0] === \"number\") return ret[0];\n    return ret;\n}\nnumeric.spline = function spline(x,y,k1,kn) {\n    var n = x.length, b = [], dx = [], dy = [];\n    var i;\n    var sub = numeric.sub,mul = numeric.mul,add = numeric.add;\n    for(i=n-2;i>=0;i--) { dx[i] = x[i+1]-x[i]; dy[i] = sub(y[i+1],y[i]); }\n    if(typeof k1 === \"string\" || typeof kn === \"string\") { \n        k1 = kn = \"periodic\";\n    }\n    // Build sparse tridiagonal system\n    var T = [[],[],[]];\n    switch(typeof k1) {\n    case \"undefined\":\n        b[0] = mul(3/(dx[0]*dx[0]),dy[0]);\n        T[0].push(0,0);\n        T[1].push(0,1);\n        T[2].push(2/dx[0],1/dx[0]);\n        break;\n    case \"string\":\n        b[0] = add(mul(3/(dx[n-2]*dx[n-2]),dy[n-2]),mul(3/(dx[0]*dx[0]),dy[0]));\n        T[0].push(0,0,0);\n        T[1].push(n-2,0,1);\n        T[2].push(1/dx[n-2],2/dx[n-2]+2/dx[0],1/dx[0]);\n        break;\n    default:\n        b[0] = k1;\n        T[0].push(0);\n        T[1].push(0);\n        T[2].push(1);\n        break;\n    }\n    for(i=1;i<n-1;i++) {\n        b[i] = add(mul(3/(dx[i-1]*dx[i-1]),dy[i-1]),mul(3/(dx[i]*dx[i]),dy[i]));\n        T[0].push(i,i,i);\n        T[1].push(i-1,i,i+1);\n        T[2].push(1/dx[i-1],2/dx[i-1]+2/dx[i],1/dx[i]);\n    }\n    switch(typeof kn) {\n    case \"undefined\":\n        b[n-1] = mul(3/(dx[n-2]*dx[n-2]),dy[n-2]);\n        T[0].push(n-1,n-1);\n        T[1].push(n-2,n-1);\n        T[2].push(1/dx[n-2],2/dx[n-2]);\n        break;\n    case \"string\":\n        T[1][T[1].length-1] = 0;\n        break;\n    default:\n        b[n-1] = kn;\n        T[0].push(n-1);\n        T[1].push(n-1);\n        T[2].push(1);\n        break;\n    }\n    if(typeof b[0] !== \"number\") b = numeric.transpose(b);\n    else b = [b];\n    var k = Array(b.length);\n    if(typeof k1 === \"string\") {\n        for(i=k.length-1;i!==-1;--i) {\n            k[i] = numeric.ccsLUPSolve(numeric.ccsLUP(numeric.ccsScatter(T)),b[i]);\n            k[i][n-1] = k[i][0];\n        }\n    } else {\n        for(i=k.length-1;i!==-1;--i) {\n            k[i] = numeric.cLUsolve(numeric.cLU(T),b[i]);\n        }\n    }\n    if(typeof y[0] === \"number\") k = k[0];\n    else k = numeric.transpose(k);\n    return new numeric.Spline(x,y,y,k,k);\n}\n\n// 8. FFT\nnumeric.fftpow2 = function fftpow2(x,y) {\n    var n = x.length;\n    if(n === 1) return;\n    var cos = Math.cos, sin = Math.sin, i,j;\n    var xe = Array(n/2), ye = Array(n/2), xo = Array(n/2), yo = Array(n/2);\n    j = n/2;\n    for(i=n-1;i!==-1;--i) {\n        --j;\n        xo[j] = x[i];\n        yo[j] = y[i];\n        --i;\n        xe[j] = x[i];\n        ye[j] = y[i];\n    }\n    fftpow2(xe,ye);\n    fftpow2(xo,yo);\n    j = n/2;\n    var t,k = (-6.2831853071795864769252867665590057683943387987502116419/n),ci,si;\n    for(i=n-1;i!==-1;--i) {\n        --j;\n        if(j === -1) j = n/2-1;\n        t = k*i;\n        ci = cos(t);\n        si = sin(t);\n        x[i] = xe[j] + ci*xo[j] - si*yo[j];\n        y[i] = ye[j] + ci*yo[j] + si*xo[j];\n    }\n}\nnumeric._ifftpow2 = function _ifftpow2(x,y) {\n    var n = x.length;\n    if(n === 1) return;\n    var cos = Math.cos, sin = Math.sin, i,j;\n    var xe = Array(n/2), ye = Array(n/2), xo = Array(n/2), yo = Array(n/2);\n    j = n/2;\n    for(i=n-1;i!==-1;--i) {\n        --j;\n        xo[j] = x[i];\n        yo[j] = y[i];\n        --i;\n        xe[j] = x[i];\n        ye[j] = y[i];\n    }\n    _ifftpow2(xe,ye);\n    _ifftpow2(xo,yo);\n    j = n/2;\n    var t,k = (6.2831853071795864769252867665590057683943387987502116419/n),ci,si;\n    for(i=n-1;i!==-1;--i) {\n        --j;\n        if(j === -1) j = n/2-1;\n        t = k*i;\n        ci = cos(t);\n        si = sin(t);\n        x[i] = xe[j] + ci*xo[j] - si*yo[j];\n        y[i] = ye[j] + ci*yo[j] + si*xo[j];\n    }\n}\nnumeric.ifftpow2 = function ifftpow2(x,y) {\n    numeric._ifftpow2(x,y);\n    numeric.diveq(x,x.length);\n    numeric.diveq(y,y.length);\n}\nnumeric.convpow2 = function convpow2(ax,ay,bx,by) {\n    numeric.fftpow2(ax,ay);\n    numeric.fftpow2(bx,by);\n    var i,n = ax.length,axi,bxi,ayi,byi;\n    for(i=n-1;i!==-1;--i) {\n        axi = ax[i]; ayi = ay[i]; bxi = bx[i]; byi = by[i];\n        ax[i] = axi*bxi-ayi*byi;\n        ay[i] = axi*byi+ayi*bxi;\n    }\n    numeric.ifftpow2(ax,ay);\n}\nnumeric.T.prototype.fft = function fft() {\n    var x = this.x, y = this.y;\n    var n = x.length, log = Math.log, log2 = log(2),\n        p = Math.ceil(log(2*n-1)/log2), m = Math.pow(2,p);\n    var cx = numeric.rep([m],0), cy = numeric.rep([m],0), cos = Math.cos, sin = Math.sin;\n    var k, c = (-3.141592653589793238462643383279502884197169399375105820/n),t;\n    var a = numeric.rep([m],0), b = numeric.rep([m],0),nhalf = Math.floor(n/2);\n    for(k=0;k<n;k++) a[k] = x[k];\n    if(typeof y !== \"undefined\") for(k=0;k<n;k++) b[k] = y[k];\n    cx[0] = 1;\n    for(k=1;k<=m/2;k++) {\n        t = c*k*k;\n        cx[k] = cos(t);\n        cy[k] = sin(t);\n        cx[m-k] = cos(t);\n        cy[m-k] = sin(t)\n    }\n    var X = new numeric.T(a,b), Y = new numeric.T(cx,cy);\n    X = X.mul(Y);\n    numeric.convpow2(X.x,X.y,numeric.clone(Y.x),numeric.neg(Y.y));\n    X = X.mul(Y);\n    X.x.length = n;\n    X.y.length = n;\n    return X;\n}\nnumeric.T.prototype.ifft = function ifft() {\n    var x = this.x, y = this.y;\n    var n = x.length, log = Math.log, log2 = log(2),\n        p = Math.ceil(log(2*n-1)/log2), m = Math.pow(2,p);\n    var cx = numeric.rep([m],0), cy = numeric.rep([m],0), cos = Math.cos, sin = Math.sin;\n    var k, c = (3.141592653589793238462643383279502884197169399375105820/n),t;\n    var a = numeric.rep([m],0), b = numeric.rep([m],0),nhalf = Math.floor(n/2);\n    for(k=0;k<n;k++) a[k] = x[k];\n    if(typeof y !== \"undefined\") for(k=0;k<n;k++) b[k] = y[k];\n    cx[0] = 1;\n    for(k=1;k<=m/2;k++) {\n        t = c*k*k;\n        cx[k] = cos(t);\n        cy[k] = sin(t);\n        cx[m-k] = cos(t);\n        cy[m-k] = sin(t)\n    }\n    var X = new numeric.T(a,b), Y = new numeric.T(cx,cy);\n    X = X.mul(Y);\n    numeric.convpow2(X.x,X.y,numeric.clone(Y.x),numeric.neg(Y.y));\n    X = X.mul(Y);\n    X.x.length = n;\n    X.y.length = n;\n    return X.div(n);\n}\n\n//9. Unconstrained optimization\nnumeric.gradient = function gradient(f,x) {\n    var n = x.length;\n    var f0 = f(x);\n    if(isNaN(f0)) throw new Error('gradient: f(x) is a NaN!');\n    var max = Math.max;\n    var i,x0 = numeric.clone(x),f1,f2, J = Array(n);\n    var div = numeric.div, sub = numeric.sub,errest,roundoff,max = Math.max,eps = 1e-3,abs = Math.abs, min = Math.min;\n    var t0,t1,t2,it=0,d1,d2,N;\n    for(i=0;i<n;i++) {\n        var h = max(1e-6*f0,1e-8);\n        while(1) {\n            ++it;\n            if(it>20) { throw new Error(\"Numerical gradient fails\"); }\n            x0[i] = x[i]+h;\n            f1 = f(x0);\n            x0[i] = x[i]-h;\n            f2 = f(x0);\n            x0[i] = x[i];\n            if(isNaN(f1) || isNaN(f2)) { h/=16; continue; }\n            J[i] = (f1-f2)/(2*h);\n            t0 = x[i]-h;\n            t1 = x[i];\n            t2 = x[i]+h;\n            d1 = (f1-f0)/h;\n            d2 = (f0-f2)/h;\n            N = max(abs(J[i]),abs(f0),abs(f1),abs(f2),abs(t0),abs(t1),abs(t2),1e-8);\n            errest = min(max(abs(d1-J[i]),abs(d2-J[i]),abs(d1-d2))/N,h/N);\n            if(errest>eps) { h/=16; }\n            else break;\n            }\n    }\n    return J;\n}\n\nnumeric.uncmin = function uncmin(f,x0,tol,gradient,maxit,callback,options) {\n    var grad = numeric.gradient;\n    if(typeof options === \"undefined\") { options = {}; }\n    if(typeof tol === \"undefined\") { tol = 1e-8; }\n    if(typeof gradient === \"undefined\") { gradient = function(x) { return grad(f,x); }; }\n    if(typeof maxit === \"undefined\") maxit = 1000;\n    x0 = numeric.clone(x0);\n    var n = x0.length;\n    var f0 = f(x0),f1,df0;\n    if(isNaN(f0)) throw new Error('uncmin: f(x0) is a NaN!');\n    var max = Math.max, norm2 = numeric.norm2;\n    tol = max(tol,numeric.epsilon);\n    var step,g0,g1,H1 = options.Hinv || numeric.identity(n);\n    var dot = numeric.dot, inv = numeric.inv, sub = numeric.sub, add = numeric.add, ten = numeric.tensor, div = numeric.div, mul = numeric.mul;\n    var all = numeric.all, isfinite = numeric.isFinite, neg = numeric.neg;\n    var it=0,i,s,x1,y,Hy,Hs,ys,i0,t,nstep,t1,t2;\n    var msg = \"\";\n    g0 = gradient(x0);\n    while(it<maxit) {\n        if(typeof callback === \"function\") { if(callback(it,x0,f0,g0,H1)) { msg = \"Callback returned true\"; break; } }\n        if(!all(isfinite(g0))) { msg = \"Gradient has Infinity or NaN\"; break; }\n        step = neg(dot(H1,g0));\n        if(!all(isfinite(step))) { msg = \"Search direction has Infinity or NaN\"; break; }\n        nstep = norm2(step);\n        if(nstep < tol) { msg=\"Newton step smaller than tol\"; break; }\n        t = 1;\n        df0 = dot(g0,step);\n        // line search\n        x1 = x0;\n        while(it < maxit) {\n            if(t*nstep < tol) { break; }\n            s = mul(step,t);\n            x1 = add(x0,s);\n            f1 = f(x1);\n            if(f1-f0 >= 0.1*t*df0 || isNaN(f1)) {\n                t *= 0.5;\n                ++it;\n                continue;\n            }\n            break;\n        }\n        if(t*nstep < tol) { msg = \"Line search step size smaller than tol\"; break; }\n        if(it === maxit) { msg = \"maxit reached during line search\"; break; }\n        g1 = gradient(x1);\n        y = sub(g1,g0);\n        ys = dot(y,s);\n        Hy = dot(H1,y);\n        H1 = sub(add(H1,\n                mul(\n                        (ys+dot(y,Hy))/(ys*ys),\n                        ten(s,s)    )),\n                div(add(ten(Hy,s),ten(s,Hy)),ys));\n        x0 = x1;\n        f0 = f1;\n        g0 = g1;\n        ++it;\n    }\n    return {solution: x0, f: f0, gradient: g0, invHessian: H1, iterations:it, message: msg};\n}\n\n// 10. Ode solver (Dormand-Prince)\nnumeric.Dopri = function Dopri(x,y,f,ymid,iterations,msg,events) {\n    this.x = x;\n    this.y = y;\n    this.f = f;\n    this.ymid = ymid;\n    this.iterations = iterations;\n    this.events = events;\n    this.message = msg;\n}\nnumeric.Dopri.prototype._at = function _at(xi,j) {\n    function sqr(x) { return x*x; }\n    var sol = this;\n    var xs = sol.x;\n    var ys = sol.y;\n    var k1 = sol.f;\n    var ymid = sol.ymid;\n    var n = xs.length;\n    var x0,x1,xh,y0,y1,yh,xi;\n    var floor = Math.floor,h;\n    var c = 0.5;\n    var add = numeric.add, mul = numeric.mul,sub = numeric.sub, p,q,w;\n    x0 = xs[j];\n    x1 = xs[j+1];\n    y0 = ys[j];\n    y1 = ys[j+1];\n    h  = x1-x0;\n    xh = x0+c*h;\n    yh = ymid[j];\n    p = sub(k1[j  ],mul(y0,1/(x0-xh)+2/(x0-x1)));\n    q = sub(k1[j+1],mul(y1,1/(x1-xh)+2/(x1-x0)));\n    w = [sqr(xi - x1) * (xi - xh) / sqr(x0 - x1) / (x0 - xh),\n         sqr(xi - x0) * sqr(xi - x1) / sqr(x0 - xh) / sqr(x1 - xh),\n         sqr(xi - x0) * (xi - xh) / sqr(x1 - x0) / (x1 - xh),\n         (xi - x0) * sqr(xi - x1) * (xi - xh) / sqr(x0-x1) / (x0 - xh),\n         (xi - x1) * sqr(xi - x0) * (xi - xh) / sqr(x0-x1) / (x1 - xh)];\n    return add(add(add(add(mul(y0,w[0]),\n                           mul(yh,w[1])),\n                           mul(y1,w[2])),\n                           mul( p,w[3])),\n                           mul( q,w[4]));\n}\nnumeric.Dopri.prototype.at = function at(x) {\n    var i,j,k,floor = Math.floor;\n    if(typeof x !== \"number\") {\n        var n = x.length, ret = Array(n);\n        for(i=n-1;i!==-1;--i) {\n            ret[i] = this.at(x[i]);\n        }\n        return ret;\n    }\n    var x0 = this.x;\n    i = 0; j = x0.length-1;\n    while(j-i>1) {\n        k = floor(0.5*(i+j));\n        if(x0[k] <= x) i = k;\n        else j = k;\n    }\n    return this._at(x,i);\n}\n\nnumeric.dopri = function dopri(x0,x1,y0,f,tol,maxit,event) {\n    if(typeof tol === \"undefined\") { tol = 1e-6; }\n    if(typeof maxit === \"undefined\") { maxit = 1000; }\n    var xs = [x0], ys = [y0], k1 = [f(x0,y0)], k2,k3,k4,k5,k6,k7, ymid = [];\n    var A2 = 1/5;\n    var A3 = [3/40,9/40];\n    var A4 = [44/45,-56/15,32/9];\n    var A5 = [19372/6561,-25360/2187,64448/6561,-212/729];\n    var A6 = [9017/3168,-355/33,46732/5247,49/176,-5103/18656];\n    var b = [35/384,0,500/1113,125/192,-2187/6784,11/84];\n    var bm = [0.5*6025192743/30085553152,\n              0,\n              0.5*51252292925/65400821598,\n              0.5*-2691868925/45128329728,\n              0.5*187940372067/1594534317056,\n              0.5*-1776094331/19743644256,\n              0.5*11237099/235043384];\n    var c = [1/5,3/10,4/5,8/9,1,1];\n    var e = [-71/57600,0,71/16695,-71/1920,17253/339200,-22/525,1/40];\n    var i = 0,er,j;\n    var h = (x1-x0)/10;\n    var it = 0;\n    var add = numeric.add, mul = numeric.mul, y1,erinf;\n    var max = Math.max, min = Math.min, abs = Math.abs, norminf = numeric.norminf,pow = Math.pow;\n    var any = numeric.any, lt = numeric.lt, and = numeric.and, sub = numeric.sub;\n    var e0, e1, ev;\n    var ret = new numeric.Dopri(xs,ys,k1,ymid,-1,\"\");\n    if(typeof event === \"function\") e0 = event(x0,y0);\n    while(x0<x1 && it<maxit) {\n        ++it;\n        if(x0+h>x1) h = x1-x0;\n        k2 = f(x0+c[0]*h,                add(y0,mul(   A2*h,k1[i])));\n        k3 = f(x0+c[1]*h,            add(add(y0,mul(A3[0]*h,k1[i])),mul(A3[1]*h,k2)));\n        k4 = f(x0+c[2]*h,        add(add(add(y0,mul(A4[0]*h,k1[i])),mul(A4[1]*h,k2)),mul(A4[2]*h,k3)));\n        k5 = f(x0+c[3]*h,    add(add(add(add(y0,mul(A5[0]*h,k1[i])),mul(A5[1]*h,k2)),mul(A5[2]*h,k3)),mul(A5[3]*h,k4)));\n        k6 = f(x0+c[4]*h,add(add(add(add(add(y0,mul(A6[0]*h,k1[i])),mul(A6[1]*h,k2)),mul(A6[2]*h,k3)),mul(A6[3]*h,k4)),mul(A6[4]*h,k5)));\n        y1 = add(add(add(add(add(y0,mul(k1[i],h*b[0])),mul(k3,h*b[2])),mul(k4,h*b[3])),mul(k5,h*b[4])),mul(k6,h*b[5]));\n        k7 = f(x0+h,y1);\n        er = add(add(add(add(add(mul(k1[i],h*e[0]),mul(k3,h*e[2])),mul(k4,h*e[3])),mul(k5,h*e[4])),mul(k6,h*e[5])),mul(k7,h*e[6]));\n        if(typeof er === \"number\") erinf = abs(er);\n        else erinf = norminf(er);\n        if(erinf > tol) { // reject\n            h = 0.2*h*pow(tol/erinf,0.25);\n            if(x0+h === x0) {\n                ret.msg = \"Step size became too small\";\n                break;\n            }\n            continue;\n        }\n        ymid[i] = add(add(add(add(add(add(y0,\n                mul(k1[i],h*bm[0])),\n                mul(k3   ,h*bm[2])),\n                mul(k4   ,h*bm[3])),\n                mul(k5   ,h*bm[4])),\n                mul(k6   ,h*bm[5])),\n                mul(k7   ,h*bm[6]));\n        ++i;\n        xs[i] = x0+h;\n        ys[i] = y1;\n        k1[i] = k7;\n        if(typeof event === \"function\") {\n            var yi,xl = x0,xr = x0+0.5*h,xi;\n            e1 = event(xr,ymid[i-1]);\n            ev = and(lt(e0,0),lt(0,e1));\n            if(!any(ev)) { xl = xr; xr = x0+h; e0 = e1; e1 = event(xr,y1); ev = and(lt(e0,0),lt(0,e1)); }\n            if(any(ev)) {\n                var xc, yc, en,ei;\n                var side=0, sl = 1.0, sr = 1.0;\n                while(1) {\n                    if(typeof e0 === \"number\") xi = (sr*e1*xl-sl*e0*xr)/(sr*e1-sl*e0);\n                    else {\n                        xi = xr;\n                        for(j=e0.length-1;j!==-1;--j) {\n                            if(e0[j]<0 && e1[j]>0) xi = min(xi,(sr*e1[j]*xl-sl*e0[j]*xr)/(sr*e1[j]-sl*e0[j]));\n                        }\n                    }\n                    if(xi <= xl || xi >= xr) break;\n                    yi = ret._at(xi, i-1);\n                    ei = event(xi,yi);\n                    en = and(lt(e0,0),lt(0,ei));\n                    if(any(en)) {\n                        xr = xi;\n                        e1 = ei;\n                        ev = en;\n                        sr = 1.0;\n                        if(side === -1) sl *= 0.5;\n                        else sl = 1.0;\n                        side = -1;\n                    } else {\n                        xl = xi;\n                        e0 = ei;\n                        sl = 1.0;\n                        if(side === 1) sr *= 0.5;\n                        else sr = 1.0;\n                        side = 1;\n                    }\n                }\n                y1 = ret._at(0.5*(x0+xi),i-1);\n                ret.f[i] = f(xi,yi);\n                ret.x[i] = xi;\n                ret.y[i] = yi;\n                ret.ymid[i-1] = y1;\n                ret.events = ev;\n                ret.iterations = it;\n                return ret;\n            }\n        }\n        x0 += h;\n        y0 = y1;\n        e0 = e1;\n        h = min(0.8*h*pow(tol/erinf,0.25),4*h);\n    }\n    ret.iterations = it;\n    return ret;\n}\n\n// 11. Ax = b\nnumeric.LU = function(A, fast) {\n  fast = fast || false;\n\n  var abs = Math.abs;\n  var i, j, k, absAjk, Akk, Ak, Pk, Ai;\n  var max;\n  var n = A.length, n1 = n-1;\n  var P = new Array(n);\n  if(!fast) A = numeric.clone(A);\n\n  for (k = 0; k < n; ++k) {\n    Pk = k;\n    Ak = A[k];\n    max = abs(Ak[k]);\n    for (j = k + 1; j < n; ++j) {\n      absAjk = abs(A[j][k]);\n      if (max < absAjk) {\n        max = absAjk;\n        Pk = j;\n      }\n    }\n    P[k] = Pk;\n\n    if (Pk != k) {\n      A[k] = A[Pk];\n      A[Pk] = Ak;\n      Ak = A[k];\n    }\n\n    Akk = Ak[k];\n\n    for (i = k + 1; i < n; ++i) {\n      A[i][k] /= Akk;\n    }\n\n    for (i = k + 1; i < n; ++i) {\n      Ai = A[i];\n      for (j = k + 1; j < n1; ++j) {\n        Ai[j] -= Ai[k] * Ak[j];\n        ++j;\n        Ai[j] -= Ai[k] * Ak[j];\n      }\n      if(j===n1) Ai[j] -= Ai[k] * Ak[j];\n    }\n  }\n\n  return {\n    LU: A,\n    P:  P\n  };\n}\n\nnumeric.LUsolve = function LUsolve(LUP, b) {\n  var i, j;\n  var LU = LUP.LU;\n  var n   = LU.length;\n  var x = numeric.clone(b);\n  var P   = LUP.P;\n  var Pi, LUi, LUii, tmp;\n\n  for (i=n-1;i!==-1;--i) x[i] = b[i];\n  for (i = 0; i < n; ++i) {\n    Pi = P[i];\n    if (P[i] !== i) {\n      tmp = x[i];\n      x[i] = x[Pi];\n      x[Pi] = tmp;\n    }\n\n    LUi = LU[i];\n    for (j = 0; j < i; ++j) {\n      x[i] -= x[j] * LUi[j];\n    }\n  }\n\n  for (i = n - 1; i >= 0; --i) {\n    LUi = LU[i];\n    for (j = i + 1; j < n; ++j) {\n      x[i] -= x[j] * LUi[j];\n    }\n\n    x[i] /= LUi[i];\n  }\n\n  return x;\n}\n\nnumeric.solve = function solve(A,b,fast) { return numeric.LUsolve(numeric.LU(A,fast), b); }\n\n// 12. Linear programming\nnumeric.echelonize = function echelonize(A) {\n    var s = numeric.dim(A), m = s[0], n = s[1];\n    var I = numeric.identity(m);\n    var P = Array(m);\n    var i,j,k,l,Ai,Ii,Z,a;\n    var abs = Math.abs;\n    var diveq = numeric.diveq;\n    A = numeric.clone(A);\n    for(i=0;i<m;++i) {\n        k = 0;\n        Ai = A[i];\n        Ii = I[i];\n        for(j=1;j<n;++j) if(abs(Ai[k])<abs(Ai[j])) k=j;\n        P[i] = k;\n        diveq(Ii,Ai[k]);\n        diveq(Ai,Ai[k]);\n        for(j=0;j<m;++j) if(j!==i) {\n            Z = A[j]; a = Z[k];\n            for(l=n-1;l!==-1;--l) Z[l] -= Ai[l]*a;\n            Z = I[j];\n            for(l=m-1;l!==-1;--l) Z[l] -= Ii[l]*a;\n        }\n    }\n    return {I:I, A:A, P:P};\n}\n\nnumeric.__solveLP = function __solveLP(c,A,b,tol,maxit,x,flag) {\n    var sum = numeric.sum, log = numeric.log, mul = numeric.mul, sub = numeric.sub, dot = numeric.dot, div = numeric.div, add = numeric.add;\n    var m = c.length, n = b.length,y;\n    var unbounded = false, cb,i0=0;\n    var alpha = 1.0;\n    var f0,df0,AT = numeric.transpose(A), svd = numeric.svd,transpose = numeric.transpose,leq = numeric.leq, sqrt = Math.sqrt, abs = Math.abs;\n    var muleq = numeric.muleq;\n    var norm = numeric.norminf, any = numeric.any,min = Math.min;\n    var all = numeric.all, gt = numeric.gt;\n    var p = Array(m), A0 = Array(n),e=numeric.rep([n],1), H;\n    var solve = numeric.solve, z = sub(b,dot(A,x)),count;\n    var dotcc = dot(c,c);\n    var g;\n    for(count=i0;count<maxit;++count) {\n        var i,j,d;\n        for(i=n-1;i!==-1;--i) A0[i] = div(A[i],z[i]);\n        var A1 = transpose(A0);\n        for(i=m-1;i!==-1;--i) p[i] = (/*x[i]+*/sum(A1[i]));\n        alpha = 0.25*abs(dotcc/dot(c,p));\n        var a1 = 100*sqrt(dotcc/dot(p,p));\n        if(!isFinite(alpha) || alpha>a1) alpha = a1;\n        g = add(c,mul(alpha,p));\n        H = dot(A1,A0);\n        for(i=m-1;i!==-1;--i) H[i][i] += 1;\n        d = solve(H,div(g,alpha),true);\n        var t0 = div(z,dot(A,d));\n        var t = 1.0;\n        for(i=n-1;i!==-1;--i) if(t0[i]<0) t = min(t,-0.999*t0[i]);\n        y = sub(x,mul(d,t));\n        z = sub(b,dot(A,y));\n        if(!all(gt(z,0))) return { solution: x, message: \"\", iterations: count };\n        x = y;\n        if(alpha<tol) return { solution: y, message: \"\", iterations: count };\n        if(flag) {\n            var s = dot(c,g), Ag = dot(A,g);\n            unbounded = true;\n            for(i=n-1;i!==-1;--i) if(s*Ag[i]<0) { unbounded = false; break; }\n        } else {\n            if(x[m-1]>=0) unbounded = false;\n            else unbounded = true;\n        }\n        if(unbounded) return { solution: y, message: \"Unbounded\", iterations: count };\n    }\n    return { solution: x, message: \"maximum iteration count exceeded\", iterations:count };\n}\n\nnumeric._solveLP = function _solveLP(c,A,b,tol,maxit) {\n    var m = c.length, n = b.length,y;\n    var sum = numeric.sum, log = numeric.log, mul = numeric.mul, sub = numeric.sub, dot = numeric.dot, div = numeric.div, add = numeric.add;\n    var c0 = numeric.rep([m],0).concat([1]);\n    var J = numeric.rep([n,1],-1);\n    var A0 = numeric.blockMatrix([[A                   ,   J  ]]);\n    var b0 = b;\n    var y = numeric.rep([m],0).concat(Math.max(0,numeric.sup(numeric.neg(b)))+1);\n    var x0 = numeric.__solveLP(c0,A0,b0,tol,maxit,y,false);\n    var x = numeric.clone(x0.solution);\n    x.length = m;\n    var foo = numeric.inf(sub(b,dot(A,x)));\n    if(foo<0) { return { solution: NaN, message: \"Infeasible\", iterations: x0.iterations }; }\n    var ret = numeric.__solveLP(c, A, b, tol, maxit-x0.iterations, x, true);\n    ret.iterations += x0.iterations;\n    return ret;\n};\n\nnumeric.solveLP = function solveLP(c,A,b,Aeq,beq,tol,maxit) {\n    if(typeof maxit === \"undefined\") maxit = 1000;\n    if(typeof tol === \"undefined\") tol = numeric.epsilon;\n    if(typeof Aeq === \"undefined\") return numeric._solveLP(c,A,b,tol,maxit);\n    var m = Aeq.length, n = Aeq[0].length, o = A.length;\n    var B = numeric.echelonize(Aeq);\n    var flags = numeric.rep([n],0);\n    var P = B.P;\n    var Q = [];\n    var i;\n    for(i=P.length-1;i!==-1;--i) flags[P[i]] = 1;\n    for(i=n-1;i!==-1;--i) if(flags[i]===0) Q.push(i);\n    var g = numeric.getRange;\n    var I = numeric.linspace(0,m-1), J = numeric.linspace(0,o-1);\n    var Aeq2 = g(Aeq,I,Q), A1 = g(A,J,P), A2 = g(A,J,Q), dot = numeric.dot, sub = numeric.sub;\n    var A3 = dot(A1,B.I);\n    var A4 = sub(A2,dot(A3,Aeq2)), b4 = sub(b,dot(A3,beq));\n    var c1 = Array(P.length), c2 = Array(Q.length);\n    for(i=P.length-1;i!==-1;--i) c1[i] = c[P[i]];\n    for(i=Q.length-1;i!==-1;--i) c2[i] = c[Q[i]];\n    var c4 = sub(c2,dot(c1,dot(B.I,Aeq2)));\n    var S = numeric._solveLP(c4,A4,b4,tol,maxit);\n    var x2 = S.solution;\n    if(x2!==x2) return S;\n    var x1 = dot(B.I,sub(beq,dot(Aeq2,x2)));\n    var x = Array(c.length);\n    for(i=P.length-1;i!==-1;--i) x[P[i]] = x1[i];\n    for(i=Q.length-1;i!==-1;--i) x[Q[i]] = x2[i];\n    return { solution: x, message:S.message, iterations: S.iterations };\n}\n\nnumeric.MPStoLP = function MPStoLP(MPS) {\n    if(MPS instanceof String) { MPS.split('\\n'); }\n    var state = 0;\n    var states = ['Initial state','NAME','ROWS','COLUMNS','RHS','BOUNDS','ENDATA'];\n    var n = MPS.length;\n    var i,j,z,N=0,rows = {}, sign = [], rl = 0, vars = {}, nv = 0;\n    var name;\n    var c = [], A = [], b = [];\n    function err(e) { throw new Error('MPStoLP: '+e+'\\nLine '+i+': '+MPS[i]+'\\nCurrent state: '+states[state]+'\\n'); }\n    for(i=0;i<n;++i) {\n        z = MPS[i];\n        var w0 = z.match(/\\S*/g);\n        var w = [];\n        for(j=0;j<w0.length;++j) if(w0[j]!==\"\") w.push(w0[j]);\n        if(w.length === 0) continue;\n        for(j=0;j<states.length;++j) if(z.substr(0,states[j].length) === states[j]) break;\n        if(j<states.length) {\n            state = j;\n            if(j===1) { name = w[1]; }\n            if(j===6) return { name:name, c:c, A:numeric.transpose(A), b:b, rows:rows, vars:vars };\n            continue;\n        }\n        switch(state) {\n        case 0: case 1: err('Unexpected line');\n        case 2: \n            switch(w[0]) {\n            case 'N': if(N===0) N = w[1]; else err('Two or more N rows'); break;\n            case 'L': rows[w[1]] = rl; sign[rl] = 1; b[rl] = 0; ++rl; break;\n            case 'G': rows[w[1]] = rl; sign[rl] = -1;b[rl] = 0; ++rl; break;\n            case 'E': rows[w[1]] = rl; sign[rl] = 0;b[rl] = 0; ++rl; break;\n            default: err('Parse error '+numeric.prettyPrint(w));\n            }\n            break;\n        case 3:\n            if(!vars.hasOwnProperty(w[0])) { vars[w[0]] = nv; c[nv] = 0; A[nv] = numeric.rep([rl],0); ++nv; }\n            var p = vars[w[0]];\n            for(j=1;j<w.length;j+=2) {\n                if(w[j] === N) { c[p] = parseFloat(w[j+1]); continue; }\n                var q = rows[w[j]];\n                A[p][q] = (sign[q]<0?-1:1)*parseFloat(w[j+1]);\n            }\n            break;\n        case 4:\n            for(j=1;j<w.length;j+=2) b[rows[w[j]]] = (sign[rows[w[j]]]<0?-1:1)*parseFloat(w[j+1]);\n            break;\n        case 5: /*FIXME*/ break;\n        case 6: err('Internal error');\n        }\n    }\n    err('Reached end of file without ENDATA');\n}\n// seedrandom.js version 2.0.\n// Author: David Bau 4/2/2011\n//\n// Defines a method Math.seedrandom() that, when called, substitutes\n// an explicitly seeded RC4-based algorithm for Math.random().  Also\n// supports automatic seeding from local or network sources of entropy.\n//\n// Usage:\n//\n//   <script src=http://davidbau.com/encode/seedrandom-min.js></script>\n//\n//   Math.seedrandom('yipee'); Sets Math.random to a function that is\n//                             initialized using the given explicit seed.\n//\n//   Math.seedrandom();        Sets Math.random to a function that is\n//                             seeded using the current time, dom state,\n//                             and other accumulated local entropy.\n//                             The generated seed string is returned.\n//\n//   Math.seedrandom('yowza', true);\n//                             Seeds using the given explicit seed mixed\n//                             together with accumulated entropy.\n//\n//   <script src=\"http://bit.ly/srandom-512\"></script>\n//                             Seeds using physical random bits downloaded\n//                             from random.org.\n//\n//   <script src=\"https://jsonlib.appspot.com/urandom?callback=Math.seedrandom\">\n//   </script>                 Seeds using urandom bits from call.jsonlib.com,\n//                             which is faster than random.org.\n//\n// Examples:\n//\n//   Math.seedrandom(\"hello\");            // Use \"hello\" as the seed.\n//   document.write(Math.random());       // Always 0.5463663768140734\n//   document.write(Math.random());       // Always 0.43973793770592234\n//   var rng1 = Math.random;              // Remember the current prng.\n//\n//   var autoseed = Math.seedrandom();    // New prng with an automatic seed.\n//   document.write(Math.random());       // Pretty much unpredictable.\n//\n//   Math.random = rng1;                  // Continue \"hello\" prng sequence.\n//   document.write(Math.random());       // Always 0.554769432473455\n//\n//   Math.seedrandom(autoseed);           // Restart at the previous seed.\n//   document.write(Math.random());       // Repeat the 'unpredictable' value.\n//\n// Notes:\n//\n// Each time seedrandom('arg') is called, entropy from the passed seed\n// is accumulated in a pool to help generate future seeds for the\n// zero-argument form of Math.seedrandom, so entropy can be injected over\n// time by calling seedrandom with explicit data repeatedly.\n//\n// On speed - This javascript implementation of Math.random() is about\n// 3-10x slower than the built-in Math.random() because it is not native\n// code, but this is typically fast enough anyway.  Seeding is more expensive,\n// especially if you use auto-seeding.  Some details (timings on Chrome 4):\n//\n// Our Math.random()            - avg less than 0.002 milliseconds per call\n// seedrandom('explicit')       - avg less than 0.5 milliseconds per call\n// seedrandom('explicit', true) - avg less than 2 milliseconds per call\n// seedrandom()                 - avg about 38 milliseconds per call\n//\n// LICENSE (BSD):\n//\n// Copyright 2010 David Bau, all rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n// \n//   1. Redistributions of source code must retain the above copyright\n//      notice, this list of conditions and the following disclaimer.\n//\n//   2. Redistributions in binary form must reproduce the above copyright\n//      notice, this list of conditions and the following disclaimer in the\n//      documentation and/or other materials provided with the distribution.\n// \n//   3. Neither the name of this module nor the names of its contributors may\n//      be used to endorse or promote products derived from this software\n//      without specific prior written permission.\n// \n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n/**\n * All code is in an anonymous closure to keep the global namespace clean.\n *\n * @param {number=} overflow \n * @param {number=} startdenom\n */\n\n// Patched by Seb so that seedrandom.js does not pollute the Math object.\n// My tests suggest that doing Math.trouble = 1 makes Math lookups about 5%\n// slower.\nnumeric.seedrandom = { pow:Math.pow, random:Math.random };\n\n(function (pool, math, width, chunks, significance, overflow, startdenom) {\n\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nmath['seedrandom'] = function seedrandom(seed, use_entropy) {\n  var key = [];\n  var arc4;\n\n  // Flatten the seed string or build one from local entropy if needed.\n  seed = mixkey(flatten(\n    use_entropy ? [seed, pool] :\n    arguments.length ? seed :\n    [new Date().getTime(), pool, window], 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  arc4 = new ARC4(key);\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(arc4.S, pool);\n\n  // Override Math.random\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n\n  math['random'] = function random() {  // Closure to return a random double:\n    var n = arc4.g(chunks);             // Start with a numerator n < 2 ^ 48\n    var d = startdenom;                 //   and denominator d = 2 ^ 48.\n    var x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  // Return the seed that was used\n  return seed;\n};\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\n/** @constructor */\nfunction ARC4(key) {\n  var t, u, me = this, keylen = key.length;\n  var i = 0, j = me.i = me.j = me.m = 0;\n  me.S = [];\n  me.c = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) { me.S[i] = i++; }\n  for (i = 0; i < width; i++) {\n    t = me.S[i];\n    j = lowbits(j + t + key[i % keylen]);\n    u = me.S[j];\n    me.S[i] = u;\n    me.S[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  me.g = function getnext(count) {\n    var s = me.S;\n    var i = lowbits(me.i + 1); var t = s[i];\n    var j = lowbits(me.j + t); var u = s[j];\n    s[i] = u;\n    s[j] = t;\n    var r = s[lowbits(t + u)];\n    while (--count) {\n      i = lowbits(i + 1); t = s[i];\n      j = lowbits(j + t); u = s[j];\n      s[i] = u;\n      s[j] = t;\n      r = r * width + s[lowbits(t + u)];\n    }\n    me.i = i;\n    me.j = j;\n    return r;\n  };\n  // For robust unpredictability discard an initial batch of values.\n  // See http://www.rsa.com/rsalabs/node.asp?id=2009\n  me.g(width);\n}\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\n/** @param {Object=} result \n  * @param {string=} prop\n  * @param {string=} typ */\nfunction flatten(obj, depth, result, prop, typ) {\n  result = [];\n  typ = typeof(obj);\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      if (prop.indexOf('S') < 5) {    // Avoid FF3 bug (local/sessionStorage)\n        try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n      }\n    }\n  }\n  return (result.length ? result : obj + (typ != 'string' ? '\\0' : ''));\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\n/** @param {number=} smear \n  * @param {number=} j */\nfunction mixkey(seed, key, smear, j) {\n  seed += '';                         // Ensure the seed is a string\n  smear = 0;\n  for (j = 0; j < seed.length; j++) {\n    key[lowbits(j)] =\n      lowbits((smear ^= key[lowbits(j)] * 19) + seed.charCodeAt(j));\n  }\n  seed = '';\n  for (j in key) { seed += String.fromCharCode(key[j]); }\n  return seed;\n}\n\n//\n// lowbits()\n// A quick \"n mod width\" for width a power of 2.\n//\nfunction lowbits(n) { return n & (width - 1); }\n\n//\n// The following constants are related to IEEE 754 limits.\n//\nstartdenom = math.pow(width, chunks);\nsignificance = math.pow(2, significance);\noverflow = significance * 2;\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to intefere with determinstic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n// End anonymous scope, and pass initial values.\n}(\n  [],   // pool: entropy pool starts empty\n  numeric.seedrandom, // math: package containing random, pow, and seedrandom\n  256,  // width: each RC4 output is 0 <= x < 256\n  6,    // chunks: at least six RC4 outputs for each double\n  52    // significance: there are 52 significant digits in a double\n  ));\n/* This file is a slightly modified version of quadprog.js from Alberto Santini.\n * It has been slightly modified by Sébastien Loisel to make sure that it handles\n * 0-based Arrays instead of 1-based Arrays.\n * License is in resources/LICENSE.quadprog */\n(function(exports) {\n\nfunction base0to1(A) {\n    if(typeof A !== \"object\") { return A; }\n    var ret = [], i,n=A.length;\n    for(i=0;i<n;i++) ret[i+1] = base0to1(A[i]);\n    return ret;\n}\nfunction base1to0(A) {\n    if(typeof A !== \"object\") { return A; }\n    var ret = [], i,n=A.length;\n    for(i=1;i<n;i++) ret[i-1] = base1to0(A[i]);\n    return ret;\n}\n\nfunction dpori(a, lda, n) {\n    var i, j, k, kp1, t;\n\n    for (k = 1; k <= n; k = k + 1) {\n        a[k][k] = 1 / a[k][k];\n        t = -a[k][k];\n        //~ dscal(k - 1, t, a[1][k], 1);\n        for (i = 1; i < k; i = i + 1) {\n            a[i][k] = t * a[i][k];\n        }\n\n        kp1 = k + 1;\n        if (n < kp1) {\n            break;\n        }\n        for (j = kp1; j <= n; j = j + 1) {\n            t = a[k][j];\n            a[k][j] = 0;\n            //~ daxpy(k, t, a[1][k], 1, a[1][j], 1);\n            for (i = 1; i <= k; i = i + 1) {\n                a[i][j] = a[i][j] + (t * a[i][k]);\n            }\n        }\n    }\n\n}\n\nfunction dposl(a, lda, n, b) {\n    var i, k, kb, t;\n\n    for (k = 1; k <= n; k = k + 1) {\n        //~ t = ddot(k - 1, a[1][k], 1, b[1], 1);\n        t = 0;\n        for (i = 1; i < k; i = i + 1) {\n            t = t + (a[i][k] * b[i]);\n        }\n\n        b[k] = (b[k] - t) / a[k][k];\n    }\n\n    for (kb = 1; kb <= n; kb = kb + 1) {\n        k = n + 1 - kb;\n        b[k] = b[k] / a[k][k];\n        t = -b[k];\n        //~ daxpy(k - 1, t, a[1][k], 1, b[1], 1);\n        for (i = 1; i < k; i = i + 1) {\n            b[i] = b[i] + (t * a[i][k]);\n        }\n    }\n}\n\nfunction dpofa(a, lda, n, info) {\n    var i, j, jm1, k, t, s;\n\n    for (j = 1; j <= n; j = j + 1) {\n        info[1] = j;\n        s = 0;\n        jm1 = j - 1;\n        if (jm1 < 1) {\n            s = a[j][j] - s;\n            if (s <= 0) {\n                break;\n            }\n            a[j][j] = Math.sqrt(s);\n        } else {\n            for (k = 1; k <= jm1; k = k + 1) {\n                //~ t = a[k][j] - ddot(k - 1, a[1][k], 1, a[1][j], 1);\n                t = a[k][j];\n                for (i = 1; i < k; i = i + 1) {\n                    t = t - (a[i][j] * a[i][k]);\n                }\n                t = t / a[k][k];\n                a[k][j] = t;\n                s = s + t * t;\n            }\n            s = a[j][j] - s;\n            if (s <= 0) {\n                break;\n            }\n            a[j][j] = Math.sqrt(s);\n        }\n        info[1] = 0;\n    }\n}\n\nfunction qpgen2(dmat, dvec, fddmat, n, sol, crval, amat,\n    bvec, fdamat, q, meq, iact, nact, iter, work, ierr) {\n\n    var i, j, l, l1, info, it1, iwzv, iwrv, iwrm, iwsv, iwuv, nvl, r, iwnbv,\n        temp, sum, t1, tt, gc, gs, nu,\n        t1inf, t2min,\n        vsmall, tmpa, tmpb,\n        go;\n\n    r = Math.min(n, q);\n    l = 2 * n + (r * (r + 5)) / 2 + 2 * q + 1;\n\n    vsmall = 1.0e-60;\n    do {\n        vsmall = vsmall + vsmall;\n        tmpa = 1 + 0.1 * vsmall;\n        tmpb = 1 + 0.2 * vsmall;\n    } while (tmpa <= 1 || tmpb <= 1);\n\n    for (i = 1; i <= n; i = i + 1) {\n        work[i] = dvec[i];\n    }\n    for (i = n + 1; i <= l; i = i + 1) {\n        work[i] = 0;\n    }\n    for (i = 1; i <= q; i = i + 1) {\n        iact[i] = 0;\n    }\n\n    info = [];\n\n    if (ierr[1] === 0) {\n        dpofa(dmat, fddmat, n, info);\n        if (info[1] !== 0) {\n            ierr[1] = 2;\n            return;\n        }\n        dposl(dmat, fddmat, n, dvec);\n        dpori(dmat, fddmat, n);\n    } else {\n        for (j = 1; j <= n; j = j + 1) {\n            sol[j] = 0;\n            for (i = 1; i <= j; i = i + 1) {\n                sol[j] = sol[j] + dmat[i][j] * dvec[i];\n            }\n        }\n        for (j = 1; j <= n; j = j + 1) {\n            dvec[j] = 0;\n            for (i = j; i <= n; i = i + 1) {\n                dvec[j] = dvec[j] + dmat[j][i] * sol[i];\n            }\n        }\n    }\n\n    crval[1] = 0;\n    for (j = 1; j <= n; j = j + 1) {\n        sol[j] = dvec[j];\n        crval[1] = crval[1] + work[j] * sol[j];\n        work[j] = 0;\n        for (i = j + 1; i <= n; i = i + 1) {\n            dmat[i][j] = 0;\n        }\n    }\n    crval[1] = -crval[1] / 2;\n    ierr[1] = 0;\n\n    iwzv = n;\n    iwrv = iwzv + n;\n    iwuv = iwrv + r;\n    iwrm = iwuv + r + 1;\n    iwsv = iwrm + (r * (r + 1)) / 2;\n    iwnbv = iwsv + q;\n\n    for (i = 1; i <= q; i = i + 1) {\n        sum = 0;\n        for (j = 1; j <= n; j = j + 1) {\n            sum = sum + amat[j][i] * amat[j][i];\n        }\n        work[iwnbv + i] = Math.sqrt(sum);\n    }\n    nact = 0;\n    iter[1] = 0;\n    iter[2] = 0;\n\n    function fn_goto_50() {\n        iter[1] = iter[1] + 1;\n\n        l = iwsv;\n        for (i = 1; i <= q; i = i + 1) {\n            l = l + 1;\n            sum = -bvec[i];\n            for (j = 1; j <= n; j = j + 1) {\n                sum = sum + amat[j][i] * sol[j];\n            }\n            if (Math.abs(sum) < vsmall) {\n                sum = 0;\n            }\n            if (i > meq) {\n                work[l] = sum;\n            } else {\n                work[l] = -Math.abs(sum);\n                if (sum > 0) {\n                    for (j = 1; j <= n; j = j + 1) {\n                        amat[j][i] = -amat[j][i];\n                    }\n                    bvec[i] = -bvec[i];\n                }\n            }\n        }\n\n        for (i = 1; i <= nact; i = i + 1) {\n            work[iwsv + iact[i]] = 0;\n        }\n\n        nvl = 0;\n        temp = 0;\n        for (i = 1; i <= q; i = i + 1) {\n            if (work[iwsv + i] < temp * work[iwnbv + i]) {\n                nvl = i;\n                temp = work[iwsv + i] / work[iwnbv + i];\n            }\n        }\n        if (nvl === 0) {\n            return 999;\n        }\n\n        return 0;\n    }\n\n    function fn_goto_55() {\n        for (i = 1; i <= n; i = i + 1) {\n            sum = 0;\n            for (j = 1; j <= n; j = j + 1) {\n                sum = sum + dmat[j][i] * amat[j][nvl];\n            }\n            work[i] = sum;\n        }\n\n        l1 = iwzv;\n        for (i = 1; i <= n; i = i + 1) {\n            work[l1 + i] = 0;\n        }\n        for (j = nact + 1; j <= n; j = j + 1) {\n            for (i = 1; i <= n; i = i + 1) {\n                work[l1 + i] = work[l1 + i] + dmat[i][j] * work[j];\n            }\n        }\n\n        t1inf = true;\n        for (i = nact; i >= 1; i = i - 1) {\n            sum = work[i];\n            l = iwrm + (i * (i + 3)) / 2;\n            l1 = l - i;\n            for (j = i + 1; j <= nact; j = j + 1) {\n                sum = sum - work[l] * work[iwrv + j];\n                l = l + j;\n            }\n            sum = sum / work[l1];\n            work[iwrv + i] = sum;\n            if (iact[i] < meq) {\n                // continue;\n                break;\n            }\n            if (sum < 0) {\n                // continue;\n                break;\n            }\n            t1inf = false;\n            it1 = i;\n        }\n\n        if (!t1inf) {\n            t1 = work[iwuv + it1] / work[iwrv + it1];\n            for (i = 1; i <= nact; i = i + 1) {\n                if (iact[i] < meq) {\n                    // continue;\n                    break;\n                }\n                if (work[iwrv + i] < 0) {\n                    // continue;\n                    break;\n                }\n                temp = work[iwuv + i] / work[iwrv + i];\n                if (temp < t1) {\n                    t1 = temp;\n                    it1 = i;\n                }\n            }\n        }\n\n        sum = 0;\n        for (i = iwzv + 1; i <= iwzv + n; i = i + 1) {\n            sum = sum + work[i] * work[i];\n        }\n        if (Math.abs(sum) <= vsmall) {\n            if (t1inf) {\n                ierr[1] = 1;\n                // GOTO 999\n                return 999;\n            } else {\n                for (i = 1; i <= nact; i = i + 1) {\n                    work[iwuv + i] = work[iwuv + i] - t1 * work[iwrv + i];\n                }\n                work[iwuv + nact + 1] = work[iwuv + nact + 1] + t1;\n                // GOTO 700\n                return 700;\n            }\n        } else {\n            sum = 0;\n            for (i = 1; i <= n; i = i + 1) {\n                sum = sum + work[iwzv + i] * amat[i][nvl];\n            }\n            tt = -work[iwsv + nvl] / sum;\n            t2min = true;\n            if (!t1inf) {\n                if (t1 < tt) {\n                    tt = t1;\n                    t2min = false;\n                }\n            }\n\n            for (i = 1; i <= n; i = i + 1) {\n                sol[i] = sol[i] + tt * work[iwzv + i];\n                if (Math.abs(sol[i]) < vsmall) {\n                    sol[i] = 0;\n                }\n            }\n\n            crval[1] = crval[1] + tt * sum * (tt / 2 + work[iwuv + nact + 1]);\n            for (i = 1; i <= nact; i = i + 1) {\n                work[iwuv + i] = work[iwuv + i] - tt * work[iwrv + i];\n            }\n            work[iwuv + nact + 1] = work[iwuv + nact + 1] + tt;\n\n            if (t2min) {\n                nact = nact + 1;\n                iact[nact] = nvl;\n\n                l = iwrm + ((nact - 1) * nact) / 2 + 1;\n                for (i = 1; i <= nact - 1; i = i + 1) {\n                    work[l] = work[i];\n                    l = l + 1;\n                }\n\n                if (nact === n) {\n                    work[l] = work[n];\n                } else {\n                    for (i = n; i >= nact + 1; i = i - 1) {\n                        if (work[i] === 0) {\n                            // continue;\n                            break;\n                        }\n                        gc = Math.max(Math.abs(work[i - 1]), Math.abs(work[i]));\n                        gs = Math.min(Math.abs(work[i - 1]), Math.abs(work[i]));\n                        if (work[i - 1] >= 0) {\n                            temp = Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));\n                        } else {\n                            temp = -Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));\n                        }\n                        gc = work[i - 1] / temp;\n                        gs = work[i] / temp;\n\n                        if (gc === 1) {\n                            // continue;\n                            break;\n                        }\n                        if (gc === 0) {\n                            work[i - 1] = gs * temp;\n                            for (j = 1; j <= n; j = j + 1) {\n                                temp = dmat[j][i - 1];\n                                dmat[j][i - 1] = dmat[j][i];\n                                dmat[j][i] = temp;\n                            }\n                        } else {\n                            work[i - 1] = temp;\n                            nu = gs / (1 + gc);\n                            for (j = 1; j <= n; j = j + 1) {\n                                temp = gc * dmat[j][i - 1] + gs * dmat[j][i];\n                                dmat[j][i] = nu * (dmat[j][i - 1] + temp) - dmat[j][i];\n                                dmat[j][i - 1] = temp;\n\n                            }\n                        }\n                    }\n                    work[l] = work[nact];\n                }\n            } else {\n                sum = -bvec[nvl];\n                for (j = 1; j <= n; j = j + 1) {\n                    sum = sum + sol[j] * amat[j][nvl];\n                }\n                if (nvl > meq) {\n                    work[iwsv + nvl] = sum;\n                } else {\n                    work[iwsv + nvl] = -Math.abs(sum);\n                    if (sum > 0) {\n                        for (j = 1; j <= n; j = j + 1) {\n                            amat[j][nvl] = -amat[j][nvl];\n                        }\n                        bvec[nvl] = -bvec[nvl];\n                    }\n                }\n                // GOTO 700\n                return 700;\n            }\n        }\n\n        return 0;\n    }\n\n    function fn_goto_797() {\n        l = iwrm + (it1 * (it1 + 1)) / 2 + 1;\n        l1 = l + it1;\n        if (work[l1] === 0) {\n            // GOTO 798\n            return 798;\n        }\n        gc = Math.max(Math.abs(work[l1 - 1]), Math.abs(work[l1]));\n        gs = Math.min(Math.abs(work[l1 - 1]), Math.abs(work[l1]));\n        if (work[l1 - 1] >= 0) {\n            temp = Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));\n        } else {\n            temp = -Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));\n        }\n        gc = work[l1 - 1] / temp;\n        gs = work[l1] / temp;\n\n        if (gc === 1) {\n            // GOTO 798\n            return 798;\n        }\n        if (gc === 0) {\n            for (i = it1 + 1; i <= nact; i = i + 1) {\n                temp = work[l1 - 1];\n                work[l1 - 1] = work[l1];\n                work[l1] = temp;\n                l1 = l1 + i;\n            }\n            for (i = 1; i <= n; i = i + 1) {\n                temp = dmat[i][it1];\n                dmat[i][it1] = dmat[i][it1 + 1];\n                dmat[i][it1 + 1] = temp;\n            }\n        } else {\n            nu = gs / (1 + gc);\n            for (i = it1 + 1; i <= nact; i = i + 1) {\n                temp = gc * work[l1 - 1] + gs * work[l1];\n                work[l1] = nu * (work[l1 - 1] + temp) - work[l1];\n                work[l1 - 1] = temp;\n                l1 = l1 + i;\n            }\n            for (i = 1; i <= n; i = i + 1) {\n                temp = gc * dmat[i][it1] + gs * dmat[i][it1 + 1];\n                dmat[i][it1 + 1] = nu * (dmat[i][it1] + temp) - dmat[i][it1 + 1];\n                dmat[i][it1] = temp;\n            }\n        }\n\n        return 0;\n    }\n\n    function fn_goto_798() {\n        l1 = l - it1;\n        for (i = 1; i <= it1; i = i + 1) {\n            work[l1] = work[l];\n            l = l + 1;\n            l1 = l1 + 1;\n        }\n\n        work[iwuv + it1] = work[iwuv + it1 + 1];\n        iact[it1] = iact[it1 + 1];\n        it1 = it1 + 1;\n        if (it1 < nact) {\n            // GOTO 797\n            return 797;\n        }\n\n        return 0;\n    }\n\n    function fn_goto_799() {\n        work[iwuv + nact] = work[iwuv + nact + 1];\n        work[iwuv + nact + 1] = 0;\n        iact[nact] = 0;\n        nact = nact - 1;\n        iter[2] = iter[2] + 1;\n\n        return 0;\n    }\n\n    go = 0;\n    while (true) {\n        go = fn_goto_50();\n        if (go === 999) {\n            return;\n        }\n        while (true) {\n            go = fn_goto_55();\n            if (go === 0) {\n                break;\n            }\n            if (go === 999) {\n                return;\n            }\n            if (go === 700) {\n                if (it1 === nact) {\n                    fn_goto_799();\n                } else {\n                    while (true) {\n                        fn_goto_797();\n                        go = fn_goto_798();\n                        if (go !== 797) {\n                            break;\n                        }\n                    }\n                    fn_goto_799();\n                }\n            }\n        }\n    }\n\n}\n\nfunction solveQP(Dmat, dvec, Amat, bvec, meq, factorized) {\n    Dmat = base0to1(Dmat);\n    dvec = base0to1(dvec);\n    Amat = base0to1(Amat);\n    var i, n, q,\n        nact, r,\n        crval = [], iact = [], sol = [], work = [], iter = [],\n        message;\n\n    meq = meq || 0;\n    factorized = factorized ? base0to1(factorized) : [undefined, 0];\n    bvec = bvec ? base0to1(bvec) : [];\n\n    // In Fortran the array index starts from 1\n    n = Dmat.length - 1;\n    q = Amat[1].length - 1;\n\n    if (!bvec) {\n        for (i = 1; i <= q; i = i + 1) {\n            bvec[i] = 0;\n        }\n    }\n    for (i = 1; i <= q; i = i + 1) {\n        iact[i] = 0;\n    }\n    nact = 0;\n    r = Math.min(n, q);\n    for (i = 1; i <= n; i = i + 1) {\n        sol[i] = 0;\n    }\n    crval[1] = 0;\n    for (i = 1; i <= (2 * n + (r * (r + 5)) / 2 + 2 * q + 1); i = i + 1) {\n        work[i] = 0;\n    }\n    for (i = 1; i <= 2; i = i + 1) {\n        iter[i] = 0;\n    }\n\n    qpgen2(Dmat, dvec, n, n, sol, crval, Amat,\n        bvec, n, q, meq, iact, nact, iter, work, factorized);\n\n    message = \"\";\n    if (factorized[1] === 1) {\n        message = \"constraints are inconsistent, no solution!\";\n    }\n    if (factorized[1] === 2) {\n        message = \"matrix D in quadratic function is not positive definite!\";\n    }\n\n    return {\n        solution: base1to0(sol),\n        value: base1to0(crval),\n        unconstrained_solution: base1to0(dvec),\n        iterations: base1to0(iter),\n        iact: base1to0(iact),\n        message: message\n    };\n}\nexports.solveQP = solveQP;\n}(numeric));\n/*\r\nShanti Rao sent me this routine by private email. I had to modify it\r\nslightly to work on Arrays instead of using a Matrix object.\r\nIt is apparently translated from http://stitchpanorama.sourceforge.net/Python/svd.py\r\n*/\r\n\r\nnumeric.svd= function svd(A) {\r\n    var temp;\r\n//Compute the thin SVD from G. H. Golub and C. Reinsch, Numer. Math. 14, 403-420 (1970)\r\n\tvar prec= numeric.epsilon; //Math.pow(2,-52) // assumes double prec\r\n\tvar tolerance= 1.e-64/prec;\r\n\tvar itmax= 50;\r\n\tvar c=0;\r\n\tvar i=0;\r\n\tvar j=0;\r\n\tvar k=0;\r\n\tvar l=0;\r\n\t\r\n\tvar u= numeric.clone(A);\r\n\tvar m= u.length;\r\n\t\r\n\tvar n= u[0].length;\r\n\t\r\n\tif (m < n) throw \"Need more rows than columns\"\r\n\t\r\n\tvar e = new Array(n);\r\n\tvar q = new Array(n);\r\n\tfor (i=0; i<n; i++) e[i] = q[i] = 0.0;\r\n\tvar v = numeric.rep([n,n],0);\r\n//\tv.zero();\r\n\t\r\n \tfunction pythag(a,b)\r\n \t{\r\n\t\ta = Math.abs(a)\r\n\t\tb = Math.abs(b)\r\n\t\tif (a > b)\r\n\t\t\treturn a*Math.sqrt(1.0+(b*b/a/a))\r\n\t\telse if (b == 0.0) \r\n\t\t\treturn a\r\n\t\treturn b*Math.sqrt(1.0+(a*a/b/b))\r\n\t}\r\n\r\n\t//Householder's reduction to bidiagonal form\r\n\r\n\tvar f= 0.0;\r\n\tvar g= 0.0;\r\n\tvar h= 0.0;\r\n\tvar x= 0.0;\r\n\tvar y= 0.0;\r\n\tvar z= 0.0;\r\n\tvar s= 0.0;\r\n\t\r\n\tfor (i=0; i < n; i++)\r\n\t{\t\r\n\t\te[i]= g;\r\n\t\ts= 0.0;\r\n\t\tl= i+1;\r\n\t\tfor (j=i; j < m; j++) \r\n\t\t\ts += (u[j][i]*u[j][i]);\r\n\t\tif (s <= tolerance)\r\n\t\t\tg= 0.0;\r\n\t\telse\r\n\t\t{\t\r\n\t\t\tf= u[i][i];\r\n\t\t\tg= Math.sqrt(s);\r\n\t\t\tif (f >= 0.0) g= -g;\r\n\t\t\th= f*g-s\r\n\t\t\tu[i][i]=f-g;\r\n\t\t\tfor (j=l; j < n; j++)\r\n\t\t\t{\r\n\t\t\t\ts= 0.0\r\n\t\t\t\tfor (k=i; k < m; k++) \r\n\t\t\t\t\ts += u[k][i]*u[k][j]\r\n\t\t\t\tf= s/h\r\n\t\t\t\tfor (k=i; k < m; k++) \r\n\t\t\t\t\tu[k][j]+=f*u[k][i]\r\n\t\t\t}\r\n\t\t}\r\n\t\tq[i]= g\r\n\t\ts= 0.0\r\n\t\tfor (j=l; j < n; j++) \r\n\t\t\ts= s + u[i][j]*u[i][j]\r\n\t\tif (s <= tolerance)\r\n\t\t\tg= 0.0\r\n\t\telse\r\n\t\t{\t\r\n\t\t\tf= u[i][i+1]\r\n\t\t\tg= Math.sqrt(s)\r\n\t\t\tif (f >= 0.0) g= -g\r\n\t\t\th= f*g - s\r\n\t\t\tu[i][i+1] = f-g;\r\n\t\t\tfor (j=l; j < n; j++) e[j]= u[i][j]/h\r\n\t\t\tfor (j=l; j < m; j++)\r\n\t\t\t{\t\r\n\t\t\t\ts=0.0\r\n\t\t\t\tfor (k=l; k < n; k++) \r\n\t\t\t\t\ts += (u[j][k]*u[i][k])\r\n\t\t\t\tfor (k=l; k < n; k++) \r\n\t\t\t\t\tu[j][k]+=s*e[k]\r\n\t\t\t}\t\r\n\t\t}\r\n\t\ty= Math.abs(q[i])+Math.abs(e[i])\r\n\t\tif (y>x) \r\n\t\t\tx=y\r\n\t}\r\n\t\r\n\t// accumulation of right hand gtransformations\r\n\tfor (i=n-1; i != -1; i+= -1)\r\n\t{\t\r\n\t\tif (g != 0.0)\r\n\t\t{\r\n\t\t \th= g*u[i][i+1]\r\n\t\t\tfor (j=l; j < n; j++) \r\n\t\t\t\tv[j][i]=u[i][j]/h\r\n\t\t\tfor (j=l; j < n; j++)\r\n\t\t\t{\t\r\n\t\t\t\ts=0.0\r\n\t\t\t\tfor (k=l; k < n; k++) \r\n\t\t\t\t\ts += u[i][k]*v[k][j]\r\n\t\t\t\tfor (k=l; k < n; k++) \r\n\t\t\t\t\tv[k][j]+=(s*v[k][i])\r\n\t\t\t}\t\r\n\t\t}\r\n\t\tfor (j=l; j < n; j++)\r\n\t\t{\r\n\t\t\tv[i][j] = 0;\r\n\t\t\tv[j][i] = 0;\r\n\t\t}\r\n\t\tv[i][i] = 1;\r\n\t\tg= e[i]\r\n\t\tl= i\r\n\t}\r\n\t\r\n\t// accumulation of left hand transformations\r\n\tfor (i=n-1; i != -1; i+= -1)\r\n\t{\t\r\n\t\tl= i+1\r\n\t\tg= q[i]\r\n\t\tfor (j=l; j < n; j++) \r\n\t\t\tu[i][j] = 0;\r\n\t\tif (g != 0.0)\r\n\t\t{\r\n\t\t\th= u[i][i]*g\r\n\t\t\tfor (j=l; j < n; j++)\r\n\t\t\t{\r\n\t\t\t\ts=0.0\r\n\t\t\t\tfor (k=l; k < m; k++) s += u[k][i]*u[k][j];\r\n\t\t\t\tf= s/h\r\n\t\t\t\tfor (k=i; k < m; k++) u[k][j]+=f*u[k][i];\r\n\t\t\t}\r\n\t\t\tfor (j=i; j < m; j++) u[j][i] = u[j][i]/g;\r\n\t\t}\r\n\t\telse\r\n\t\t\tfor (j=i; j < m; j++) u[j][i] = 0;\r\n\t\tu[i][i] += 1;\r\n\t}\r\n\t\r\n\t// diagonalization of the bidiagonal form\r\n\tprec= prec*x\r\n\tfor (k=n-1; k != -1; k+= -1)\r\n\t{\r\n\t\tfor (var iteration=0; iteration < itmax; iteration++)\r\n\t\t{\t// test f splitting\r\n\t\t\tvar test_convergence = false\r\n\t\t\tfor (l=k; l != -1; l+= -1)\r\n\t\t\t{\t\r\n\t\t\t\tif (Math.abs(e[l]) <= prec)\r\n\t\t\t\t{\ttest_convergence= true\r\n\t\t\t\t\tbreak \r\n\t\t\t\t}\r\n\t\t\t\tif (Math.abs(q[l-1]) <= prec)\r\n\t\t\t\t\tbreak \r\n\t\t\t}\r\n\t\t\tif (!test_convergence)\r\n\t\t\t{\t// cancellation of e[l] if l>0\r\n\t\t\t\tc= 0.0\r\n\t\t\t\ts= 1.0\r\n\t\t\t\tvar l1= l-1\r\n\t\t\t\tfor (i =l; i<k+1; i++)\r\n\t\t\t\t{\t\r\n\t\t\t\t\tf= s*e[i]\r\n\t\t\t\t\te[i]= c*e[i]\r\n\t\t\t\t\tif (Math.abs(f) <= prec)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tg= q[i]\r\n\t\t\t\t\th= pythag(f,g)\r\n\t\t\t\t\tq[i]= h\r\n\t\t\t\t\tc= g/h\r\n\t\t\t\t\ts= -f/h\r\n\t\t\t\t\tfor (j=0; j < m; j++)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\ty= u[j][l1]\r\n\t\t\t\t\t\tz= u[j][i]\r\n\t\t\t\t\t\tu[j][l1] =  y*c+(z*s)\r\n\t\t\t\t\t\tu[j][i] = -y*s+(z*c)\r\n\t\t\t\t\t} \r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t\t// test f convergence\r\n\t\t\tz= q[k]\r\n\t\t\tif (l== k)\r\n\t\t\t{\t//convergence\r\n\t\t\t\tif (z<0.0)\r\n\t\t\t\t{\t//q[k] is made non-negative\r\n\t\t\t\t\tq[k]= -z\r\n\t\t\t\t\tfor (j=0; j < n; j++)\r\n\t\t\t\t\t\tv[j][k] = -v[j][k]\r\n\t\t\t\t}\r\n\t\t\t\tbreak  //break out of iteration loop and move on to next k value\r\n\t\t\t}\r\n\t\t\tif (iteration >= itmax-1)\r\n\t\t\t\tthrow 'Error: no convergence.'\r\n\t\t\t// shift from bottom 2x2 minor\r\n\t\t\tx= q[l]\r\n\t\t\ty= q[k-1]\r\n\t\t\tg= e[k-1]\r\n\t\t\th= e[k]\r\n\t\t\tf= ((y-z)*(y+z)+(g-h)*(g+h))/(2.0*h*y)\r\n\t\t\tg= pythag(f,1.0)\r\n\t\t\tif (f < 0.0)\r\n\t\t\t\tf= ((x-z)*(x+z)+h*(y/(f-g)-h))/x\r\n\t\t\telse\r\n\t\t\t\tf= ((x-z)*(x+z)+h*(y/(f+g)-h))/x\r\n\t\t\t// next QR transformation\r\n\t\t\tc= 1.0\r\n\t\t\ts= 1.0\r\n\t\t\tfor (i=l+1; i< k+1; i++)\r\n\t\t\t{\t\r\n\t\t\t\tg= e[i]\r\n\t\t\t\ty= q[i]\r\n\t\t\t\th= s*g\r\n\t\t\t\tg= c*g\r\n\t\t\t\tz= pythag(f,h)\r\n\t\t\t\te[i-1]= z\r\n\t\t\t\tc= f/z\r\n\t\t\t\ts= h/z\r\n\t\t\t\tf= x*c+g*s\r\n\t\t\t\tg= -x*s+g*c\r\n\t\t\t\th= y*s\r\n\t\t\t\ty= y*c\r\n\t\t\t\tfor (j=0; j < n; j++)\r\n\t\t\t\t{\t\r\n\t\t\t\t\tx= v[j][i-1]\r\n\t\t\t\t\tz= v[j][i]\r\n\t\t\t\t\tv[j][i-1] = x*c+z*s\r\n\t\t\t\t\tv[j][i] = -x*s+z*c\r\n\t\t\t\t}\r\n\t\t\t\tz= pythag(f,h)\r\n\t\t\t\tq[i-1]= z\r\n\t\t\t\tc= f/z\r\n\t\t\t\ts= h/z\r\n\t\t\t\tf= c*g+s*y\r\n\t\t\t\tx= -s*g+c*y\r\n\t\t\t\tfor (j=0; j < m; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\ty= u[j][i-1]\r\n\t\t\t\t\tz= u[j][i]\r\n\t\t\t\t\tu[j][i-1] = y*c+z*s\r\n\t\t\t\t\tu[j][i] = -y*s+z*c\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\te[l]= 0.0\r\n\t\t\te[k]= f\r\n\t\t\tq[k]= x\r\n\t\t} \r\n\t}\r\n\t\t\r\n\t//vt= transpose(v)\r\n\t//return (u,q,vt)\r\n\tfor (i=0;i<q.length; i++) \r\n\t  if (q[i] < prec) q[i] = 0\r\n\t  \r\n\t//sort eigenvalues\t\r\n\tfor (i=0; i< n; i++)\r\n\t{\t \r\n\t//writeln(q)\r\n\t for (j=i-1; j >= 0; j--)\r\n\t {\r\n\t  if (q[j] < q[i])\r\n\t  {\r\n\t//  writeln(i,'-',j)\r\n\t   c = q[j]\r\n\t   q[j] = q[i]\r\n\t   q[i] = c\r\n\t   for(k=0;k<u.length;k++) { temp = u[k][i]; u[k][i] = u[k][j]; u[k][j] = temp; }\r\n\t   for(k=0;k<v.length;k++) { temp = v[k][i]; v[k][i] = v[k][j]; v[k][j] = temp; }\r\n//\t   u.swapCols(i,j)\r\n//\t   v.swapCols(i,j)\r\n\t   i = j\t   \r\n\t  }\r\n\t }\t\r\n\t}\r\n\t\r\n\treturn {U:u,S:q,V:v}\r\n};\r\n\r\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","\nvar mvtdstpack = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(mvtdstpack) {\n  mvtdstpack = mvtdstpack || {};\n\nvar Module=typeof mvtdstpack!==\"undefined\"?mvtdstpack:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}Module[\"arguments\"]=[];Module[\"thisProgram\"]=\"./this.program\";Module[\"quit\"]=function(status,toThrow){throw toThrow};Module[\"preRun\"]=[];Module[\"postRun\"]=[];var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof require===\"function\"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}else{return scriptDirectory+path}}if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+\"/\";var nodeFS;var nodePath;Module[\"read\"]=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);ret=nodeFS[\"readFileSync\"](filename);return binary?ret:ret.toString()};Module[\"readBinary\"]=function readBinary(filename){var ret=Module[\"read\"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){Module[\"thisProgram\"]=process[\"argv\"][1].replace(/\\\\/g,\"/\")}Module[\"arguments\"]=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);Module[\"quit\"]=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){Module[\"read\"]=function shell_read(f){return read(f)}}Module[\"readBinary\"]=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){Module[\"arguments\"]=scriptArgs}else if(typeof arguments!=\"undefined\"){Module[\"arguments\"]=arguments}if(typeof quit===\"function\"){Module[\"quit\"]=function(status){quit(status)}}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}Module[\"read\"]=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module[\"readBinary\"]=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}Module[\"readAsync\"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};Module[\"setWindowTitle\"]=function(title){document.title=title}}else{}var out=Module[\"print\"]||(typeof console!==\"undefined\"?console.log.bind(console):typeof print!==\"undefined\"?print:null);var err=Module[\"printErr\"]||(typeof printErr!==\"undefined\"?printErr:typeof console!==\"undefined\"&&console.warn.bind(console)||out);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var asm2wasmImports={\"f64-rem\":function(x,y){return x%y},\"debugger\":function(){debugger}};var functionPointers=new Array(0);var tempRet0=0;var setTempRet0=function(value){tempRet0=value};if(typeof WebAssembly!==\"object\"){err(\"no native wasm support detected\")}var wasmMemory;var wasmTable;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(u8Array[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=u8Array[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|u8Array[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var WASM_PAGE_SIZE=65536;var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferViews(){Module[\"HEAP8\"]=HEAP8=new Int8Array(buffer);Module[\"HEAP16\"]=HEAP16=new Int16Array(buffer);Module[\"HEAP32\"]=HEAP32=new Int32Array(buffer);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buffer);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buffer);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buffer);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buffer);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buffer)}var DYNAMIC_BASE=9531216,DYNAMICTOP_PTR=4288304;var TOTAL_STACK=5242880;var INITIAL_TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;if(INITIAL_TOTAL_MEMORY<TOTAL_STACK)err(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \"+INITIAL_TOTAL_MEMORY+\"! (TOTAL_STACK=\"+TOTAL_STACK+\")\");if(Module[\"buffer\"]){buffer=Module[\"buffer\"]}else{if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Memory===\"function\"){wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_TOTAL_MEMORY/WASM_PAGE_SIZE,\"maximum\":INITIAL_TOTAL_MEMORY/WASM_PAGE_SIZE});buffer=wasmMemory.buffer}else{buffer=new ArrayBuffer(INITIAL_TOTAL_MEMORY)}}updateGlobalBufferViews();HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}var wasmBinaryFile=\"mvtdstpack.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(){try{if(Module[\"wasmBinary\"]){return new Uint8Array(Module[\"wasmBinary\"])}if(Module[\"readBinary\"]){return Module[\"readBinary\"](wasmBinaryFile)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!Module[\"wasmBinary\"]&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary()})}return new Promise(function(resolve,reject){resolve(getBinary())})}function createWasm(env){var info={\"env\":env,\"global\":{\"NaN\":NaN,Infinity:Infinity},\"global.Math\":Math,\"asm2wasm\":asm2wasmImports};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"])}function instantiateArrayBuffer(receiver){getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}if(!Module[\"wasmBinary\"]&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){WebAssembly.instantiateStreaming(fetch(wasmBinaryFile,{credentials:\"same-origin\"}),info).then(receiveInstantiatedSource,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");instantiateArrayBuffer(receiveInstantiatedSource)})}else{instantiateArrayBuffer(receiveInstantiatedSource)}return{}}Module[\"asm\"]=function(global,env,providedBuffer){env[\"memory\"]=wasmMemory;env[\"table\"]=wasmTable=new WebAssembly.Table({\"initial\":110,\"maximum\":110,\"element\":\"anyfunc\"});env[\"__memory_base\"]=1024;env[\"__table_base\"]=0;var exports=createWasm(env);return exports};__ATINIT__.push({func:function(){globalCtors()}});function ___cxa_allocate_exception(size){return _malloc(size)}function __ZSt18uncaught_exceptionv(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}function ___cxa_free_exception(ptr){try{return _free(ptr)}catch(e){}}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var key in EXCEPTIONS.infos){var ptr=+key;var adj=EXCEPTIONS.infos[ptr].adjusted;var len=adj.length;for(var i=0;i<len;i++){if(adj[i]===adjusted){return ptr}}}return adjusted},addRef:function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++},decRef:function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0&&!info.rethrown){if(info.destructor){Module[\"dynCall_vi\"](info.destructor,ptr)}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}},clearRef:function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0}};function ___cxa_throw(ptr,type,destructor){EXCEPTIONS.infos[ptr]={ptr:ptr,adjusted:[ptr],type:type,destructor:destructor,refcount:0,caught:false,rethrown:false};EXCEPTIONS.last=ptr;if(!(\"uncaught_exception\"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exception=1}else{__ZSt18uncaught_exceptionv.uncaught_exception++}throw ptr}var SYSCALLS={buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:0,get:function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(){var ret=UTF8ToString(SYSCALLS.get());return ret},get64:function(){var low=SYSCALLS.get(),high=SYSCALLS.get();return low},getZero:function(){SYSCALLS.get()}};function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.get(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(stream,HEAPU8[ptr+j])}ret+=len}return ret}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}var structRegistrations={};function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach(function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function __embind_finalize_value_object(structType){var reg=structRegistrations[structType];delete structRegistrations[structType];var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;var fieldRecords=reg.fields;var fieldTypes=fieldRecords.map(function(field){return field.getterReturnType}).concat(fieldRecords.map(function(field){return field.setterArgumentType}));whenDependentTypesAreResolved([structType],fieldTypes,function(fieldTypes){var fields={};fieldRecords.forEach(function(field,i){var fieldName=field.fieldName;var getterReturnType=fieldTypes[i];var getter=field.getter;var getterContext=field.getterContext;var setterArgumentType=fieldTypes[i+fieldRecords.length];var setter=field.setter;var setterContext=field.setterContext;fields[fieldName]={read:function(ptr){return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},write:function(ptr,o){var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)}}});return[{name:reg.name,\"fromWireType\":function(ptr){var rv={};for(var i in fields){rv[i]=fields[i].read(ptr)}rawDestructor(ptr);return rv},\"toWireType\":function(destructors,o){for(var fieldName in fields){if(!(fieldName in o)){throw new TypeError(\"Missing field\")}}var ptr=rawConstructor();for(fieldName in fields){fields[fieldName].write(ptr,o[fieldName])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}]})}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}function registerType(rawType,registeredInstance,options){options=options||{};if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(function(cb){cb()})}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}});clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function runDestructor(handle){var $$=handle.$$;if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}this.$$.count.value-=1;var toDelete=0===this.$$.count.value;if(toDelete){runDestructor(this)}if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}var delayFunction=undefined;var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}var registeredPointers={};function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,__emval_register(function(){clonedHandle[\"delete\"]()}));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return Object.create(prototype,{$$:{value:record}})}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(dynCall){var args=[];for(var i=1;i<signature.length;++i){args.push(\"a\"+i)}var name=\"dynCall_\"+signature+\"_\"+rawFunction;var body=\"return function \"+name+\"(\"+args.join(\", \")+\") {\\n\";body+=\"    return dynCall(rawFunction\"+(args.length?\", \":\"\")+args.join(\", \")+\");\\n\";body+=\"};\\n\";return new Function(\"dynCall\",\"rawFunction\",body)(dynCall,rawFunction)}var fp;if(Module[\"FUNCTION_TABLE_\"+signature]!==undefined){fp=Module[\"FUNCTION_TABLE_\"+signature][rawFunction]}else if(typeof FUNCTION_TABLE!==\"undefined\"){fp=FUNCTION_TABLE[rawFunction]}else{var dc=Module[\"dynCall_\"+signature];if(dc===undefined){dc=Module[\"dynCall_\"+signature.replace(/f/g,\"d\")];if(dc===undefined){throwBindingError(\"No dynCall invoker for signature: \"+signature)}}fp=makeDynCaller(dc)}if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=function unboundTypeHandler(){throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){classType.registeredClass.constructor_body[argCount-1]=function constructor_body(){if(arguments.length!==argCount-1){throwBindingError(humanName+\" called with \"+arguments.length+\" arguments, expected \"+(argCount-1))}var destructors=[];var args=new Array(argCount);args[0]=rawConstructor;for(var i=1;i<argCount;++i){args[i]=argTypes[i][\"toWireType\"](destructors,arguments[i-1])}var ptr=invoker.apply(null,args);runDestructors(destructors);return argTypes[0][\"fromWireType\"](ptr)};return[]});return[]})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}function __emval_register(value){switch(value){case undefined:{return 1}case null:{return 2}case true:{return 3}case false:{return 4}default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=emval_handle_array[handle].value;__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return __emval_register(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=function(value){return value};if(minRange===0){var bitshift=32-8*size;fromWireType=function(value){return value<<bitshift>>>bitshift}}var isUnsignedType=name.indexOf(\"unsigned\")!=-1;registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}if(value<minRange||value>maxRange){throw new TypeError('Passing a number \"'+_embind_repr(value)+'\" from JS side to C/C++ side to an argument of type \"'+name+'\", which is outside the valid range ['+minRange+\", \"+maxRange+\"]!\")}return isUnsignedType?value>>>0:value|0},\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(heap[\"buffer\"],data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var endChar=HEAPU8[value+4+length];var endCharSwap=0;if(endChar!=0){endCharSwap=endChar;HEAPU8[value+4+length]=0}var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(HEAPU8[currentBytePtr]==0){var stringSegment=UTF8ToString(decodeStartPtr);if(str===undefined)str=stringSegment;else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}if(endCharSwap!=0)HEAPU8[value+4+length]=endCharSwap}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=function(){return lengthBytesUTF8(value)}}else{getLength=function(){return value.length}}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var getHeap,shift;if(charSize===2){getHeap=function(){return HEAPU16};shift=1}else if(charSize===4){getHeap=function(){return HEAPU32};shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var HEAP=getHeap();var length=HEAPU32[value>>2];var a=new Array(length);var start=value+4>>shift;for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAP[start+i])}_free(value);return a.join(\"\")},\"toWireType\":function(destructors,value){var HEAP=getHeap();var length=value.length;var ptr=_malloc(4+length*charSize);HEAPU32[ptr>>2]=length;var start=ptr+4>>shift;for(var i=0;i<length;++i){HEAP[start+i]=value.charCodeAt(i)}if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){structRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){structRegistrations[structType].fields.push({fieldName:readLatin1String(fieldName),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __emval_take_value(type,argv){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](argv);return __emval_register(v)}function _abort(){Module[\"abort\"]()}function _emscripten_get_heap_size(){return HEAP8.length}function abortOnCannotGrowMemory(requestedSize){abort(\"OOM\")}function _emscripten_resize_heap(requestedSize){abortOnCannotGrowMemory(requestedSize)}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest)}function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;return value}InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");init_ClassHandle();init_RegisteredPointer();init_embind();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();var asmGlobalArg={};var asmLibraryArg={\"b\":abort,\"u\":setTempRet0,\"p\":___cxa_allocate_exception,\"l\":___cxa_throw,\"i\":___setErrNo,\"t\":___syscall140,\"h\":___syscall146,\"s\":___syscall6,\"r\":__embind_finalize_value_object,\"q\":__embind_register_bool,\"g\":__embind_register_class,\"o\":__embind_register_class_constructor,\"d\":__embind_register_class_function,\"F\":__embind_register_emval,\"n\":__embind_register_float,\"E\":__embind_register_function,\"e\":__embind_register_integer,\"c\":__embind_register_memory_view,\"m\":__embind_register_std_string,\"D\":__embind_register_std_wstring,\"C\":__embind_register_value_object,\"k\":__embind_register_value_object_field,\"B\":__embind_register_void,\"A\":__emval_decref,\"z\":__emval_incref,\"j\":__emval_take_value,\"f\":_abort,\"y\":_emscripten_get_heap_size,\"x\":_emscripten_memcpy_big,\"w\":_emscripten_resize_heap,\"v\":abortOnCannotGrowMemory,\"a\":DYNAMICTOP_PTR};var asm=Module[\"asm\"](asmGlobalArg,asmLibraryArg,buffer);Module[\"asm\"]=asm;var ___errno_location=Module[\"___errno_location\"]=function(){return Module[\"asm\"][\"G\"].apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return Module[\"asm\"][\"H\"].apply(null,arguments)};var _free=Module[\"_free\"]=function(){return Module[\"asm\"][\"I\"].apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return Module[\"asm\"][\"J\"].apply(null,arguments)};var globalCtors=Module[\"globalCtors\"]=function(){return Module[\"asm\"][\"ca\"].apply(null,arguments)};var dynCall_dii=Module[\"dynCall_dii\"]=function(){return Module[\"asm\"][\"K\"].apply(null,arguments)};var dynCall_i=Module[\"dynCall_i\"]=function(){return Module[\"asm\"][\"L\"].apply(null,arguments)};var dynCall_ii=Module[\"dynCall_ii\"]=function(){return Module[\"asm\"][\"M\"].apply(null,arguments)};var dynCall_iidiiii=Module[\"dynCall_iidiiii\"]=function(){return Module[\"asm\"][\"N\"].apply(null,arguments)};var dynCall_iii=Module[\"dynCall_iii\"]=function(){return Module[\"asm\"][\"O\"].apply(null,arguments)};var dynCall_iiii=Module[\"dynCall_iiii\"]=function(){return Module[\"asm\"][\"P\"].apply(null,arguments)};var dynCall_iiiid=Module[\"dynCall_iiiid\"]=function(){return Module[\"asm\"][\"Q\"].apply(null,arguments)};var dynCall_iiiii=Module[\"dynCall_iiiii\"]=function(){return Module[\"asm\"][\"R\"].apply(null,arguments)};var dynCall_iiiiiiiiiidd=Module[\"dynCall_iiiiiiiiiidd\"]=function(){return Module[\"asm\"][\"S\"].apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return Module[\"asm\"][\"T\"].apply(null,arguments)};var dynCall_v=Module[\"dynCall_v\"]=function(){return Module[\"asm\"][\"U\"].apply(null,arguments)};var dynCall_vi=Module[\"dynCall_vi\"]=function(){return Module[\"asm\"][\"V\"].apply(null,arguments)};var dynCall_vii=Module[\"dynCall_vii\"]=function(){return Module[\"asm\"][\"W\"].apply(null,arguments)};var dynCall_viid=Module[\"dynCall_viid\"]=function(){return Module[\"asm\"][\"X\"].apply(null,arguments)};var dynCall_viii=Module[\"dynCall_viii\"]=function(){return Module[\"asm\"][\"Y\"].apply(null,arguments)};var dynCall_viiid=Module[\"dynCall_viiid\"]=function(){return Module[\"asm\"][\"Z\"].apply(null,arguments)};var dynCall_viiii=Module[\"dynCall_viiii\"]=function(){return Module[\"asm\"][\"_\"].apply(null,arguments)};var dynCall_viiiii=Module[\"dynCall_viiiii\"]=function(){return Module[\"asm\"][\"$\"].apply(null,arguments)};var dynCall_viiiiii=Module[\"dynCall_viiiiii\"]=function(){return Module[\"asm\"][\"aa\"].apply(null,arguments)};var dynCall_viiiiiiiiidd=Module[\"dynCall_viiiiiiiiidd\"]=function(){return Module[\"asm\"][\"ba\"].apply(null,arguments)};Module[\"asm\"]=asm;Module[\"then\"]=function(func){if(Module[\"calledRun\"]){func(Module)}else{var old=Module[\"onRuntimeInitialized\"];Module[\"onRuntimeInitialized\"]=function(){if(old)old();func(Module)}}return Module};function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;dependenciesFulfilled=function runCaller(){if(!Module[\"calledRun\"])run();if(!Module[\"calledRun\"])dependenciesFulfilled=runCaller};function run(args){args=args||Module[\"arguments\"];if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module[\"calledRun\"])return;function doRun(){if(Module[\"calledRun\"])return;Module[\"calledRun\"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}if(what!==undefined){out(what);err(what);what=JSON.stringify(what)}else{what=\"\"}ABORT=true;EXITSTATUS=1;throw\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\"}Module[\"abort\"]=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}Module[\"noExitRuntime\"]=true;run();\n\n\n  return mvtdstpack\n}\n);\n})();\nexport default mvtdstpack;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","const REGEX_EPACTS = new RegExp(\"(?:chr)?(.+):(\\\\d+)_?(\\\\w+)?/?([^_]+)?_?(.*)?\");\nconst REGEX_REGION = new RegExp(\"(?:chr)?(.+):(\\\\d+)-(\\\\d+)\");\nexport { REGEX_EPACTS, REGEX_REGION };\n","import numeric from 'numeric';\n\n/**\n * Return the cholesky decomposition A = GG'. The matrix G is returned.\n * @param A\n * @return {*}\n */\nexport function cholesky(A) {\n  const n = A.length;\n  const G = numeric.rep([n, n], 0);\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j <= i; j++) {\n      let s = A[j][i];\n      for (let k = 0; k <= j-1; k++) {\n        s = s - G[j][k] * G[i][k];\n      }\n      if (j < i) {\n        G[i][j] = s / G[j][j];\n      }\n      else {\n        G[i][i] = Math.sqrt(s);\n      }\n    }\n  }\n  return G;\n}","/**\n * A port of Robert Davies' method for computing the distribution\n * of a linear combination of chi-squared random variables.\n *\n * <p>\n *\n * Publication: \n * {@link https://www.jstor.org/stable/2346911|The distribution of a linear combination of chi‐squared random variables. Applied Statistics 29 323‐333.}\n *\n * <p>\n *\n * Original C code:\n * {@link http://www.robertnz.net/QF.htm}\n *\n * @module qfc\n * @license MIT\n */\n\nconst pi = Math.PI;\nconst log28 = 0.0866;\n\nlet count = 0;\nlet sigsq, lmax, lmin, mean, c,\n  intl, ersm, r, lim, ndtsrt,\n  fail, n, th, lb, nc;\n\nfunction exp1(x) {\n  return x < -50.0 ? 0.0 : Math.exp(x);\n}\n\nfunction counter() {\n  count += 1;\n  if (count > lim) {\n    throw new RangeError(\"Exceeded limit of \" + lim + \" calls\");\n  }\n}\n\nfunction square(x) { return x * x }\n\nfunction cube(x) { return x * x * x }\n\nfunction log1(x,first) {\n  if (Math.abs(x) > 0.1) {\n    return (first ? Math.log(1.0 + x) : (Math.log(1.0 + x) - x));\n  }\n  else {\n    let s, s1, term, y, k;\n    y = x / (2.0 + x);\n    term = 2.0 * cube(y);\n    k = 3.0;\n    s = (first ? 2.0 : -x) * y;\n    y = square(y);\n    for (s1 = s + term / k; s1 !== s; s1 = s + term / k) {\n      k = k + 2.0;\n      term = term * y;\n      s = s1;\n    }\n    return s;\n  }\n}\n\nfunction order() {\n  let j, k;\n  outer:\n  for (let j = 0; j < r; j++) {\n    let lj = Math.abs(lb[j]);\n    for (let k = j - 1; k >= 0; k--) {\n      if (lj > Math.abs(lb[th[k]])) {\n        th[k + 1] = th[k];\n      }\n      else {\n        th[k + 1] = j;\n        continue outer;\n      }\n    }\n    k = -1;\n    th[k + 1] = j;\n  }\n  ndtsrt = false;\n}\n\nfunction errbd(u) {\n  let sum1, lj, ncj, x, y, xconst, j, nj;\n  counter();\n  xconst = u * sigsq;\n  sum1 = u * xconst;\n  u = 2.0 * u;\n  for (j = r - 1; j >= 0; j--) {\n    nj = n[j];\n    lj = lb[j];\n    ncj = nc[j];\n    x = u * lj;\n    y = 1.0 - x;\n    xconst = xconst + lj * (ncj / y + nj) / y;\n    sum1 = sum1 + ncj * square(x / y) + nj * (square(x) / y + log1(-x,false));\n  }\n  return [exp1(-0.5 * sum1), xconst]\n}\n\nfunction ctff(accx, u2) {\n  let u1, u, rb, xconst, c1, c2, rerr;\n  u1 = 0.0;\n  c1 = mean;\n  rb = 2.0 * ((u2 > 0.0) ? lmax : lmin);\n\n  function calc_err(u) {\n    [rerr, c2] = errbd(u);\n    return rerr;\n  }\n\n  for (u = u2 / (1.0 + u2 * rb); calc_err(u) > accx; u = u2 / (1.0 + u2 * rb)) {\n    u1 = u2;\n    c1 = c2;\n    u2 = 2.0 * u2;\n  }\n\n  for (u = (c1 - mean) / (c2 - mean); u < 0.9; u = (c1 - mean) / (c2 - mean)) {\n    u = (u1 + u2) / 2.0;\n    [rerr, xconst] = errbd(u / (1.0 + u * rb))\n    if (rerr > accx) {\n      u1 = u;\n      c1 = xconst;\n    }\n    else {\n      u2 = u;\n      c2 = xconst;\n    }\n  }\n  return [c2, u2];\n}\n\nfunction truncation(u, tausq) {\n  let sum1, sum2, prod1, prod2, prod3, lj, ncj, x, y, err1, err2;\n  let j, nj, s;\n  counter();\n  sum1 = 0.0;\n  prod2 = 0.0;\n  prod3 = 0.0;\n  s = 0;\n  sum2 = (sigsq + tausq) * square(u);\n  prod1 = 2.0 * sum2;\n  u = 2.0 * u;\n  for (j = 0; j < r; j++) {\n    lj = lb[j];\n    ncj = nc[j];\n    nj = n[j];\n    x = square(u * lj);\n    sum1 = sum1 + ncj * x / (1.0 + x);\n    if (x > 1.0) {\n      prod2 = prod2 + nj * Math.log(x);\n      prod3 = prod3 + nj * log1(x,true);\n      s = s + nj;\n    }\n    else {\n      prod1 = prod1 + nj * log1(x,true);\n    }\n  }\n  sum1 = 0.5 * sum1;\n  prod2 = prod1 + prod2;\n  prod3 = prod1 + prod3;\n  x = exp1(-sum1 - 0.25 * prod2) / pi;\n  y = exp1(-sum1 - 0.25 * prod3) / pi;\n  err1 = (s == 0) ? 1.0 : x * 2.0 / s;\n  err2 = (prod3 > 1.0) ? 2.5 * y : 1.0;\n  if (err2 < err1) { err1 = err2; }\n  x = 0.5 * sum2;\n  err2 = (x <= y) ? 1.0 : y / x;\n  return (err1 < err2) ? err1 : err2;\n}\n\nfunction findu(ut, accx) {\n  let u, i;\n  let divis = [2.0, 1.4, 1.2, 1.1];\n  u = ut / 4.0;\n  if (truncation(u, 0.0) > accx) {\n    for (u = ut; truncation(u, 0.0) > accx; u = ut) { ut = ut * 4.0 }\n  }\n  else {\n    ut = u;\n    for (u = u / 4.0; truncation(u, 0.0) <= accx; u = u / 4.0) { ut = u; }\n  }\n  for (i = 0; i < 4; i++) {\n    u = ut / divis[i];\n    if (truncation(u, 0.0) <= accx) { ut = u; }\n  }\n  return ut;\n}\n\nfunction integrate(nterm, interv, tausq, mainx) {\n  let inpi, u, sum1, sum2, sum3, x, y, z;\n  let k, j, nj;\n  inpi = interv / pi;\n  for (k = nterm; k >= 0; k--) {\n    u = (k + 0.5) * interv;\n    sum1 = -2.0 * u * c;\n    sum2 = Math.abs(sum1);\n    sum3 = -0.5 * sigsq * square(u);\n    for (j = r - 1; j >= 0; j--) {\n      nj = n[j];\n      x = 2.0 * lb[j] * u;\n      y = square(x);\n      sum3 = sum3 - 0.25 * nj * log1(y, true);\n      y = nc[j] * x / (1.0 + y);\n      z = nj * Math.atan(x) + y;\n      sum1 = sum1 + z;\n      sum2 = sum2 + Math.abs(z);\n      sum3 = sum3 - 0.5 * x * y;\n    }\n    x = inpi * exp1(sum3) / u;\n    if (!mainx) { x = x * (1.0 - exp1(-0.5 * tausq * square(u))) }\n    sum1 = Math.sin(0.5 * sum1) * x;\n    sum2 = 0.5 * sum2 * x;\n    intl = intl + sum1;\n    ersm = ersm + sum2;\n  }\n}\n\nfunction cfe(x) {\n  let axl, axl1, axl2, sxl, sum1, lj;\n  let j, k, t;\n  counter();\n  if (ndtsrt) order();\n  axl = Math.abs(x);\n  sxl = (x > 0.0) ? 1.0 : -1.0;\n  sum1 = 0.0;\n  for (j = r - 1; j >= 0; j--) {\n    t = th[j];\n    if (lb[t] * sxl > 0.0) {\n      lj = Math.abs(lb[t]);\n      axl1 = axl - lj * (n[t] + nc[t]);\n      axl2 = lj / log28;\n      if (axl1 > axl2) {\n        axl = axl1;\n      }\n      else {\n        if (axl1 > axl2) axl = axl2;\n        sum1 = (axl - axl1) / lj;\n        for (k = j - 1; k >= 0; k--) sum1 = sum1 + (n[th[k]] + nc[th[k]]);\n        break;\n      }\n    }\n  }\n  if (sum1 > 100.0) {\n    fail = true;\n    return 1.0;\n  }\n  else {\n    return Math.pow(2.0,(sum1 / 4.0)) / (pi * square(axl));\n  }\n}\n\n/**\n * Mixture chi-square distribution function. <p>\n *\n * This is the cumulative distribution for a linear mixture of chi-squared random variables, each having\n * its own degrees of freedom and non-centrality parameter: <p>\n *\n * c1 = sum(lb1[j] * x_j) + sigma * X0, where each x_j is non-central chi-squared, and X0 is a standard normal variable.\n *\n * @param lb1 {number[]} Coefficient of each chi-squared variable.\n * @param nc1 {number[]} Non-centrality parameter for each chi-squared variable x_j.\n * @param n1 {number[]} Degrees of freedom for each chi-squared variable x_j.\n * @param r1 {number} Number of chi-squared variables.\n * @param sigma {number} Coefficient of standard normal variable.\n * @param c1 {number[]} Mixture chi-squared statistic value (point at which function should be evaluated).\n * @param lim1 {number} Maximum number of terms in integrations.\n * @param acc {number} Maximum error.\n * @return {number} Cumulative lower-tail probability.\n */\nfunction qf(lb1, nc1, n1, r1, sigma, c1, lim1, acc)  {\n\n/*  distribution function of a linear combination of non-central\n    chi-squared random variables :\n\n    input:\n    lb[j]            coefficient of j-th chi-squared variable\n    nc[j]            non-centrality parameter\n    n[j]             degrees of freedom\n    j = 0, 2 ... r-1\n    sigma            coefficient of standard normal variable\n    c                point at which df is to be evaluated\n    lim              maximum number of terms in integration\n    acc              maximum error\n\n    output:\n    ifault = 1       required accuracy NOT achieved\n    2       round-off error possibly significant\n    3       invalid parameters\n    4       unable to locate integration parameters\n    5       out of memory\n\n    trace[0]         absolute sum\n    trace[1]         total number of integration terms\n    trace[2]         number of integrations\n    trace[3]         integration interval in final integration\n    trace[4]         truncation point in initial integration\n    trace[5]         s.d. of initial convergence factor\n    trace[6]         cycles to locate integration parameters     */\n\n  let j, nj, nt, ntm;\n  let acc1, almx, xlim, xnt, xntm;\n  let utx, tausq, sd, intv, intv1, x, up, un, d1, d2, lj, ncj;\n  let qfval, ifault;\n  let trace = new Array(7).fill(0.0);\n  let rats = [1, 2, 4, 8];\n\n  function done() {\n    trace[6] = count;\n    return [qfval, ifault, trace];\n  }\n\n  count = 0;\n  r = r1;\n  lim = lim1;\n  c = c1;\n  n = n1;\n  lb = lb1;\n  nc = nc1;\n  ifault = 0;\n  intl = 0.0;\n  ersm = 0.0;\n  qfval = -1.0;\n  acc1 = acc;\n  ndtsrt = true;\n  fail = false;\n  xlim = lim;\n  th = new Array(r).fill(NaN);\n\n  /* find mean, sd, max and min of lb,\n     check that parameter values are valid */\n  sigsq = square(sigma);\n  sd = sigsq;\n  lmax = 0.0;\n  lmin = 0.0;\n  mean = 0.0;\n  for (j = 0; j < r; j++) {\n    nj = n[j];\n    lj = lb[j];\n    ncj = nc[j];\n    if (nj < 0 || ncj < 0.0) {\n      ifault = 3;\n      return done();\n    }\n    sd = sd + square(lj) * (2 * nj + 4.0 * ncj);\n    mean = mean + lj * (nj + ncj);\n    if (lmax < lj)\n      lmax = lj;\n    else if (lmin > lj)\n      lmin = lj;\n  }\n  if (sd == 0.0) {\n    qfval = (c > 0.0) ? 1.0 : 0.0;\n    return done();\n  }\n  if (lmin == 0.0 && lmax == 0.0 && sigma == 0.0) {\n    ifault = 3;\n    return done();\n  }\n  sd = Math.sqrt(sd);\n  almx = (lmax < -lmin) ? -lmin : lmax;\n\n  /* starting values for findu, ctff */\n  utx = 16.0 / sd;\n  up = 4.5 / sd;\n  un = -up;\n\n  try {\n    /* truncation point with no convergence factor */\n    utx = findu(utx, 0.5 * acc1);\n\n    /* does convergence factor help */\n    if (c != 0.0 && (almx > 0.07 * sd)) {\n      tausq = .25 * acc1 / cfe(c);\n      if (fail)\n        fail = false;\n      else if (truncation(utx, tausq) < .2 * acc1) {\n        sigsq = sigsq + tausq;\n        utx = findu(utx, 0.25 * acc1);\n        trace[5] = Math.sqrt(tausq);\n      }\n    }\n    trace[4] = utx;\n    acc1 = 0.5 * acc1;\n\n    /* find RANGE of distribution, quit if outside this */\n    let ctffx;\n\n    function l1() {\n      [ctffx, up] = ctff(acc1, up);\n      d1 = ctffx - c;\n      if (d1 < 0.0) {\n        qfval = 1.0;\n        return done();\n      }\n      [ctffx, un] = ctff(acc1, un);\n      d2 = c - ctffx;\n      if (d2 < 0.0) {\n        qfval = 0.0;\n        return done();\n      }\n\n      /* find integration interval */\n      intv = 2.0 * pi / ((d1 > d2) ? d1 : d2);\n\n      /* calculate number of terms required for main and\n         auxillary integrations */\n      xnt = utx / intv;\n      xntm = 3.0 / Math.sqrt(acc1);\n      if (xnt > xntm * 1.5) {\n        /* parameters for auxillary integration */\n        if (xntm > xlim) {\n          ifault = 1;\n          return done();\n        }\n        ntm = Math.floor(xntm + 0.5);\n        intv1 = utx / ntm;\n        x = 2.0 * pi / intv1;\n        if (x <= Math.abs(c)) return l2();\n\n        /* calculate convergence factor */\n        tausq = .33 * acc1 / (1.1 * (cfe(c - x) + cfe(c + x)));\n        if (fail) return l2();\n        acc1 = .67 * acc1;\n\n        /* auxillary integration */\n        integrate(ntm, intv1, tausq, false);\n        xlim = xlim - xntm;\n        sigsq = sigsq + tausq;\n        trace[2] = trace[2] + 1;\n        trace[1] = trace[1] + ntm + 1;\n\n        /* find truncation point with new convergence factor */\n        utx = findu(utx, .25 * acc1);\n        acc1 = 0.75 * acc1;\n        return l1();\n      }\n\n      return l2();\n    }\n\n    /* main integration */\n    function l2() {\n      trace[3] = intv;\n      if (xnt > xlim) {\n        ifault = 1;\n        return done();\n      }\n      nt = Math.floor(xnt + 0.5);\n      integrate(nt, intv, 0.0, true);\n      trace[2] = trace[2] + 1;\n      trace[1] = trace[1] + nt + 1;\n      qfval = 0.5 - intl;\n      trace[0] = ersm;\n\n      /* test whether round-off error could be significant\n         allow for radix 8 or 16 machines */\n      up = ersm;\n      x = up + acc / 10.0;\n      for (j = 0; j < 4; j++) {\n        if (rats[j] * x === rats[j] * up) ifault = 2;\n      }\n\n      return done();\n    }\n\n    return l1();\n  }\n  catch (error) {\n    if (error.name === \"RangeError\") {\n      ifault = 4;\n      return done();\n    }\n    else {\n      throw error;\n    }\n  }\n}\n\nexport { qf };","/**\n * A port of Boost's Gauss-Kronrod and double exponential quadrature procedures. Original license header is:\n *\n *   Copyright John Maddock 2017.\n *   Copyright Nick Thompson 2017.\n *   Use, modification and distribution are subject to the\n *   Boost Software License, Version 1.0. (See accompanying file\n *   LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n *\n * @module quadrature\n * @license Boost\n */\n\nconst GAUSS_KRONROD_ABSCISSA = {\n  21: [\n    0.00000000000000000000000000000000000e+00,\n    1.48874338981631210884826001129719985e-01,\n    2.94392862701460198131126603103865566e-01,\n    4.33395394129247190799265943165784162e-01,\n    5.62757134668604683339000099272694141e-01,\n    6.79409568299024406234327365114873576e-01,\n    7.80817726586416897063717578345042377e-01,\n    8.65063366688984510732096688423493049e-01,\n    9.30157491355708226001207180059508346e-01,\n    9.73906528517171720077964012084452053e-01,\n    9.95657163025808080735527280689002848e-01,\n  ],\n  31: [\n    0.00000000000000000000000000000000000e+00,\n    1.01142066918717499027074231447392339e-01,\n    2.01194093997434522300628303394596208e-01,\n    2.99180007153168812166780024266388963e-01,\n    3.94151347077563369897207370981045468e-01,\n    4.85081863640239680693655740232350613e-01,\n    5.70972172608538847537226737253910641e-01,\n    6.50996741297416970533735895313274693e-01,\n    7.24417731360170047416186054613938010e-01,\n    7.90418501442465932967649294817947347e-01,\n    8.48206583410427216200648320774216851e-01,\n    8.97264532344081900882509656454495883e-01,\n    9.37273392400705904307758947710209471e-01,\n    9.67739075679139134257347978784337225e-01,\n    9.87992518020485428489565718586612581e-01,\n    9.98002298693397060285172840152271209e-01,\n  ],\n  61: [\n    0.00000000000000000000000000000000000e+00,\n    5.14718425553176958330252131667225737e-02,\n    1.02806937966737030147096751318000592e-01,\n    1.53869913608583546963794672743255920e-01,\n    2.04525116682309891438957671002024710e-01,\n    2.54636926167889846439805129817805108e-01,\n    3.04073202273625077372677107199256554e-01,\n    3.52704725530878113471037207089373861e-01,\n    4.00401254830394392535476211542660634e-01,\n    4.47033769538089176780609900322854000e-01,\n    4.92480467861778574993693061207708796e-01,\n    5.36624148142019899264169793311072794e-01,\n    5.79345235826361691756024932172540496e-01,\n    6.20526182989242861140477556431189299e-01,\n    6.60061064126626961370053668149270753e-01,\n    6.97850494793315796932292388026640068e-01,\n    7.33790062453226804726171131369527646e-01,\n    7.67777432104826194917977340974503132e-01,\n    7.99727835821839083013668942322683241e-01,\n    8.29565762382768397442898119732501916e-01,\n    8.57205233546061098958658510658943857e-01,\n    8.82560535792052681543116462530225590e-01,\n    9.05573307699907798546522558925958320e-01,\n    9.26200047429274325879324277080474004e-01,\n    9.44374444748559979415831324037439122e-01,\n    9.60021864968307512216871025581797663e-01,\n    9.73116322501126268374693868423706885e-01,\n    9.83668123279747209970032581605662802e-01,\n    9.91630996870404594858628366109485725e-01,\n    9.96893484074649540271630050918695283e-01,\n    9.99484410050490637571325895705810819e-01,\n  ]\n};\n\nconst GAUSS_KRONROD_WEIGHTS = {\n  21: [\n    1.49445554002916905664936468389821204e-01,\n    1.47739104901338491374841515972068046e-01,\n    1.42775938577060080797094273138717061e-01,\n    1.34709217311473325928054001771706833e-01,\n    1.23491976262065851077958109831074160e-01,\n    1.09387158802297641899210590325804960e-01,\n    9.31254545836976055350654650833663444e-02,\n    7.50396748109199527670431409161900094e-02,\n    5.47558965743519960313813002445801764e-02,\n    3.25581623079647274788189724593897606e-02,\n    1.16946388673718742780643960621920484e-02,\n  ],\n  31: [\n    1.01330007014791549017374792767492547e-01,\n    1.00769845523875595044946662617569722e-01,\n    9.91735987217919593323931734846031311e-02,\n    9.66427269836236785051799076275893351e-02,\n    9.31265981708253212254868727473457186e-02,\n    8.85644430562117706472754436937743032e-02,\n    8.30805028231330210382892472861037896e-02,\n    7.68496807577203788944327774826590067e-02,\n    6.98541213187282587095200770991474758e-02,\n    6.20095678006706402851392309608029322e-02,\n    5.34815246909280872653431472394302968e-02,\n    4.45897513247648766082272993732796902e-02,\n    3.53463607913758462220379484783600481e-02,\n    2.54608473267153201868740010196533594e-02,\n    1.50079473293161225383747630758072681e-02,\n    5.37747987292334898779205143012764982e-03,\n  ],\n  61: [\n    5.14947294294515675583404336470993075e-02,\n    5.14261285374590259338628792157812598e-02,\n    5.12215478492587721706562826049442083e-02,\n    5.08817958987496064922974730498046919e-02,\n    5.04059214027823468408930856535850289e-02,\n    4.97956834270742063578115693799423285e-02,\n    4.90554345550297788875281653672381736e-02,\n    4.81858617570871291407794922983045926e-02,\n    4.71855465692991539452614781810994865e-02,\n    4.60592382710069881162717355593735806e-02,\n    4.48148001331626631923555516167232438e-02,\n    4.34525397013560693168317281170732581e-02,\n    4.19698102151642461471475412859697578e-02,\n    4.03745389515359591119952797524681142e-02,\n    3.86789456247275929503486515322810503e-02,\n    3.68823646518212292239110656171359677e-02,\n    3.49793380280600241374996707314678751e-02,\n    3.29814470574837260318141910168539275e-02,\n    3.09072575623877624728842529430922726e-02,\n    2.87540487650412928439787853543342111e-02,\n    2.65099548823331016106017093350754144e-02,\n    2.41911620780806013656863707252320268e-02,\n    2.18280358216091922971674857383389934e-02,\n    1.94141411939423811734089510501284559e-02,\n    1.69208891890532726275722894203220924e-02,\n    1.43697295070458048124514324435800102e-02,\n    1.18230152534963417422328988532505929e-02,\n    9.27327965951776342844114689202436042e-03,\n    6.63070391593129217331982636975016813e-03,\n    3.89046112709988405126720184451550328e-03,\n    1.38901369867700762455159122675969968e-03,\n  ]\n};\n\n// const GAUSS_ABSCISSA = {\n//   10: [\n//     1.48874338981631210884826001129719985e-01,\n//     4.33395394129247190799265943165784162e-01,\n//     6.79409568299024406234327365114873576e-01,\n//     8.65063366688984510732096688423493049e-01,\n//     9.73906528517171720077964012084452053e-01\n//   ],\n//   15: [\n//     0.00000000000000000000000000000000000e+00,\n//     2.01194093997434522300628303394596208e-01,\n//     3.94151347077563369897207370981045468e-01,\n//     5.70972172608538847537226737253910641e-01,\n//     7.24417731360170047416186054613938010e-01,\n//     8.48206583410427216200648320774216851e-01,\n//     9.37273392400705904307758947710209471e-01,\n//     9.87992518020485428489565718586612581e-01,\n//   ],\n//   30: [\n//     5.14718425553176958330252131667225737e-02,\n//     1.53869913608583546963794672743255920e-01,\n//     2.54636926167889846439805129817805108e-01,\n//     3.52704725530878113471037207089373861e-01,\n//     4.47033769538089176780609900322854000e-01,\n//     5.36624148142019899264169793311072794e-01,\n//     6.20526182989242861140477556431189299e-01,\n//     6.97850494793315796932292388026640068e-01,\n//     7.67777432104826194917977340974503132e-01,\n//     8.29565762382768397442898119732501916e-01,\n//     8.82560535792052681543116462530225590e-01,\n//     9.26200047429274325879324277080474004e-01,\n//     9.60021864968307512216871025581797663e-01,\n//     9.83668123279747209970032581605662802e-01,\n//     9.96893484074649540271630050918695283e-01,\n//   ]\n// };\n\nconst GAUSS_WEIGHTS = {\n  10: [\n    2.95524224714752870173892994651338329e-01,\n    2.69266719309996355091226921569469353e-01,\n    2.19086362515982043995534934228163192e-01,\n    1.49451349150580593145776339657697332e-01,\n    6.66713443086881375935688098933317929e-02\n  ],\n  15: [\n    2.02578241925561272880620199967519315e-01,\n    1.98431485327111576456118326443839325e-01,\n    1.86161000015562211026800561866422825e-01,\n    1.66269205816993933553200860481208811e-01,\n    1.39570677926154314447804794511028323e-01,\n    1.07159220467171935011869546685869303e-01,\n    7.03660474881081247092674164506673385e-02,\n    3.07532419961172683546283935772044177e-02,\n  ],\n  30: [\n    1.02852652893558840341285636705415044e-01,\n    1.01762389748405504596428952168554045e-01,\n    9.95934205867952670627802821035694765e-02,\n    9.63687371746442596394686263518098651e-02,\n    9.21225222377861287176327070876187672e-02,\n    8.68997872010829798023875307151257026e-02,\n    8.07558952294202153546949384605297309e-02,\n    7.37559747377052062682438500221907342e-02,\n    6.59742298821804951281285151159623612e-02,\n    5.74931562176190664817216894020561288e-02,\n    4.84026728305940529029381404228075178e-02,\n    3.87991925696270495968019364463476920e-02,\n    2.87847078833233693497191796112920436e-02,\n    1.84664683110909591423021319120472691e-02,\n    7.96819249616660561546588347467362245e-03,\n  ]\n};\n\nconst ROOT_EPSILON = Math.sqrt(Number.EPSILON);\n\nclass GaussKronrod {\n  constructor(N=21, maxDepth=15, maxRelativeError=ROOT_EPSILON) {\n    this.N = N;\n    this.maxDepth = maxDepth;\n    this.maxRelativeError = maxRelativeError;\n    this.error = 0;\n  }\n\n  _integrateNonAdaptive(f) {\n    let N = this.N;\n    let gauss_start = 2;\n    let kronrod_start = 1;\n    let gauss_order = (N - 1) / 2;\n    let kronrod_result = 0;\n    let gauss_result = 0;\n    let fp, fm;\n\n    if (gauss_order & 1) {\n      fp = f(0);\n      kronrod_result = fp * GAUSS_KRONROD_WEIGHTS[N][0];\n      gauss_result += fp * GAUSS_WEIGHTS[(N - 1) / 2][0];\n    }\n    else {\n      fp = f(0);\n      kronrod_result = fp * GAUSS_KRONROD_WEIGHTS[N][0];\n      gauss_start = 1;\n      kronrod_start = 2;\n    }\n\n    for (let i = gauss_start; i < GAUSS_KRONROD_ABSCISSA[N].length; i += 2) {\n      fp = f(GAUSS_KRONROD_ABSCISSA[N][i]);\n      fm = f(-GAUSS_KRONROD_ABSCISSA[N][i]);\n      kronrod_result += (fp + fm) * GAUSS_KRONROD_WEIGHTS[N][i];\n      gauss_result += (fp + fm) * GAUSS_WEIGHTS[(N - 1) / 2][Math.floor(i / 2)];\n    }\n\n    for (let i = kronrod_start; i < GAUSS_KRONROD_ABSCISSA[N].length; i += 2) {\n      fp = f(GAUSS_KRONROD_ABSCISSA[N][i]);\n      fm = f(-GAUSS_KRONROD_ABSCISSA[N][i]);\n      kronrod_result += (fp + fm) * GAUSS_KRONROD_WEIGHTS[N][i];\n    }\n\n    let error = Math.max(Math.abs(kronrod_result - gauss_result), Math.abs(kronrod_result * Number.EPSILON * 2));\n    return [kronrod_result, error];\n  }\n\n  _recursiveAdaptiveIntegrate(f, a, b, max_levels, abs_tol) {\n    let error_local;\n    let estimate;\n    let mean = (b + a) / 2;\n    let scale = (b - a) / 2;\n    let ff = x => { return f(scale * x + mean); };\n    [estimate, error_local] = this._integrateNonAdaptive(ff);\n    estimate *= scale;\n\n    let abs_tol1 = Math.abs(estimate * this.maxRelativeError);\n    if (!abs_tol) {\n      abs_tol = abs_tol1;\n    }\n\n    if (max_levels && (abs_tol < error_local)) {\n      let mid = (a + b) / 2;\n      [estimate, ] = this._recursiveAdaptiveIntegrate(f, a, mid, max_levels - 1, abs_tol / 2);\n      let result = this._recursiveAdaptiveIntegrate(f, mid, b, max_levels - 1, abs_tol / 2);\n      estimate += result[0];\n      this.error += result[1];\n      return [estimate, error_local];\n    }\n\n    this.error = error_local;\n    //let dbg = `${a.toString().padEnd(15)} ${b.toString().padEnd(15)} ${max_levels.toString().padEnd(5)} ${abs_tol.toExponential(2).padEnd(11)} ${estimate.toExponential(2).padEnd(11)} ${error_local.toExponential(2).padStart(5).padEnd(11)}\\n`;\n    //this.stream.write(dbg);\n    return [estimate, error_local];\n  }\n\n  integrate(f, a, b) {\n    let result;\n    if (isFinite(a) && isFinite(b)) {\n      result = this._recursiveAdaptiveIntegrate(f, a, b, this.maxDepth, 0);\n    }\n    else {\n      throw new Error(\"Additional integration limits not implemented\");\n    }\n    return result;\n  }\n}\n\nconst EXP_SINH_ABSCISSAS = [\n  [7.241670621354483269e-163, 2.257639733856759198e-60, 1.153241619257215165e-22, 8.747691973876861825e-09, 1.173446923800022477e-03, 1.032756936219208144e-01, 7.719261204224504866e-01, 4.355544675823585545e+00, 1.215101039066652656e+02, 6.228845436711506169e+05, 6.278613977336989392e+15, 9.127414935180233465e+42, 6.091127771174027909e+116],\n  [4.547459836328942014e-99, 6.678756542928857080e-37, 5.005042973041566360e-14, 1.341318484151208960e-05, 1.833875636365939263e-02, 3.257972971286326131e-01, 1.712014688483495078e+00, 1.613222549264089627e+01, 3.116246745274236447e+03, 3.751603952020919663e+09, 1.132259067258797346e+26, 6.799257464097374238e+70],\n  [5.314690663257815465e-127, 2.579830034615362946e-77, 3.534801062399966878e-47, 6.733941646704537777e-29, 8.265803726974829043e-18, 4.424914371157762285e-11, 5.390411046738629465e-07, 1.649389713333761449e-04, 5.463728936866216652e-03, 4.787896410534771955e-02, 1.931544616590306846e-01, 5.121421856617965197e-01, 1.144715949265016019e+00, 2.648424684387670480e+00, 7.856804169938798917e+00, 3.944731803343517708e+01, 5.060291993016831194e+02, 3.181117494063683297e+04, 2.820174654949211729e+07, 1.993745099515255184e+12, 1.943469269499068563e+20, 2.858803732300638372e+33, 1.457292199029008637e+55, 8.943565831706355607e+90, 9.016198369791554655e+149],\n  [8.165631636299519857e-144, 3.658949309353149331e-112, 1.635242513882908826e-87, 2.578381184977746454e-68, 2.305546416275824199e-53, 1.016725540031465162e-41, 1.191823622917539774e-32, 1.379018088205016509e-25, 4.375640088826073184e-20, 8.438464631330991606e-16, 1.838483310261119782e-12, 7.334264181393092650e-10, 7.804740587931068021e-08, 2.970395577741681504e-06, 5.081805431666579484e-05, 4.671401627620431498e-04, 2.652347404231090523e-03, 1.037409202661683856e-02, 3.045225582205323946e-02, 7.178280364982721201e-02, 1.434001065841990688e-01, 2.535640852949085796e-01, 4.113268917643175920e-01, 6.310260805648534613e-01, 9.404706503455087817e-01, 1.396267301972783068e+00, 2.116896928689963277e+00, 3.364289290471596568e+00, 5.770183960005836987e+00, 1.104863531218761752e+01, 2.460224479439805859e+01, 6.699316387888639988e+01, 2.375794092475844708e+02, 1.188092202760116066e+03, 9.269848635975416108e+03, 1.283900116155671304e+05, 3.723397798030112514e+06, 2.793667983952389721e+08, 7.112973790863854188e+10, 8.704037695808749572e+13, 8.001474015782459984e+17, 9.804091819390540578e+22, 3.342777673392873288e+29, 8.160092668471508447e+37, 4.798775331663586528e+48, 3.228614320248853938e+62, 1.836986041572136151e+80, 1.153145986877483804e+103, 2.160972586723647751e+132],\n  [4.825077401709435655e-153, 3.813781211050297560e-135, 2.377824349780240844e-119, 2.065817295388293122e-105, 4.132105770181358886e-93, 2.963965169989404311e-82, 1.127296662046635391e-72, 3.210346399945695041e-64, 9.282992368222161062e-57, 3.565977853916619677e-50, 2.306962519220473637e-44, 3.098751038516535098e-39, 1.039558064722960891e-34, 1.025256027381235200e-30, 3.432612000569885403e-27, 4.429681881379089961e-24, 2.464589267395236846e-21, 6.526691446363344923e-19, 8.976892324445928684e-17, 6.926277695183452225e-15, 3.208805316815751272e-13, 9.478053068835988899e-12, 1.882052586691155400e-10, 2.632616062773909009e-09, 2.703411837703917665e-08, 2.113642195965330965e-07, 1.299327029813074013e-06, 6.461189935136030673e-06, 2.665090959570723827e-05, 9.322774986189288194e-05, 2.820463407940068813e-04, 7.508613300035051413e-04, 1.786142185986551786e-03, 3.848376610765768211e-03, 7.600810651854199771e-03, 1.390873269178271700e-02, 2.380489559528694982e-02, 3.842796337748997654e-02, 5.895012901671883992e-02, 8.651391160689367948e-02, 1.221961347398101671e-01, 1.670112314557845555e-01, 2.219593619059930701e-01, 2.881200442770917241e-01, 3.667906976948184315e-01, 4.596722879563388211e-01, 5.691113093602836208e-01, 6.984190600916228379e-01, 8.523070690462583711e-01, 1.037505121571600249e+00, 1.263672635742961915e+00, 1.544788480334120896e+00, 1.901333876886441433e+00, 2.363816272813317635e+00, 2.978614980117902904e+00, 3.817957977526709364e+00, 4.997477803461245639e+00, 6.708150685706236545e+00, 9.276566033183386532e+00, 1.328332469239125539e+01, 1.980618680552458639e+01, 3.094452809319702849e+01, 5.101378787119006225e+01, 8.943523638413590523e+01, 1.682138665185088325e+02, 3.427988270281270587e+02, 7.653823671943767281e+02, 1.895993667030670343e+03, 5.285404568827643942e+03, 1.684878049282191210e+04, 6.254388805482299369e+04, 2.759556544455721132e+05, 1.481213238071008345e+06, 9.929728611179601424e+06, 8.564987764771851841e+07, 9.831650826344826952e+08, 1.560339073978569502e+10, 3.575098885016726922e+11, 1.241973798101884982e+13, 6.915106205748805839e+14, 6.571419716645131084e+16, 1.144558033138694099e+19, 3.960915669532823553e+21, 2.984410558028297842e+24, 5.430494850258846715e+27, 2.683747612498502676e+31, 4.114885708325522701e+35, 2.276004816861421600e+40, 5.387544917595833246e+45, 6.623575732955432303e+51, 5.266881304835239338e+58, 3.473234812654772210e+66, 2.517492645985977377e+75, 2.759797646289240629e+85, 6.569603829502412077e+96, 5.116181648220647995e+109, 2.073901892339407423e+124, 7.406462446666255838e+140],\n  [7.053618140948655098e-158, 2.343354218558056628e-148, 2.062509087689351439e-139, 5.212388628332260488e-131, 4.079380320868843387e-123, 1.061481285006738214e-115, 9.816727607793017691e-109, 3.435400719609722581e-102, 4.825198574681495574e-96, 2.874760995089533358e-90, 7.652499977338879996e-85, 9.556944498127119032e-80, 5.862241023038227937e-75, 1.843934000129616663e-70, 3.096983980846232911e-66, 2.885057452402340330e-62, 1.544904681826443837e-58, 4.917572705671511534e-55, 9.602608566391652866e-52, 1.184882375237471009e-48, 9.499223316355714793e-46, 5.078965858882528461e-43, 1.856080838373584123e-40, 4.744245560917271585e-38, 8.667497891102658240e-36, 1.155086178652063612e-33, 1.144541329818836153e-31, 8.585083084065812874e-30, 4.957702933032408922e-28, 2.239353794616277882e-26, 8.030405447708765492e-25, 2.318459271131684362e-23, 5.460287296679086677e-22, 1.062054307071706375e-20, 1.725955878033239909e-19, 2.369168446274347137e-18, 2.775176063916613602e-17, 2.800847352316621903e-16, 2.457625954357892245e-15, 1.890842052364646528e-14, 1.285791209258834942e-13, 7.786001004707878219e-13, 4.228083024410741194e-12, 2.072664297543567489e-11, 9.229295073519997559e-11, 3.754886152592311575e-10, 1.403443871774813834e-09, 4.843962757371872495e-09, 1.551373196623161433e-08, 4.631448362339623514e-08, 1.294370176865168120e-07, 3.400050664017164356e-07, 8.426290307581447654e-07, 1.977205177561996033e-06, 4.407362363338667830e-06, 9.362197325373404563e-06, 1.900760383449277992e-05, 3.698530963711860636e-05, 6.915333419235766653e-05, 1.245492076251852927e-04, 2.165764713808099093e-04, 3.643870211078977292e-04, 5.943999416122372516e-04, 9.418663022314558591e-04, 1.452364274261880083e-03, 2.183094846035196562e-03, 3.203848855069215278e-03, 4.597532353031862490e-03, 6.460168315117479792e-03, 8.900334989802041559e-03, 1.203804973137064275e-02, 1.600315622064554965e-02, 2.093331703849583304e-02, 2.697174812170771748e-02, 3.426485378063329473e-02, 4.295992956149806344e-02, 5.320309587203163231e-02, 6.513760993479510261e-02, 7.890268021756337834e-02, 9.463287940877026649e-02, 1.124582226719385153e-01, 1.325049504086213973e-01, 1.548970316076579260e-01, 1.797583869192584860e-01, 2.072158210677632145e-01, 2.374026527414815016e-01, 2.704630368855767324e-01, 3.065569893452247137e-01, 3.458661469783558388e-01, 3.886003277325320632e-01, 4.350049951304795319e-01, 4.853697810067132707e-01, 5.400382807495678589e-01, 5.994194092045578293e-01, 6.640006964388650918e-01, 7.343640159321037167e-01, 8.112043806284638130e-01, 8.953526245122194172e-01, 9.878030224123093447e-01, 1.089747207002141516e+00, 1.202616144679226559e+00, 1.328132465995424226e+00, 1.468376159872979355e+00, 1.625867601500928277e+00, 1.803673186618691186e+00, 2.005540624723209206e+00, 2.236073393446881709e+00, 2.500957254018255004e+00, 2.807256477663534857e+00, 3.163804128101147487e+00, 3.581720263742550029e+00, 4.075105576391566303e+00, 4.661977749936137761e+00, 5.365546718714963091e+00, 6.215967676434536043e+00, 7.252774367330402583e+00, 8.528291278204291331e+00, 1.011247001122720391e+01, 1.209982167952718578e+01, 1.461947158782994207e+01, 1.784992423404041042e+01, 2.204102944968352178e+01, 2.754711235628932374e+01, 3.487766600641650640e+01, 4.477610230214251576e+01, 5.834406132739843834e+01, 7.724096630394042216e+01, 1.040101075374387191e+02, 1.426215523101601730e+02, 1.993940974645466479e+02, 2.845939167898235356e+02, 4.152683836292551147e+02, 6.203878718481709769e+02, 9.504080873581791535e+02, 1.495523342124078853e+03, 2.421485328006836634e+03, 4.041977218227396500e+03, 6.969453497454785202e+03, 1.244001690461442846e+04, 2.303794930506892099e+04, 4.437240927040385250e+04, 8.911296561746717657e+04, 1.871159398849787994e+05, 4.119851492265743330e+05, 9.540971729944126398e+05, 2.331680521880789706e+06, 6.034305391011695472e+06, 1.659896369452266448e+07, 4.872448839341613053e+07, 1.532687586549090392e+08, 5.189730792935011722e+08, 1.900599621040508288e+09, 7.566480431232731818e+09, 3.292298322781643849e+10, 1.574714421665075635e+11, 8.330244306239795892e+11, 4.905619969814187571e+12, 3.238316002757222702e+13, 2.413995281454699076e+14, 2.048115587426077343e+15, 1.994352670766892066e+16, 2.248750566422739144e+17, 2.964037541992353401e+18, 4.613233119968213445e+19, 8.569680508342001161e+20, 1.921851711942844799e+22, 5.266829246099861758e+23, 1.786779952992288976e+25, 7.607919705736976491e+26, 4.125721424346450007e+28, 2.894340142292214313e+30, 2.670720269656428272e+32, 3.299248229135205151e+34, 5.560105583582310103e+36, 1.304167266599523020e+39, 4.349382146382717353e+41, 2.109720387774341509e+44, 1.524825352702403324e+47, 1.684941265105084589e+50, 2.925572737558413426e+53, 8.217834961057481281e+56, 3.852117991896536784e+60, 3.114452310394384063e+64, 4.498555465873245751e+68, 1.205113215232800796e+73, 6.230864727145221322e+77, 6.487131248948465269e+82, 1.422810109167834249e+88, 6.897656089181724717e+93, 7.779163462756485195e+99, 2.155213251859555072e+106, 1.554347160152705281e+113, 3.103875072425192272e+120, 1.832673821557018634e+128, 3.431285951865278376e+136, 2.194542081542393530e+145],\n  [2.363803632659058081e-160, 1.926835442612677686e-155, 1.109114905180506786e-150, 4.556759282087534164e-146, 1.350172241067816232e-141, 2.914359263635229435e-137, 4.627545976953585825e-133, 5.456508344460398758e-129, 4.821828861306345485e-125, 3.221779152402086241e-121, 1.641732102111619421e-117, 6.433569189921227126e-114, 1.954582672700428961e-110, 4.639912078942456372e-107, 8.671928891742699827e-104, 1.285485264305858782e-100, 1.522161801460927566e-97, 1.449767844425295085e-94, 1.118122255504445235e-91, 7.028344777398825069e-89, 3.623454064991238081e-86, 1.541513438874996543e-83, 5.443699502170284982e-81, 1.604913673768949456e-78, 3.972206240977317536e-76, 8.297975554162539562e-74, 1.470748835855054032e-71, 2.222935801472624670e-69, 2.879160361851977720e-67, 3.210837413250902178e-65, 3.097303984958235490e-63, 2.595974479763180595e-61, 1.898656799199089593e-59, 1.216865518398435626e-57, 6.862041810601184397e-56, 3.418134121780773218e-54, 1.509758535747580387e-52, 5.934924977563731784e-51, 2.083865009061241099e-49, 6.558128104492290092e-48, 1.856133016606468181e-46, 4.739964621828176249e-45, 1.095600459825324697e-43, 2.299177139060262518e-42, 4.393663812095906869e-41, 7.667728102142858487e-40, 1.225476279042445010e-38, 1.798526997315960782e-37, 2.430201154741018716e-36, 3.030993518975438712e-35, 3.497966609954172613e-34, 3.744308272796551045e-33, 3.726132797819332658e-32, 3.455018936399215381e-31, 2.991524108706319604e-30, 2.423818520801870809e-29, 1.841452809687011486e-28, 1.314419760826235421e-27, 8.831901010260867670e-27, 5.596660060604091621e-26, 3.350745417080507841e-25, 1.898675566025820409e-24, 1.019982287418197376e-23, 5.203315082978366918e-23, 2.524668746906057148e-22, 1.166904646009344233e-21, 5.145437675264868732e-21, 2.167677145279166596e-20, 8.736996911006110678e-20, 3.373776431076593266e-19, 1.249769727462160008e-18, 4.446913832647864892e-18, 1.521741180930875343e-17, 5.014158301377399707e-17, 1.592708205361177316e-16, 4.882536933653862982e-16, 1.446109387544416586e-15, 4.142510168443201880e-15, 1.148892083132325407e-14, 3.088024760858924214e-14, 8.051699653634442236e-14, 2.038478329249539199e-13, 5.015686309363884049e-13, 1.200444984849900298e-12, 2.797125428309156462e-12, 6.350357793399881333e-12, 1.405881744263466936e-11, 3.037391821635123795e-11, 6.408863411016101449e-11, 1.321618431565916164e-10, 2.665526566207284474e-10, 5.261497418654313068e-10, 1.017123184766088896e-09, 1.926882221639203388e-09, 3.579523428497157488e-09, 6.524486847652635035e-09, 1.167543991262942921e-08, 2.052356080018121741e-08, 3.545879678923676129e-08, 6.024472481556065885e-08, 1.007076869023518125e-07, 1.657191565891799652e-07, 2.685718943404479677e-07, 4.288752213761154116e-07, 6.751222405372943925e-07, 1.048111270324302884e-06, 1.605433960692314060e-06, 2.427271958412371013e-06, 3.623770645356477660e-06, 5.344280132492750309e-06, 7.788767891027678939e-06, 1.122171160022519082e-05, 1.598877254198599908e-05, 2.253652700952153115e-05, 3.143549403208496646e-05, 4.340664122305257288e-05, 5.935147653125578529e-05, 8.038574285450253209e-05, 1.078766266062957565e-04, 1.434832731669987826e-04, 1.892002753957224677e-04, 2.474036705329449166e-04, 3.208988510028906069e-04, 4.129696713145546995e-04, 5.274279220384250390e-04, 6.686622480794640482e-04, 8.416855170641220285e-04, 1.052179598744440400e-03, 1.306536501050643762e-03, 1.611894824798787196e-03, 1.976170547826080496e-03, 2.408081229927640721e-03, 2.917162840577481875e-03, 3.513778549028205519e-03, 4.209118976964403112e-03, 5.015193592567630665e-03, 5.944813116164644191e-03, 7.011563005746090924e-03, 8.229768289624073049e-03, 9.614450207543986041e-03, 1.118127530523730813e-02, 1.294649779580742160e-02, 1.492689615029751590e-02, 1.713970500593860526e-02, 1.960254358145296755e-02, 2.233334186285684056e-02, 2.535026586984720664e-02, 2.867164333232700310e-02, 3.231589109997912964e-02, 3.630144557680610965e-02, 4.064669741956638109e-02, 4.536993166688766414e-02, 5.048927437769432941e-02, 5.602264675683979161e-02, 6.198772763597769678e-02, 6.840192506222012774e-02, 7.528235762939712171e-02, 8.264584606994605986e-02, 9.050891551257121825e-02, 9.888780870447738360e-02, 1.077985103995250356e-01, 1.172567830270636607e-01, 1.272782136821146663e-01, 1.378782724173011162e-01, 1.490723817714478840e-01, 1.608759974398061173e-01, 1.733046999768424060e-01, 1.863742974247175786e-01, 2.001009387790379976e-01, 2.145012382381487190e-01, 2.295924102330349785e-01, 2.453924153016625057e-01, 2.619201169541956490e-01, 2.791954497739298773e-01, 2.972395991130188526e-01, 3.160751928723792943e-01, 3.357265060019327741e-01, 3.562196785212496373e-01, 3.775829480426418792e-01, 3.998468979800887046e-01, 4.230447228497335035e-01, 4.472125123131631074e-01, 4.723895558858634018e-01, 4.986186705332947608e-01, 5.259465537097384485e-01, 5.544241647649479754e-01, 5.841071380560416511e-01, 6.150562315632864018e-01, 6.473378153258308278e-01, 6.810244045956889952e-01, 7.161952432654565143e-01, 7.529369438691556459e-01, 7.913441913000366617e-01, 8.315205183502086596e-01, 8.735791622734589226e-01, 9.176440128265773576e-01, 9.638506636817484398e-01, 1.012347580753402101e+00, 1.063297402882930381e+00, 1.116878392515788506e+00, 1.173286056537125469e+00, 1.232734960362603918e+00, 1.295460761779549539e+00, 1.361722494981910846e+00, 1.431805139837984876e+00, 1.506022516788234345e+00, 1.584720554029819354e+00, 1.668280980969603645e+00, 1.757125510515793421e+00, 1.851720582866847453e+00, 1.952582755329533200e+00, 2.060284836698905963e+00, 2.175462881275503983e+00, 2.298824177179966629e+00, 2.431156386859774759e+00, 2.573338025304717222e+00, 2.726350494395667363e+00, 2.891291931102408784e+00, 3.069393174263124520e+00, 3.262036211067640944e+00, 3.470775532153801919e+00, 3.697362905908153155e+00, 3.943776181224350319e+00, 4.212252847439515687e+00, 4.505329225191826639e+00, 4.825886338442190807e+00, 5.177203733275742875e+00, 5.563022772612923373e+00, 5.987621259260909859e+00, 6.455901637501497370e+00, 6.973495514195020291e+00, 7.546887847708181032e+00, 8.183564906772872855e+00, 8.892191039842283431e+00, 9.682820467523296204e+00, 1.056715177903931837e+01, 1.155883465937652851e+01, 1.267384070151528947e+01, 1.393091310389918289e+01, 1.535211379418177923e+01, 1.696349128797309510e+01, 1.879589868990482198e+01, 2.088599907466058846e+01, 2.327750557804054323e+01, 2.602271658731131093e+01, 2.918442338619305962e+01, 3.283828974258811174e+01, 3.707583192189045823e+01, 4.200816575721451990e+01, 4.777073782243997224e+01, 5.452932468101429049e+01, 6.248767344468634478e+01, 7.189727649240108469e+01, 8.306993427631743111e+01, 9.639397813652482031e+01, 1.123553215857374919e+02, 1.315649140340119335e+02, 1.547947284376312334e+02, 1.830251850988715552e+02, 2.175079854175568113e+02, 2.598498278995140400e+02, 3.121245867818556035e+02, 3.770245173783702458e+02, 4.580653020257635092e+02, 5.598658426219653689e+02, 6.885324967857802403e+02, 8.521902266884453403e+02, 1.061721815114114004e+03, 1.331803836529085656e+03, 1.682368940494210217e+03, 2.140685129891926443e+03, 2.744334847491432747e+03, 3.545516659371773357e+03, 4.617306735234797694e+03, 6.062848530677391758e+03, 8.028955134017154634e+03, 1.072641999277462936e+04, 1.446061873485939411e+04, 1.967804579389513789e+04, 2.703776201447279367e+04, 3.752217148194723312e+04, 5.261052412010591097e+04, 7.455350923854624329e+04, 1.068125318497402759e+05, 1.547702528541975911e+05, 2.268930751685412563e+05, 3.366554971645478061e+05, 5.057644049026088560e+05, 7.696291826884134742e+05, 1.186761864945790800e+06, 1.855146094294667715e+06, 2.941132644236832276e+06, 4.731169740596920355e+06, 7.725765147199987935e+06, 1.281272565991955126e+07, 2.159151785284808339e+07, 3.699029448836502904e+07, 6.445902263727884020e+07, 1.143158678867853615e+08, 2.064425450996979446e+08, 3.798502995329785506e+08, 7.125329484929003007e+08, 1.363463294023391629e+09, 2.663196590686555077e+09, 5.313347815419462975e+09, 1.083506369700027396e+10, 2.259930737910197667e+10, 4.824707991473375387e+10, 1.055069002818752104e+11, 2.365138040635727209e+11, 5.439266129959972285e+11, 1.284356371641026839e+12, 3.116424654245920797e+12, 7.777312465656280419e+12, 1.997984843259596733e+13, 5.288649037339853118e+13, 1.443776937640548342e+14, 4.068967444890414804e+14, 1.185049702391501141e+15, 3.570348091883284324e+15, 1.113971254034978026e+16, 3.603374982229766184e+16, 1.209803708182151942e+17, 4.220890251904870611e+17, 1.532169872312865862e+18, 5.793890867821715890e+18, 2.285379920879842924e+19, 9.415714369232187727e+19, 4.057471211245170887e+20, 1.831405465804324767e+21, 8.671209773404504008e+21, 4.313209261217173994e+22, 2.257498454242656934e+23, 1.245267136898199709e+24, 7.251536499435180219e+24, 4.465573963364524765e+25, 2.913233420596266283e+26, 2.017063171206072979e+27, 1.485014353353330393e+28, 1.164811091759882662e+29, 9.753661264047912784e+29, 8.737124417851167566e+30, 8.390503265508677363e+31, 8.657362701430272680e+32, 9.619472292454361392e+33, 1.153735498483960294e+35, 1.497284701983562213e+36, 2.107816695320163748e+37, 3.227106623185610745e+38, 5.387696372515021985e+39, 9.835496017627849225e+40, 1.968904749086105300e+42, 4.334704147416758275e+43, 1.052717645113369473e+45, 2.829013521120326147e+46, 8.439656297525588822e+47, 2.804279894508234869e+49, 1.041383695988523864e+51, 4.337366591019718310e+52, 2.033523569151676725e+54, 1.077238847489773081e+56, 6.472891251891105455e+57, 4.429404678715878536e+59, 3.466135480828349864e+61, 3.114928656972704276e+63, 3.228947925415990689e+65, 3.878402486902381042e+67, 5.423187597439531197e+69, 8.870779393460412583e+71, 1.705832285076755970e+74, 3.876224350373120420e+76, 1.046359534886878004e+79, 3.373858809560757544e+81, 1.306762499786044015e+84, 6.115300889685679832e+86, 3.478550048884517349e+89, 2.420073578988056289e+92, 2.072453567501123129e+95, 2.199029867204449277e+98, 2.910868575802139983e+101, 4.840699137490951163e+104, 1.018669397739170369e+108, 2.733025017438095928e+111, 9.420797277586029837e+114, 4.205525105722885986e+118, 2.451352708852151939e+122, 1.881577053794165543e+126, 1.918506219134233785e+130, 2.622069659115564900e+134, 4.848463485415763756e+138, 1.224645005481997780e+143, 4.267387286482591954e+147, 2.072505613372582377e+152],\n  [1.323228129684237783e-161, 4.129002973520822791e-159, 1.178655462569548882e-156, 3.082189008893206231e-154, 7.393542832199414487e-152, 1.629100644355328639e-149, 3.301545529059822941e-147, 6.162031390854241227e-145, 1.060528194470986309e-142, 1.685225757497235089e-140, 2.475534097582263629e-138, 3.365764749507587192e-136, 4.240562683924022383e-134, 4.956794227885611715e-132, 5.381716367914161520e-130, 5.433507172294988849e-128, 5.107031242794315420e-126, 4.473704932098646394e-124, 3.656376947377888629e-122, 2.791170022694259001e-120, 1.992200238692415032e-118, 1.330894359393789718e-116, 8.330356767359890503e-115, 4.890256639970245146e-113, 2.695128935451165447e-111, 1.395829605415630844e-109, 6.799997527188085942e-108, 3.119037767379032293e-106, 1.348260131419216291e-104, 5.497526018943990804e-103, 2.116384670251198533e-101, 7.699148714858061209e-100, 2.649065347250598345e-98, 8.628189263549727753e-97, 2.662520943248368922e-95, 7.790698623582886341e-94, 2.163354866683077281e-92, 5.705576739797220361e-91, 1.430338193028564913e-89, 3.411040781372328747e-88, 7.744268073516449037e-87, 1.675136564303435813e-85, 3.454795810595704816e-84, 6.798573137099477363e-83, 1.277474708033782661e-81, 2.293702139426309483e-80, 3.938021700015175030e-79, 6.469593934876300124e-78, 1.017725266990912471e-76, 1.534019529793324951e-75, 2.216999886838860916e-74, 3.074100747562803362e-73, 4.092295330837549092e-72, 5.233434175636538471e-71, 6.433506079763357418e-70, 7.607042677901362161e-69, 8.656714387163425357e-68, 9.486746058685489974e-67, 1.001756724248288397e-65, 1.019853943834854330e-64, 1.001591106610665630e-63, 9.494277822444263952e-63, 8.691422918891890649e-62, 7.687977047887448276e-61, 6.574408104196605248e-60, 5.438162502918425191e-59, 4.353340831363003212e-58, 3.374338762181243411e-57, 2.533770921173042330e-56, 1.844048925248616738e-55, 1.301410812308480184e-54, 8.910466744374470063e-54, 5.921538384124132331e-53, 3.821356134297705127e-52, 2.395780657353036891e-51, 1.459882187581820236e-50, 8.650105472076777327e-50, 4.985933550797199316e-49, 2.796911903237435916e-48, 1.527570118993503332e-47, 8.126314048196993302e-47, 4.212436363948578182e-46, 2.128604050242564662e-45, 1.048938356323431072e-44, 5.042753142653687842e-44, 2.365999225494165364e-43, 1.083813462091040325e-42, 4.848963367960316169e-42, 2.119612873737657277e-41, 9.055947139022002648e-41, 3.782987192192666650e-40, 1.545649846917574765e-39, 6.178909752126026357e-39, 2.417597558625940386e-38, 9.261305999966332746e-38, 3.474712971194656115e-37, 1.277215890629181345e-36, 4.600938133935473864e-36, 1.624804314773052044e-35, 5.626808103137929972e-35, 1.911442429947086471e-34, 6.371300415498187125e-34, 2.084444531309441237e-33, 6.695356060065574234e-33, 2.112038435637792931e-32, 6.544802906551512393e-32, 1.992864937623987114e-31, 5.964358817764151755e-31, 1.754973231464949500e-30, 5.078231558861773863e-30, 1.445447866528259475e-29, 4.048099759391660786e-29, 1.115752878927994221e-28, 3.027334168442338592e-28, 8.087868498106224788e-28, 2.128106544151858936e-27, 5.516210113930227985e-27, 1.408890921124863906e-26, 3.546520734326774807e-26, 8.800636481096360494e-26, 2.153319509043984465e-25, 5.196136544731926346e-25, 1.236869058422202190e-24, 2.904891674490918873e-24, 6.732707317563258763e-24, 1.540253603361391055e-23, 3.478765727687221019e-23, 7.758450079933031976e-23, 1.708939324269830276e-22, 3.718467010568811152e-22, 7.994094376769029920e-22, 1.698336774318343123e-21, 3.566214469724002275e-21, 7.402848534866351662e-21, 1.519411719755297549e-20, 3.083993994528608740e-20, 6.191388817974459809e-20, 1.229625987010589227e-19, 2.416245949308411084e-19, 4.698551818749419706e-19, 9.042992978848520439e-19, 1.722880198390020817e-18, 3.249832858354112322e-18, 6.070120594586457562e-18, 1.122871881646098441e-17, 2.057429235664205922e-17, 3.734613207742816399e-17, 6.716694369267842075e-17, 1.197063025055043952e-16, 2.114419661115663617e-16, 3.702017138231021853e-16, 6.425665498746337860e-16, 1.105830903726985419e-15, 1.887156051660563224e-15, 3.193979018679125833e-15, 5.361881977473204459e-15, 8.929318568606692809e-15, 1.475330560958586660e-14, 2.418708636765824964e-14, 3.935078350904051302e-14, 6.354047096308654479e-14, 1.018416666466509442e-13, 1.620423782999307693e-13, 2.559817517056126166e-13, 4.015273886294212810e-13, 6.254532358261761291e-13, 9.675981021394182858e-13, 1.486832112534566186e-12, 2.269557377760486879e-12, 3.441736008766365832e-12, 5.185793859860652413e-12, 7.764217889314004663e-12, 1.155228105746548036e-11, 1.708313121464262097e-11, 2.510951856086201897e-11, 3.668776978510952341e-11, 5.329131813941740314e-11, 7.696325397299480856e-11, 1.105200723643722855e-10, 1.578221843796034825e-10, 2.241309672940976766e-10, 3.165773201144956642e-10, 4.447730510871610704e-10, 6.216041661455164049e-10, 8.642544905395987868e-10, 1.195519306516659349e-09, 1.645482121417189823e-09, 2.253643612941620883e-09, 3.071610576496751310e-09, 4.166474690460445927e-09, 5.625036504185181035e-09, 7.559059638953998396e-09, 1.011177417876491092e-08, 1.346588701906267454e-08, 1.785340092957703350e-08, 2.356759364235337519e-08, 3.097756373337616088e-08, 4.054581171302714730e-08, 5.284939280085554173e-08, 6.860525247854168448e-08, 8.870043714076795346e-08, 1.142279599340281637e-07, 1.465291959965373757e-07, 1.872437814520259903e-07, 2.383680961705324062e-07, 3.023235208219232784e-07, 3.820357732606947876e-07, 4.810267467496160044e-07, 6.035203917139166314e-07, 7.545643021775656875e-07, 9.401687861337141280e-07, 1.167465314019272078e-06, 1.444886349199346242e-06, 1.782368666762205796e-06, 2.191582359683820240e-06, 2.686187812137005286e-06, 3.282122985909738110e-06, 3.997923415034129149e-06, 4.855077333283880469e-06, 5.878418366687560187e-06, 7.096558206229387964e-06, 8.542361632206236097e-06, 1.025346618920209381e-05, 1.227284870748632855e-05, 1.464944073127878202e-05, 1.743879474552002742e-05, 2.070380288967650755e-05, 2.451546960924430874e-05, 2.895373942298085844e-05, 3.410838067694928604e-05, 4.007992581615393488e-05, 4.698066833232878622e-05, 5.493571614427227251e-05, 6.408410073746518169e-05, 7.457994093551813828e-05, 8.659365970069775654e-05, 1.003132518682442285e-04, 1.159456002136906496e-04, 1.337178367385581674e-04, 1.538787455425709779e-04, 1.767002031351005554e-04, 2.024786515302844608e-04, 2.315365989746650402e-04, 2.642241426787982083e-04, 3.009205074706080013e-04, 3.420355938637258307e-04, 3.880115286439000550e-04, 4.393242107257947798e-04, 4.964848447258090522e-04, 5.600414544382562271e-04, 6.305803681962314437e-04, 7.087276679481586600e-04, 7.951505937892094439e-04, 8.905588956558126794e-04, 9.957061239230124343e-04, 1.111390850739538593e-03, 1.238457814094548688e-03, 1.377798976832850428e-03, 1.530354493121150144e-03, 1.697113575214988470e-03, 1.879115253782404405e-03, 2.077449025503311209e-03, 2.293255382179820056e-03, 2.527726216158548279e-03, 2.782105097477072741e-03, 3.057687418798497807e-03, 3.355820404885606963e-03, 3.677902984083964409e-03, 4.025385520026097270e-03, 4.399769402530814407e-03, 4.802606497446985045e-03, 5.235498455973840111e-03, 5.700095884774212336e-03, 6.198097378977308725e-03, 6.731248420937948614e-03, 7.301340148374219834e-03, 7.910207996239952125e-03, 8.559730217397303903e-03, 9.251826287833445298e-03, 9.988455202809488913e-03, 1.077161367093554544e-02, 1.160333421372954856e-02, 1.248568317873621646e-02, 1.342075867475355427e-02, 1.441068843813546585e-02, 1.545762763950860648e-02, 1.656375664055830135e-02, 1.773127871080136402e-02, 1.896241771447260382e-02, 2.025941577780677588e-02, 2.162453094709917839e-02, 2.306003484797691421e-02, 2.456821035631025318e-02, 2.615134929114115217e-02, 2.781175013990572523e-02, 2.955171582608151263e-02, 3.137355152920124081e-02, 3.327956256694509270e-02, 3.527205234875621605e-02, 3.735332041012234938e-02, 3.952566053633324126e-02, 4.179135898416228534e-02, 4.415269280953487221e-02, 4.661192830883879903e-02, 4.917131958110712872e-02, 5.183310721786459418e-02, 5.459951712697841302e-02, 5.747275949639657337e-02, 6.045502790319455825e-02, 6.354849857288828754e-02, 6.675532979350985865e-02, 7.007766148848641979e-02, 7.351761495191403887e-02, 7.707729274938041525e-02, 8.075877878706524317e-02, 8.456413855143733669e-02, 8.849541952147546057e-02, 9.255465175496720496e-02, 9.674384865008904765e-02, 1.010650078831426502e-01, 1.055201125230189472e-01, 1.101111323226840632e-01, 1.148400251877307103e-01, 1.197087388218165293e-01, 1.247192125486176994e-01, 1.298733793097628269e-01, 1.351731678380792159e-01, 1.406205050053816316e-01, 1.462173183439629526e-01, 1.519655387409069424e-01, 1.578671033043359383e-01, 1.639239584007306411e-01, 1.701380628625154331e-01, 1.765113913651907042e-01, 1.830459379734134606e-01, 1.897437198555789051e-01, 1.966067811666385690e-01, 2.036371970991047974e-01, 2.108370781024367852e-01, 2.182085742712797843e-01, 2.257538799033364379e-01, 2.334752382279873511e-01, 2.413749463071469410e-01, 2.494553601102403241e-01, 2.577188997656175820e-01, 2.661680549911833443e-01, 2.748053907075124803e-01, 2.836335528372471376e-01, 2.926552742951268547e-01, 3.018733811735925662e-01, 3.112907991295277084e-01, 3.209105599783561596e-01, 3.307358085024083972e-01, 3.407698094811951648e-01, 3.510159549519934555e-01, 3.614777717099542274e-01, 3.721589290577866932e-01, 3.830632468159621812e-01, 3.941947036053136035e-01, 4.055574454148868711e-01, 4.171557944689308074e-01, 4.289942584079951543e-01, 4.410775398002453309e-01, 4.534105460003012245e-01, 4.659983993741692944e-01, 4.788464479101668631e-01, 4.919602762371392109e-01, 5.053457170727489659e-01, 5.190088631261786795e-01, 5.329560794812372669e-01, 5.471940164876055195e-01, 5.617296231898020413e-01, 5.765701613254061793e-01, 5.917232199261468491e-01, 6.071967305576643327e-01, 6.229989832360855492e-01, 6.391386430620321596e-01, 6.556247676153161584e-01, 6.724668251563812272e-01, 6.896747136835329047e-01, 7.072587808981804764e-01, 7.252298451337033758e-01, 7.435992173071710726e-01, 7.623787239570054101e-01, 7.815807314337971290e-01, 8.012181713158943859e-01, 8.213045671260926392e-01, 8.418540624307963733e-01, 8.628814504084197628e-01, 8.844022049795737430e-01, 9.064325135977815717e-01, 9.289893118061069464e-01, 9.520903196722039764e-01, 9.757540802219457353e-01, 1.000000000000000000e+00, 1.024848391894543008e+00, 1.050320520372784475e+00, 1.076438649284173871e+00, 1.103226092399127978e+00, 1.130707266862927052e+00, 1.158907749757141229e+00, 1.187854337974646084e+00, 1.217575111629048984e+00, 1.248099501235266386e+00, 1.279458358915164500e+00, 1.311684033900709062e+00, 1.344810452627081143e+00, 1.378873203729832710e+00, 1.413909628283517352e+00, 1.449958915644490754e+00, 1.487062205287898607e+00, 1.525262695058439148e+00, 1.564605756286502811e+00, 1.605139056255971231e+00, 1.646912688547541313e+00, 1.689979311822189937e+00, 1.734394297653598793e+00, 1.780215888066332921e+00, 1.827505363488657555e+00, 1.876327221885466881e+00, 1.926749369898304239e+00, 1.978843326886336694e+00, 2.032684442834914613e+00, 2.088352131177556992e+00, 2.145930117663470432e+00, 2.205506706496711366e+00, 2.267175065075584681e+00, 2.331033528772661605e+00, 2.397185927317806037e+00, 2.465741934479827004e+00, 2.536817442887937264e+00, 2.610534965993323711e+00, 2.687024069345184956e+00, 2.766421833546071979e+00, 2.848873351459948781e+00, 2.934532262474922666e+00, 3.023561326873131923e+00, 3.116133043635102211e+00, 3.212430315307524598e+00, 3.312647163894682976e+00, 3.416989502097797957e+00, 3.525675964626843197e+00, 3.638938804749809967e+00, 3.757024861729272487e+00, 3.880196605330264341e+00, 4.008733264172298986e+00, 4.142932045347867609e+00, 4.283109453446644399e+00, 4.429602717916437040e+00, 4.582771338567048147e+00, 4.742998759991079249e+00, 4.910694186746867507e+00, 5.086294552335034437e+00, 5.270266656314831820e+00, 5.463109485364516396e+00, 5.665356735708146927e+00, 5.877579556128345480e+00, 6.100389532781943879e+00, 6.334441939256981670e+00, 6.580439277782222274e+00, 6.839135140254664526e+00, 7.111338420820842566e+00, 7.397917915172903763e+00, 7.699807345544508469e+00, 8.018010854664294474e+00, 8.353609016702406728e+00, 8.707765418592385473e+00, 9.081733871099147484e+00, 9.476866315716376006e+00, 9.894621501007146275e+00, 1.033657451045679019e+01, 1.080442723340841910e+01, 1.130001988133777781e+01, 1.182534366375335115e+01, 1.238255475156052427e+01, 1.297398967101161563e+01, 1.360218228861306245e+01, 1.426988256684760289e+01, 1.498007729260327644e+01, 1.573601300513857081e+01, 1.654122137866316500e+01, 1.739954734664685784e+01, 1.831518029132688981e+01, 1.929268866318984532e+01, 2.033705844217826172e+01, 2.145373590584482942e+01, 2.264867523060898736e+01, 2.392839152177298272e+01, 2.530001994731418268e+01, 2.677138174118011529e+01, 2.835105794560498805e+01, 3.004847188085487195e+01, 3.187398146713610639e+01, 3.383898267989664904e+01, 3.595602559959535672e+01, 3.823894472392493310e+01, 4.070300544879345396e+01, 4.336506889917953679e+01, 4.624377760823269784e+01, 4.935976490967979071e+01, 5.273589133292714765e+01, 5.639751178186770847e+01, 6.037277784867852275e+01, 6.469298027622754351e+01, 6.939293735292118365e+01, 7.451143592061966836e+01, 8.009173272176674066e+01, 8.618212503236856949e+01, 9.283660095406551480e+01, 1.001155814082968890e+02, 1.080867678325352448e+02, 1.168261118752949279e+02, 1.264189260858047240e+02, 1.369611577708331715e+02, 1.485608519349011866e+02, 1.613398336385932743e+02, 1.754356453320629017e+02, 1.910037809024609590e+02, 2.082202655019913565e+02, 2.272846389233001078e+02, 2.484234106336023257e+02, 2.718940668983047258e+02, 2.979897251188232016e+02, 3.270445480633676878e+02, 3.594400516741229885e+02, 3.956124653087335485e+02, 4.360613334959077953e+02, 4.813595846269808355e+02, 5.321653357808338203e+02, 5.892357556996862196e+02, 6.534433717775449045e+02, 7.257952842284018994e+02, 8.074558443729566627e+02, 8.997734679339701200e+02, 1.004312392957944252e+03, 1.122890361185594877e+03, 1.257623408459775530e+03, 1.410979202907522234e+03, 1.585840680166573460e+03, 1.785582106601447262e+03, 2.014160171499825914e+03, 2.276223289283167479e+03, 2.577243010007973485e+03, 2.923672325162804598e+03, 3.323136759290736047e+03, 3.784665511113575050e+03, 4.318971620160236406e+03, 4.938792274850918489e+03, 5.659303058273368331e+03, 6.498623292476395004e+03, 7.478433875318933386e+03, 8.624734342286166238e+03, 9.968772633484590145e+03, 1.154818959559393902e+04, 1.340843110702649390e+04, 1.560449453908580443e+04, 1.820309391023133793e+04, 2.128535066649680777e+04, 2.495014598048375046e+04, 2.931830770482188047e+04, 3.453785313845473397e+04, 4.079057084931056631e+04, 4.830030527863206410e+04, 5.734341246586992004e+04, 6.826199159022146453e+04, 8.148067525594191464e+04, 9.752799507478730867e+04, 1.170636462204808295e+05, 1.409133795481584143e+05, 1.701137853111825512e+05, 2.059699426710509940e+05, 2.501298539735692463e+05, 3.046808435555379486e+05, 3.722747886360361411e+05, 4.562913164460176067e+05, 5.610511554921845541e+05, 6.920959565810343691e+05, 8.565564972181198149e+05, 1.063638800552326000e+06, 1.325268101226286025e+06, 1.656944841847240121e+06, 2.078886479301160156e+06, 2.617555920130068069e+06, 3.307714852226224955e+06, 4.195192293202626259e+06, 5.340631300250745566e+06, 6.824578495767020734e+06, 8.754424053248831818e+06, 1.127390159772263517e+07, 1.457614342739689625e+07, 1.892169326841938100e+07, 2.466345986800667442e+07, 3.228142821711217588e+07, 4.243114571539869754e+07, 5.601173714434088431e+07, 7.426172509723072112e+07, 9.889461357830121731e+07, 1.322915875470427182e+08, 1.777766240727455981e+08, 2.400110583389834263e+08, 3.255621033641982742e+08, 4.437258820593761403e+08, 6.077246218504877165e+08, 8.364565879857375417e+08, 1.157066594326456169e+09, 1.608740826498742961e+09, 2.248337657948688269e+09, 3.158785978851336228e+09, 4.461677081363911380e+09, 6.336244831048209270e+09, 9.048130159588677560e+09, 1.299321362309972265e+10, 1.876478261212947929e+10, 2.725703976712888971e+10, 3.982553459064288940e+10, 5.853727794017415415e+10, 8.656299089553103385e+10, 1.287959733041898747e+11, 1.928345065430099883e+11, 2.905510467545806044e+11, 4.406145488098485809e+11, 6.725708918778493152e+11, 1.033486938212196930e+12, 1.598840557086695854e+12, 2.490490134218272825e+12, 3.906528466724583921e+12, 6.171225147961354244e+12, 9.819163736485109137e+12, 1.573800106991564475e+13, 2.541245461530031221e+13, 4.134437628407981776e+13, 6.778141973485971528e+13, 1.119906286595884492e+14, 1.865016806041768967e+14, 3.130890948724989738e+14, 5.298978847669068280e+14, 9.042973899804181753e+14, 1.556259036818991439e+15, 2.701230066368200812e+15, 4.729430105054711279e+15, 8.353779033096586530e+15, 1.488827606293191651e+16, 2.677653466031614956e+16, 4.860434481369499270e+16, 8.905735519300993312e+16, 1.647413728306871552e+17, 3.077081325673016377e+17, 5.804234101329097680e+17, 1.105828570628099614e+18, 2.128315358808074026e+18, 4.138651532085235581e+18, 8.132554212123920035e+18, 1.615146503312570855e+19, 3.242548467260718193e+19, 6.581494581080701321e+19, 1.350831366183090003e+20, 2.804093832520937396e+20, 5.888113683467563837e+20, 1.250923435312468276e+21, 2.689280279098215635e+21, 5.851582825664479700e+21, 1.288917231788944660e+22, 2.874582763768997631e+22, 6.492437335109217869e+22, 1.485286605867082177e+23, 3.442469159113307066e+23, 8.084930196860438207e+23, 1.924506778048094878e+24, 4.643992662491470729e+24, 1.136281452083591334e+25, 2.819664891060694571e+25, 7.097781559991856367e+25, 1.812838850127688486e+26, 4.699012851344539124e+26, 1.236419707162832951e+27, 3.303236261210411286e+27, 8.962558097638891218e+27, 2.470294852986226117e+28, 6.918270960555942883e+28, 1.969189447958411510e+29, 5.698092609453981289e+29, 1.676626156396922084e+30, 5.017901520171556970e+30, 1.527929892279834489e+31, 4.734762318366711949e+31, 1.493572546446777040e+32, 4.797441164681908184e+32, 1.569538296400998732e+33, 5.231651156910242454e+33, 1.777206511525290941e+34, 6.154587299576916134e+34, 2.173469781356604872e+35, 7.829529896526581616e+35, 2.877935554073076917e+36, 1.079761320923458592e+37, 4.136337730951207042e+37, 1.618408489711185844e+38, 6.469770640447824771e+38, 2.643413654859316358e+39, 1.104246728308525703e+40, 4.717842641881260665e+40, 2.062296462389327711e+41, 9.226680005161257219e+41, 4.226544071632731963e+42, 1.983043729707066518e+43, 9.533448690970155039e+43, 4.697914578740208606e+44, 2.373923101980436574e+45, 1.230570211868531753e+46, 6.546344338411695147e+46, 3.575371819335804914e+47, 2.005642453538335506e+48, 1.156055268028903078e+49, 6.849867807870312958e+49, 4.174004815218951121e+50, 2.616872034052857472e+51, 1.688750346837297725e+52, 1.122275666009684101e+53, 7.683968740248677071e+53, 5.422849612654278583e+54, 3.946686701799533415e+55, 2.963543587288132884e+56, 2.297086395798939516e+57, 1.838856414208555761e+58, 1.521049475711243996e+59, 1.300732291175071112e+60, 1.150559591141716740e+61, 1.053265997373725461e+62, 9.984114209879020836e+62, 9.805325615938694719e+63, 9.982463564199115995e+64, 1.054102211457911410e+66, 1.155172684780782463e+67, 1.314571302334116663e+68, 1.554362407685457310e+69, 1.910791206002645077e+70, 2.443616403890711206e+71, 3.252983822318823232e+72, 4.510600140020139737e+73, 6.518821831001902447e+74, 9.825834460774267633e+75, 1.545692063622722856e+77, 2.539346088408163253e+78, 4.359763993811836117e+79, 7.827943627464404744e+80, 1.470896877674301183e+82, 2.894527071420674290e+83, 5.969662541607915492e+84, 1.291277613981057357e+86, 2.931656535626877923e+87, 6.991353547531463135e+88, 1.752671194525972852e+90, 4.622450137056020715e+91, 1.283581933169566226e+93, 3.755839001138390788e+94, 1.158991729845978702e+96, 3.774916315438862678e+97, 1.298844894462381673e+99, 4.725038949943384889e+100, 1.819000031203286740e+102, 7.416966330876906188e+103, 3.206116996910598204e+105, 1.470588770071975193e+107, 7.164198238238641057e+108, 3.710397624567077270e+110, 2.044882454279709373e+112, 1.200428778654730225e+114, 7.513744370030172114e+115, 5.019575746343410636e+117, 3.582726927665698318e+119, 2.734947775877248560e+121, 2.235283764078944248e+123, 1.958084751118243323e+125, 1.840431913109305657e+127, 1.858143260692831108e+129, 2.017432949655777136e+131, 2.358177615888101494e+133, 2.971092974178603610e+135, 4.039532321435816302e+137, 5.933923069661132195e+139, 9.429263693444953240e+141, 1.622841456932873872e+144, 3.028884476067694180e+146, 6.138356175015339477e+148, 1.352531557191942648e+151, 3.244447362295582945e+153]\n];\n\nconst EXP_SINH_WEIGHTS = [\n  [2.703640234162693583e-160, 3.100862940179668765e-58, 5.828334625665462970e-21, 1.628894422402653830e-07, 8.129907377394029252e-03, 2.851214447180802931e-01, 1.228894002317118650e+00, 9.374610761705565881e+00, 6.136846875218162167e+02, 8.367995944653844271e+06, 2.286032371256753845e+17, 9.029964022492184559e+44, 1.637973037681055808e+119],\n  [1.029757744225565290e-96, 5.564174008086804112e-35, 1.534846576427062716e-12, 1.519539651119905182e-04, 7.878691652861874032e-02, 6.288072016384128612e-01, 2.842403831496369386e+00, 5.152309209026500589e+01, 2.554172947873109927e+04, 8.291547503290989754e+10, 6.794911791960761587e+27, 1.108995159102362663e+73],\n  [1.545310485347377408e-124, 4.549745016271158113e-75, 3.781189989988588481e-45, 4.369440793304363176e-27, 3.253896178006708087e-16, 1.057239289288944987e-09, 7.826174663495492476e-06, 1.459783224353939263e-03, 2.972970552567852420e-02, 1.637950661613330541e-01, 4.392303913269138921e-01, 8.744243777287317807e-01, 1.804759465860974506e+00, 4.894937215283148383e+00, 2.036214502429748943e+01, 1.576549789679037479e+02, 3.249553828744194733e+03, 3.335686029489862584e+05, 4.858218914917275532e+08, 5.655171002571584464e+13, 9.084276291356790926e+21, 2.202757570781655071e+35, 1.851176020895552142e+57, 1.873046373612647920e+93, 3.113183070605141140e+152],\n  [2.690380169654157101e-141, 9.388760099830475385e-110, 3.267856956418766261e-85, 4.012903562780032075e-66, 2.794595941054873674e-51, 9.598140333687791635e-40, 8.762766371925782803e-31, 7.896919977115783593e-24, 1.951680620313826776e-18, 2.931867534349928041e-14, 4.976350908135118762e-11, 1.546933241860617074e-08, 1.283189791774752963e-06, 3.809052946018782340e-05, 5.087526585392884730e-04, 3.656819625189471368e-03, 1.627679402690602992e-02, 5.011672130624018967e-02, 1.165913368715250324e-01, 2.201514148384271336e-01, 3.581909054968942386e-01, 5.288599003801643436e-01, 7.422823219366348741e-01, 1.032914080772662205e+00, 1.478415067523268199e+00, 2.242226697017918644e+00, 3.684755742578570582e+00, 6.677326887819023056e+00, 1.358063058433697357e+01, 3.171262375809110066e+01, 8.776338468947827779e+01, 3.006939713363920293e+02, 1.352196150715330628e+03, 8.616353573310419356e+03, 8.591849573350877359e+04, 1.523635814554291966e+06, 5.663834603448267056e+07, 5.450828629396188577e+09, 1.780881993484818221e+12, 2.797112703281894578e+15, 3.300887168363313931e+19, 5.192538272313512016e+24, 2.273085973059979872e+31, 7.124498195222272142e+39, 5.379592741425673874e+50, 4.647296508337283075e+64, 3.395147156494395571e+82, 2.736576372417856435e+105, 6.584825756536212781e+134],\n  [1.692276285171240629e-150, 1.180420021590838281e-132, 6.494931071412232065e-117, 4.979673804239645358e-103, 8.790122245397054202e-91, 5.564311726870413043e-80, 1.867634664877268411e-70, 4.693767384843440310e-62, 1.197772698674604837e-54, 4.060530886983702887e-48, 2.318268710612758367e-42, 2.748088060676949794e-37, 8.136086869664039226e-33, 7.081491999860360593e-29, 2.092407629019781417e-25, 2.383020547076997517e-22, 1.170143938604536054e-19, 2.734857915002515580e-17, 3.319894174569245506e-15, 2.260825106530477104e-13, 9.244747974241858562e-12, 2.410325858091057071e-10, 4.224928060220423782e-09, 5.217223349652829804e-08, 4.730110697329046717e-07, 3.265522864288710545e-06, 1.772851678458610971e-05, 7.787346612077215804e-05, 2.838101678971546354e-04, 8.775026198694109646e-04, 2.347474744139291716e-03, 5.529174974874315725e-03, 1.164520226280038968e-02, 2.223487842904240574e-02, 3.896253311038730452e-02, 6.334975706136386464e-02, 9.651712033300261848e-02, 1.390236708907266445e-01, 1.908593745910709887e-01, 2.515965688234414960e-01, 3.206651646562737595e-01, 3.976974208167367099e-01, 4.828935799767836828e-01, 5.773826389735376677e-01, 6.835838865575605461e-01, 8.056083579298257627e-01, 9.497742078309479997e-01, 1.125351459431134254e+00, 1.345711576612114788e+00, 1.630156867495860456e+00, 2.006880650908830857e+00, 2.517828844916874130e+00, 3.226826819856410846e+00, 4.233461155863004269e+00, 5.697400323487776530e+00, 7.882247346334201378e+00, 1.123717929435969530e+01, 1.655437952523069781e+01, 2.528458931361129124e+01, 4.019700050163276117e+01, 6.682515670231120695e+01, 1.168022589948424530e+02, 2.160045684819153702e+02, 4.257255901158116698e+02, 9.017180693982791021e+02, 2.072151523320542727e+03, 5.222689557952776194e+03, 1.461663959276604441e+04, 4.606455611513396576e+04, 1.660950339384278845e+05, 6.976630616605097333e+05, 3.484240083705972727e+06, 2.117385064786894718e+07, 1.607368605379557548e+08, 1.570235957877638143e+09, 2.041619284762317483e+10, 3.670425964529826371e+11, 9.527196643411724126e+12, 3.749667772735766186e+14, 2.365380223523087981e+16, 2.546815287226970627e+18, 5.026010591299970789e+20, 1.970775914722195502e+23, 1.682531038342715298e+26, 3.469062187981719410e+29, 1.942614547946028081e+33, 3.375034694941022784e+37, 2.115298406181711256e+42, 5.673738540911562268e+47, 7.904099301170483654e+53, 7.121903115084356741e+60, 5.321820777644930491e+68, 4.370977753639010591e+77, 5.429657931755513797e+87, 1.464602226824232950e+99, 1.292445035662836561e+112, 5.936633203060705474e+126, 2.402419924621336913e+143],\n  [2.552410363565288863e-155, 7.965872719315690060e-146, 6.586401422963018216e-137, 1.563673437419490296e-128, 1.149636272392214573e-120, 2.810189759625314580e-113, 2.441446149780773329e-106, 8.026292508555041710e-100, 1.059034284623927886e-93, 5.927259046205893861e-88, 1.482220909125121967e-82, 1.738946448501809732e-77, 1.002047910184021813e-72, 2.960929073720769637e-68, 4.671749731809402860e-64, 4.088398674807775827e-60, 2.056642628601930023e-56, 6.149878578966749305e-53, 1.128142221531950274e-49, 1.307702777646013040e-46, 9.848757125541659318e-44, 4.946847667192787369e-41, 1.698284656321589089e-38, 4.077947349805764486e-36, 6.998897321243266048e-34, 8.762183229651405846e-32, 8.156281709801700633e-30, 5.747366069381804213e-28, 3.117951907317865517e-26, 1.323052992594482858e-24, 4.457166057119926322e-23, 1.208896132634708032e-21, 2.674697849739340358e-20, 4.887394807742436672e-19, 7.461632083041868391e-18, 9.622230748739818989e-17, 1.058884510032627118e-15, 1.003988180288807180e-14, 8.276358838778374127e-14, 5.982281469656734375e-13, 3.821855766886203088e-12, 2.174279097299082001e-11, 1.109294120074848583e-10, 5.109055596902086022e-10, 2.137447956882816268e-09, 8.170468538364022161e-09, 2.869308592926374871e-08, 9.305185930419436742e-08, 2.800231592227134982e-07, 7.855263634214717091e-07, 2.062924236714395731e-06, 5.092224131071637441e-06, 1.185972357373608535e-05, 2.615333473470835518e-05, 5.479175746096322166e-05, 1.093962713107868416e-04, 2.087714243290528595e-04, 3.818797556417767457e-04, 6.712796918790164790e-04, 1.136760145626956604e-03, 1.858775505765622915e-03, 2.941191222579735746e-03, 4.512821350378020080e-03, 6.727293426938802892e-03, 9.760915371480980900e-03, 1.380842853102550981e-02, 1.907678055354397196e-02, 2.577730275571060412e-02, 3.411688991056810143e-02, 4.428892397843486143e-02, 5.646473816310556552e-02, 7.078637998740884103e-02, 8.736131246718460273e-02, 1.062595125372295046e-01, 1.275132133780278017e-01, 1.511193209351630349e-01, 1.770443400812491404e-01, 2.052314915777496186e-01, 2.356095985715091716e-01, 2.681032744853198083e-01, 3.026439500331752405e-01, 3.391813282438962329e-01, 3.776949427111484449e-01, 4.182056049753837852e-01, 4.607866519948383101e-01, 5.055750360563806155e-01, 5.527824318481410262e-01, 6.027066663808878454e-01, 6.557439076684384801e-01, 7.124021812071310501e-01, 7.733169258916167748e-01, 8.392694625821144443e-01, 9.112094418201526544e-01, 9.902825786957198607e-01, 1.077865293953107863e+00, 1.175608288920191064e+00, 1.285491624542001346e+00, 1.409894601042286311e+00, 1.551684711657329886e+00, 1.714331263928885829e+00, 1.902051053858215699e+00, 2.119995922515087770e+00, 2.374495377438728901e+00, 2.673372087884984440e+00, 3.026354489757871517e+00, 3.445619726158519068e+00, 3.946512819227006419e+00, 4.548505964859933724e+00, 5.276487613615791435e+00, 6.162508226184798743e+00, 7.248163842886806184e+00, 8.587878410768473380e+00, 1.025346434903602082e+01, 1.234051869120733230e+01, 1.497748183201988157e+01, 1.833859935862139637e+01, 2.266266859437541631e+01, 2.828045768298752298e+01, 3.565528397044830339e+01, 4.544381261232990127e+01, 5.858833744254070379e+01, 7.645876087681923606e+01, 1.010741758687003802e+02, 1.354538987141142977e+02, 1.841824059064608872e+02, 2.543337025162468240e+02, 3.570103970895535977e+02, 5.099537256432247190e+02, 7.420561390174965949e+02, 1.101323941193719451e+03, 1.669232910686306616e+03, 2.587203282090385703e+03, 4.106608602134535014e+03, 6.685657263550896700e+03, 1.118216368762133982e+04, 1.924811115485038079e+04, 3.416174865734933127e+04, 6.263882227839496242e+04, 1.189094418952240294e+05, 2.342262528110389793e+05, 4.798899889628646876e+05, 1.025279649144740527e+06, 2.290428015483177407e+06, 5.365618820221241118e+06, 1.322172034826883742e+07, 3.438296542047893623e+07, 9.468905314460992170e+07, 2.771843378168242512e+08, 8.658950437199969679e+08, 2.898779165825890846e+09, 1.044627762990198184e+10, 4.071673625087267154e+10, 1.725245696783106160e+11, 7.989856904303845909e+11, 4.067537100664303783e+12, 2.290253922913114847e+13, 1.435560574531699914e+14, 1.008680130601194048e+15, 8.003530334765274913e+15, 7.227937568629809266e+16, 7.491693576707361828e+17, 8.991671234614216799e+18, 1.261556024888540618e+20, 2.090038400033346091e+21, 4.132773073376509056e+22, 9.865671928781943336e+23, 2.877978132616007671e+25, 1.039303004928044064e+27, 4.710544722984128252e+28, 2.719194692980296464e+30, 2.030608169419634520e+32, 1.994536427964099457e+34, 2.622806931876485852e+36, 4.705142628855489738e+38, 1.174794916996875010e+41, 4.170574236544843559e+43, 2.153441953645800917e+46, 1.656794933445123415e+49, 1.948830907651317326e+52, 3.601980393005358786e+55, 1.077033440153993124e+59, 5.374188883861674378e+62, 4.625267105826449467e+66, 7.111646979020385006e+70, 2.027996051444846521e+75, 1.116168784120367146e+80, 1.237019821283735086e+85, 2.888108172342166477e+90, 1.490426937972460544e+96, 1.789306677271856318e+102, 5.276973875344766848e+108, 4.051217867886536330e+115, 8.611617868168979525e+122, 5.412634353380155695e+130, 1.078756609821147465e+139, 7.344353246966125053e+147],\n  [8.688318611421924613e-158, 6.864317997043424201e-153, 3.829638174036322920e-148, 1.524985558970066863e-143, 4.379527631402474835e-139, 9.162408388991747001e-135, 1.410086556664696347e-130, 1.611529786006329005e-126, 1.380269212504431613e-122, 8.938739565456142404e-119, 4.414803004265274778e-115, 1.676831992534574674e-111, 4.937648515671545377e-108, 1.136068312653058895e-104, 2.057969760853201132e-101, 2.956779836249922681e-98, 3.393449014375824853e-95, 3.132619285740674842e-92, 2.341677665639346254e-89, 1.426656997926173190e-86, 7.128825597334931865e-84, 2.939485275517928205e-81, 1.006113300119903410e-78, 2.874969402023240560e-76, 6.896713338909433222e-74, 1.396405038640012785e-71, 2.398869799873387326e-69, 3.514180228970525006e-67, 4.411557600438730779e-65, 4.768408435763044172e-63, 4.458287229998440383e-61, 3.621710763086768959e-59, 2.567373174003034094e-57, 1.594829856885795944e-55, 8.716746897177859412e-54, 4.208424534880021226e-52, 1.801637343401221381e-50, 6.864432292330768862e-49, 2.336084584516383243e-47, 7.125716658075193173e-46, 1.954733295862350631e-44, 4.838195020814970471e-43, 1.083903033389729471e-41, 2.204655424309513426e-40, 4.083431629921110537e-39, 6.907095608064865023e-38, 1.069951518082577963e-36, 1.521972185061747284e-35, 1.993254198127980161e-34, 2.409552194902670884e-33, 2.695243589253751811e-32, 2.796309045342585624e-31, 2.697138787161831243e-30, 2.423968619042656074e-29, 2.034233848004972409e-28, 1.597498662808006882e-27, 1.176341105034547043e-26, 8.138404856556384931e-26, 5.300199402716282910e-25, 3.255367628680633536e-24, 1.889060856810273071e-23, 1.037502167741821871e-22, 5.402129194695882094e-22, 2.671080147950250592e-21, 1.256163163817414397e-20, 5.627458451375099018e-20, 2.405110192151924414e-19, 9.820723025892385774e-19, 3.836610965933493002e-18, 1.435949417965440387e-17, 5.155736116435221852e-17, 1.778106820243535736e-16, 5.897650538103448384e-16, 1.883545377386949394e-15, 5.799022727889041128e-15, 1.723080101027408120e-14, 4.946559668895564981e-14, 1.373437058883951037e-13, 3.692057356296675476e-13, 9.618669754374864080e-13, 2.430904641718059201e-12, 5.965319652795549281e-12, 1.422677541958913512e-11, 3.300412010407028696e-11, 7.453993539444124847e-11, 1.640317480539372495e-10, 3.519919455549922227e-10, 7.371241496931924727e-10, 1.507573517782825692e-09, 3.013444008176544118e-09, 5.891170930525923854e-09, 1.127175867596519203e-08, 2.112135943063526334e-08, 3.878572405868819131e-08, 6.984140168311147329e-08, 1.233979234102365865e-07, 2.140481233406505212e-07, 3.647293211756793211e-07, 6.108366265875129839e-07, 1.006020283089617901e-06, 1.630199379920459998e-06, 2.600430208375972125e-06, 4.085372746054298735e-06, 6.324194831966406940e-06, 9.650830226718535837e-06, 1.452455211307694488e-05, 2.156782506321975658e-05, 3.161234361554654466e-05, 4.575404320696170555e-05, 6.541767069965264068e-05, 9.243122234114186712e-05, 1.291101968446571125e-04, 1.783511762821284409e-04, 2.437337497712608884e-04, 3.296292528289701234e-04, 4.413142327104518440e-04, 5.850859955683163216e-04, 7.683770763700705263e-04, 9.998650298180469208e-04, 1.289573601590465490e-03, 1.648961132392222413e-03, 2.090991995585424661e-03, 2.630186988492201910e-03, 3.282648895332118799e-03, 4.066059914467245175e-03, 4.999648283080481820e-03, 6.104122218554241819e-03, 7.401570199659662364e-03, 8.915327597805008451e-03, 1.066981070009509413e-02, 1.269032020049755525e-02, 1.500281723149735994e-02, 1.763367592672867332e-02, 2.060941730962251417e-02, 2.395642996410886880e-02, 2.770068343772389725e-02, 3.186744063963193757e-02, 3.648097561865623097e-02, 4.156430303997019336e-02, 4.713892543167989540e-02, 5.322460385886412684e-02, 5.983915712308283792e-02, 6.699829390463281224e-02, 7.471548149065050122e-02, 8.300185389391494996e-02, 9.186616129460712899e-02, 1.013147618591979452e-01, 1.113516561340355690e-01, 1.219785634003157786e-01, 1.331950386328042665e-01, 1.449986280439946752e-01, 1.573850606313672716e-01, 1.703484726870446791e-01, 1.838816618814874884e-01, 1.979763672973498048e-01, 2.126235716643688402e-01, 2.278138220265254991e-01, 2.435375651517067386e-01, 2.597854941629632707e-01, 2.765489031191654411e-01, 2.938200465906351752e-01, 3.115925016510994851e-01, 3.298615301301230823e-01, 3.486244394295739435e-01, 3.678809406939879716e-01, 3.876335036292959599e-01, 4.078877077798518471e-01, 4.286525905940105684e-01, 4.499409931290513174e-01, 4.717699047639316286e-01, 4.941608088016098926e-01, 5.171400313514193966e-01, 5.407390963876342256e-01, 5.649950903858123945e-01, 5.899510404480374918e-01, 6.156563103475134535e-01, 6.421670194591982411e-01, 6.695464901047961714e-01, 6.978657294374126896e-01, 7.272039526349696447e-01, 7.576491548751669105e-01, 7.892987403432202489e-01, 8.222602173936578230e-01, 8.566519699682320391e-01, 8.926041164852169437e-01, 9.302594686857616145e-01, 9.697746043788558519e-01, 1.011321069700320644e+00, 1.055086728430498711e+00, 1.101277278143300224e+00, 1.150117955536247302e+00, 1.201855456275760449e+00, 1.256760098152647779e+00, 1.315128260359919236e+00, 1.377285136373095709e+00, 1.443587843343442141e+00, 1.514428937238563465e+00, 1.590240390338335337e+00, 1.671498096302065311e+00, 1.758726978084942299e+00, 1.852506785760205887e+00, 1.953478685110838140e+00, 2.062352754065132708e+00, 2.179916523112736371e+00, 2.307044718290330681e+00, 2.444710391817196957e+00, 2.593997656772008968e+00, 2.756116279277535182e+00, 2.932418425642610903e+00, 3.124417914187536020e+00, 3.333812383735923205e+00, 3.562508865047068391e+00, 3.812653330296280988e+00, 4.086664902155689132e+00, 4.387275531849634155e+00, 4.717576109385405085e+00, 5.081070154695596855e+00, 5.481736462718817995e+00, 5.924102347216244340e+00, 6.413329458204850426e+00, 6.955314549766230740e+00, 7.556808065486941215e+00, 8.225554008952760095e+00, 8.970455302965185036e+00, 9.801769746699598466e+00, 1.073134279679936208e+01, 1.177288477943655549e+01, 1.294230185297226511e+01, 1.425809217068106541e+01, 1.574182134943112610e+01, 1.741869467329444792e+01, 1.931824763074534781e+01, 2.147518163232618457e+01, 2.393037838236259586e+01, 2.673213477270754163e+01, 2.993767083537830673e+01, 3.361497689655818107e+01, 3.784508348524495401e+01, 4.272485990900652026e+01, 4.837047622725585887e+01, 5.492170063250241752e+01, 6.254725265973777743e+01, 7.145149574983117631e+01, 8.188283528217430591e+01, 9.414429671899321190e+01, 1.086069017070108772e+02, 1.257266497442910506e+02, 1.460661655727672308e+02, 1.703224100743601641e+02, 1.993623058409479084e+02, 2.342687403011957198e+02, 2.764002385528330658e+02, 3.274687277481591846e+02, 3.896413615832930151e+02, 4.656745019682919178e+02, 5.590908996105107215e+02, 6.744152109571297875e+02, 8.174887172033244140e+02, 9.958921680864290197e+02, 1.219517071629880108e+03, 1.501341972869855447e+03, 1.858493492282554856e+03, 2.313705362529768409e+03, 2.897337235279879262e+03, 3.650185874628374320e+03, 4.627425468074182920e+03, 5.904167858279871204e+03, 7.583363128219763259e+03, 9.807105719965428472e+03, 1.277293273832114230e+04, 1.675749596877978193e+04, 2.215121038263169759e+04, 2.950937349291504490e+04, 3.962820433513419525e+04, 5.365890489878942635e+04, 7.328024305737981431e+04, 1.009620167752942516e+05, 1.403709568321740997e+05, 1.970019955923188504e+05, 2.791695960502382133e+05, 3.995801250202947693e+05, 5.778515877588312220e+05, 8.445944401474017243e+05, 1.248092975135001687e+06, 1.865367859966950385e+06, 2.820705292493674480e+06, 4.317063433830483499e+06, 6.689961127164684387e+06, 1.050111601631327499e+07, 1.670327884792325766e+07, 2.693430470211696200e+07, 4.404906898054894166e+07, 7.309535640536363311e+07, 1.231306812701882145e+08, 2.106560568719367745e+08, 3.662073971851359192e+08, 6.472124787519330196e+08, 1.163486593592585616e+09, 2.128658395254150452e+09, 3.965732938755983605e+09, 7.527735928223242836e+09, 1.456757162128879538e+10, 2.875798636941021041e+10, 5.794999654160054887e+10, 1.192767536774485257e+11, 2.509334090779650360e+11, 5.399624414800303207e+11, 1.189276111740286910e+12, 2.683103883355551677e+12, 6.205255919751506427e+12, 1.472284072112162717e+13, 3.586628373992547853e+13, 8.978594107356889337e+13, 2.311710197091641250e+14, 6.127020712804348908e+14, 1.673232679378485978e+15, 4.712671499032329365e+15, 1.370275025680988289e+16, 4.117347054027612886e+16, 1.279822436878842710e+17, 4.119762767831332886e+17, 1.374888606936629814e+18, 4.762483833659790733e+18, 1.714288404980390540e+19, 6.420200704842635702e+19, 2.504808062315322558e+20, 1.019355251138167687e+21, 4.332952958521756932e+21, 1.926416464889827426e+22, 8.971059571108856501e+22, 4.382317748928748816e+23, 2.249003059943548727e+24, 1.214458587662725100e+25, 6.911683912813140938e+25, 4.152578123301633020e+26, 2.638346388179288086e+27, 1.775811490887700718e+28, 1.268552401544524965e+29, 9.635786341213661742e+29, 7.797939379813000783e+30, 6.736900087983560033e+31, 6.226288752443836475e+32, 6.169035287163451891e+33, 6.567250104576983172e+34, 7.528666735185428595e+35, 9.316271421365627344e+36, 1.247410737003664698e+38, 1.811787648043939987e+39, 2.861918583157116420e+40, 4.929657099622567574e+41, 9.284951278562156071e+42, 1.917687997037326435e+44, 4.355948096683946408e+45, 1.091453486585817118e+47, 3.026206402784023251e+48, 9.314478983991942688e+49, 3.193195693823940775e+51, 1.223447678968662613e+53, 5.257403184148516426e+54, 2.543108925126136766e+56, 1.389947584026783879e+58, 8.616987336205957549e+59, 6.083777056769299984e+61, 4.911841077800001710e+63, 4.554259483169784661e+65, 4.870815185962582259e+67, 6.036211886847067841e+69, 8.708377755587698026e+71, 1.469655296381977267e+74, 2.915822924489215887e+76, 6.836044306573246016e+78, 1.903917300559946782e+81, 6.333813341980360028e+83, 2.531082268773868753e+86, 1.222077360592898816e+89, 7.172167453276776330e+91, 5.148160232410244898e+94, 4.548619807672339638e+97, 4.979632843475864923e+100, 6.800802744782331957e+103, 1.166855497965918386e+107, 2.533457765534279043e+110, 7.012864641215147208e+113, 2.494083354169569414e+117, 1.148722178881219993e+121, 6.908313932158993510e+124, 5.470912484744367184e+128, 5.755359832684120769e+132, 8.115681923907451939e+136, 1.548304780334447081e+141, 4.034912159113614601e+145, 1.450632759611715526e+150, 7.268799665580789770e+154],\n  [4.901759085947701448e-159, 1.505832423620814399e-156, 4.231872109262999523e-154, 1.089479701785106001e-151, 2.572922387150651649e-149, 5.581311054334156941e-147, 1.113575900126970040e-144, 2.046165051332286084e-142, 3.466994885004770636e-140, 5.423795404073501922e-138, 7.843833272402847010e-136, 1.049922957933194415e-133, 1.302301071957418603e-131, 1.498659737828393008e-129, 1.601906622414286282e-127, 1.592248618401983561e-125, 1.473375345916436274e-123, 1.270651551394009593e-121, 1.022408263525766209e-119, 7.683762602329562781e-118, 5.399268127233373186e-116, 3.551074274853494676e-114, 2.188235409519121010e-112, 1.264667515430816934e-110, 6.861807566737243712e-109, 3.498691686825209963e-107, 1.678016807398375157e-105, 7.577439431441931490e-104, 3.224703770159386809e-102, 1.294487090677705963e-100, 4.906133250963454139e-99, 1.757121317988153326e-97, 5.952042491454320383e-96, 1.908566653286417264e-94, 5.798224459236429212e-93, 1.670293239978334727e-91, 4.566236673398083038e-90, 1.185617342791547945e-88, 2.926160027801296929e-87, 6.870061134126707137e-86, 1.535565783500379945e-84, 3.270036736778401257e-83, 6.639558007206580362e-82, 1.286319750967398593e-80, 2.379566581139022958e-79, 4.206268231398883425e-78, 7.109719237833379433e-77, 1.149915104115372777e-75, 1.780876201255594220e-74, 2.642703796179329883e-73, 3.760085375941719327e-72, 5.132920951124251993e-71, 6.727100274601427696e-70, 8.469585621347697498e-69, 1.025032382672232848e-67, 1.193219127557863348e-66, 1.336816930381306582e-65, 1.442283479679798385e-64, 1.499374555004793991e-63, 1.502797203133501438e-62, 1.453005969318485303e-61, 1.355980448377862540e-60, 1.222072412212552127e-59, 1.064223180270520159e-58, 8.959667396075636845e-58, 7.296288808079294105e-57, 5.750255296190181158e-56, 4.388011664829013518e-55, 3.243852451291832398e-54, 2.324239357665538806e-53, 1.614869776203026446e-52, 1.088524605545274842e-51, 7.121755574192829045e-51, 4.524647662549067074e-50, 2.792730715818793035e-49, 1.675384879603864227e-48, 9.773114328777676091e-48, 5.545910766847627082e-47, 3.062809705627873645e-46, 1.646862118038266234e-45, 8.625108513887155847e-45, 4.401687663868890701e-44, 2.189755778847646746e-43, 1.062345336449265889e-42, 5.028036663485684049e-42, 2.322524635717249223e-41, 1.047406593898341306e-40, 4.613438388449698168e-40, 1.985397445118162005e-39, 8.351027367454628343e-39, 3.434440903484543389e-38, 1.381489131877196646e-37, 5.437051201310225224e-37, 2.094357548080647717e-36, 7.898676618592006902e-36, 2.917536870947471272e-35, 1.055788886022716597e-34, 3.744333812160330812e-34, 1.301801185251957290e-33, 4.438346216893387768e-33, 1.484348268951816542e-32, 4.871001129849836971e-32, 1.568903000742513942e-31, 4.961295315917935235e-31, 1.540773910027990821e-30, 4.700558022172014910e-30, 1.409115230718949596e-29, 4.151913103955692034e-29, 1.202737613715427748e-28, 3.426327374934496736e-28, 9.601405359397026012e-28, 2.647278642033773301e-27, 7.183442220565147103e-27, 1.918850545981494042e-26, 5.046974779455992494e-26, 1.307394799925911700e-25, 3.336342198236957082e-25, 8.389259581136262194e-25, 2.079051813513548608e-24, 5.079178967243765280e-24, 1.223501794357837278e-23, 2.906654911057549530e-23, 6.811668606095015470e-23, 1.574985938238025303e-22, 3.593796788969348326e-22, 8.094185411205212564e-22, 1.799796183237481721e-21, 3.951758901641017285e-21, 8.569580068050865775e-21, 1.835753486517298696e-20, 3.885414339966022317e-20, 8.126613972895021790e-20, 1.680007182889503141e-19, 3.433369351563962828e-19, 6.937695550399427499e-19, 1.386345631008981755e-18, 2.740087497759230881e-18, 5.357570288683386626e-18, 1.036464933022803784e-17, 1.984249442010084992e-17, 3.759788006060003409e-17, 7.052211261821684795e-17, 1.309635641529546221e-16, 2.408275496109180528e-16, 4.385898809611711552e-16, 7.911758686849121285e-16, 1.413883597877183873e-15, 2.503477536644680210e-15, 4.392637866550705827e-15, 7.638710306960574612e-15, 1.316703360377476041e-14, 2.250031027275448919e-14, 3.812239733412214953e-14, 6.405021660191363479e-14, 1.067250538270319484e-13, 1.763897493784721010e-13, 2.891987565334547756e-13, 4.704242520369958085e-13, 7.592878273512691990e-13, 1.216183338372525172e-12, 1.933388593436624879e-12, 3.050826852442290751e-12, 4.779080020017636657e-12, 7.432734713385425098e-12, 1.147833888125873666e-11, 1.760286160372422754e-11, 2.681071101623953168e-11, 4.056023754295965437e-11, 6.095443492241537222e-11, 9.100550129616064211e-11, 1.349993452136967652e-10, 1.989943912395156051e-10, 2.914996073619059788e-10, 4.243900781412219621e-10, 6.141353162671391082e-10, 8.834365795894798511e-10, 1.263395594025933170e-09, 1.796369250051716047e-09, 2.539704143326480862e-09, 3.570592498287890499e-09, 4.992348403150539107e-09, 6.942471870489931483e-09, 9.602949600164561371e-09, 1.321333712761666777e-08, 1.808727901635346390e-08, 2.463325364767791516e-08, 3.338047870136870496e-08, 4.501108426108505069e-08, 6.039985413333259594e-08, 8.066305374526097834e-08, 1.072181059018892614e-07, 1.418561443795353991e-07, 1.868297699836383305e-07, 2.449586539172972009e-07, 3.197559780442760832e-07, 4.155790690867544334e-07, 5.378079713325544678e-07, 6.930561064776686194e-07, 8.894175852502122454e-07, 1.136756157868726006e-06, 1.447041212534730898e-06, 1.834736645332833504e-06, 2.317248822354253644e-06, 2.915440225825303911e-06, 3.654215709863551870e-06, 4.563188576773760151e-06, 5.677433909482232878e-06, 7.038336747307571784e-06, 8.694542758083067228e-06, 1.070301902702759858e-05, 1.313023243937403750e-05, 1.605345286789073897e-05, 1.956218797728780449e-05, 2.375975591555218862e-05, 2.876500146954361208e-05, 3.471416041263076209e-05, 4.176287576185915239e-05, 5.008836848967403773e-05, 5.989176390181730373e-05, 7.140057340280213227e-05, 8.487132973049760036e-05, 1.005923719620999934e-04, 1.188867746885496973e-04, 1.401154137398069279e-04, 1.646801587388731249e-04, 1.930271805904271778e-04, 2.256503597954330556e-04, 2.630947792533707128e-04, 3.059602829980946180e-04, 3.549050801425155303e-04, 4.106493712131842727e-04, 4.739789720708565436e-04, 5.457489087697051069e-04, 6.268869550379884668e-04, 7.183970825975973673e-04, 8.213627933082928901e-04, 9.369503011517966364e-04, 1.066411531385725184e-03, 1.211086903819095417e-03, 1.372407867107646339e-03, 1.551899151252505624e-03, 1.751180706119547318e-03, 1.971969294784470944e-03, 2.216079711850908971e-03, 2.485425598581779636e-03, 2.782019828718993257e-03, 3.107974441230220176e-03, 3.465500098895993776e-03, 3.856905054613959619e-03, 4.284593610523639393e-03, 4.751064058515097225e-03, 5.258906094345618421e-03, 5.810797701414435799e-03, 6.409501504198915943e-03, 7.057860595396970186e-03, 7.758793844909123446e-03, 8.515290702888369372e-03, 9.330405513145299523e-03, 1.020725135717912572e-02, 1.114899345297222760e-02, 1.215884213639836574e-02, 1.324004545661629463e-02, 1.439588142011718850e-02, 1.562964992113485073e-02, 1.694466439888404584e-02, 1.834424326453982033e-02, 1.983170114298836870e-02, 2.141033997615067889e-02, 2.308344003609062690e-02, 2.485425089716015368e-02, 2.672598241710042669e-02, 2.870179577730820310e-02, 3.078479463239356953e-02, 3.297801641870515720e-02, 3.528442387069167064e-02, 3.770689679281728890e-02, 4.024822413326941635e-02, 4.291109640390936770e-02, 4.569809848884132640e-02, 4.861170288163592155e-02, 5.165426338866744454e-02, 5.482800933323496446e-02, 5.813504029216542680e-02, 6.157732139347005467e-02, 6.515667920037330165e-02, 6.887479820368566403e-02, 7.273321794107712090e-02, 7.673333075835566151e-02, 8.087638022439339824e-02, 8.516346020789830747e-02, 8.959551462082867423e-02, 9.417333782991444898e-02, 9.889757573450802477e-02, 1.037687275058577967e-01, 1.087871479799008567e-01, 1.139530506928239996e-01, 1.192665115459606141e-01, 1.247274730840887416e-01, 1.303357493688843496e-01, 1.360910314271734020e-01, 1.419928932517243620e-01, 1.480407983306351483e-01, 1.542341066798992024e-01, 1.605720823524863565e-01, 1.670539013962460335e-01, 1.736786602321317742e-01, 1.804453844236544912e-01, 1.873530378080931153e-01, 1.944005319598201097e-01, 2.015867359561292115e-01, 2.089104864161762672e-01, 2.163705977840528187e-01, 2.239658728275971045e-01, 2.316951133252986765e-01, 2.395571309145607347e-01, 2.475507580756380088e-01, 2.556748592267567912e-01, 2.639283419072366399e-01, 2.723101680268593668e-01, 2.808193651612593497e-01, 2.894550378747292326e-01, 2.982163790535362503e-01, 3.071026812346166036e-01, 3.161133479163487600e-01, 3.252479048399920142e-01, 3.345060112323053140e-01, 3.438874710018250777e-01, 3.533922438832718793e-01, 3.630204565265675291e-01, 3.727724135289699431e-01, 3.826486084108677024e-01, 3.926497345378144818e-01, 4.027766959934214472e-01, 4.130306184097598756e-01, 4.234128597639539906e-01, 4.339250211516634154e-01, 4.445689575501645526e-01, 4.553467885857401860e-01, 4.662609093220769612e-01, 4.773140010883521767e-01, 4.885090423676662636e-01, 4.998493197684479070e-01, 5.113384391034281429e-01, 5.229803366027518117e-01, 5.347792902897740156e-01, 5.467399315500809553e-01, 5.588672569262846167e-01, 5.711666401731758417e-01, 5.836438446098876156e-01, 5.963050358078278898e-01, 6.091567946552975691e-01, 6.222061308419237716e-01, 6.354604968083211637e-01, 6.489278022087558681e-01, 6.626164289370386795e-01, 6.765352467684294227e-01, 6.906936296730053994e-01, 7.051014728587479919e-01, 7.197692106055475377e-01, 7.347078349544334315e-01, 7.499289153196209421e-01, 7.654446190944464391e-01, 7.812677333259577661e-01, 7.974116875368567865e-01, 8.138905777776784362e-01, 8.307191919965581771e-01, 8.479130368187123741e-01, 8.654883658328603475e-01, 8.834622094872810766e-01, 9.018524067040521621e-01, 9.206776383262963142e-01, 9.399574625199963151e-01, 9.597123522591707284e-01, 9.799637350309700387e-01, 1.000734034905599933e+00, 1.022046717124952010e+00, 1.043926335373472893e+00, 1.066398581905185161e+00, 1.089490340711946628e+00, 1.113229743930062164e+00, 1.137646231695313314e+00, 1.162770615670420260e+00, 1.188635146483979071e+00, 1.215273585336112390e+00, 1.242721280043529050e+00, 1.271015245815510799e+00, 1.300194251072644711e+00, 1.330298908642019971e+00, 1.361371772686240192e+00, 1.393457441749111730e+00, 1.426602668328411758e+00, 1.460856475415888358e+00, 1.496270280476785338e+00, 1.532898027375920169e+00, 1.570796326794896619e+00, 1.610024605725646420e+00, 1.650645266669431435e+00, 1.692723857217988332e+00, 1.736329250744977731e+00, 1.781533838991654903e+00, 1.828413737391087381e+00, 1.877049004040720448e+00, 1.927523873304087635e+00, 1.979927005099477087e+00, 2.034351751016940433e+00, 2.090896438495766214e+00, 2.149664674393090421e+00, 2.210765669381402212e+00, 2.274314584729113927e+00, 2.340432903144970240e+00, 2.409248825504827076e+00, 2.480897695429288043e+00, 2.555522453844001656e+00, 2.633274125832370887e+00, 2.714312342284411608e+00, 2.798805899057066353e+00, 2.886933356592141886e+00, 2.978883683190077867e+00, 3.074856945413050211e+00, 3.175065049391765683e+00, 3.279732537139255280e+00, 3.389097442334834102e+00, 3.503412210435275865e+00, 3.622944688401595705e+00, 3.747979189802462585e+00, 3.878817641573403805e+00, 4.015780819279312670e+00, 4.159209678351536168e+00, 4.309466789455788368e+00, 4.466937886899736897e+00, 4.632033539816493591e+00, 4.805190956770360727e+00, 4.986875935432896972e+00, 5.177584970080537688e+00, 5.377847530880629761e+00, 5.588228530273088035e+00, 5.809330993233640059e+00, 6.041798949837089488e+00, 6.286320570342285919e+00, 6.543631565013652661e+00, 6.814518873098582608e+00, 7.099824667819718682e+00, 7.400450706942931008e+00, 7.717363061475788814e+00, 8.051597258371279584e+00, 8.404263876795383951e+00, 8.776554641607500109e+00, 9.169749062247565207e+00, 9.585221670276993889e+00, 1.002444991444300704e+01, 1.048902277839603856e+01, 1.098065019316492606e+01, 1.150117332427169985e+01, 1.205257582204547280e+01, 1.263699613338454324e+01, 1.325674098404332380e+01, 1.391430015262873368e+01, 1.461236267104086712e+01, 1.535383460126837531e+01, 1.614185855545811846e+01, 1.697983514525758524e+01, 1.787144656784601339e+01, 1.882068256013178484e+01, 1.983186897964764985e+01, 2.090969930111845450e+01, 2.205926935196095527e+01, 2.328611564861881683e+01, 2.459625773922860138e+01, 2.599624500732998276e+01, 2.749320844694889238e+01, 2.909491798228195984e+01, 3.080984597641076715e+01, 3.264723765414180400e+01, 3.461718925554321861e+01, 3.673073484057443067e+01, 3.899994278315456980e+01, 4.143802312713618427e+01, 4.405944712930142330e+01, 4.688008048840357439e+01, 4.991733195758662298e+01, 5.319031926387298369e+01, 5.672005451703465811e+01, 6.052965158594831140e+01, 6.464455825915836491e+01, 6.909281639443131774e+01, 7.390535370725211687e+01, 7.911631135942343489e+01, 8.476341209659472308e+01, 9.088837435982152722e+01, 9.753737857533253823e+01, 1.047615927251647361e+02, 1.126177653386554197e+02, 1.211688952437418817e+02, 1.304849888043593828e+02, 1.406439169773708701e+02, 1.517323863863765989e+02, 1.638470407739824279e+02, 1.770957117100033620e+02, 1.915988403612775885e+02, 2.074910955409497265e+02, 2.249232172361061194e+02, 2.440641194630869936e+02, 2.651032917390266964e+02, 2.882535448280364212e+02, 3.137541538897424513e+02, 3.418744609277612322e+02, 3.729180087461214321e+02, 4.072272907593818790e+02, 4.451892153103389878e+02, 4.872414000388630927e+02, 5.338794318098249932e+02, 5.856652513400113117e+02, 6.432368496766822816e+02, 7.073194969336578611e+02, 7.787387632221277236e+02, 8.584356387770406827e+02, 9.474841163944599543e+02, 1.047111666301969297e+03, 1.158723113719277435e+03, 1.283928525349707755e+03, 1.424575826189363437e+03, 1.582789006393775706e+03, 1.761012944445459235e+03, 1.962066073573121788e+03, 2.189202360708354222e+03, 2.446184360349559652e+03, 2.737369460761187093e+03, 3.067811870808767638e+03, 3.443383419509962754e+03, 3.870916878218207705e+03, 4.358376293464465508e+03, 4.915059769420260559e+03, 5.551841303216967404e+03, 6.281459704453426129e+03, 7.118864385205665710e+03, 8.081629967627799596e+03, 9.190454321738597280e+03, 1.046975794051835702e+04, 1.194840663946247320e+04, 1.366058463062104793e+04, 1.564685131637809273e+04, 1.795542299179967539e+04, 2.064373043744082514e+04, 2.378031563732670807e+04, 2.744714621995650953e+04, 3.174244552480722739e+04, 3.678416050731336226e+04, 4.271422037773508051e+04, 4.970377768100323981e+04, 5.795967273138576164e+04, 6.773242484608792593e+04, 7.932613346949942761e+04, 9.311077397156915450e+04, 1.095375030536372224e+05, 1.291577556735669526e+05, 1.526471301608741586e+05, 1.808353350969648289e+05, 2.147438294770164181e+05, 2.556332515573999948e+05, 3.050633345562097502e+05, 3.649687926665853954e+05, 4.377556866857485380e+05, 5.264241222943208736e+05, 6.347248990108319410e+05, 7.673600526542426466e+05, 9.302403050337502786e+05, 1.130816502666451845e+06, 1.378507531155523742e+06, 1.685254393964162275e+06, 2.066239770168639390e+06, 2.540825270229354918e+06, 3.133775962036416630e+06, 3.876865148275802393e+06, 4.810984054018349430e+06, 5.988924089534678664e+06, 7.479057929608060924e+06, 9.370225698693408867e+06, 1.177824230977510661e+07, 1.485459301432580619e+07, 1.879809270383398104e+07, 2.387057334436346400e+07, 3.041806552258603202e+07, 3.889950046843262151e+07, 4.992574374586696017e+07, 6.431287504495613210e+07, 8.315518519925858136e+07, 1.079255664704117961e+08, 1.406141073390035115e+08, 1.839201785677305607e+08, 2.415197116904975365e+08, 3.184386015381112281e+08, 4.215765018929686736e+08, 5.604446356915114550e+08, 7.482094398046911572e+08, 1.003175129668246151e+09, 1.350898918997482870e+09, 1.827222165053491590e+09, 2.482633480831760933e+09, 3.388577637234919719e+09, 4.646620065299105644e+09, 6.401821801566297122e+09, 8.862352038053251473e+09, 1.232838602859196811e+10, 1.723489297480180023e+10, 2.421530528469447376e+10, 3.419673813208063025e+10, 4.854312364622606540e+10, 6.927149043760342676e+10, 9.938049490186203616e+10, 1.433521424759854145e+11, 2.079221734483088227e+11, 3.032695241820108158e+11, 4.448631503727710431e+11, 6.563458646477901051e+11, 9.740635696398910980e+11, 1.454220520059656158e+12, 2.184250688898627320e+12, 3.300999104757560757e+12, 5.019970485022749012e+12, 7.682676299017607834e+12, 1.183376596003983872e+13, 1.834748853557035315e+13, 2.863639312458363586e+13, 4.499803892715039958e+13, 7.119486876989154498e+13, 1.134307017980122346e+14, 1.820065782363618395e+14, 2.941484500615394037e+14, 4.788707305890930382e+14, 7.854025036928623551e+14, 1.297894304619860251e+15, 2.161279954782425640e+15, 3.627102147035003834e+15, 6.135342933440950378e+15, 1.046170006362244506e+16, 1.798477357839665686e+16, 3.117473412332331475e+16, 5.449445073049184222e+16, 9.607515505017978212e+16, 1.708589224452677852e+17, 3.065429751110228665e+17, 5.549227437451149511e+17, 1.013730232778046314e+18, 1.869059895876405824e+18, 3.478549552381578424e+18, 6.535992245975463763e+18, 1.240019272261066308e+19, 2.375828866910936629e+19, 4.597682433604432625e+19, 8.988106816837128428e+19, 1.775302379393632263e+20, 3.543413304390973486e+20, 7.148061397675525327e+20, 1.457620510577186305e+21, 3.005137124879829797e+21, 6.265024861633250697e+21, 1.320979941090283816e+22, 2.817487535902146221e+22, 6.079933041429805231e+22, 1.327658853647212083e+23, 2.934311759183641318e+23, 6.565087216807130026e+23, 1.487212273437937650e+24, 3.411840196076788128e+24, 7.928189928797018762e+24, 1.866451877029704857e+25, 4.452521859886739549e+25, 1.076545435174977662e+26, 2.638685681190697586e+26, 6.557908470244186498e+26, 1.652952243735585721e+27, 4.226383395914916199e+27, 1.096450394268080148e+28, 2.886822082999286080e+28, 7.715480389344015925e+28, 2.093728789309964846e+29, 5.770275789447655037e+29, 1.615463845391781140e+30, 4.595470055795608691e+30, 1.328629392686523255e+31, 3.905079681530784219e+31, 1.167134024271997252e+32, 3.548058538654277403e+32, 1.097378059358046160e+33, 3.454102978064445595e+33, 1.106745393701652323e+34, 3.610899559139069994e+34, 1.199946999283670567e+35, 4.062687014190878792e+35, 1.401835223893224514e+36, 4.931085527333162173e+36, 1.768812393284919500e+37, 6.472148293945199961e+37, 2.416453721739211922e+38, 9.208944720398123862e+38, 3.583297028622126676e+39, 1.424097482596699440e+40, 5.782627833426411524e+40, 2.399862204084363183e+41, 1.018291572042305460e+42, 4.419105414822034531e+42, 1.962126117680499311e+43, 8.916742424061253707e+43, 4.148882478294757720e+44, 1.977256529558276930e+45, 9.655300233875401080e+45, 4.832878898335598922e+46, 2.480575878223098058e+47, 1.306102809757654706e+48, 7.057565717289569232e+48, 3.915276522229618618e+49, 2.230898980943393318e+50, 1.306141334496309306e+51, 7.861021286656392627e+51, 4.865583758538451107e+52, 3.098487425915704674e+53, 2.031037614862563901e+54, 1.370999647608260200e+55, 9.534736274325001528e+55, 6.834959923166415407e+56, 5.052733546324789020e+57, 3.853810997282159979e+58, 3.034183107853208298e+59, 2.467161926009838899e+60, 2.072901039813580593e+61, 1.800563980579615383e+62, 1.617764027895344257e+63, 1.504283028250688329e+64, 1.448393206525427172e+65, 1.444855510980115799e+66, 1.494120428855029243e+67, 1.602566566107015722e+68, 1.783880504153942988e+69, 2.061999240572760738e+70, 2.476521794698572715e+71, 3.092349914153497358e+72, 4.016927238305985810e+73, 5.431607545226497387e+74, 7.650086824042822759e+75, 1.123017984114349288e+77, 1.719382952966052004e+78, 2.747335718690686674e+79, 4.584545010557684123e+80, 7.995082041539250252e+81, 1.458119909365899044e+83, 2.783001178679600175e+84, 5.562812231966194628e+85, 1.165338768982404578e+87, 2.560399126432838224e+88, 5.904549641859098192e+89, 1.430278474749838710e+91, 3.642046122956932563e+92, 9.756698571206402300e+93, 2.751946044275883051e+95, 8.179164793643197279e+96, 2.563704735086825890e+98, 8.481656496128255880e+99, 2.964260254403981007e+101, 1.095342970031208886e+103, 4.283148547584870628e+104, 1.773954352944319744e+106, 7.788991081894224760e+107, 3.628931721056821352e+109, 1.795729272516020592e+111, 9.446685151482835339e+112, 5.288263179614488101e+114, 3.153311236741401362e+116, 2.004807079683827669e+118, 1.360407192665237716e+120, 9.862825609807810517e+121, 7.647551788591128099e+123, 6.348802224871730088e+125, 5.649062361980019098e+127, 5.393248003523784781e+129, 5.530897191915703916e+131, 6.099598644640894333e+133, 7.242098433491964504e+135, 9.268083053637375570e+137, 1.279942702416040582e+140, 1.909796626960621302e+142, 3.082540300669885040e+144, 5.388809732384179657e+146, 1.021610251056626535e+149, 2.103005440072790650e+151, 4.706753990348725570e+153, 1.146834128125248991e+156]\n];\n\n/**\n * Computes x * 2 ^ exp\n * Sourced from: http://croquetweak.blogspot.com/2014/08/deconstructing-floats-frexp-and-ldexp.html\n *\n * @param x mantissa\n * @param exp exponent\n * @return {*}\n */\nfunction ldexp(x, exp) {\n  let steps = Math.min(3, Math.ceil(Math.abs(exp) / 1023));\n  let result = x;\n  for (let i = 0; i < steps; i++)\n    result *= Math.pow(2, Math.floor((exp + i) / steps));\n\n  return result;\n}\n\n/**\n * Performs double exponential quadrature using the change of variable x = exp(pi/2 * sinh(t)), from Takahashi 1974.\n * The native range of this integrator is [0, inf].\n */\nclass ExpSinh {\n  constructor(max_refinements=9, tol=ROOT_EPSILON) {\n    this.tol = tol;\n    this.m_max_refinements = max_refinements;\n    this.m_committed_refinements = EXP_SINH_WEIGHTS.length;\n    this.m_t_min = -6.164062500000000000;\n    this.m_abscissas = [...EXP_SINH_ABSCISSAS];\n    this.m_weights = [...EXP_SINH_WEIGHTS];\n  }\n\n  extend_refinements() {\n    if (this.m_committed_refinements >= this.m_max_refinements) {\n      return;\n    }\n\n    let row = ++this.m_committed_refinements;\n    let h = ldexp(1, -row);\n    const t_max = this.m_t_min + this.m_abscissas[0].length - 1;\n    let k = Math.trunc(Math.ceil((t_max - this.m_t_min) / (2 * h)));\n    this.m_abscissas[row] = new Array(k);\n    this.m_weights[row] = new Array(k);\n    let arg = this.m_t_min;\n    let j = 0;\n    let l = 2;\n    while (arg + l*h < t_max) {\n      arg = this.m_t_min + (2 * j + 1) * h;\n      let x = Math.exp(0.5 * Math.PI * Math.sinh(arg));\n      this.m_abscissas[row].push(x);\n      let w = Math.cosh(arg) * 0.5 * Math.PI * x;\n      this.m_weights[row].push(w);\n      ++j;\n    }\n  }\n\n  get_abscissa_row(n) {\n    if (this.m_committed_refinements < n) {\n      this.extend_refinements();\n    }\n\n    return this.m_abscissas[n];\n  }\n\n  get_weight_row(n) {\n    if (this.m_committed_refinements < n) {\n      this.extend_refinements();\n    }\n\n    return this.m_weights[n];\n  }\n\n  integrate(f, a, b) {\n    let integrand = f;\n    if (isFinite(a) && (b >= Number.MAX_VALUE)) {\n      if (a !== 0) {\n        integrand = x => f(x + a);\n      }\n    }\n\n    if (isFinite(b) && (a <= -Number.MAX_VALUE)) {\n      integrand = x => f(b - x);\n    }\n\n    if (a <= -Number.MAX_VALUE && b >= Number.MAX_VALUE) {\n      throw new RangeError(\"Error: use sinh_sinh quadrature for integration over entire real line, exp_sinh is for half infinite [0, inf]\");\n    }\n\n    let y_max = integrand(Number.MAX_VALUE);\n    if (Math.abs(y_max) > Number.EPSILON || !isFinite(y_max)) {\n      throw new RangeError(\"Error: integrated function does not go to zero at infinity\");\n    }\n\n    let I0 = 0;\n    let L1_I0 = 0;\n    for (let i = 0; i < this.m_abscissas[0].length; i++) {\n      let y = integrand(this.m_abscissas[0][i]);\n      I0 += y * this.m_weights[0][i];\n      L1_I0 += Math.abs(y) * this.m_weights[0][i];\n    }\n\n    let I1 = I0;\n    let L1_I1 = L1_I0;\n    for (let i = 0; i < this.m_abscissas[1].length; i++) {\n      let y = integrand(this.m_abscissas[1][i]);\n      I1 += y * this.m_weights[1][i];\n      L1_I1 += Math.abs(y) * this.m_weights[1][i];\n    }\n\n    I1 *= 0.5;\n    L1_I1 *= 0.5;\n    let err = Math.abs(I0 - I1);\n    let i = 2;\n    for (; i < this.m_abscissas.length; i++) {\n      I0 = I1;\n      L1_I0 = L1_I1;\n\n      I1 = 0.5 * I0;\n      L1_I1 = 0.5 * L1_I0;\n      let h = 1 / (1 << i);\n      let sum = 0;\n      let absum = 0;\n\n      let abscissas_row = this.get_abscissa_row(i);\n      let weight_row = this.get_weight_row(i);\n\n      let abterm1 = 1;\n      let eps = Number.EPSILON * L1_I1;\n      for (let j = 0; j < this.m_weights[i].length; j++) {\n        let x = abscissas_row[j];\n        let y = integrand(x);\n        sum += y * weight_row[j];\n        let abterm0 = Math.abs(y) * weight_row[j];\n        absum += abterm0;\n\n        if (x > 100 && abterm0 < eps && abterm1 < eps) {\n          break;\n        }\n\n        abterm1 = abterm0;\n      }\n\n      I1 += sum * h;\n      L1_I1 += absum * h;\n      err = Math.abs(I0 - I1);\n      if (!isFinite(I1)) {\n        throw new RangeError(\"Error: function was evaluated at singular point - ensure function is finite over entire domain\");\n      }\n\n      if (err <= this.tol * L1_I1) {\n        break;\n      }\n    }\n\n    return [I1, err];\n  }\n}\n\nexport { GaussKronrod, ExpSinh };\n","/**\n * JavaScript port of Rmath functions. <p>\n *\n * These functions have been directly ported from the Rmath library, found in the R source code repository under\n * R-source/src/include/Rmath.h. Most of the code should look almost identical to the C code, with minor changes to\n * adapt to features present in C but not in JS. <p>\n *\n * Test cases were ported from R-source/tests/d-p-q-r-tests.R. We additionally wrote other test cases over a range of\n * parameter values and edge cases. These cases are found in our test suite in test/unit/rstats.js. <p>\n *\n * @module rstats\n * @author Matthew Flickinger\n * @author Ryan Welch\n * @license LGPL-2.1\n */\n\n// Constants\n\nconst DBL_EPSILON = 2.2204460492503130808472633361816e-16;\nconst DBL_MIN = Number.MIN_VALUE;\nconst DBL_MAX_EXP = 308;\nconst DBL_MIN_EXP = -323;\nconst DBL_MAX = Number.MAX_VALUE;\nconst SCALE_FACTOR = 1.157920892373162e+77;\nconst EULERS_CONST = 0.5772156649015328606065120900824024;\nconst TOL_LOGCF = 1e-14;\nconst LGAMMA_C = 0.2273736845824652515226821577978691e-12;\n\nconst DXREL = 1.490116119384765625e-8;\n\nconst M_LN2 = Math.LN2; //0.693147180559945309417232121458;\nconst M_LN10 = Math.LN10; //2.302585092994045684017991454684;\nconst M_PI = Math.PI;\nconst M_2PI = 2 * M_PI;\nconst M_LN_2PI = Math.log(2 * Math.PI);\nconst M_LN_SQRT_2PI = Math.log(Math.sqrt(M_2PI));\nconst M_SQRT_32 = 5.656854249492380195206754896838;\nconst M_1_SQRT_2PI = 0.398942280401432677939946059934;\nconst M_CUTOFF = M_LN2 * DBL_MAX_EXP / DBL_EPSILON;\n\nconst _dbl_min_exp = M_LN2 * DBL_MIN_EXP;\n\nconst ME_DOMAIN = 1;\nconst ME_RANGE = 2;\nconst ME_NOCONV = 4;\nconst ME_PRECISION = 8;\nconst ME_UNDERFLOW = 16;\n\nfunction ML_ERROR(x, s) {\n  if (x > ME_DOMAIN) {\n    let msg = \"\";\n    switch(x) {\n      case ME_DOMAIN:\n        msg = `argument out of domain in ${s}`;\n        break;\n      case ME_RANGE:\n        msg = `value out of range in ${s}`;\n        break;\n      case ME_NOCONV:\n        msg = `convergence failed in ${s}`;\n        break;\n      case ME_PRECISION:\n        msg = `full precision may not have been achieved in ${s}`;\n        break;\n      case ME_UNDERFLOW:\n        msg = `underflow occurred in ${s}`;\n        break;\n    }\n    console.error(msg);\n  }\n}\n\nfunction ML_ERR_return_NAN() {\n  ML_ERROR(ME_DOMAIN, \"\");\n  return NaN;\n}\n\nconst S0 = 0.083333333333333333333;\n/* 1/12 */\nconst S1 = 0.00277777777777777777778;\n/* 1/360 */\nconst S2 = 0.00079365079365079365079365;\n/* 1/1260 */\nconst S3 = 0.000595238095238095238095238;\n/* 1/1680 */\nconst S4 = 0.0008417508417508417508417508;\n/* 1/1188 */\n\nconst SFERR_HALVES = [\n  0.0, /* n=0 - wrong, place holder only */\n  0.1534264097200273452913848, /* 0.5 */\n  0.0810614667953272582196702, /* 1.0 */\n  0.0548141210519176538961390, /* 1.5 */\n  0.0413406959554092940938221, /* 2.0 */\n  0.03316287351993628748511048, /* 2.5 */\n  0.02767792568499833914878929, /* 3.0 */\n  0.02374616365629749597132920, /* 3.5 */\n  0.02079067210376509311152277, /* 4.0 */\n  0.01848845053267318523077934, /* 4.5 */\n  0.01664469118982119216319487, /* 5.0 */\n  0.01513497322191737887351255, /* 5.5 */\n  0.01387612882307074799874573, /* 6.0 */\n  0.01281046524292022692424986, /* 6.5 */\n  0.01189670994589177009505572, /* 7.0 */\n  0.01110455975820691732662991, /* 7.5 */\n  0.010411265261972096497478567, /* 8.0 */\n  0.009799416126158803298389475, /* 8.5 */\n  0.009255462182712732917728637, /* 9.0 */\n  0.008768700134139385462952823, /* 9.5 */\n  0.008330563433362871256469318, /* 10.0 */\n  0.007934114564314020547248100, /* 10.5 */\n  0.007573675487951840794972024, /* 11.0 */\n  0.007244554301320383179543912, /* 11.5 */\n  0.006942840107209529865664152, /* 12.0 */\n  0.006665247032707682442354394, /* 12.5 */\n  0.006408994188004207068439631, /* 13.0 */\n  0.006171712263039457647532867, /* 13.5 */\n  0.005951370112758847735624416, /* 14.0 */\n  0.005746216513010115682023589, /* 14.5 */\n  0.005554733551962801371038690  /* 15.0 */\n];\n\nconst LGAMMA_COEFS = [0.3224670334241132182362075833230126e-0,\n  0.6735230105319809513324605383715000e-1, /* = (zeta(3)-1)/3 */\n  0.2058080842778454787900092413529198e-1,\n  0.7385551028673985266273097291406834e-2,\n  0.2890510330741523285752988298486755e-2,\n  0.1192753911703260977113935692828109e-2,\n  0.5096695247430424223356548135815582e-3,\n  0.2231547584535793797614188036013401e-3,\n  0.9945751278180853371459589003190170e-4,\n  0.4492623673813314170020750240635786e-4,\n  0.2050721277567069155316650397830591e-4,\n  0.9439488275268395903987425104415055e-5,\n  0.4374866789907487804181793223952411e-5,\n  0.2039215753801366236781900709670839e-5,\n  0.9551412130407419832857179772951265e-6,\n  0.4492469198764566043294290331193655e-6,\n  0.2120718480555466586923135901077628e-6,\n  0.1004322482396809960872083050053344e-6,\n  0.4769810169363980565760193417246730e-7,\n  0.2271109460894316491031998116062124e-7,\n  0.1083865921489695409107491757968159e-7,\n  0.5183475041970046655121248647057669e-8,\n  0.2483674543802478317185008663991718e-8,\n  0.1192140140586091207442548202774640e-8,\n  0.5731367241678862013330194857961011e-9,\n  0.2759522885124233145178149692816341e-9,\n  0.1330476437424448948149715720858008e-9,\n  0.6422964563838100022082448087644648e-10,\n  0.3104424774732227276239215783404066e-10,\n  0.1502138408075414217093301048780668e-10,\n  0.7275974480239079662504549924814047e-11,\n  0.3527742476575915083615072228655483e-11,\n  0.1711991790559617908601084114443031e-11,\n  0.8315385841420284819798357793954418e-12,\n  0.4042200525289440065536008957032895e-12,\n  0.1966475631096616490411045679010286e-12,\n  0.9573630387838555763782200936508615e-13,\n  0.4664076026428374224576492565974577e-13,\n  0.2273736960065972320633279596737272e-13,\n  0.1109139947083452201658320007192334e-13/* = (zeta(40+1)-1)/(40+1) */\n];\n\nconst POIS_COEFS_A = [\n  -1e99, /* placeholder used for 1-indexing */\n  2 / 3.,\n  -4 / 135.,\n  8 / 2835.,\n  16 / 8505.,\n  -8992 / 12629925.,\n  -334144 / 492567075.,\n  698752 / 1477701225.\n];\n\nconst POIS_COEFS_B = [\n  -1e99, /* placeholder */\n  1 / 12.,\n  1 / 288.,\n  -139 / 51840.,\n  -571 / 2488320.,\n  163879 / 209018880.,\n  5246819 / 75246796800.,\n  -534703531 / 902961561600.\n];\n\nconst GAMCS = [\n  +.8571195590989331421920062399942e-2,\n  +.4415381324841006757191315771652e-2,\n  +.5685043681599363378632664588789e-1,\n  -.4219835396418560501012500186624e-2,\n  +.1326808181212460220584006796352e-2,\n  -.1893024529798880432523947023886e-3,\n  +.3606925327441245256578082217225e-4,\n  -.6056761904460864218485548290365e-5,\n  +.1055829546302283344731823509093e-5,\n  -.1811967365542384048291855891166e-6,\n  +.3117724964715322277790254593169e-7,\n  -.5354219639019687140874081024347e-8,\n  +.9193275519859588946887786825940e-9,\n  -.1577941280288339761767423273953e-9,\n  +.2707980622934954543266540433089e-10,\n  -.4646818653825730144081661058933e-11,\n  +.7973350192007419656460767175359e-12,\n  -.1368078209830916025799499172309e-12,\n  +.2347319486563800657233471771688e-13,\n  -.4027432614949066932766570534699e-14,\n  +.6910051747372100912138336975257e-15,\n  -.1185584500221992907052387126192e-15,\n  +.2034148542496373955201026051932e-16,\n  -.3490054341717405849274012949108e-17,\n  +.5987993856485305567135051066026e-18,\n  -.1027378057872228074490069778431e-18,\n  +.1762702816060529824942759660748e-19,\n  -.3024320653735306260958772112042e-20,\n  +.5188914660218397839717833550506e-21,\n  -.8902770842456576692449251601066e-22,\n  +.1527474068493342602274596891306e-22,\n  -.2620731256187362900257328332799e-23,\n  +.4496464047830538670331046570666e-24,\n  -.7714712731336877911703901525333e-25,\n  +.1323635453126044036486572714666e-25,\n  -.2270999412942928816702313813333e-26,\n  +.3896418998003991449320816639999e-27,\n  -.6685198115125953327792127999999e-28,\n  +.1146998663140024384347613866666e-28,\n  -.1967938586345134677295103999999e-29,\n  +.3376448816585338090334890666666e-30,\n  -.5793070335782135784625493333333e-31\n];\n\nconst ALGMCS = [\n  +.1666389480451863247205729650822e+0,\n  -.1384948176067563840732986059135e-4,\n  +.9810825646924729426157171547487e-8,\n  -.1809129475572494194263306266719e-10,\n  +.6221098041892605227126015543416e-13,\n  -.3399615005417721944303330599666e-15,\n  +.2683181998482698748957538846666e-17,\n  -.2868042435334643284144622399999e-19,\n  +.3962837061046434803679306666666e-21,\n  -.6831888753985766870111999999999e-23,\n  +.1429227355942498147573333333333e-24,\n  -.3547598158101070547199999999999e-26,\n  +.1025680058010470912000000000000e-27,\n  -.3401102254316748799999999999999e-29,\n  +.1276642195630062933333333333333e-30\n];\n\nconst PNORM_A = [\n  2.2352520354606839287,\n  161.02823106855587881,\n  1067.6894854603709582,\n  18154.981253343561249,\n  0.065682337918207449113\n];\n\nconst PNORM_B = [\n  47.20258190468824187,\n  976.09855173777669322,\n  10260.932208618978205,\n  45507.789335026729956\n];\n\nconst PNORM_C = [\n  0.39894151208813466764,\n  8.8831497943883759412,\n  93.506656132177855979,\n  597.27027639480026226,\n  2494.5375852903726711,\n  6848.1904505362823326,\n  11602.651437647350124,\n  9842.7148383839780218,\n  1.0765576773720192317e-8\n];\n\nconst PNORM_D = [\n  22.266688044328115691,\n  235.38790178262499861,\n  1519.377599407554805,\n  6485.558298266760755,\n  18615.571640885098091,\n  34900.952721145977266,\n  38912.003286093271411,\n  19685.429676859990727\n];\n\nconst PNORM_P = [\n  0.21589853405795699,\n  0.1274011611602473639,\n  0.022235277870649807,\n  0.001421619193227893466,\n  2.9112874951168792e-5,\n  0.02307344176494017303\n];\n\nconst PNORM_Q = [\n  1.28426009614491121,\n  0.468238212480865118,\n  0.0659881378689285515,\n  0.00378239633202758244,\n  7.29751555083966205e-5\n];\n\nconst R_D__0 = (log_p) => (log_p ? -Infinity : 0.0);\nconst R_D__1 = (log_p) => (log_p ? 0.0 : 1.0);\nconst R_DT_0 = (lower_tail, log_p) => (lower_tail ? R_D__0(log_p) : R_D__1(log_p));\nconst R_DT_1 = (lower_tail, log_p) => (lower_tail ? R_D__1(log_p) : R_D__0(log_p));\n// const R_D_half = () => (log_p ? -M_LN2 : 0.5);\n\n// This is some sort of trick by using 0.5 - p + 0.5 to \"perhaps gain 1 bit of accuracy\"\nconst R_D_Lval = (p, lower_tail) => (lower_tail ? p : (0.5 - p + 0.5));\nconst R_D_Cval = (p, lower_tail) => (lower_tail ? (0.5 - p + 0.5) : p);\n\nconst R_D_val = (x, log_p)\t=> (log_p ? Math.log(x) : (x));\nconst R_D_log = (p, log_p) => (log_p ? p : Math.log(p));\nconst R_D_Clog = (p, log_p) => (log_p ? Math.log1p(-(p)) : (0.5 - (p) + 0.5));\nconst R_DT_val = (x, lower_tail, log_p) => ((lower_tail ? R_D_val(x, log_p) : R_D_Clog(x, log_p)));\n\nconst R_D_LExp = (x, log_p) => (log_p ? R_Log1_Exp(x) : Math.log1p(-x));\n\n// Be careful, for some reason they named two functions off by only 1 capital letter...\n// R_DT_log != R_DT_Log\nconst R_DT_log = (p, lower_tail) => (lower_tail ? R_D_log(p) : R_D_LExp(p));\nconst R_DT_Clog = (p, lower_tail) => (lower_tail ? R_D_LExp(p) : R_D_log(p));\n//const R_DT_Log = (p, lower_tail) => (lower_tail ? p : R_Log1_Exp(p));\n\n/**\n * See warning for R_Q_P01_boundaries (this function should be wrapped in try/catch.)\n */\nfunction R_Q_P01_check(p, log_p) {\n  if ((log_p && p > 0) || (!log_p && (p < 0 || p > 1))) {\n    throw ML_ERR_return_NAN();\n  }\n}\n\n/**\n * Note this has changed from the R implementation which was a C macro.\n * You should wrap this in a try catch, like:\n * try {\n *   boundaries(...)\n * }\n * catch (e) { return e; }\n */\nfunction R_Q_P01_boundaries(p, lower_tail, log_p, left, right) {\n  if (log_p) {\n    if (p > 0) { throw ML_ERR_return_NAN(); }\n    if (p === 0) { throw lower_tail ? right : left;  }\n    if (p === Number.NEGATIVE_INFINITY) { throw lower_tail ? left : right; }\n  }\n  else {\n    if (p < 0 || p > 1) { throw ML_ERR_return_NAN(); }\n    if (p === 0) { throw lower_tail ? left : right; }\n    if (p === 1) { throw lower_tail ? right : left; }\n  }\n}\n\nfunction R_P_bounds_01(x, x_min, x_max, lower_tail, log_p) {\n  if (x <= x_min) { throw R_DT_0(lower_tail, log_p); }\n  if (x >= x_max) { throw R_DT_1(lower_tail, log_p); }\n}\n\nfunction R_DT_qIv(p, lower_tail, log_p) {\n  if (log_p) {\n    if (lower_tail) {\n      return Math.exp(p);\n    }\n    else {\n      return -Math.expm1(p);\n    }\n  }\n  else {\n    return R_D_Lval(p, lower_tail);\n  }\n}\n\nfunction R_DT_CIv(p, lower_tail, log_p) {\n  if (log_p) {\n    if (lower_tail) {\n      return -Math.expm1(p);\n    }\n    else {\n      return Math.exp(p);\n    }\n  }\n  else {\n    return R_D_Cval(p);\n  }\n}\n\nfunction fmin2(x, y) {\n  if (isNaN(x) || isNaN(y)) {\n    return x + y;\n  }\n  return (x < y) ? x : y;\n}\n\nfunction fmax2(x, y) {\n  if (isNaN(x) || isNaN(y)) {\n    return x + y;\n  }\n  return (x < y) ? y : x;\n}\n\nfunction expm1(x) {\n  let y, a = Math.abs(x);\n\n  if (a < DBL_EPSILON) {\n    return x;\n  }\n\n  if (a > 0.697) {\n    return Math.exp(x) - 1;\n  }\n\n  if (a > 1e-8) {\n    y = Math.exp(x) - 1\n  }\n  else {\n    y = (x / 2 + 1) * x;\n  }\n\n  y -= (1 + y) * (Math.log1p(y) - x);\n  return y;\n}\n\nfunction R_Log1_Exp(x) {\n  return ((x) > -M_LN2 ? Math.log(-Math.expm1(x)) : Math.log1p(-Math.exp(x)));\n}\n\nfunction R_D_exp(x, log_p) {\n  return log_p ? x : Math.exp(x);\n}\n\nfunction R_D_fexp(f, x, give_log) {\n  return give_log ? -0.5 * Math.log(f) + x : Math.exp(x) / Math.sqrt(f);\n}\n\nfunction sinpi(x) {\n  if (isNaN(x)) {\n    return x;\n  }\n  if (!Number.isFinite(x)) {\n    return NaN;\n  }\n  x = x % 2;\n  if (x <= -1) {\n    x += 2.0;\n  } else if (x > 1.0) {\n    x -= 2.0;\n  }\n  if (x == 0.0 || x == 1.0) {\n    return 0.0;\n  }\n  if (x == 0.5) {\n    return 1.0;\n  }\n  if (x == -0.5) {\n    return -1.0;\n  }\n  return Math.sin(M_PI * x);\n}\n\nfunction chebyshev_eval(x, a, n) {\n  var b0, b1, b2, twox, i;\n\n  if (n < 1 || n > 1000) {\n    return NaN;\n  }\n  if (x < -1.1 || x > 1.1) {\n    return NaN;\n  }\n  twox = x * 2;\n  b2 = b1 = 0;\n  b0 = 0;\n  for (i = 1; i <= n; i++) {\n    b2 = b1;\n    b1 = b0;\n    b0 = twox * b1 - b2 + a[n - i];\n  }\n  return (b0 - b2) * 0.5;\n}\n\nfunction lgammacor(x) {\n  var tmp;\n  var nalgm = 5;\n  var xbig = 94906265.62425156;\n  var xmax = 3.745194030963158e306;\n\n  if (x < 10) {\n    return NaN;\n  } else if (x > xmax) {\n    throw (\"lgammacor underflow\");\n  } else if (x < xbig) {\n    tmp = 10 / x;\n    return chebyshev_eval(tmp * tmp * 2 - 1, ALGMCS, nalgm) / x;\n  }\n  return 1 / (x * 12);\n}\n\nfunction gammafn(x) {\n  var i, n, y, sinpiy, value;\n\n  var ngam = 22;\n  var xmin = -170.5674972726612;\n  var xmax = 171.61447887182298;\n  var xsml = 2.2474362225598545e-308;\n\n  if (isNaN(x)) {\n    return (x);\n  }\n\n  if (x == 0 || (x < 0 && x == Math.round(x))) {\n    return NaN;\n  }\n\n  y = Math.abs(x);\n  if (y <= 10) {\n    n = parseInt(x, 10);\n    if (x < 0) {\n      n--;\n    }\n    y = x - n;\n    n--;\n    value = chebyshev_eval(y * 2 - 1, GAMCS, ngam) + .9375;\n    if (n == 0) {\n      return value;\n    }\n    if (n < 0) {\n      if (x < -0.5 && Math.abs(x - parseInt(x - 0.5, 10) / x) < DXREL) {\n        throw(\"gammafn precision error\");\n      }\n      if (x < xsml) {\n        return (x > 0) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n      }\n\n      n = -n;\n\n      for (i = 0; i < n; i++) {\n        value /= (x + i);\n      }\n      return value;\n    } else {\n      for (i = 1; i <= n; i++) {\n        value *= (y + i);\n      }\n      return value;\n    }\n  } else {\n    if (x > xmax) {\n      return Number.POSITIVE_INFINITY;\n    }\n    if (x < xmin) {\n      return 0;\n    }\n    if (y <= 50 && y == parseInt(y, 10)) {\n      value = 1;\n      for (i = 2; i < y; i++) {\n        value *= i;\n      }\n    } else {\n      value = Math.exp((y - 0.5) * Math.log(y) - y - M_LN_SQRT_2PI +\n        ((2 * y == parseInt(2 * y, 10)) ? stirlerr(y) : lgammacor(y)));\n    }\n    if (x > 0) {\n      return value;\n    }\n    if (Math.abs(x - parseInt(x - 0.5, 10) / x) < DXREL) {\n      throw(\"gammafn precision error\");\n    }\n    sinpiy = sinpi(y);\n    if (sinpiy == 0) {\n      return Number.POSITIVE_INFINITY;\n    }\n    return -M_PI / (y * sinpiy * value);\n  }\n}\n\nfunction lgammafn_sign(x) {\n  var ans, y, sinpiy;\n  //sgn = 1;\n  var xmax = 2.5327372760800758e+305;\n\n  if (isNaN(x)) {\n    return x;\n  }\n\n  if (x < 0 && Math.floor(-x) % 2 == 0) {\n    //sgn = -1;\n  }\n  if (x <= 0 && x == Math.trunc(x)) {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  y = Math.abs(x);\n  if (y < 1e-306) return -Math.log(y);\n  if (y <= 10) return Math.log(Math.abs(gammafn(x)));\n\n  if (y > xmax) {\n    return Number.POSITIVE_INFINITY;\n  }\n  if (x > 0) {\n    if (x > 1e17) {\n      return x * (Math.log(x) - 1);\n    } else if (x > 4934720.) {\n      return M_LN_SQRT_2PI + (x - 0.5) * Math.log(x) - x;\n    } else {\n      return M_LN_SQRT_2PI + (x - 0.5) * Math.log(x) - x + lgammacor(x);\n    }\n  }\n  sinpiy = Math.abs(sinpi(y));\n\n  if (sinpiy == 0) {\n    return NaN;\n  }\n\n  if (Math.abs((x - Math.trunc(x - 0.5)) * ans / x) < DXREL) {\n    throw(\"lgamma precision error\");\n  }\n  return ans;\n}\n\nfunction lgammafn(x) {\n  return lgammafn_sign(x, null);\n}\n\nfunction stirlerr(n) {\n  var nn;\n  if (n <= 15) {\n    nn = n + n;\n    if (nn == Math.floor(nn)) {\n      return SFERR_HALVES[Math.floor(nn)];\n    }\n    return lgammafn(n + 1.0) - (n + 0.5) * Math.log(n) + n - M_LN_SQRT_2PI;\n  }\n\n  nn = n * n;\n  if (n > 500) {\n    return (S0 - S1 / nn) / n;\n  }\n  if (n > 80) {\n    return (S0 - (S1 - S2 / nn) / nn) / n;\n  }\n  if (n > 35) {\n    return (S0 - (S1 - (S2 - S3 / nn) / nn) / nn) / n;\n  }\n  return (S0 - (S1 - (S2 - (S3 - S4 / nn) / nn) / nn) / nn) / n;\n}\n\nfunction bd0(x, np) {\n  var ej, s, s1, v, j;\n\n  if (!Number.isFinite(x) || !Number.isFinite(np) || np == 0) {\n    return NaN;\n  }\n  if (Math.abs(x - np) < 0.1 * (x + np)) {\n    v = (x - np) / (x + np);\n    s = (x - np) * v;\n    if (Math.abs(s) < DBL_MIN) {\n      return s;\n    }\n    ej = 2 * x * v;\n    v = v * v;\n    for (j = 1; j < 1000; j++) {\n      ej *= v;\n      s1 = s + ej / ((j * 2) + 1);\n      if (s1 == s) {\n        return s1;\n      }\n      s = s1;\n    }\n  }\n  return x * Math.log(x / np) + np - x;\n}\n\nfunction dpois_raw(x, lambda, give_log) {\n  if (lambda == 0) {\n    return (x == 1) ? R_D(1, give_log) : R_D(0, give_log);\n  }\n  if (!Number.isFinite(lambda)) {\n    return R_D(0, give_log);\n  }\n  if (x < 0) {\n    return R_D(0, give_log);\n  }\n  if (x <= lambda * DBL_MIN) {\n    return R_D_exp(-lambda, give_log);\n  }\n  if (lambda < x * DBL_MIN) {\n    return R_D_exp(-lambda + x * Math.log(lambda) - lgammafn(x + 1), give_log);\n  }\n  return R_D_fexp(M_2PI * x, -stirlerr(x) - bd0(x, lambda), give_log);\n}\n\nfunction logcf(x, i, d, eps) {\n  var c1 = 2 * d;\n  var c2 = i + d;\n  var c3;\n  var c4 = c2 + d;\n  var a1 = c2;\n  var b1 = i * (c2 - i * x);\n  var b2 = d * d * x;\n  var a2 = c4 * c2 - b2;\n\n  b2 = c4 * b1 - i * b2;\n  while (Math.abs(a2 * b1 - a1 * b2) > Math.abs(eps * b1 * b2)) {\n    c3 = c2 * c2 * x;\n    c2 += d;\n    c4 += d;\n    a1 = c4 * a2 - c3 * a1;\n    b1 = c4 * b2 - c3 * b1;\n\n    c3 = c1 * c1 * x;\n    c1 += d;\n    c4 += d;\n    a2 = c4 * a1 - c3 * a2;\n    b2 = c4 * b1 - c3 * b2;\n\n    if (Math.abs(b2) > SCALE_FACTOR) {\n      a1 /= SCALE_FACTOR;\n      a2 /= SCALE_FACTOR;\n      b1 /= SCALE_FACTOR;\n      b2 /= SCALE_FACTOR;\n    } else if (Math.abs(b2) < 1 / SCALE_FACTOR) {\n      a1 *= SCALE_FACTOR;\n      a2 *= SCALE_FACTOR;\n      b1 *= SCALE_FACTOR;\n      b2 *= SCALE_FACTOR;\n    }\n  }\n  return a2 / b2;\n}\n\nfunction log1pmx(x) {\n  var minLog1Value = -0.79149064;\n  if (x > 1 || x < minLog1Value) {\n    return Math.log1p(x) - x;\n  } else {\n    var r = x / (2 + x);\n    var y = r * r;\n    if (Math.abs(x) < 1e-2) {\n      return r * ((((2 / 9 * y + 2 / 7) * y + 2 / 5) * y + 2 / 3) * y - x);\n    } else {\n      return r * (2 * y * logcf(y, 3, 2, TOL_LOGCF) - x);\n    }\n  }\n}\n\nfunction lgamma1p(a) {\n  if (Math.abs(a) >= 0.5) {\n    return lgammafn(a + 1);\n  }\n  var lgam, i;\n  lgam = LGAMMA_C * logcf(-a / 2, LGAMMA_COEFS.length + 2, 1, TOL_LOGCF);\n  for (i = LGAMMA_COEFS.length - 1; i >= 0; i--) {\n    lgam = LGAMMA_COEFS[i] - a * lgam;\n  }\n\n  return (a * lgam - EULERS_CONST) * a - log1pmx(a);\n}\n\nfunction logspace_add(logx, logy) {\n  return ((logx > logy) ? logx : logy) + Math.log1p(Math.exp(-Math.abs(logx - logy)));\n}\n\n// function logspace_sub(logx, logy) {\n//   return logx + R_Log1_Exp(logy - logx);\n// }\n\n// function logspace_sum(logx, n) {\n//   if (n == 0) {\n//     return Number.NEGATIVE_INFINITY;\n//   }\n//   if (n == 1) {\n//     return logx[0];\n//   }\n//   if (n == 2) {\n//     return logspace_add(logx[0] + logx[1]);\n//   }\n//   var i;\n//   var Mx = logx[0];\n//   for (i = 1; i < n; i++) {\n//     if (Mx < logx[i]) {\n//       Mx = logx[i];\n//     }\n//   }\n//   var s = 0;\n//   for (i = 0; i < n; i++) {\n//     s += Math.exp(logx[i] - Mx);\n//   }\n//   return Mx + Math.log(s);\n// }\n\nfunction dpois_wrap(x_plus_1, lambda, give_log) {\n  if (!isFinite(lambda)) {\n    return R_D(0, give_log);\n  }\n  if (x_plus_1 > 1) {\n    return dpois_raw(x_plus_1 - 1, lambda, give_log);\n  }\n  if (lambda > Math.abs(x_plus_1 - 1) * M_CUTOFF) {\n    return R_D_exp(-lambda - lgammafn(x_plus_1), give_log);\n  } else {\n    var d = dpois_raw(x_plus_1, lambda, give_log);\n    return (give_log) ? d + Math.log(x_plus_1 / lambda) : d * (x_plus_1 / lambda);\n  }\n}\n\nfunction R_D(i, log_p) {\n  if (i === 0) {\n    return (log_p) ? Number.NEGATIVE_INFINITY : 0;\n  } else {\n    return (log_p) ? 0 : 1;\n  }\n}\n\nfunction R_DT(i, lower_tail, log_p) {\n  if (i === 0) {\n    return (lower_tail) ? R_D(0, log_p) : R_D(1, log_p);\n  } else {\n    return (lower_tail) ? R_D(1, log_p) : R_D(0, log_p);\n  }\n}\n\nfunction pgamma_smallx(x, alph, lower_tail, log_p) {\n  var sum = 0, c = alph, n = 0, term;\n  do {\n    n++;\n    c *= -x / n;\n    term = c / (alph + n);\n    sum += term;\n  } while (Math.abs(term) > DBL_EPSILON * Math.abs(sum));\n\n  if (lower_tail) {\n    var f1 = (log_p) ? Math.log1p(sum) : 1 + sum;\n    var f2;\n    if (alph > 1) {\n      f2 = dpois_raw(alph, x, log_p);\n      f2 = (log_p) ? f2 + x : f2 * Math.exp(x);\n    } else if (log_p) {\n      f2 = alph * Math.log(x) - lgamma1p(alph);\n    } else {\n      f2 = Math.pow(x, alph) / Math.exp(lgamma1p(alph));\n    }\n    return (log_p) ? f1 + f2 : f1 * f2;\n  } else {\n    var lf2 = alph * Math.log(x) - lgamma1p(alph);\n    if (log_p) {\n      return R_Log1_Exp(Math.log1p(sum) + lf2);\n    } else {\n      var f1m1 = sum;\n      var f2m1 = Math.expm1(lf2);\n      return -(f1m1 + f2m1 + f1m1 * f2m1);\n    }\n  }\n\n}\n\nfunction pd_upper_series(x, y, log_p) {\n  var term = x / y;\n  var sum = term;\n  do {\n    y++;\n    term *= x / y;\n    sum += term;\n  } while (term > sum * DBL_EPSILON);\n  return (log_p) ? Math.log(sum) : sum;\n}\n\nfunction pd_lower_cf(y, d) {\n  var f = 0, of, f0;\n  var i, c2, c3, c4, a1, b1, a2, b2;\n\n  if (y == 0) {\n    return 0;\n  }\n  f0 = y / d;\n  if (Math.abs(y - 1) < Math.abs(d) * DBL_EPSILON) {\n    return f0;\n  }\n\n  if (f0 > 1.0) {\n    f0 = 1.0;\n  }\n  c2 = y;\n  c4 = d;\n\n  a1 = 0;\n  b1 = 1;\n  a2 = y;\n  b2 = d;\n\n  while (b2 > SCALE_FACTOR) {\n    a1 /= SCALE_FACTOR;\n    b1 /= SCALE_FACTOR;\n    a2 /= SCALE_FACTOR;\n    b2 /= SCALE_FACTOR;\n  }\n\n  i = 0;\n  of = -1;\n  while (i < 200000) {\n    i++;\n    c2--;\n    c3 = i * c2;\n    c4 += 2;\n    a1 = c4 * a2 + c3 * a1;\n    b1 = c4 * b2 + c3 * b1;\n\n    i++;\n    c2--;\n    c3 = i * c2;\n    c4 += 2;\n    a2 = c4 * a1 + c3 * a2;\n    b2 = c4 * b1 + c3 * b2;\n\n    if (b2 > SCALE_FACTOR) {\n      a1 /= SCALE_FACTOR;\n      b1 /= SCALE_FACTOR;\n      a2 /= SCALE_FACTOR;\n      b2 /= SCALE_FACTOR;\n    }\n\n    if (b2 != 0) {\n      f = a2 / b2;\n      if (Math.abs(f - of) <= DBL_EPSILON * ((Math.abs(f) > f0) ? Math.abs(f) : f0)) {\n        return f;\n      }\n      of = f;\n    }\n  }\n  //WARNING - NON CONVERGENCE\n  return f;\n}\n\nfunction pd_lower_series(lambda, y) {\n  var term = 1, sum = 0;\n  while (y >= 1 && term > sum * DBL_EPSILON) {\n    term *= y / lambda;\n    sum += term;\n    y--;\n  }\n  if (y !== Math.floor(y)) {\n    var f = pd_lower_cf(y, lambda + 1 - y);\n    sum += term * f;\n  }\n  return sum;\n}\n\nfunction dpnorm(x, lower_tail, lp) {\n  if (x < 0) {\n    x = -x;\n    lower_tail = !lower_tail;\n  }\n\n  if (x > 10 && !lower_tail) {\n    var term = 1 / x,\n      sum = term,\n      x2 = x * x,\n      i = 1;\n    do {\n      term *= -i / x2;\n      sum += term;\n      i += 2;\n    } while (Math.abs(term) > DBL_EPSILON * sum);\n\n    return 1 / sum;\n  } else {\n    var d = dnorm(x, 0.0, 1.0, false);\n    return d / Math.exp(lp);\n  }\n}\n\nfunction ppois_asymp(x, lambda, lower_tail, log_p) {\n  var coefs_a = POIS_COEFS_A, coefs_b = POIS_COEFS_B;\n  var elfb, elfb_term;\n  var res12, res1_term, res1_ig, res2_term, res2_ig;\n  var dfm, pt_, s2pt, f, np;\n  var i;\n\n  dfm = lambda - x;\n  pt_ = -log1pmx(dfm / x);\n  s2pt = Math.sqrt(2 * x * pt_);\n  if (dfm < 0) {\n    s2pt = -s2pt;\n  }\n\n  res12 = 0;\n  res1_ig = res1_term = Math.sqrt(x);\n  res2_ig = res2_term = s2pt;\n  for (i = 1; i < 8; i++) {\n    res12 += res1_ig * coefs_a[i];\n    res12 += res2_ig * coefs_b[i];\n    res1_term *= pt_ / i;\n    res2_term *= 2 * pt_ / (2 * i + 1);\n    res1_ig = res1_ig / x + res1_term;\n    res2_ig = res2_ig / x + res2_term;\n  }\n\n  elfb = x;\n  elfb_term = 1;\n  for (i = 1; i < 8; i++) {\n    elfb += elfb_term * coefs_b[i];\n    elfb_term /= x;\n  }\n\n  if (!lower_tail) {\n    elfb = -elfb;\n  }\n  f = res12 / elfb;\n  np = pnorm(s2pt, 0.0, 1.0, !lower_tail, log_p);\n  if (log_p) {\n    var n_d_over_p = dpnorm(s2pt, !lower_tail, np);\n    return np + Math.log1p(f * n_d_over_p);\n  } else {\n    var nd = dnorm(s2pt, 0.0, 1.0, log_p);\n    return np + f * nd;\n  }\n}\n\nfunction pgamma_raw(x, alph, lower_tail, log_p) {\n  var res, d, sum;\n  try {\n    R_P_bounds_01(x, 0.0, Number.POSITIVE_INFINITY, lower_tail, log_p);\n  }\n  catch (e) { return e; }\n  if (x < 1) {\n    res = pgamma_smallx(x, alph, lower_tail, log_p);\n  } else if (x <= alph - 1 && x < 0.8 * (alph + 50)) {\n    // incl large alph compared to x\n    sum = pd_upper_series(x, alph, log_p);\n    d = dpois_wrap(alph, x, log_p);\n    if (!lower_tail) {\n      res = (log_p) ? R_Log1_Exp(d + sum) : 1 - d * sum;\n    } else {\n      res = (log_p) ? sum + d : sum * d;\n    }\n  } else if (alph - 1 < x && alph < 0.8 * (x + 50)) {\n    // incl large x compared to alph\n    d = dpois_wrap(alph, x, log_p);\n    if (alph < 1) {\n      if (x * DBL_EPSILON > 1 - alph) {\n        sum = R_D(0, log_p);\n      } else {\n        var f = pd_lower_cf(alph, x - (alph - 1)) * x / alph;\n        sum = (log_p) ? Math.log(f) : f;\n      }\n    } else {\n      sum = pd_lower_series(x, alph - 1);\n      sum = (log_p) ? Math.log1p(sum) : 1 + sum;\n    }\n    if (!lower_tail) {\n      res = (log_p) ? sum + d : sum * d;\n    } else {\n      res = (log_p) ? R_Log1_Exp(d + sum) : 1 - d * sum;\n    }\n  } else {\n    //x >=1 and x near alph\n    res = ppois_asymp(alph - 1, x, !lower_tail, log_p);\n  }\n\n  if (!log_p && res < DBL_MIN / DBL_EPSILON) {\n    return Math.exp(pgamma_raw(x, alph, lower_tail, true));\n  } else {\n    return res;\n  }\n}\n\n// function dpois(x, lambda, give_log) {\n//   if (lambda < 0) {\n//     return NaN;\n//   }\n//   if (x % 1 != 0) {\n//     return NaN;\n//   }\n//   if (x < 0 || !Number.isFinite(x)) {\n//     return R_D(0, give_log);\n//   }\n//   return dpois_raw(x, lambda, give_log);\n//\n// }\n\nfunction pgamma(x, alph, scale, lower_tail, log_p) {\n  if (isNaN(x) || alph < 0 || scale < 0) {\n    return NaN;\n  }\n  x /= scale;\n  if (alph == 0) {\n    return (x <= 0) ? R_DT(0, lower_tail, log_p) : R_DT(1, lower_tail, log_p);\n  }\n  return pgamma_raw(x, alph, lower_tail, log_p);\n}\n\n/**\n * The gamma density function.\n * @param x\n * @param shape\n * @param scale\n * @param give_log\n * @return {number|*}\n */\nexport function dgamma(x, shape, scale, give_log) {\n  x = parseNumeric(x);\n  shape = parseNumeric(shape);\n  scale = parseNumeric(scale);\n  give_log = parseBoolean(give_log);\n\n  let pr;\n\n  if (isNaN(x) || isNaN(shape) || isNaN(scale)) {\n    return x + shape + scale;\n  }\n\n  if (shape < 0 || scale <= 0) { ML_ERR_return_NAN; }\n  if (x < 0) {\n    return R_D__0(give_log);\n  }\n  if (shape === 0) {\n    return x === 0 ? Infinity : R_D__0(give_log);\n  }\n  if (x === 0) {\n    if (shape < 1) { return Infinity; }\n    if (shape > 1) { return R_D__0(give_log); }\n    return give_log ? -Math.log(scale) : 1 / scale;\n  }\n\n  if (shape < 1) {\n    pr = dpois_raw(shape, x/scale, give_log);\n    return give_log ? pr + Math.log(shape/x) : pr * shape / x;\n  }\n\n  pr = dpois_raw(shape-1, x/scale, give_log);\n  return give_log ? pr - Math.log(scale) : pr/scale;\n}\n\n/**\n * The chi-squared density function.\n * @param x\n * @param df\n * @param give_log\n * @return {number|*}\n */\nexport function dchisq(x, df, give_log) {\n  return dgamma(x, df / 2.0, 2.0, give_log);\n}\n\n/**\n * The chi-squared cumulative distribution function.\n *\n * Supports the non-centrality parameter ncp.\n *\n * @param x {number} Value.\n * @param df {number} Degrees of freedom.\n * @param ncp {number} Non-centrality parameter.\n * @param lower_tail {boolean} Return cumulative probability from lower tail?\n * @param log_p {boolean} Return log probability\n */\nexport function pchisq(x, df, ncp = 0, lower_tail = true, log_p = false) {\n  x = parseNumeric(x);\n  df = parseNumeric(df);\n  ncp = parseNumeric(ncp);\n  lower_tail = parseBoolean(lower_tail);\n  log_p = parseBoolean(log_p);\n\n  if (ncp === 0) { return pgamma(x, df / 2.0, 2.0, lower_tail, log_p); }\n  else { return pnchisq(x, df, ncp, lower_tail, log_p) }\n}\n\nfunction pnchisq(q, df, ncp = 0, lower_tail = true, log_p = false) {\n  if (df < 0 || ncp < 0) { return NaN; }\n\n  let ans = pnchisq_raw(q, df, ncp, 1e-12, 8 * DBL_EPSILON, 1000000, lower_tail, log_p);\n  if (ncp >= 80) {\n    if (lower_tail) {\n      ans = fmin2(ans, R_D__1(log_p));\n    } else {\n      if (ans < (log_p ? (-10.0 * M_LN10) : 1e-10)) {\n        ML_ERROR(ME_PRECISION, \"pnchisq\");\n      }\n      if (!log_p) {\n        ans = fmax2(ans, 0.0);\n      }\n    }\n  }\n\n  if (!log_p || ans < -1e-8) {\n    return ans;\n  }\n  else {\n    ans = pnchisq_raw(q, df, ncp, 1e-12, 8 * DBL_EPSILON, 1000000, !lower_tail, false);\n    return Math.log1p(-ans);\n  }\n}\n\nfunction pnchisq_raw(x, f, theta, errmax, reltol, itrmax, lower_tail, log_p) {\n  let lam, x2, f2, term, bound, f_x_2n, f_2n;\n  let l_lam = -1.0;\n  let l_x = -1.0;\n  let n;\n  let lamSml, tSml, is_r, is_b, is_it;\n  let ans, u, v, t, lt, lu = -1;\n\n  if (x <= 0.0) {\n    if (x === 0.0 && f === 0.0) {\n      const _L = -0.5 * theta;\n      return lower_tail ? R_D_exp(_L, log_p) : (log_p ? R_Log1_Exp(_L) : -expm1(_L));\n    }\n    return R_DT_0(lower_tail, log_p);\n  }\n\n  if (!isFinite(x)) { return R_DT_1(lower_tail, log_p) }\n\n  if (theta < 80) {\n    let ans;\n    if (lower_tail && f > 0.0 && Math.log(x) < M_LN2 + 2 / f * (lgammafn(f / 2.0 + 1) + _dbl_min_exp)) {\n      let lambda = 0.5 * theta;\n      let sum, sum2, pr = -lambda;\n      sum = sum2 = -Infinity;\n      for (let i = 0; i < 110; pr === Math.log(lambda) - Math.log(++i)) {\n        sum2 = logspace_add(sum2, pr);\n        sum = logspace_add(sum, pr + pchisq(x, f + 2 * i, 0, lower_tail, true));\n        if (sum2 >= -1e-15) break;\n      }\n      ans = sum - sum2;\n      return log_p ? ans : Math.exp(ans);\n    }\n    else {\n      let lambda = 0.5 * theta;\n      let sum = 0, sum2 = 0, pr = Math.exp(-lambda);\n      /* we need to renormalize here: the result could be very close to 1 */\n      for (let i = 0; i < 110; pr *= lambda / ++i) {\n        sum2 += pr;\n        sum += pr * pchisq(x, f + 2 * i, 0, lower_tail, false);\n        if (sum2 >= 1 - 1e-15) break;\n      }\n      ans = sum / sum2;\n      return log_p ? Math.log(ans) : ans;\n    }\n  }\n\n  lam = .5 * theta;\n  lamSml = (-lam < _dbl_min_exp);\n  if (lamSml) {\n    u = 0;\n    lu = -lam;/* == ln(u) */\n    l_lam = Math.log(lam);\n  } else {\n    u = Math.exp(-lam);\n  }\n\n  v = u;\n  x2 = .5 * x;\n  f2 = .5 * f;\n  f_x_2n = f - x;\n\n  if (f2 * DBL_EPSILON > 0.125 && Math.abs(t = x2 - f2) < Math.sqrt(DBL_EPSILON) * f2) {\n    lt = (1 - t) * (2 - t / (f2 + 1)) - M_LN_SQRT_2PI - 0.5 * Math.log(f2 + 1);\n  } else {\n    lt = f2 * Math.log(x2) - x2 - lgammafn(f2 + 1);\n  }\n\n  tSml = (lt < _dbl_min_exp);\n  if (tSml) {\n    if (x > f + theta + 5 * Math.sqrt(2 * (f + 2 * theta))) {\n      return R_DT_1(lower_tail, log_p);\n    }\n    l_x = Math.log(x);\n    ans = term = 0.;\n    t = 0;\n  } else {\n    t = Math.exp(lt);\n    ans = term = v * t;\n  }\n\n  for (n = 1, f_2n = f + 2., f_x_2n += 2.;; n++, f_2n += 2, f_x_2n += 2) {\n    if (f_x_2n > 0) {\n      bound = (t * x / f_x_2n);\n      is_b = bound <= errmax;\n      is_r = term <= reltol * ans;\n      is_it = n > itrmax;\n      if (is_b && is_r || is_it) {\n        break;\n      }\n    }\n\n    if (lamSml) {\n      lu += l_lam - Math.log(n); /* u = u* lam / n */\n      if (lu >= _dbl_min_exp) {\n        /* no underflow anymore ==> change regime */\n        v = u = Math.exp(lu); /* the first non-0 'u' */\n        lamSml = false;\n      }\n    } else {\n      u *= lam / n;\n      v += u;\n    }\n    if (tSml) {\n      lt += l_x - Math.log(f_2n);/* t <- t * (x / f2n) */\n      if (lt >= _dbl_min_exp) {\n        /* no underflow anymore ==> change regime */\n        t = Math.exp(lt); /* the first non-0 't' */\n        tSml = false;\n      }\n    } else {\n      t *= x / f_2n;\n    }\n    if (!lamSml && !tSml) {\n      term = v * t;\n      ans += term;\n    }\n  }\n\n  if (is_it) {\n    console.error(`pnchisq(x=${x},...) not converged in ${itrmax}`);\n  }\n\n  let dans = ans;\n  return R_DT_val(dans, lower_tail, log_p);\n}\n\nexport function qnorm(p, mu, sigma, lower_tail, log_p) {\n  let p_, q, r, val;\n  if (isNaN(p) || isNaN(mu) || isNaN(sigma)) { return p + mu + sigma; }\n\n  try {\n    R_Q_P01_boundaries(p, lower_tail, log_p, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY);\n  }\n  catch(e) { return e; }\n\n  if (sigma < 0) { return ML_ERR_return_NAN(); }\n  if (sigma === 0) { return mu; }\n\n  p_ = R_DT_qIv(p, lower_tail, log_p);\n  q = p_ - 0.5;\n\n  if (Math.abs(q) <= .425) {/* 0.075 <= p <= 0.925 */\n    r = .180625 - q * q;\n    val =\n      q * (((((((r * 2509.0809287301226727 +\n      33430.575583588128105) * r + 67265.770927008700853) * r +\n      45921.953931549871457) * r + 13731.693765509461125) * r +\n      1971.5909503065514427) * r + 133.14166789178437745) * r +\n      3.387132872796366608)\n      / (((((((r * 5226.495278852854561 +\n      28729.085735721942674) * r + 39307.89580009271061) * r +\n      21213.794301586595867) * r + 5394.1960214247511077) * r +\n      687.1870074920579083) * r + 42.313330701600911252) * r + 1.);\n  } else { /* closer than 0.075 from {0,1} boundary */\n    /* r = min(p, 1-p) < 0.075 */\n    if (q > 0) {\n      r = R_DT_CIv(p, lower_tail, log_p);/* 1-p */\n    }\n    else {\n      r = p_;/* = R_DT_Iv(p) ^=  p */\n    }\n\n    r = Math.sqrt(-((log_p && ((lower_tail && q <= 0) || (!lower_tail && q > 0))) ? p : /* else */ Math.log(r)));\n    /* r = sqrt(-log(r))  <==>  min(p, 1-p) = exp( - r^2 ) */\n\n    if (r <= 5.) { /* <==> min(p,1-p) >= exp(-25) ~= 1.3888e-11 */\n      r += -1.6;\n      val = (((((((r * 7.7454501427834140764e-4 +\n        .0227238449892691845833) * r + .24178072517745061177) *\n        r + 1.27045825245236838258) * r +\n        3.64784832476320460504) * r + 5.7694972214606914055) *\n        r + 4.6303378461565452959) * r +\n        1.42343711074968357734)\n        / (((((((r *\n          1.05075007164441684324e-9 + 5.475938084995344946e-4) *\n          r + .0151986665636164571966) * r +\n          .14810397642748007459) * r + .68976733498510000455) *\n          r + 1.6763848301838038494) * r +\n          2.05319162663775882187) * r + 1.);\n    } else { /* very close to  0 or 1 */\n      r += -5.;\n      val = (((((((r * 2.01033439929228813265e-7 +\n        2.71155556874348757815e-5) * r +\n        .0012426609473880784386) * r + .026532189526576123093) *\n        r + .29656057182850489123) * r +\n        1.7848265399172913358) * r + 5.4637849111641143699) *\n        r + 6.6579046435011037772)\n        / (((((((r *\n          2.04426310338993978564e-15 + 1.4215117583164458887e-7) *\n          r + 1.8463183175100546818e-5) * r +\n          7.868691311456132591e-4) * r + .0148753612908506148525)\n          * r + .13692988092273580531) * r +\n          .59983220655588793769) * r + 1.);\n    }\n\n    if (q < 0.0) {\n      val = -val;\n    }\n    /* return (q >= 0.)? r : -r ;*/\n  }\n  return mu + sigma * val;\n}\n\nfunction qchisq_appr(p, nu, g, lower_tail, log_p, tol) {\n  const C7 = 4.67;\n  const C8 = 6.66;\n  const C9 = 6.73;\n  const C10 = 13.32;\n\n  let alpha, a, c, ch, p1;\n  let p2, q, t, x;\n\n  if (isNaN(p) || isNaN(nu)) {\n    return p + nu;\n  }\n\n  try {\n    R_Q_P01_check(p, log_p);\n  }\n  catch(e) { return e; }\n  if (nu <= 0) { return ML_ERR_return_NAN(); }\n\n  alpha = 0.5 * nu;\n  c = alpha - 1;\n\n  if (nu < (-1.24) * (p1 = R_DT_log(p))) {\n    let lgam1pa = (alpha < 0.5) ? lgamma1p(alpha) : (Math.log(alpha) + g);\n    ch = Math.exp((lgam1pa + p1)/alpha + M_LN2);\n  }\n  else if (nu > 0.32) {\n    x = qnorm(p, 0, 1, lower_tail, log_p);\n    p1 = 2.0 / (9 * nu);\n    ch = nu * Math.pow(x * Math.sqrt(p1) + 1 - p1, 3);\n\n    if (ch > 2.2*nu + 6) {\n      ch = -2 * (R_DT_Clog(p, lower_tail) - c * Math.log(0.5 * ch) + g);\n    }\n  }\n  else {\n    ch = 0.4;\n    a = R_DT_Clog(p, lower_tail) + g + c * M_LN2;\n    do {\n      q = ch;\n      p1 = 1.0 / (1 + ch*(C7 + ch));\n      p2 = ch * (C9 + ch*(C8 + ch));\n      t = -0.5 + (C7 + 2*ch)*p1 - (C9 + ch*(C10 + 3 * ch)) / p2;\n      ch -= (1 - Math.exp(a + 0.5 * ch) * p2 * p1) / t;\n    }\n    while (Math.abs(q - ch) > tol * Math.abs(ch));\n  }\n\n  return ch;\n}\n\n/**\n * Inverse CDF / quantile function of gamma distribution.\n * @param p\n * @param alpha\n * @param scale\n * @param lower_tail\n * @param log_p\n * @return {*|number|number|*}\n */\nexport function qgamma(p, alpha, scale, lower_tail, log_p) {\n  const EPS1 = 1e-2;\n  const EPS2 = 5e-7;\n  const EPS_N = 1e-15;\n  //const LN_EPS = -36.043653389117156;\n  const MAXIT = 1000;\n  const pMIN = 1e-100;\n  const pMAX = 1-1e-14;\n  const i420 = 1.0 / 420.0;\n  const i2520 = 1.0 / 2520.0;\n  const i5040 = 1.0 / 5040.0;\n\n  let p_, a, b, c, g, ch, ch0, p1;\n  let p2, q, s1, s2, s3, s4, s5, s6, t, x;\n  let max_it_Newton = 1;\n\n  if (isNaN(p) || isNaN(alpha) || isNaN(scale)) { return p + alpha + scale; }\n  try {\n    R_Q_P01_boundaries(p, lower_tail, log_p, 0.0, Number.POSITIVE_INFINITY);\n  }\n  catch(e) { return e; }\n\n  if (alpha < 0 || scale <= 0) { return ML_ERR_return_NAN(); }\n  if (alpha === 0) { return 0.0; }\n  if (alpha < 1e-10) {\n    max_it_Newton = 7;\n  }\n\n  p_ = R_DT_qIv(p, lower_tail, log_p);\n  g = lgammafn(alpha);\n\n  // Closure to mimic the ugly 'goto END' everywhere\n  function end() {\n    x = 0.5 * scale * ch;\n    if (max_it_Newton) {\n      if (!log_p) {\n        p = Math.log(p);\n        log_p = true;\n      }\n      if (x === 0) {\n        const _1_p = 1.0 + 1e-7;\n        const _1_m = 1.0 - 1e-7;\n        x = DBL_MIN;\n        p_ = pgamma(x, alpha, scale, lower_tail, log_p);\n        if ((lower_tail && p_ > p * _1_p) || (!lower_tail && p_ < p * _1_m)) {\n          return 0.0;\n        }\n      }\n      else {\n        p_ = pgamma(x, alpha, scale, lower_tail, log_p);\n      }\n\n      if (p_ === Number.NEGATIVE_INFINITY) { return 0; }\n    }\n    for (let i = 1; i <= max_it_Newton; i++) {\n      p1 = p_ - p;\n      if (Math.abs(p1) < Math.abs(EPS_N * p)) {\n        break;\n      }\n\n      if ((g = dgamma(x, alpha, scale, log_p)) === R_D__0(log_p)) {\n        break;\n      }\n\n      t = log_p ? p1 * Math.exp(p_ - g) : p1 / g;\n      t = lower_tail ? x - t : x + t;\n      p_ = pgamma(t, alpha, scale, lower_tail, log_p);\n      if (Math.abs(p_ - p) > Math.abs(p1) || (i > 1 && Math.abs(p_ - p) === Math.abs(p1))) {\n        break;\n      }\n\n      /*\n      // This code appears to be never triggered in R, or rather I'm unable to find where\n      // Harmful_notably_if_max_it_Newton_is_1 is ever defined\n      if (t > 1.1*x) { t = 1.1 * x; }\n      else if (t < 0.9*x) { t = 0.9 * x; }\n       */\n\n      x = t;\n    }\n    return x;\n  }\n\n  ch = qchisq_appr(p, 2 * alpha, g, lower_tail, log_p, EPS1);\n  if (!isFinite(ch)) {\n    max_it_Newton = 0;\n    return end();\n  }\n  if (ch < EPS2) {\n    max_it_Newton = 20;\n    return end();\n  }\n  if (p_ > pMAX || p_ < pMIN) {\n    max_it_Newton = 20;\n    return end();\n  }\n\n  c = alpha - 1;\n  s6 = (120 + c * (346 + 127*c)) * i5040;\n  ch0 = ch;\n  for (let i = 1; i <= MAXIT; i++) {\n    q = ch;\n    p1 = 0.5 * ch;\n    p2 = p_ - pgamma_raw(p1, alpha, true, false);\n    if (!isFinite(p2) || ch <= 0) {\n      ch = ch0;\n      max_it_Newton = 27;\n      return end();\n    }\n\n    t = p2 * Math.exp(alpha * M_LN2 + g + p1 - c*Math.log(ch));\n    b = t/ch;\n    a = 0.5*t - b*c;\n    s1 = (210+ a*(140+a*(105+a*(84+a*(70+60*a))))) * i420;\n    s2 = (420+ a*(735+a*(966+a*(1141+1278*a)))) * i2520;\n    s3 = (210+ a*(462+a*(707+932*a))) * i2520;\n    s4 = (252+ a*(672+1182*a) + c*(294+a*(889+1740*a))) * i5040;\n    s5 = (84+2264*a + c*(1175+606*a)) * i2520;\n    ch += t*(1+0.5*t*s1-b*c*(s1-b*(s2-b*(s3-b*(s4-b*(s5-b*s6))))));\n\n    if (Math.abs(q - ch) < EPS2 * ch) {\n      return end();\n    }\n    if (Math.abs(q - ch) > 0.1 * ch) {\n      if (ch < q) {\n        ch = 0.9 * q;\n      }\n      else {\n        ch = 1.1 * q;\n      }\n    }\n  }\n\n  return end();\n}\n\n/**\n * Inverse CDF / quantile function for chi-squared distribution.\n * @param p\n * @param df\n * @param lower_tail\n * @param log_p\n * @return {*|number}\n */\nexport function qchisq(p, df, ncp = 0, lower_tail = true, log_p = false) {\n  if (ncp !== 0) { throw 'Non-central chi-squared not yet supported'; }\n  return qgamma(p, 0.5 * df, 2.0, lower_tail, log_p);\n}\n\nfunction pnorm_both(x, i_tail, log_p) {\n  var cum, ccum;\n  var xden, xnum, temp, del, eps, xsq, y;\n  var i, lower, upper;\n  var a = PNORM_A, b = PNORM_B, c = PNORM_C,\n    d = PNORM_D, p = PNORM_P, q = PNORM_Q;\n\n  if (isNaN(x)) {\n    return { cum: NaN, ccum: NaN };\n  }\n\n  eps = DBL_EPSILON * 0.5;\n  lower = i_tail != 1;\n  upper = i_tail != 0;\n\n  y = Math.abs(x);\n  if (y <= 0.67448975) {\n    if (y > eps) {\n      xsq = x * x;\n      xnum = a[4] * xsq;\n      xden = xsq;\n      for (i = 0; i < 3; ++i) {\n        xnum = (xnum + a[i]) * xsq;\n        xden = (xden + b[i]) * xsq;\n      }\n    } else {\n      xnum = xden = 0.0;\n    }\n    temp = x * (xnum + a[3]) / (xden + b[3]);\n    if (lower) {\n      cum = 0.5 + temp;\n    }\n    if (upper) {\n      ccum = 0.5 - temp;\n    }\n    if (log_p) {\n      if (lower) {\n        cum = Math.log(cum);\n      }\n      if (upper) {\n        ccum = Math.log(ccum);\n      }\n    }\n  } else if (y <= M_SQRT_32) {\n    xnum = c[8] * y;\n    xden = y;\n    for (i = 0; i < 7; ++i) {\n      xnum = (xnum + c[i]) * y;\n      xden = (xden + d[i]) * y;\n    }\n    temp = (xnum + c[7]) / (xden + d[7]);\n    //do del (x)\n    xsq = Math.trunc(y * 16) / 16;\n    del = (y - xsq) * (y + xsq);\n    if (log_p) {\n      cum = (-xsq * xsq * 0.5) + (-del * 0.5) + Math.log(temp);\n      if ((lower && x > 0.0) || (upper && x <= 0.0)) {\n        ccum = Math.log1p(-Math.exp(-xsq * xsq * 0.5) *\n          Math.exp(-del * 0.5) * temp);\n      }\n    } else {\n      cum = Math.exp(-xsq * xsq * 0.5) *\n        Math.exp(-del * 0.5) * temp;\n      ccum = 1.0 - cum;\n    }\n    //swap tail\n    if (x > 0.) {\n      temp = cum;\n      if (lower) {\n        cum = ccum;\n      }\n      ccum = temp;\n    }\n  } else if ((log_p && y < 1e170) ||\n    (lower && -37.5193 < x && x < 8.2924) ||\n    (upper && -8.2924 && x < 37.5193)) {\n\n    xsq = 1.0 / (x * x);\n    xnum = p[5] * xsq;\n    xden = xsq;\n    for (i = 0; i < 4; ++i) {\n      xnum = (xnum + p[i]) * xsq;\n      xden = (xden + q[i]) * xsq;\n    }\n    temp = xsq * (xnum + p[4]) / (xden + q[4]);\n    temp = (M_1_SQRT_2PI - temp) / y;\n    //do del(x)\n    xsq = Math.trunc(x * 16) / 16;\n    del = (x - xsq) * (x + xsq);\n    if (log_p) {\n      cum = (-xsq * xsq * 0.5) + (-del * 0.5) + Math.log(temp);\n      if ((lower && x > 0.0) || (upper && x <= 0.0)) {\n        ccum = Math.log1p(-Math.exp(-xsq * xsq * 0.5) *\n          Math.exp(-del * 0.5) * temp);\n      }\n    } else {\n      cum = Math.exp(-xsq * xsq * 0.5) *\n        Math.exp(-del * 0.5) * temp;\n      ccum = 1.0 - cum;\n    }\n    //swap tail\n    if (x > 0.) {\n      temp = cum;\n      if (lower) {\n        cum = ccum;\n      }\n      ccum = temp;\n    }\n  } else {\n    if (x > 0) {\n      cum = R_D(1, log_p);\n      ccum = R_D(0, log_p);\n    } else {\n      cum = R_D(0, log_p);\n      ccum = R_D(1, log_p);\n    }\n\n  }\n\n  //TODO left off here\n  return { cum: cum, ccum: ccum };\n}\n\nfunction pnorm(x, mu, sigma, lower_tail, log_p) {\n  var p;\n  if (isNaN(x) || isNaN(mu) || isNaN(sigma)) {\n    return NaN;\n  }\n  if (!Number.isFinite(x) && mu === x) {\n    return NaN;\n  }\n  if (sigma <= 0) {\n    if (sigma < 0) {\n      return NaN;\n    }\n    return (x < mu) ? R_DT_0(lower_tail, log_p) : R_DT_1(lower_tail, log_p);\n  }\n  p = (x - mu) / sigma;\n  if (!Number.isFinite(p)) {\n    return (x < mu) ? R_DT_0(lower_tail, log_p) : R_DT_1(lower_tail, log_p);\n  }\n  x = p;\n\n  var r = pnorm_both(x, (lower_tail) ? 0 : 1, log_p);\n  return (lower_tail) ? r.cum : r.ccum;\n}\n\n/**\n * The normal cumulative distribution function.\n *\n * @function pnorm\n * @param x {number} Value.\n * @param mu {number} Mean of the normal distribution.\n * @param sigma {number} Standard deviation of the normal distribution.\n * @param lower_tail {boolean} Should the cumulative probability returned be calculated as the lower tail?\n * @param give_log {boolean} Return log probability\n */\nfunction _pnorm(x, mu, sigma, lower_tail, give_log) {\n  x = parseNumeric(x);\n  mu = parseNumeric(mu, 0);\n  sigma = parseNumeric(sigma, 1);\n  lower_tail = parseBoolean(lower_tail, true);\n  give_log = parseBoolean(give_log, false);\n  return pnorm(x, mu, sigma, lower_tail, give_log);\n}\n\nexport { _pnorm as pnorm };\n\nfunction dnorm(x, mu, sigma, give_log) {\n  if (isNaN(x) || isNaN(mu) || isNaN(sigma)) {\n    return x + mu + sigma;\n  }\n  if (!Number.isFinite(sigma)) {\n    return R_D(0, give_log);\n  }\n  if (!Number.isFinite(x) && mu == x) {\n    return NaN;\n  }\n  if (sigma <= 0) {\n    if (sigma < 0) {\n      return NaN;\n    }\n    return (x == mu) ? Number.POSITIVE_INFINITY : R_D(0, give_log);\n  }\n  x = (x - mu) / sigma;\n  if (!Number.isFinite(x)) {\n    return R_D(0, give_log);\n  }\n  x = Math.abs(x);\n  if (x >= 2 * Math.sqrt(DBL_MAX)) {\n    return R_D(0, give_log);\n  }\n  if (give_log) {\n    return -(M_LN_SQRT_2PI + 0.5 * x * x + Math.log(sigma));\n  }\n  //fast version\n  return M_1_SQRT_2PI * Math.exp(-0.5 * x * x) / sigma;\n}\n\nfunction lbeta(a, b) {\n  let corr, p, q;\n  p = q = a;\n  if (b < p) p = b;\n  if (b > q) q = b;\n\n  if (p < 0) {\n    return ML_ERR_return_NAN();\n  }\n  else if (p === 0) {\n    return Number.POSITIVE_INFINITY;\n  }\n  else if (!isFinite(q)) {\n    return Number.NEGATIVE_INFINITY;\n  }\n\n  if (p >= 10) {\n    corr = lgammacor(p) + lgammacor(q) - lgammacor(p + q);\n    return Math.log(q) * -0.5 + M_LN_SQRT_2PI + corr + (p - 0.5) * Math.log(p / (p + q)) + q * Math.log1p(-p / (p + q));\n  }\n  else if (q >= 10) {\n    corr = lgammacor(q) - lgammacor(p + q);\n    return lgammafn(p) + corr + p - p * Math.log(p + q) + (q - 0.5) * Math.log1p(-p / (p + q));\n  }\n  else {\n    if (p < 1e-306) return lgammafn(p) + (lgammafn(q) - lgammafn(p + q));\n    else return Math.log(gammafn(p) * (gammafn(q) / gammafn(p + q)));\n  }\n}\n\nfunction dbinom_raw(x, n, p, q, give_log) {\n  let lf, lc;\n\n  if (p === 0) return (x === 0 ? R_D__1(give_log) : R_D__0(give_log));\n  if (q === 0) return (x === n ? R_D__1(give_log) : R_D__0(give_log));\n\n  if (x === 0) {\n    if (n === 0) return R_D__1(give_log);\n    lc = p < 0.1 ? -bd0(n, n * q) - n * p : n * Math.log(q);\n    return R_D_exp(lc, give_log);\n  }\n  if (x === n) {\n    lc = q < 0.1 ? -bd0(n, n * p) - n * q : n * Math.log(p);\n    return R_D_exp(lc, give_log);\n  }\n  if (x < 0 || x > n) return R_D__0(give_log);\n\n  lc = stirlerr(n) - stirlerr(x) - stirlerr(n - x) - bd0(x, n * p) - bd0(n - x, n * q);\n  lf = M_LN_2PI + Math.log(x) + Math.log1p(-x / n);\n  return R_D_exp(lc - 0.5 * lf, give_log);\n}\n\nfunction dbeta(x, a, b, give_log) {\n  if (a < 0 || b < 0) ML_ERR_return_NAN();\n  if (x < 0 || x > 1) return R_D__0(give_log);\n\n  if (a === 0 || b ===0 || !isFinite(a) || !isFinite(b)) {\n    if (a === 0 && b === 0) {\n      if (x === 0 || x === 1) return Number.POSITIVE_INFINITY; else return R_D__0(give_log);\n    }\n    if (a === 0 || a / b === 0) {\n      if (x === 0) return Number.POSITIVE_INFINITY; else return R_D__0(give_log);\n    }\n    if (b === 0 || b / a === 0) {\n      if (x === 1) return Number.POSITIVE_INFINITY; else return R_D__0(give_log);\n    }\n    if (x === 0.5) return Number.POSITIVE_INFINITY; else return R_D__0(give_log);\n  }\n\n  if (x === 0) {\n    if (a > 1) return R_D__0(give_log);\n    if (a < 1) return Number.POSITIVE_INFINITY;\n    return R_D_val(b, give_log);\n  }\n  if (x === 1) {\n    if (b > 1) return R_D__0(give_log);\n    if (b < 1) return Number.POSITIVE_INFINITY;\n    return R_D_val(a, give_log);\n  }\n\n  let lval;\n  if (a <= 2 || b <= 2) {\n    lval = (a - 1) * Math.log(x) + (b - 1) * Math.log1p(-x) - lbeta(a, b);\n  }\n  else {\n    lval = Math.log(a + b - 1) + dbinom_raw(a - 1, a + b - 2, x, 1 - x, true);\n  }\n\n  return R_D_exp(lval, give_log);\n}\n\n/**\n * The beta density function.\n *\n * The non-central beta distribution parameter is not implemented currently.\n *\n * @function dbeta\n * @param x {number} Value.\n * @param shape1 {number} The first shape parameter, or \"alpha.\"\n * @param shape2 {number} The second shape parameter, or \"beta.\"\n * @param log {boolean} Should the result be returned in log scale.\n * @return {number} Probability density evaluated at x.\n */\nfunction _dbeta(x, shape1, shape2, log) {\n  x = parseNumeric(x);\n  shape1 = parseNumeric(shape1);\n  shape2 = parseNumeric(shape2);\n  //ncp = parseNumeric(ncp, 0);\n  log = parseBoolean(log, false);\n  return dbeta(x, shape1, shape2, log);\n}\n\nexport { _dbeta as dbeta };\n\nfunction parseNumeric(x, default_value) {\n  if (typeof(x) === \"undefined\") {\n    return default_value;\n  }\n  return +x;\n}\n\nfunction parseBoolean(x, default_value) {\n  if (typeof(x) === \"undefined\") {\n    return default_value;\n  }\n  return !!((x || \"false\") != \"false\");\n}\n\n// Will slowly roll this into export statements as-needed\n// const rollup = {\n//   dnorm: function (x, mu, sigma, give_log) {\n//     x = +x;\n//     mu = parseNumeric(mu, 0);\n//     sigma = parseNumeric(sigma, 1);\n//     give_log = parseBoolean(give_log, false);\n//     return dnorm(x, mu, sigma, give_log);\n//   },\n//   pnorm: function (x, mu, sigma, lower_tail, give_log) {\n//     x = parseNumeric(x);\n//     mu = parseNumeric(mu, 0);\n//     sigma = parseNumeric(sigma, 1);\n//     lower_tail = parseBoolean(lower_tail, true);\n//     give_log = parseBoolean(give_log, false);\n//     return pnorm(x, mu, sigma, lower_tail, give_log);\n//   },\n//   pchisq: function (x, df, ncp, lower_tail, give_log) {\n//     x = parseNumeric(x);\n//     df = parseNumeric(df);\n//     ncp = parseNumeric(ncp,0);\n//     lower_tail = parseBoolean(lower_tail, true);\n//     give_log = parseBoolean(give_log, false);\n//     return pchisq(x, df, ncp, lower_tail, give_log);\n//   },\n//   pgamma: function (q, shape, scale, lower_tail, give_log) {\n//     q = parseNumeric(q);\n//     shape = parseNumeric(shape);\n//     scale = parseNumeric(scale, 1);\n//     lower_tail = parseBoolean(lower_tail, true);\n//     give_log = parseBoolean(give_log, false);\n//     return pgamma(q, shape, scale, lower_tail, give_log);\n//   },\n//   dpois: function (x, lambda, log) {\n//     x = parseNumeric(x);\n//     lambda = parseNumeric(lambda);\n//     log = parseBoolean(log, false);\n//     return dpois(x, lambda, log);\n//   }\n// };","/**\n * Calculate group-based tests from score statistics.\n *\n * @module stats\n * @license MIT\n */\nimport { cholesky } from './linalg.js';\nimport mvtdstpack from './mvtdstpack.js';\nimport numeric from 'numeric';\nimport * as qfc from './qfc.js';\nimport { ExpSinh } from './quadrature.js';\nimport { pchisq, dbeta, pnorm, qchisq, dchisq } from './rstats.js';\n\n\n// Functions using WASM will be defined inside a single promise- sort of a meta-module\n//   Because the webassembly code is loaded asynchronously, anything using any module method will need to be\n//   resolved asynchronously as well.\nconst MVT_WASM_HELPERS = new Promise((resolve, reject) => {\n  // The emscripten \"module\" doesn't return a true promise, so it can't be chained in the traditional sense.\n  // This syntax is a hack that allows us to wrap the wasm module with our helper functions and access those helpers.\n  try {\n    mvtdstpack().then(module => {\n      function makeDoubleVec(size) {\n        const v = new module.DoubleVec();\n        v.resize(size, NaN);\n        return v;\n      }\n\n      function makeIntVec(size) {\n        const v = new module.IntVec();\n        v.resize(size, NaN);\n        return v;\n      }\n\n      function copyToDoubleVec(arr, constructor=module.DoubleVec) {\n        const v = new constructor();\n        for (let i = 0; i < arr.length; i++) {\n          v.push_back(arr[i]);\n        }\n        return v;\n      }\n\n      function pmvnorm(lower, upper, mean, sigma) {\n        const n = sigma.length;\n        const infin = makeIntVec(n);\n        const delta = makeDoubleVec(n);\n        const corrF = makeDoubleVec(n * (n - 1) / 2);\n        let corr = cov2cor(sigma);\n\n        // Populate corrF\n        for (let j = 0; j < n; j++) {\n          for (let i = j + 1; i < n; i++) {\n            let k = j + 1 + ((i - 1) * i) / 2 - 1;\n            corrF.set(k, corr[i][j]);\n          }\n        }\n\n        // Calculate limits\n        for (let i = 0; i < n; i++) {\n          delta.set(i, 0.0);\n\n          if (lower[i] !== Infinity && lower[i] !== -Infinity) {\n            lower[i] = (lower[i] - mean[i]) / Math.sqrt(sigma[i][i]);\n          }\n\n          if (upper[i] !== Infinity && upper[i] !== -Infinity) {\n            upper[i] = (upper[i] - mean[i]) / Math.sqrt(sigma[i][i]);\n          }\n\n          if (lower[i] === -Infinity) {\n            infin.set(i, 0);\n          }\n          if (upper[i] === Infinity) {\n            infin.set(i, 1);\n          }\n          if (lower[i] === -Infinity && upper[i] === Infinity) {\n            infin.set(i, -1);\n          }\n          if (lower[i] !== -Infinity && upper[i] !== Infinity) {\n            infin.set(i, 2);\n          }\n          if (lower[i] === -Infinity) {\n            lower[i] = 0;\n          }\n          if (upper[i] === Infinity) {\n            upper[i] = 0;\n          }\n        }\n\n        let inform = 0;\n        let value = 0.0;\n        let error = 0.0;\n        const df = 0;\n        const maxpts = 50000;\n        const abseps = 0.001;\n        const releps = 0.0;\n\n        let sum = 0;\n        for (let i = 0; i < n; i++) {\n          sum += infin.get(i);\n        }\n\n        if (sum === -n) {\n          inform = 0;\n          value = 1.0;\n        } else {\n          ({ error, inform, value } = module.mvtdst(n, df, copyToDoubleVec(lower), copyToDoubleVec(upper), infin, corrF, delta, maxpts, abseps, releps));\n        }\n\n        if (inform === 3) {\n          // Need to make correlation matrix positive definite\n          let trial = 0;\n          while (inform > 1 && trial < 100) {\n            let eig = numeric.eig(corr, 100000);\n\n            let lambdas = eig.lambda.x;\n            for (let i = 0; i < n; i++) {\n              if (lambdas[i] < 0) {\n                lambdas[i] = 0.0;\n              }\n            }\n\n            let D = numeric.diag(lambdas);\n            let V = eig.E.x;\n            corr = numeric.dot(numeric.dot(V, D), numeric.transpose(V));\n            let corr_diag = Array(n);\n            for (let i = 0; i < n; i++) {\n              corr_diag[i] = corr[i][i];\n            }\n            let norm = numeric.dot(numeric.transpose([corr_diag]), [corr_diag]);\n\n            for (let j = 0; j < n; j++) {\n              for (let i = j + 1; i < n; i++) {\n                let k = j + 1 + ((i - 1) * i) / 2 - 1;\n                corrF.set(k, corr[i][j] / Math.sqrt(norm[i][j]));\n              }\n            }\n\n            ({ error, inform, value } = module.mvtdst(n, df, copyToDoubleVec(lower), copyToDoubleVec(upper), infin, corrF, delta, maxpts, abseps, releps));\n          }\n\n          if (inform > 1) {\n            value = -1.0;\n          }\n        }\n\n        return {\n          error: error,\n          inform: inform,\n          value: value\n        };\n      }\n\n      const helper_module = {\n        makeDoubleVec,\n        makeIntVec,\n        copyToDoubleVec,\n        pmvnorm,\n      };\n\n      resolve(helper_module);\n    });\n  } catch (error) {\n    reject(error);\n  }\n});\n\nfunction emptyRowMatrix(nrows, ncols) {\n  let m = new Array(nrows);\n  for (let i = 0; i < nrows; i++) {\n    m[i] = new Array(ncols).fill(NaN);\n  }\n  return m;\n}\n\nfunction cov2cor(sigma) {\n  const corr = emptyRowMatrix(sigma.length, sigma[0].length);\n  for (let i = 0; i < sigma.length; i++) {\n    for (let j = i; j < sigma[0].length; j++) {\n      if (i === j) {\n        corr[i][j] = 1.0;\n      } else {\n        let v = sigma[i][j] / (Math.sqrt(sigma[i][i]) * Math.sqrt(sigma[j][j]));\n        corr[i][j] = v;\n        corr[j][i] = v;\n      }\n    }\n  }\n  return corr\n}\n\nfunction get_conditional_dist(scores, cov, comb) {\n  const result = new Array(2).fill(0.0);\n  const mu2 = [];\n  const dim = comb.length - 1;\n  const sub_cov = emptyRowMatrix(dim, dim);\n\n  for (let i = 0; i < dim; i++) {\n    let idx1 = comb[i + 1];\n    mu2[i] = scores[idx1];\n    for (let j = 0; j < dim; j++) {\n      let idx2 = comb[j + 1];\n      sub_cov[i][j] = cov[idx1][idx2];\n    }\n  }\n\n  const inv = numeric.inv(sub_cov);\n  const sigma12 = new Array(dim).fill(NaN);\n  for (let i = 0; i < dim; i++) {\n    let idx1 = comb[0];\n    let idx2 = comb[i + 1];\n    sigma12[i] = cov[idx1][idx2];\n  }\n\n  const tmp = new Array(dim).fill(0.0);\n  for (let i = 0; i < dim; i++) {\n    tmp[i] += numeric.dot(sigma12, inv[i]);\n  }\n\n  result[0] = numeric.dot(tmp, mu2);\n  result[1] = 1.0 - numeric.dot(tmp, sigma12);\n\n  if (result[1] < 0) {\n    result[1] = Math.abs(result[1]);\n  }\n\n  return result;\n}\n\n/**\n * Calculates MVT p-value directly from scores/covariance and maximum test statistic.\n * TODO: ask Shaung or Goncalo where this comes from?\n * @param scores\n * @param cov_t\n * @param t_max\n * @return {*|number}\n */\nfunction calculate_mvt_pvalue(scores, cov_t, t_max) {\n  let pvalue = 0.0;\n  const dim = scores.length;\n  let chisq = t_max * t_max;\n  let jointProbHash = {};\n\n  if (dim === 1) {\n    pvalue = pchisq(chisq, 1, 0, 0);\n    return pvalue;\n  }\n\n  let uni = pchisq(chisq, 1, 0, 0);\n  pvalue += dim * uni;\n  let indx = [];\n  let alpha = [...Array(dim).keys()]; // 0, 1, 2, 3... dim\n  for (let r = 2; r <= dim; r++) {\n    let j = r;\n    let k = r;\n    let comb = [];\n    let par = [];\n\n    for (let twk = j; twk <= k; twk++) {\n      let r = twk;\n      let done = true;\n      for (let iwk = 0; iwk < r; iwk++) {\n        indx.push(iwk);\n      }\n\n      while (done) {\n        done = false;\n        for (let owk = 0; owk < r; owk++) {\n          comb.push(alpha[indx[owk]]);\n        }\n\n        par = get_conditional_dist(scores, cov_t, comb);\n        let chisq, condProb, prob;\n        if (par[1] === 0.0) {\n          condProb = 0.0;\n        }\n        else {\n          chisq = (t_max - par[0]) * (t_max - par[0]) / par[1];\n          if (chisq < 0) {\n            chisq = -chisq;\n          }\n          condProb = pchisq(chisq, 1, 0, 0);\n        }\n\n        let hashKey = \"\";\n        if (r === 2) {\n          hashKey += comb[0];\n          hashKey += comb[1];\n          prob = condProb * uni;\n          jointProbHash[hashKey] = prob;\n          hashKey = \"\";\n        }\n        else {\n          for (let i = 1; i < r; i++) {\n            hashKey += comb[i];\n          }\n\n          prob = jointProbHash[hashKey];\n          prob *= condProb;\n          let newKey = \"\";\n          newKey += comb[0];\n          newKey += hashKey;\n          jointProbHash[newKey] = prob;\n          hashKey = \"\";\n        }\n\n        pvalue -= prob;\n        comb = [];\n        for (let iwk = r-1; iwk >= 0; iwk--) {\n          if (indx[iwk] <= (dim-1) - (r-iwk)) {\n            indx[iwk]++;\n            for (let swk = iwk + 1; swk < r; swk++) {\n              indx[swk] = indx[swk-1] + 1;\n            }\n            iwk = -1;\n            done = true;\n          }\n        }\n      }\n      indx = [];\n    }\n  }\n  return pvalue;\n}\n\n/**\n * Base class for all aggregation tests.\n */\nclass AggregationTest {\n  constructor() {\n    this.label = '';\n    this.key = '';\n\n    this.requiresMaf = false;\n  }\n\n  run(u, v, w, mafs) { // todo update docstrings and call sigs\n    throw new Error(\"Method must be implemented in a subclass\");\n  }\n}\n\n/**\n * Standard burden test that collapses rare variants into a total count of rare alleles observed per sample\n * in a group (e.g. gene). <p>\n *\n * See {@link https://genome.sph.umich.edu/wiki/RAREMETAL_METHOD#BURDEN_META_ANALYSIS|our wiki page} for more information.\n * Also see the {@link https://www.ncbi.nlm.nih.gov/pubmed/19810025|paper} describing the method.\n *\n * @extends AggregationTest\n */\nclass ZegginiBurdenTest extends AggregationTest {\n  constructor() {\n    super(...arguments);\n    this.key = 'burden';\n    this.label = 'Burden';\n  }\n\n  /**\n   * Default weight function for burden test. All variants weighted equally. Only requires the number of variants\n   * since they are all given the same weight value.\n   * @param n {number} Number of variants.\n   * @return {number[]} An array of weights, one per variant.\n   */\n  static weights(n) {\n    return new Array(n).fill(1 / n);\n  }\n\n  /**\n   * Calculate burden test from vector of score statistics and variances.\n   *\n   * @param {Number[]} u Vector of score statistics (length m, number of variants)\n   * @param {Number[]} v Covariance matrix of score statistics\n   * @param {Number[]} w Weight vector (length m, number of variants)\n   * @return {Number[]} Burden test statistic z and p-value\n   */\n  run(u, v, w) {\n    for (let e of [u, v]) {\n      if (!Array.isArray(e) || !e.length) {\n        throw 'Please provide all required arrays';\n      }\n    }\n\n    if (!(u.length === v.length)) {\n      throw 'u and v must be same length';\n    }\n\n    if (w != null) {\n      if (w.length !== u.length) {\n        throw 'w vector must be same length as score vector u';\n      }\n    }\n    else {\n      w = ZegginiBurdenTest.weights(u.length);\n    }\n\n    // This is taken from:\n    // https://genome.sph.umich.edu/wiki/RAREMETAL_METHOD#BURDEN_META_ANALYSIS\n    let over = numeric.dot(w, u);\n    let under = Math.sqrt(numeric.dot(numeric.dot(w, v), w));\n    let z = over / under;\n\n    // The -Math.abs(z) is because pnorm returns the lower tail probability from the normal dist\n    // The * 2 is for a two-sided p-value.\n    let p = pnorm(-Math.abs(z), 0, 1) * 2;\n    return [z, p];\n  }\n}\n\nfunction _vt(maf_cutoffs, u, v, mafs) {\n  // Calculate score statistic and cov weight matrix for each MAF cutoff.\n  const cov_weight = emptyRowMatrix(maf_cutoffs.length, u.length);\n  let t_max = -Infinity;\n  const scores = Array(maf_cutoffs.length).fill(0.0);\n  maf_cutoffs.map((m, i) => {\n    // Weight is 1 if MAF < cutoff, otherwise 0.\n    let w = mafs.map(maf => maf <= m ? 1 : 0);\n    cov_weight[i] = w;\n\n    // Calculate burden t-statistic for this maf cutoff\n    let numer = numeric.dot(w, u);\n    let denom = numeric.dot(numeric.dot(w, v), w);\n    let t_stat = Math.abs(numer / Math.sqrt(denom));\n    scores[i] = t_stat;\n    if (t_stat > t_max) { t_max = t_stat; }\n  });\n\n  // Did we calculate any valid scores?\n  if (Math.max(...scores) === 0.0) { throw 'No scores were able to be calculated for this group'; }\n\n  // Calculate covariance matrix\n  const cov_u = numeric.dot(numeric.dot(cov_weight, v), numeric.transpose(cov_weight));\n  const cov_t = cov2cor(cov_u);\n\n  return [scores, cov_t, t_max];\n}\n\n/**\n * Variable threshold test (VT). <p>\n */\nclass VTTest extends AggregationTest {\n  constructor() {\n    super(...arguments);\n    this.label = 'Variable Threshold';\n    this.key = 'vt';\n    this.requiresMaf = true;\n    this._method = 'auto';\n  }\n\n  /**\n   * This code corresponds roughly to: https://github.com/statgen/raremetal/blob/2c82cfc5710dbd9fd56ef67a7ca5f74772d4e70d/raremetal/src/Meta.cpp#L3456\n   * @param u\n   * @param v\n   * @param w This parameter is ignored for VT. Weights are calculated automatically from mafs.\n   * @param mafs\n   * @return Promise\n   */\n  run(u, v, w, mafs) {\n    // Uses wasm, returns a promise\n    if (w != null) {\n      throw 'w vector is not accepted in with VT test';\n    }\n\n    // Figure out MAF cutoffs. This tries every possible MAF cutoff given a list of all MAFs.\n    let maf_cutoffs = [];\n    const sorted_mafs = [...mafs].sort();\n    for (let i = 0; i < mafs.length; i++) {\n      if (sorted_mafs[i] > maf_cutoffs.slice(-1)) {\n        maf_cutoffs.push(sorted_mafs[i]);\n      }\n    }\n\n    // Try calculating scores/t-stat covariance the first time (may need refinement later).\n    let [scores, cov_t, t_max] = _vt(maf_cutoffs, u, v, mafs);\n    const lower = new Array(maf_cutoffs.length).fill(-t_max);\n    const upper = new Array(maf_cutoffs.length).fill(t_max);\n    const mean = new Array(maf_cutoffs.length).fill(0);\n\n    return MVT_WASM_HELPERS.then(module => {\n      let result = module.pmvnorm(lower, upper, mean, cov_t);\n\n      let pvalue;\n      if (result.value === -1.0) {\n        throw 'Error: correlation matrix is not positive semi-definite';\n      } else if (result.value === 1.0) {\n        // Use Shuang's algorithm\n        if (maf_cutoffs.length > 20) {\n          maf_cutoffs = maf_cutoffs.slice(-20);\n          let [scores, cov_t, t_max] = _vt(maf_cutoffs, u, v, mafs);\n          pvalue = calculate_mvt_pvalue(scores, cov_t, t_max);\n        } else {\n          pvalue = calculate_mvt_pvalue(scores, cov_t, t_max);\n        }\n      } else {\n        pvalue = 1.0 - result.value;\n      }\n\n      if (pvalue > 1.0) {\n        pvalue = 1.0;\n      }\n\n      return [t_max, pvalue];\n    });\n  }\n}\n\n/**\n * Sequence kernel association test (SKAT). <p>\n *\n * See the {@link https://www.cell.com/ajhg/fulltext/S0002-9297%2811%2900222-9|original paper} for details on the\n * method, and {@link https://genome.sph.umich.edu/wiki/RAREMETAL_METHOD#SKAT_META_ANALYSIS|our wiki} for information\n * on how the test is calculated using scores/covariances. <p>\n *\n * @extends AggregationTest\n */\nclass SkatTest extends AggregationTest {\n  constructor() {\n    super(...arguments);\n    this.label = 'SKAT';\n    this.key = 'skat';\n    this.requiresMaf = true;\n\n    /**\n     * Skat test method. Only used for dev/testing.\n     * Should not be set by user.\n     * @private\n     * @type {string}\n     */\n    this._method = 'auto';\n  }\n\n  /**\n   * Calculate typical SKAT weights using beta density function.\n   *\n   * @function\n   * @param mafs {number[]} Array of minor allele frequencies.\n   * @param a {number} alpha defaults to 1.\n   * @param b {number} beta defaults to 25.\n   */\n  static weights(mafs, a = 1, b = 25) {\n    let weights = Array(mafs.length).fill(null);\n    for (let i = 0; i < mafs.length; i++) {\n      let w = dbeta(mafs[i], a, b, false);\n      w *= w;\n      weights[i] = w;\n    }\n    return weights;\n  }\n\n  /**\n   * Calculate SKAT test. <p>\n   *\n   * The distribution function of the SKAT test statistic is evaluated using Davies' method by default.\n   * In the special case where there is only 1 lambda, the Liu moment matching approximation method is used. <p>\n   *\n   * @function\n   * @param {Number[]} u Vector of score statistics (length m, number of variants).\n   * @param {Number[]} v Covariance matrix of score statistics (m x m).\n   * @param {Number[]} w Weight vector (length m, number of variants). If weights are not provided, they will\n   *  be calculated using the default weights() method of this object.\n   * @param {Number[]} mafs A vector of minor allele frequencies. These will be used to calculate weights if\n   *  they were not provided.\n   * @return {Number[]} SKAT p-value.\n   */\n  run(u, v, w, mafs) {\n    // Calculate weights (if necessary)\n    if (w === undefined || w === null) {\n      w = SkatTest.weights(mafs);\n    }\n\n    // Calculate Q\n    let q = numeric.dot(numeric.dot(u,numeric.diag(w)),u);\n\n    /**\n     * Code to calculate eigenvalues from V^(1/2) * W * V^(1/2)\n     * This first decomposes V = U * S * U' (SVD on symmetric normal matrix results in this, instead of U * S * V').\n     * If we take sqrt(S), then U * sqrt(S) * U' is a square root of the original matrix V. For a diagonal matrix,\n     * sqrt(S) is just the sqrt(s_i) of each individual diagonal element.\n     * Then we just take the dot product of (U * sqrt(S) * U') * W * (U * sqrt(S) * U'), which is V^(1/2) * W * V^(1/2).\n     * Finally we compute SVD of that matrix, and take the singular values as the eigenvalues.\n     */\n    let lambdas;\n    try {\n      let svd = numeric.svd(v);\n      let sqrtS = numeric.sqrt(svd.S);\n      let uT = numeric.transpose(svd.U);\n      let eigenRhs = numeric.dot(numeric.dot(svd.U, numeric.diag(sqrtS)), uT);\n      let eigenLhs = numeric.dot(eigenRhs, numeric.diag(w));\n      let eigen = numeric.dot(eigenLhs, eigenRhs);\n      let finalSvd = numeric.svd(eigen);\n      lambdas = numeric.abs(finalSvd.S);\n    } catch(error) {\n      console.log(error);\n      return [NaN, NaN];\n    }\n\n    if (numeric.sum(lambdas) < 0.0000000001) {\n      console.error(\"Sum of lambda values for SKAT test is essentially zero\");\n      return [NaN, NaN];\n    }\n\n    // P-value method\n    if (this._method === 'liu') {\n      // Only for debug purposes\n      return _skatLiu(lambdas, q);\n    }\n    else if (this._method === 'davies') {\n      return _skatDavies(lambdas, q);\n    }\n    else if (this._method === 'auto') {\n      if (lambdas.length === 1) {\n        // Davies method does not support 1 lambda\n        // This is what raremetal does\n        return _skatLiu(lambdas, q);\n      }\n      else {\n        let daviesResult = _skatDavies(lambdas, q);\n        if (isNaN(daviesResult[1])) {\n          // Davies' method could not converge. Use R-SKAT's approach instead.\n          return _skatLiu(lambdas, q);\n        } else {\n          return daviesResult;\n        }\n      }\n    }\n    else {\n      throw new Error(`Skat method ${this._method} not implemented`);\n    }\n  }\n}\n\n/**\n * Calculate SKAT p-value using Davies method.\n * @function\n * @param lambdas Eigenvalues of sqrtV * W * sqrtV.\n * @param qstat SKAT test statistic U.T * W * U.\n * @return {Number[]} Array of [Q statistic, p-value].\n * @private\n */\nfunction _skatDavies(lambdas, qstat, acc=0.0001) {\n  /**\n   * lambdas - coefficient of jth chi-squared variable\n   * nc1 - non-centrality parameters\n   * n1 - degrees of freedom\n   * n - number of chi-squared variables\n   * sigma - coefficient of standard normal variable\n   * qstat - point at which cdf is to be evaluated (this is SKAT Q stat usually)\n   * lim1 - max number of terms in integration\n   * acc - maximum error\n   * trace - array into which the following is stored:\n   *   trace[0]\tabsolute sum\n   *   trace[1]\ttotal number of integration terms\n   *   trace[2]\tnumber of integrations\n   *   trace[3]\tintegration interval in final integration\n   *   trace[4]\ttruncation point in initial integration\n   *   trace[5]\ts.d. of initial convergence factor\n   *   trace[6]\tcycles to locate integration parameters\n   * ifault - array into which the following fault codes are stored:\n   *   0 normal operation\n   *   1 required accuracy not achieved\n   *   2 round-off error possibly significant\n   *   3 invalid parameters\n   *   4 unable to locate integration parameters\n   *   5 out of memory\n   * res - store final value into this variable\n   */\n  let n = lambdas.length;\n  let nc1 = Array(n).fill(0);\n  let n1 = Array(n).fill(1);\n  let sigma = 0.0;\n  let lim1 = 10000;\n  let res = qfc.qf(lambdas, nc1, n1, n, sigma, qstat, lim1, acc);\n  let qfval = res[0];\n  let pval = 1.0 - qfval;\n\n  let converged = (res[1] === 0) && (pval > 0) && (pval <= 1);\n  if (!converged) {\n    pval = NaN;\n  }\n\n  return [qstat, pval];\n}\n\n/**\n * Calculate SKAT p-value using Liu method.\n * @param lambdas Eigenvalues of sqrtV * W * sqrtV.\n * @param qstat SKAT test statistic U.T * W * U.\n * @return {Number[]} [qstat, pvalue]\n * @private\n */\nfunction _skatLiu(lambdas, qstat) {\n  let n = lambdas.length;\n  let [c1, c2, c3, c4] = Array(4).fill(0.0);\n  for (let i = 0; i < n; i++) {\n    let ilambda = lambdas[i];\n    c1 += ilambda;\n    c2 += ilambda * ilambda;\n    c3 += ilambda * ilambda * ilambda;\n    c4 += ilambda * ilambda * ilambda * ilambda;\n  }\n\n  let s1 = c3 / Math.sqrt(c2 * c2 * c2);\n  let s2 = c4 / (c2 * c2);\n  let muQ = c1;\n  let sigmaQ = Math.sqrt(2.0 * c2);\n  let tStar = (qstat - muQ) / sigmaQ;\n\n  let delta, l, a;\n  if (s1 * s1 > s2) {\n    a = 1.0 / (s1 - Math.sqrt(s1 * s1 - s2));\n    delta = s1 * a * a * a - a * a;\n    l = a * a - 2.0 * delta;\n  } else {\n    a = 1.0 / s1;\n    delta = 0.0;\n    l = c2 * c2 * c2 / (c3 * c3);\n  }\n\n  let muX = l + delta;\n  let sigmaX = Math.sqrt(2.0) * a;\n  let qNew = tStar * sigmaX + muX;\n  let p;\n\n  if (delta === 0) {\n    p = pchisq(qNew,l,0,0);\n  } else {\n    // Non-central chi-squared\n    p = pchisq(qNew,l,delta,0,0);\n  }\n\n  return [qstat, p];\n}\n\n// extension to real hermitian (symmetric) matrices\n// from this fork: https://git.io/fjdfx\nnumeric.eigh = function(A, maxiter) {\n  return numeric.jacobi(A, maxiter)\n}\n\nnumeric.jacobi = function(Ain, maxiter) {\n  // jacobi method with rutishauser improvements from\n  // Rutishauser, H. (1966). The Jacobi method for real symmetric matrices.\n  // Numerische Mathematik, 9(1), 1–10. doi:10.1007/BF02165223\n\n  // returns object containing\n  // E: {x : v} eigenvalues.\n  // lambda : {x: d} eigenstates.\n  // niter : number of iterations.\n  // iterations : list of convergence factors for each step of the iteration.\n  // nrot : number of rotations performed.\n\n  var size = [Ain.length, Ain[0].length];\n  if (size[0] !== size[1]) {\n    throw 'jacobi : matrix must be square';\n  }\n\n  // remember use only symmetric real matrices.\n  var n = size[0];\n\n  var v = numeric.identity(n);\n  var A = numeric.clone(Ain);\n\n  var iters = numeric.rep([maxiter], 0);\n  var d = numeric.getDiag(A);\n  var bw = numeric.clone(d);\n\n  // zeros\n  var zw = numeric.rep([n], 0);\n\n  // iteration parameters\n  var iter = -1;\n  var niter = 0;\n  var nrot = 0;\n  var tresh = 0;\n\n  //  prealloc\n  var h, g, gapq, term, termp, termq, theta, t, c, s, tau;\n  while (iter < maxiter)\n  {\n    iter++;\n    iters[iter] = numeric.jacobinorm(A);\n    niter = iter;\n    tresh = iters[iter]/(4 * n);\n\n    if (tresh==0) { return { E: { x: v }, lambda: { x: d }, iterations: iters, niter: niter, nrot: nrot }; }\n\n    for (var p = 0; p < n; p++)\n    {\n      for (var q = p + 1; q < n; q++)\n      {\n        gapq = 10*Math.abs(A[p][q]);\n        termp = gapq + Math.abs(d[p]);\n        termq = gapq + Math.abs(d[q]);\n        if (iter > 4 && termp == Math.abs(d[p]) && termq == Math.abs(d[q]))\n        {\n          // remove small elmts\n          A[p][q] = 0;\n        }\n        else\n        {\n          if (Math.abs(A[p][q]) >= tresh)\n          {\n            // apply rotation\n            h = d[q] - d[p];\n            term = Math.abs(h) + gapq;\n            if (term == Math.abs(h))\n            {\n              t = A[p][q]/h;\n            }\n            else\n            {\n              theta = 0.5 * h / A[p][q];\n              t = 1/(Math.abs(theta) + Math.sqrt(1 + theta*theta));\n              if (theta < 0)\n              {\n                t = -t;\n              }\n            }\n            c = 1/Math.sqrt(1 + t*t);\n            s = t * c;\n            tau = s/(1 + c);\n            h = t * A[p][q];\n            zw[p] = zw[p] - h;\n            zw[q] = zw[q] + h;\n            d[p] = d[p] - h;\n            d[q] = d[q] + h;\n            A[p][q] = 0;\n            // rotate and use upper tria only\n            for (let j = 0; j < p; j++)\n            {\n              g = A[j][p];\n              h = A[j][q];\n              A[j][p] = g - s * (h + g * tau);\n              A[j][q] = h + s * (g - h * tau);\n            }\n            for (let j = p + 1; j < q; j++)\n            {\n              g = A[p][j];\n              h = A[j][q];\n              A[p][j] = g - s * (h + g * tau);\n              A[j][q] = h + s * (g - h * tau);\n            }\n            for (let j = q + 1; j < n; j++)\n            {\n              g = A[p][j];\n              h = A[q][j];\n              A[p][j] = g - s * (h + g * tau);\n              A[q][j] = h + s * (g - h * tau);\n            }\n            // eigenstates\n            for (let j = 0; j < n; j++)\n            {\n              g = v[j][p];\n              h = v[j][q];\n              v[j][p] = g - s * (h + g * tau);\n              v[j][q] = h + s * (g - h * tau);\n            }\n            nrot++;\n          }\n        }\n      }\n    }\n    bw = numeric.add(bw, zw);\n    d = numeric.clone(bw);\n    zw = numeric.rep([n], 0);\n  }\n\n  return { E: { x: v }, lambda: { x: d }, iterations: iters, niter: niter, nrot: nrot };\n}\n\nnumeric.jacobinorm = function(A) {\n  // used in numeric.jacobi\n  var n = A.length;\n  var s = 0;\n  for (var i = 0; i < n; i ++)\n  {\n    for (var j = i + 1; j < n; j ++)\n    {\n      s = s + Math.pow(A[i][j], 2)\n    }\n  }\n  return Math.sqrt(s);\n}\n\n/*\nfunction toRMatrix(m) {\n  let tmp = \"c(\" + m.map(x => \"c(\" + x.map(x => x.toFixed(3)).join(\", \") + \")\").join(\", \") + \")\";\n  return `matrix(${tmp}, nrow=${m.length})`;\n}\n\nfunction writeMatrixToFile(m, fpath) {\n  let fs = require(\"fs\");\n  let s = \"\";\n  for (let row of m) {\n    s += row.join(\"\\t\") + \"\\n\";\n  }\n  fs.writeFileSync(fpath, s);\n}\n*/\n\nfunction getEigen(m) {\n  const lambdas = numeric.eigh(m, 1000000).lambda.x.sort((a, b) => a - b);\n  const n = lambdas.length;\n  let numNonZero = 0;\n  let sumNonZero = 0.0;\n  for (let i = 0; i < n; i++) {\n    if (lambdas[i] > 0) {\n      numNonZero++;\n      sumNonZero += lambdas[i];\n    }\n  }\n\n  if (numNonZero === 0) {\n    throw new Error(\"All eigenvalues were 0 when calculating SKAT-O test\");\n  }\n\n  const t = sumNonZero / numNonZero / 100000;\n  let numKeep = n;\n  for (let i = 0; i < n; i++) {\n    if (lambdas[i] < t) {\n      numKeep--;\n    }\n    else {\n      break;\n    }\n  }\n\n  const keep = new Array(numKeep).fill(null);\n  for (let i = 0; i < numKeep; i++) {\n    keep[i] = lambdas[n - 1 - i];\n  }\n\n  return keep;\n}\n\nfunction getMoment(lambdas) {\n  let c = new Array(4).fill(NaN);\n  c[0] = numeric.sum(lambdas);\n  c[1] = numeric.sum(numeric.pow(lambdas, 2));\n  c[2] = numeric.sum(numeric.pow(lambdas, 3));\n  c[3] = numeric.sum(numeric.pow(lambdas, 4));\n\n  const muQ = c[0];\n  const sigmaQ = Math.sqrt(2 * c[1]);\n  const s1 = c[2] / c[1] ** (3/2);\n  const s2 = c[3] / (c[1] * c[1]);\n\n  let a, d, l;\n  if (s1 * s1 > s2) {\n    a = 1 / (s1 - Math.sqrt(s1 * s1 - s2));\n    d = (s1 * (a ** 3) - a * a);\n    l = a * a - 2 * d;\n  }\n  else {\n    l = 1.0 / s2;\n    a = Math.sqrt(l);\n    d = 0;\n  }\n\n  let muX = l + d;\n  let sigmaX = Math.sqrt(2) * a;\n\n  const varQ = sigmaQ * sigmaQ;\n  const df = l;\n  return {\n    muQ: muQ,\n    varQ: varQ,\n    df: df,\n    ncp: d,\n    muX: muX,\n    sigmaQ: sigmaQ,\n    sigmaX: sigmaX\n  }\n}\n\nfunction getPvalByMoment(q, m) {\n  const qNorm = ((q - m.muQ) / m.sigmaQ) * m.sigmaX + m.muX;\n  return pchisq(qNorm, m.df, m.ncp, false, false);\n}\n\nfunction getQvalByMoment(min_pval, m) {\n  const q_org = qchisq(min_pval, m.df, 0, false, false);\n  return (q_org - m.df) / Math.sqrt(2.0 * m.df) * Math.sqrt(m.varQ) + m.muQ;\n}\n\nclass SkatIntegrator {\n  constructor(rhos, lambda, Qs_minP, taus, MuQ, VarQ, VarZeta, Df) {\n    this.rhos = rhos;\n    this.lambda = lambda;\n    this.Qs_minP = Qs_minP;\n    this.taus = taus;\n    this.MuQ = MuQ;\n    this.VarQ = VarQ;\n    this.VarZeta = VarZeta;\n    this.Df = Df;\n  }\n\n  static pvalueDavies(q, lambdas, acc=1e-4) {\n    let n = lambdas.length;\n    let nc1 = Array(n).fill(0);\n    let n1 = Array(n).fill(1);\n    let sigma = 0.0;\n    let lim1 = 10000;\n    let res = qfc.qf(lambdas, nc1, n1, n, sigma, q, lim1, acc);\n    let qfval = res[0];\n    let fault = res[1];\n    let pvalue = 1.0 - qfval;\n\n    if (pvalue > 1.0) {\n      pvalue = 1.0;\n    }\n\n    if (fault) {\n      throw new RangeError(\"Davies failed\");\n    }\n\n    return pvalue;\n  }\n\n  static pvalueLiu(q, lambdas) {\n    let n = lambdas.length;\n    let [c1, c2, c3, c4] = Array(4).fill(0.0);\n    for (let i = 0; i < n; i++) {\n      let ilambda = lambdas[i];\n      c1 += ilambda;\n      c2 += ilambda * ilambda;\n      c3 += ilambda * ilambda * ilambda;\n      c4 += ilambda * ilambda * ilambda * ilambda;\n    }\n\n    let s1 = c3 / Math.sqrt(c2 * c2 * c2);\n    let s2 = c4 / (c2 * c2);\n    let muQ = c1;\n    let sigmaQ = Math.sqrt(2.0 * c2);\n    let tStar = (q - muQ) / sigmaQ;\n\n    let delta, l, a;\n    if (s1 * s1 > s2) {\n      a = 1.0 / (s1 - Math.sqrt(s1 * s1 - s2));\n      delta = s1 * a * a * a - a * a;\n      l = a * a - 2.0 * delta;\n    } else {\n      a = 1.0 / s1;\n      delta = 0.0;\n      l = c2 * c2 * c2 / (c3 * c3);\n    }\n\n    let muX = l + delta;\n    let sigmaX = Math.sqrt(2.0) * a;\n    let qNew = tStar * sigmaX + muX;\n\n    if (qNew < 0) { return 1; }\n\n    let p;\n    if (delta === 0) {\n      p = pchisq(qNew,l,0,0);\n    } else {\n      // Non-central chi-squared\n      p = pchisq(qNew,l,delta,0,0);\n    }\n\n    return p;\n  }\n\n  integrandDavies(x) {\n    let kappa = Number.MAX_VALUE;\n    const nRho = this.rhos.length;\n    for (let i = 0; i < nRho; i++) {\n      let v = (this.Qs_minP[i] - this.taus[i] * x) / (1.0 - this.rhos[i]);\n      if (i === 0) {\n        kappa = v;\n      }\n      if (v < kappa) {\n        kappa = v;\n      }\n    }\n    let temp;\n    if (kappa > numeric.sum(this.lambda) * 10000) {\n      temp = 0.0;\n    }\n    else {\n      let Q = (kappa - this.MuQ) * Math.sqrt(this.VarQ - this.VarZeta) / Math.sqrt(this.VarQ) + this.MuQ;\n      temp = SkatIntegrator.pvalueDavies(Q, this.lambda, 1e-6);\n    }\n    let final = (1.0 - temp) * dchisq(x, 1);\n    //console.log(\"integrandDavies: \", x, temp, final);\n    return final;\n  }\n\n  integrandLiu(x) {\n    let kappa = Number.MAX_VALUE;\n    const nRho = this.rhos.length;\n    for (let i = 0; i < nRho; i++) {\n      let v = (this.Qs_minP[i] - this.taus[i] * x) / (1.0 - this.rhos[i]);\n      if (v < kappa) {\n        kappa = v;\n      }\n    }\n    let Q = (kappa - this.MuQ) / Math.sqrt(this.VarQ) * Math.sqrt(2.0 * this.Df) + this.Df;\n\n    let ret;\n    if (Q <= 0) {\n      ret = 0;\n    }\n    else {\n      ret = pchisq(Q, this.Df) * dchisq(x, 1);\n    }\n\n    return ret;\n  }\n\n  _debugWriteIntegrandDavies(fpath, xstart=0, xend=40, increment=0.001) {\n    let fs = require(\"fs\");\n    let stream = fs.createWriteStream(fpath);\n    let v;\n    for (let x = xstart; x < xend; x += increment) {\n      v = this.integrandDavies(x);\n      stream.write(x + \"\\t\" + v + \"\\n\");\n    }\n  }\n\n  skatOptimalIntegral() {\n    // Regarding the tolerance below:\n    // https://www.boost.org/doc/libs/1_70_0/libs/math/doc/html/math_toolkit/double_exponential/de_tol.html\n    // This particular tolerance appears to be enough to get a good match with MetaSKAT. Any larger and we lose power.\n    const integ = new ExpSinh(9, Number.EPSILON ** (2/3));\n\n    // In MetaSKAT, integrating \"SKAT_Optimal_Integrate_Func_Davies\" is only capable of reaching approximately the limit\n    // below. Because we changed quadratures to exp_sinh, we are sometimes able to integrate beyond this limit, up to\n    // around 1e-15 or so (or possibly even smaller.) However, this causes a deviation from MetaSKAT's results, so we cap\n    // our integrator at this value. Theoretically, removing this limitation would make our procedure slightly more powerful,\n    // however usually in the range beyond the Davies limit, we end up using minP * nRhos anyway.\n    let daviesLimit = 2.151768e-10;\n    let pvalue = NaN;\n    try {\n      pvalue = 1 - integ.integrate(this.integrandDavies.bind(this))[0];\n      if (!isNaN(pvalue)) {\n        if (pvalue < daviesLimit) {\n          pvalue = daviesLimit;\n        }\n      }\n    }\n    catch (error) {\n      pvalue = 1 - integ.integrate(this.integrandLiu.bind(this))[0];\n    }\n\n    return pvalue;\n  }\n}\n\n/**\n * Optimal sequence kernel association test (SKAT). <p>\n *\n * The following papers detail the method:\n *\n * Original SKAT optimal test paper, utilizing genotypes instead of covariance matrices: https://doi.org/10.1016/j.ajhg.2012.06.007\n * Meta-analysis of SKAT optimal test, and use of covariance matrices: https://doi.org/10.1016/j.ajhg.2013.05.010\n *\n * @extends AggregationTest\n */\nclass SkatOptimalTest extends AggregationTest {\n  constructor() {\n    super(...arguments);\n    this.label = 'SKAT Optimal';\n    this.key = 'skat-o';\n    this.requiresMaf = true;\n\n    /**\n     * Skat test method. Only used for dev/testing.\n     * Should not be set by user.\n     * @private\n     * @type {string}\n     */\n    this._method = 'auto';\n  }\n\n  /**\n   * Calculate typical SKAT weights using beta density function.\n   *\n   * @function\n   * @param mafs {number[]} Array of minor allele frequencies.\n   * @param a {number} alpha defaults to 1.\n   * @param b {number} beta defaults to 25.\n   */\n  static weights(mafs, a = 1, b = 25) {\n    let weights = Array(mafs.length).fill(null);\n    for (let i = 0; i < mafs.length; i++) {\n      let w = dbeta(mafs[i], a, b, false);\n      //w *= w;\n      weights[i] = w;\n    }\n    return weights;\n  }\n\n  /**\n   * Calculate optimal SKAT test. <p>\n   *\n   * This code is based partly on rvtests' implementation (https://git.io/fjQEs) which uses genotypes instead of\n   * scores/covariances, and also on the MetaSKAT R-package (https://git.io/fjQEZ).\n   *\n   * @function\n   * @param {Number[]} u Vector of score statistics (length m, number of variants).\n   * @param {Number[]} v Covariance matrix of score statistics (m x m).\n   * @param {Number[]} w Weight vector (length m, number of variants). If weights are not provided, they will\n   *  be calculated using the default weights() method of this object.\n   * @param {Number[]} mafs A vector of minor allele frequencies. These will be used to calculate weights if\n   *  they were not provided.\n   * @param {Number[]} rhos A vector of rho values, representing the weighting between burden and SKAT statistics.\n   * @return {Number[]} SKAT p-value.\n   */\n  run(u, v, w, mafs, rhos) {\n    const { dot, sum, mul, div, sub, rep, pow, diag } = numeric;\n    const t = numeric.transpose;\n\n    if (u.length === 1) {\n      // rvtest\n      return new SkatTest().run(u, v, w, mafs);\n    }\n\n    // Calculate weights (if necessary)\n    if (w === undefined || w === null) {\n      w = SkatOptimalTest.weights(mafs);\n    }\n\n    const nVar = u.length; // number of variants\n    w = diag(w); // diagonal matrix\n    u = t([u]); // column vector\n\n    // Setup rho values\n    if (!rhos) {\n      rhos = [];\n      for (let i = 0; i <= 10; i++) {\n        let v = i / 10;\n        if (v > 0.999) {\n          // rvtests does this to avoid rank deficiency\n          v = 0.999;\n        }\n        rhos.push(v);\n      }\n    }\n    const nRhos = rhos.length;\n    // MetaSKAT optimal.mod rho values\n    //const rhos = [0, 0.01, 0.04, 0.09, 0.25, 0.5, 0.999];\n    //const nRhos = rhos.length;\n\n    // Calculate rho matrices (1-rho)*I + rho*1*1'\n    // [ 1   rho rho ]\n    // [ rho 1   rho ]\n    // [ rho rho 1   ]\n    const Rp = new Array(nRhos).fill(null);\n    for (let i = 0; i < nRhos; i++) {\n      let r = rep([nVar, nVar], rhos[i]);\n      for (let j = 0; j < r.length; j++) {\n        r[j][j] = 1.0;\n      }\n      Rp[i] = r;\n    }\n\n    // Calculate Q statistics, where Q = U' * W * R(rho) * W * U\n    // U is the score statistic vector, W is the diagonal weight matrix for each variant\n    // R(rho) is a matrix for each rho value that reflects weighting between burden & SKAT\n    const Qs = [];\n    for (let i = 0; i < nRhos; i++) {\n      Qs[i] = dot(t(u), dot(w, dot(Rp[i], dot(w, u))))[0][0];\n      Qs[i] = Qs[i] / 2.0; // SKAT R package divides by 2\n    }\n\n    // Calculate lambdas (eigenvalues of W * IOTA * W.) In the paper, IOTA is the covariance matrix divided by\n    // the phenotypic variance sigma^2.\n    const lambdas = new Array(nRhos).fill(null);\n    const phi = div(dot(w, dot(v, w)), 2); // https://git.io/fjwqF\n    for (let i = 0; i < nRhos; i++) {\n      let L = cholesky(Rp[i]);\n      let phi_rho = dot(t(L), dot(phi, L));\n      try {\n        lambdas[i] = getEigen(phi_rho);\n      }\n      catch (error) {\n        console.error(error.message);\n        return [NaN, NaN];\n      }\n    }\n\n    // Calculate moments\n    const moments = new Array(nRhos).fill(null);\n    for (let i = 0; i < nRhos; i++) {\n      moments[i] = getMoment(lambdas[i]);\n    }\n\n    // Calculate p-values for each rho\n    const pvals = new Array(nRhos).fill(NaN);\n    const daviesPvals = new Array(nRhos).fill(NaN);\n    const liuPvals = new Array(nRhos).fill(NaN);\n    for (let i = 0; i < nRhos; i++) {\n      liuPvals[i] = getPvalByMoment(Qs[i], moments[i]);\n      daviesPvals[i] = _skatDavies(lambdas[i], Qs[i], 10**-6)[1];\n\n      if (!isNaN(daviesPvals[i])) {\n        pvals[i] = daviesPvals[i];\n      }\n      else {\n        pvals[i] = liuPvals[i];\n      }\n    }\n\n    // Calculate minimum p-value across all rho values\n    let minP = pvals[0];\n    let minIndex = 0;\n    for (let i = 1; i < nRhos; i++) {\n      if (pvals[i] < minP) {\n        minP = pvals[i];\n        minIndex = i;\n      }\n    }\n    //const rho = rhos[minIndex];\n    const Q = Qs[minIndex];\n\n    // Calculate minimum Q(p)\n    const Qs_minP = new Array(nRhos).fill(null);\n    for (let i = 0; i < nRhos; i++) {\n      Qs_minP[i] = getQvalByMoment(minP, moments[i]);\n    }\n\n    // Calculate parameters needed for Z'(I-M)Z part\n    const Z11 = dot(phi, rep([nVar, 1], 1));\n    const ZZ = phi;\n    const ZMZ = div(dot(Z11, t(Z11)),sum(ZZ));\n    const ZIMZ = sub(ZZ,ZMZ);\n    let lambda;\n    try {\n      lambda = getEigen(ZIMZ);\n    }\n    catch (error) {\n      console.error(error.message);\n      return [NaN, NaN];\n    }\n    const varZeta = 4 * sum(mul(ZMZ, ZIMZ));\n    const muQ = sum(lambda);\n    const varQ = 2.0 * sum(pow(lambda, 2)) + varZeta;\n    const kerQ = 12.0 * sum(pow(lambda, 4)) / ((sum(pow(lambda, 2))) ** 2);\n    const dF = 12.0 / kerQ;\n\n    // Calculate taus\n    const z_mean = sum(ZZ) / (nVar ** 2);\n    const tau1 = sum(dot(ZZ, ZZ)) / (nVar ** 2) / z_mean;\n    const taus = new Array(nRhos).fill(null);\n    for (let i = 0; i < nRhos; i++) {\n      taus[i] = (nVar * nVar) * rhos[i] * z_mean + tau1 * (1 - rhos[i]);\n    }\n\n    // Calculate final p-value\n    if (new Set([rhos.length, Qs_minP.length, taus.length]).size > 1) {\n      throw \"Parameter arrays for SKAT integration must all be the same length\";\n    }\n\n    const integrator = new SkatIntegrator(\n      rhos,\n      lambda,\n      Qs_minP,\n      taus,\n      muQ,\n      varQ,\n      varZeta,\n      dF\n    );\n\n    let pvalue = integrator.skatOptimalIntegral();\n\n    // Use minimum p-value adjusted for # of tests if less than what integrator provides. https://git.io/fjNOj\n    let minP_adj = minP * nRhos;\n    if (minP_adj < pvalue) {\n      pvalue = minP_adj;\n    }\n\n    // Check SKAT p-value\n    const multi = (nRhos < 3) ? 2 : 3;\n    if (nRhos) {\n      if (pvalue <= 0) {\n        let p = minP * multi;\n        if (pvalue < p) {\n          pvalue = p;\n        }\n      }\n    }\n    if (pvalue === 0.0) {\n      pvalue = pvals[0];\n      for (let i = 1; i < nRhos; i++) {\n        if (pvals[i] > 0 && pvals[i] < pvalue) {\n          pvalue = pvals[i];\n        }\n      }\n    }\n    return [Q, pvalue];\n  }\n}\n\nexport { // for unit testing only\n  AggregationTest as _AggregationTest,\n  get_conditional_dist as _get_conditional_dist\n};\nexport { SkatTest, SkatOptimalTest, ZegginiBurdenTest, VTTest,\n  MVT_WASM_HELPERS, calculate_mvt_pvalue, _skatDavies, _skatLiu,\n\n};\n","/**\n * Helper methods for running aggregation tests\n *\n * This wraps internal functionality and provides utilities for reading and writing expected API formats\n */\nimport numeric from \"numeric\";\nimport { REGEX_EPACTS } from \"./constants\";\nimport { _AggregationTest, SkatTest, ZegginiBurdenTest, VTTest, SkatOptimalTest } from \"./stats\";\n\nconst _all_tests = [ZegginiBurdenTest, SkatTest, VTTest, SkatOptimalTest];\n\n/**\n * Look up aggregation tests by unique name.\n *\n * This is a helper for external libraries; it provides an immutable registry of all available tests.\n * TODO would be nice to get rid of this?\n *\n *\n * {key: {label: String, constructor: Object }\n * @type {{String: {label: String, constructor: function}}}\n */\nconst AGGREGATION_TESTS = Object.freeze(_all_tests.reduce(function (acc, constructor) {\n  const inst = new constructor();  // Hack- need instance to access attributes\n  acc[inst.key] = { label: inst.label, constructor: constructor };\n  return acc;\n}, {}));\n\n\n/**\n * Helper object for reading and interpreting variant data\n */\nclass PortalVariantsHelper {\n  constructor(variants_array) {\n    this._variants = variants_array;\n    this._variant_lookup = this.parsePortalVariantData(variants_array);\n  }\n\n  get data() {  // Raw unparsed data\n    return this._variants;\n  }\n\n  parsePortalVariantData(variants) {\n    // Read an array of variants. Parse names into position/ref/alt, and assign altFreq to MAF.\n    // Return a hash keyed on variant ID for quick lookups.\n    let lookup = {};\n    variants.forEach(data => {\n      let { variant, altFreq, pvalue, score } = data;\n      let [_, chrom, pos, ref, alt, __] = variant.match(REGEX_EPACTS);  // eslint-disable-line no-unused-vars\n\n      let effectFreq = altFreq;\n      let effect = alt;\n\n      /**\n       * The variant's score statistic in the API is coded toward the alternate allele.\n       * However, we want the effect coded towards the minor allele, since most rare variant tests assume\n       * you are counting the rare/minor allele.\n       */\n      if (altFreq > 0.5) {\n        /**\n         * The effect allele is initially the alt allele. Since we're flipping it,\n         * the \"other\" allele is the reference allele.\n         */\n        score = -score;\n        effect = ref;\n\n        // This is also now the minor allele frequency.\n        effectFreq = 1 - altFreq;\n      }\n\n      lookup[variant] = {\n        variant,\n        chrom,\n        pos,\n        pvalue,\n        score,\n        altAllele: alt,\n        effectAllele: effect,\n        altFreq: altFreq,\n        effectFreq: effectFreq\n      };\n    });\n    return lookup;\n  }\n\n  isAltEffect(variant_names) {  // Some calculations are sensitive to whether alt is the minor (effect) allele\n    return variant_names.map(name => {\n      const variant_data = this._variant_lookup[name];\n      return variant_data.altAllele === variant_data.effectAllele;\n    });\n  }\n\n  getEffectFreq(variant_names) {\n    // Get the allele freq for the minor (effect) allele\n    return variant_names.map(name => this._variant_lookup[name].effectFreq);\n  }\n\n  getScores(variant_names) {\n    // Get single-variant scores\n    return variant_names.map(name => this._variant_lookup[name].score);\n  }\n\n  getGroupVariants(variant_names) {\n    // Return all that is known about a given set of variants\n    return variant_names.map(name => this._variant_lookup[name]);\n  }\n}\n\n// Utility class. Provides helper methods to access information about groups and generate subsets\nclass PortalGroupHelper {\n  constructor(groups) {\n    this._groups = groups;\n    this._lookup = this._generateLookup(groups);\n  }\n\n  get data() {  // Raw unparsed data\n    return this._groups;\n  }\n\n  byMask(selection) {  // str or array\n    // Get all groups that identify as a specific category of mask- \"limit the analysis to loss of function variants\n    // in any gene\"\n    if (!Array.isArray(selection)) {\n      selection = [selection]\n    }\n    selection = new Set(selection);\n\n    const subset = this._groups.filter(group => selection.has(group.mask));\n    return new this.constructor(subset);\n  }\n\n  byGroup(selection) {  // str or array\n    // Get all groups based on a specific group name, regardless of mask. Eg, \"all the ways to analyze data for a\n    // given gene\".\n    if (!Array.isArray(selection)) {\n      selection = [selection]\n    }\n    selection = new Set(selection);\n\n    const subset = this._groups.filter(group => selection.has(group.group));\n    return new this.constructor(subset);\n  }\n\n  _generateLookup(groups) {\n    // We don't transform data, so this is a simple name -> position mapping\n    return groups.reduce((acc, item, idx) => {\n      const key = this._getKey(item.mask, item.group);\n      acc[key] = idx;\n      return acc;\n    }, {});\n  }\n\n  _getKey(mask_name, group_name) {\n    return `${mask_name},${group_name}`;\n  }\n\n  getOne(mask_name, group_name) {\n    // Get a single group that is fully and uniquely identified by group + mask\n    const key = this._getKey(mask_name, group_name);\n    const pos = this._lookup[key];\n    return this._groups[pos];\n  }\n\n  makeCovarianceMatrix(group, is_alt_effect) {\n    // Helper method that expands the portal covariance format into a full matrix.\n    // Load the covariance matrix from the response JSON\n    const n_variants = group.variants.length;\n    let covmat = new Array(n_variants);\n    for (let i = 0; i < n_variants; i++) {\n      covmat[i] = new Array(n_variants).fill(null);\n    }\n\n    let c = 0;\n    for (let i = 0; i < n_variants; i++) {\n      for (let j = i; j < n_variants; j++) {\n        let v = group.covariance[c];\n        let iAlt = is_alt_effect[i];\n        let jAlt = is_alt_effect[j];\n\n        /**\n         * The API spec codes variant genotypes towards the alt allele. If the alt allele frequency\n         * is > 0.5, that means we're not counting towards the minor (rare) allele, and we need to flip it around.\n         * We don't flip when i == j because that element represents the variance of the variant's score, which is\n         * invariant to which allele we code towards (but covariance is not.)\n         *\n         * We also don't flip when both the i variant and j variant need to be flipped (the ^ is XOR) because it would\n         * just cancel out.\n         */\n        if (i !== j) {\n          if ((!iAlt) ^ (!jAlt)) {\n            v = -v;\n          }\n        }\n\n        covmat[i][j] = v;\n        covmat[j][i] = v;\n\n        c += 1;\n      }\n    }\n\n    covmat = numeric.mul(group.nSamples, covmat);\n    return covmat;\n  }\n}\n\n/**\n * Run one or more burden tests. This will operate in sequence: all specified tests on all specified masks\n *\n * The actual call signature of a burden test is pretty low-level. In addition to running the list of tests,\n *  this helper also restructures human-friendly mask and variant representations into a shape that works directly\n *  with the calculation.\n */\nclass PortalTestRunner {\n  /**\n   * Create a test runner object, using group and variant data of the form provided by `parsePortalJSON`. Generally,\n   *  this helper is a convenience wrapper based on the raremetal.js API format spec, and hence it expects\n   *  variant and group definitions to follow that spec.\n   * @param groups PortalGroupHelper\n   * @param variants PortalVariantsHelper\n   * @param test_names {String[]|_AggregationTest[]}\n   */\n  constructor(groups, variants, test_names = []) {\n    this.groups = groups;\n    this.variants = variants;\n    this._tests = [];\n\n    test_names.forEach(name => this.addTest(name));\n  }\n\n  /**\n   *\n   * @param test {String|_AggregationTest}\n   * @return {_AggregationTest}\n   */\n  addTest(test) {\n    // Add a new test by name, or directly from an instance\n    if (typeof test === 'string') {\n      let type = AGGREGATION_TESTS[test];\n      if (!type) {\n        throw new Error(`Cannot make unknown test type: ${test}`);\n      }\n      test = new type.constructor();\n    } else if (!(test instanceof _AggregationTest)) {\n      throw new Error('Must specify test as name or instance');\n    }\n    this._tests.push(test);\n    return test;\n  }\n\n  /**\n   * Run every test on every group in the container and return results\n   * @returns Promise A promise representing the fulfillment state of all tests being run\n   */\n  run() {\n    let partials = [];\n\n    this._tests.forEach(test => {\n      this.groups.data.forEach(group => {\n        partials.push(this._runOne.bind(this, test, group));\n      });\n    });\n    // Despite the async syntax, ensure that each tests is run in series, to mitigate memory allocation errors when\n    //  running many tests\n    return partials.reduce((results, one_test) => {\n      return results.then((all_prior) => {\n        return one_test().then(one_res => {\n          return [...all_prior, one_res];\n        });\n      });\n    }, Promise.resolve([]));\n  }\n\n  /**\n   *\n   * @param {AggregationTest} test Instance for a single unit test\n   * @param group {Object} Data corresponding to a specific group, following API format docs\n   * @returns {{groupType: *, stat: *, test: *, pvalue: *, variants: (*|Array|string[]|Map), group: *, mask: (*|string|SVGMaskElement|string)}}\n   * @private\n   */\n  _runOne(test, group) {\n    // Helper method that translates portal data into the format expected by a test.\n    const variants = group.variants;\n    const scores = this.variants.getScores(variants);\n\n    // Most calculations will require adjusting API data to ensure that minor allele is the effect allele\n    const isAltEffect = this.variants.isAltEffect(variants);\n\n    const cov = this.groups.makeCovarianceMatrix(group, isAltEffect);\n    const mafs = this.variants.getEffectFreq(variants);\n    let weights;  // TODO: The runner never actually uses the weights argument. Should it allow this?\n\n    // Some test classes may return a raw value and others will return a promise. Wrap the result for consistency.\n    let result = test.run(scores, cov, weights, mafs);\n    return Promise.resolve(result)\n      .then(([stat, pvalue]) => {\n        // The results describe the group + several new fields for calculation results.\n        return {\n          groupType: group.groupType,\n          group: group.group,\n          mask: group.mask,\n          variants: group.variants,\n\n          test: test.key,\n          stat,\n          pvalue\n        };\n      });\n  }\n\n  /**\n   * Generate a JSON representation of the results. Returns a Promise, because some methods may run asynchronously\n   *  (eg via web workers), or require loading external libraries (eg webassembly)\n   * @param results Array\n   * @returns {Promise<{data: {groups: Promise<any> | Array, variants: *}} | never>}\n   */\n  toJSON(results) {\n    // Output calculation results in a format that matches the \"precomputed results\" endpoint\n    // By passing in an argument, user can format any set of results (even combining multiple runs)\n    if (!results) {\n      results = this.run();\n    } else {\n      results = Promise.resolve(results);\n    }\n\n    return results.then(group_results => {\n      return {\n        data: {\n          variants: this.variants.data,\n          groups: group_results,\n        }\n      }\n    });\n  }\n}\n\n\nfunction parsePortalJSON(json) {\n  const data = json.data || json;\n  const groups = new PortalGroupHelper(data.groups.map(item => {\n    // Each group should have access to fields that, in portal json, are defined once globally\n    item.nSamples = data.nSamples;\n    item.sigmaSquared = data.sigmaSquared;\n    return item;\n  }));\n  const variants = new PortalVariantsHelper(data.variants);\n  return [groups, variants];\n}\n\nexport { PortalVariantsHelper as _PortalVariantsHelper, PortalGroupHelper as _PortalGroupHelper }; // testing only\n\nexport { parsePortalJSON, PortalTestRunner, AGGREGATION_TESTS };\n","/**\n * Calculate aggregation tests and meta-analysis of these tests\n * using score statistics and covariance matrices in the browser.\n *\n * This is the user-facing bundle, which exposes an API suitable for use in the web browser.\n * If using es6 modules exclusively, consider including those files directly for greater control.\n *\n * @module browser\n * @license MIT\n */\n\nimport * as helpers from './helpers.js';\nimport * as stats from './stats.js';\n\nexport { helpers, stats };\n"],"sourceRoot":""}